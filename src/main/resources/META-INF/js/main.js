!function(t){var e={};function r(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(s,n,function(e){return t[e]}.bind(null,n));return s},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=33)}([function(t,e,r){"use strict";e.__esModule=!0,e.extend=a,e.indexOf=function(t,e){for(var r=0,s=t.length;r<s;r++)if(t[r]===e)return r;return-1},e.escapeExpression=function(t){if("string"!=typeof t){if(t&&t.toHTML)return t.toHTML();if(null==t)return"";if(!t)return t+"";t=""+t}if(!i.test(t))return t;return t.replace(n,o)},e.isEmpty=function(t){return!t&&0!==t||!(!u(t)||0!==t.length)},e.createFrame=function(t){var e=a({},t);return e._parent=t,e},e.blockParams=function(t,e){return t.path=e,t},e.appendContextPath=function(t,e){return(t?t+".":"")+e};var s={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},n=/[&<>"'`=]/g,i=/[&<>"'`=]/;function o(t){return s[t]}function a(t){for(var e=1;e<arguments.length;e++)for(var r in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],r)&&(t[r]=arguments[e][r]);return t}var c=Object.prototype.toString;e.toString=c;var l=function(t){return"function"==typeof t};l(/x/)&&(e.isFunction=l=function(t){return"function"==typeof t&&"[object Function]"===c.call(t)}),e.isFunction=l;var u=Array.isArray||function(t){return!(!t||"object"!=typeof t)&&"[object Array]"===c.call(t)};e.isArray=u},function(t,e,r){"use strict";e.__esModule=!0;var s=["description","fileName","lineNumber","endLineNumber","message","name","number","stack"];function n(t,e){var r=e&&e.loc,i=void 0,o=void 0,a=void 0,c=void 0;r&&(i=r.start.line,o=r.end.line,a=r.start.column,c=r.end.column,t+=" - "+i+":"+a);for(var l=Error.prototype.constructor.call(this,t),u=0;u<s.length;u++)this[s[u]]=l[s[u]];Error.captureStackTrace&&Error.captureStackTrace(this,n);try{r&&(this.lineNumber=i,this.endLineNumber=o,Object.defineProperty?(Object.defineProperty(this,"column",{value:a,enumerable:!0}),Object.defineProperty(this,"endColumn",{value:c,enumerable:!0})):(this.column=a,this.endColumn=c))}catch(t){}}n.prototype=new Error,e.default=n,t.exports=e.default},function(t,e){t.exports=jahiaHelpers},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var n=s(r(12)),i=s(r(10)),o=r(26),a=r(30),c=s(r(31)),l=s(r(11)),u=s(r(9)),h=n.default.create;function p(){var t=h();return t.compile=function(e,r){return a.compile(e,r,t)},t.precompile=function(e,r){return a.precompile(e,r,t)},t.AST=i.default,t.Compiler=a.Compiler,t.JavaScriptCompiler=c.default,t.Parser=o.parser,t.parse=o.parse,t.parseWithoutProcessing=o.parseWithoutProcessing,t}var f=p();f.create=p,u.default(f),f.Visitor=l.default,f.default=f,e.default=f,t.exports=e.default},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.HandlebarsEnvironment=u;var n=r(0),i=s(r(1)),o=r(5),a=r(20),c=s(r(7)),l=r(8);e.VERSION="4.7.7";e.COMPILER_REVISION=8;e.LAST_COMPATIBLE_COMPILER_REVISION=7;e.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0 <4.3.0",8:">= 4.3.0"};function u(t,e,r){this.helpers=t||{},this.partials=e||{},this.decorators=r||{},o.registerDefaultHelpers(this),a.registerDefaultDecorators(this)}u.prototype={constructor:u,logger:c.default,log:c.default.log,registerHelper:function(t,e){if("[object Object]"===n.toString.call(t)){if(e)throw new i.default("Arg not supported with multiple helpers");n.extend(this.helpers,t)}else this.helpers[t]=e},unregisterHelper:function(t){delete this.helpers[t]},registerPartial:function(t,e){if("[object Object]"===n.toString.call(t))n.extend(this.partials,t);else{if(void 0===e)throw new i.default('Attempting to register a partial called "'+t+'" as undefined');this.partials[t]=e}},unregisterPartial:function(t){delete this.partials[t]},registerDecorator:function(t,e){if("[object Object]"===n.toString.call(t)){if(e)throw new i.default("Arg not supported with multiple decorators");n.extend(this.decorators,t)}else this.decorators[t]=e},unregisterDecorator:function(t){delete this.decorators[t]},resetLoggedPropertyAccesses:function(){l.resetLoggedProperties()}};var h=c.default.log;e.log=h,e.createFrame=n.createFrame,e.logger=c.default},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.registerDefaultHelpers=function(t){n.default(t),i.default(t),o.default(t),a.default(t),c.default(t),l.default(t),u.default(t)},e.moveHelperToHooks=function(t,e,r){t.helpers[e]&&(t.hooks[e]=t.helpers[e],r||delete t.helpers[e])};var n=s(r(13)),i=s(r(14)),o=s(r(15)),a=s(r(16)),c=s(r(17)),l=s(r(18)),u=s(r(19))},function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){"use strict";e.__esModule=!0;var s=r(0),n={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(t){if("string"==typeof t){var e=s.indexOf(n.methodMap,t.toLowerCase());t=e>=0?e:parseInt(t,10)}return t},log:function(t){if(t=n.lookupLevel(t),"undefined"!=typeof console&&n.lookupLevel(n.level)<=t){var e=n.methodMap[t];console[e]||(e="log");for(var r=arguments.length,s=Array(r>1?r-1:0),i=1;i<r;i++)s[i-1]=arguments[i];console[e].apply(console,s)}}};e.default=n,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.createProtoAccessControl=function(t){var e=Object.create(null);e.constructor=!1,e.__defineGetter__=!1,e.__defineSetter__=!1,e.__lookupGetter__=!1;var r=Object.create(null);return r.__proto__=!1,{properties:{whitelist:s.createNewLookupObject(r,t.allowedProtoProperties),defaultValue:t.allowProtoPropertiesByDefault},methods:{whitelist:s.createNewLookupObject(e,t.allowedProtoMethods),defaultValue:t.allowProtoMethodsByDefault}}},e.resultIsAllowed=function(t,e,r){return o("function"==typeof t?e.methods:e.properties,r)},e.resetLoggedProperties=function(){Object.keys(i).forEach((function(t){delete i[t]}))};var s=r(22),n=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}(r(7)),i=Object.create(null);function o(t,e){return void 0!==t.whitelist[e]?!0===t.whitelist[e]:void 0!==t.defaultValue?t.defaultValue:(function(t){!0!==i[t]&&(i[t]=!0,n.log("error",'Handlebars: Access has been denied to resolve the property "'+t+'" because it is not an "own property" of its parent.\nYou can add a runtime option to disable the check or this warning:\nSee https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details'))}(e),!1)}},function(t,e,r){"use strict";(function(r){e.__esModule=!0,e.default=function(t){var e=void 0!==r?r:window,s=e.Handlebars;t.noConflict=function(){return e.Handlebars===t&&(e.Handlebars=s),t}},t.exports=e.default}).call(this,r(6))},function(t,e,r){"use strict";e.__esModule=!0;var s={helpers:{helperExpression:function(t){return"SubExpression"===t.type||("MustacheStatement"===t.type||"BlockStatement"===t.type)&&!!(t.params&&t.params.length||t.hash)},scopedId:function(t){return/^\.|this\b/.test(t.original)},simpleId:function(t){return 1===t.parts.length&&!s.helpers.scopedId(t)&&!t.depth}}};e.default=s,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s,n=r(1),i=(s=n)&&s.__esModule?s:{default:s};function o(){this.parents=[]}function a(t){this.acceptRequired(t,"path"),this.acceptArray(t.params),this.acceptKey(t,"hash")}function c(t){a.call(this,t),this.acceptKey(t,"program"),this.acceptKey(t,"inverse")}function l(t){this.acceptRequired(t,"name"),this.acceptArray(t.params),this.acceptKey(t,"hash")}o.prototype={constructor:o,mutating:!1,acceptKey:function(t,e){var r=this.accept(t[e]);if(this.mutating){if(r&&!o.prototype[r.type])throw new i.default('Unexpected node type "'+r.type+'" found when accepting '+e+" on "+t.type);t[e]=r}},acceptRequired:function(t,e){if(this.acceptKey(t,e),!t[e])throw new i.default(t.type+" requires "+e)},acceptArray:function(t){for(var e=0,r=t.length;e<r;e++)this.acceptKey(t,e),t[e]||(t.splice(e,1),e--,r--)},accept:function(t){if(t){if(!this[t.type])throw new i.default("Unknown type: "+t.type,t);this.current&&this.parents.unshift(this.current),this.current=t;var e=this[t.type](t);return this.current=this.parents.shift(),!this.mutating||e?e:!1!==e?t:void 0}},Program:function(t){this.acceptArray(t.body)},MustacheStatement:a,Decorator:a,BlockStatement:c,DecoratorBlock:c,PartialStatement:l,PartialBlockStatement:function(t){l.call(this,t),this.acceptKey(t,"program")},ContentStatement:function(){},CommentStatement:function(){},SubExpression:a,PathExpression:function(){},StringLiteral:function(){},NumberLiteral:function(){},BooleanLiteral:function(){},UndefinedLiteral:function(){},NullLiteral:function(){},Hash:function(t){this.acceptArray(t.pairs)},HashPair:function(t){this.acceptRequired(t,"value")}},e.default=o,t.exports=e.default},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}function n(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}e.__esModule=!0;var i=n(r(4)),o=s(r(23)),a=s(r(1)),c=n(r(0)),l=n(r(24)),u=s(r(9));function h(){var t=new i.HandlebarsEnvironment;return c.extend(t,i),t.SafeString=o.default,t.Exception=a.default,t.Utils=c,t.escapeExpression=c.escapeExpression,t.VM=l,t.template=function(e){return l.template(e,t)},t}var p=h();p.create=h,u.default(p),p.default=p,e.default=p,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s=r(0);e.default=function(t){t.registerHelper("blockHelperMissing",(function(e,r){var n=r.inverse,i=r.fn;if(!0===e)return i(this);if(!1===e||null==e)return n(this);if(s.isArray(e))return e.length>0?(r.ids&&(r.ids=[r.name]),t.helpers.each(e,r)):n(this);if(r.data&&r.ids){var o=s.createFrame(r.data);o.contextPath=s.appendContextPath(r.data.contextPath,r.name),r={data:o}}return i(e,r)}))},t.exports=e.default},function(t,e,r){"use strict";(function(s){e.__esModule=!0;var n,i=r(0),o=r(1),a=(n=o)&&n.__esModule?n:{default:n};e.default=function(t){t.registerHelper("each",(function(t,e){if(!e)throw new a.default("Must pass iterator to #each");var r,n=e.fn,o=e.inverse,c=0,l="",u=void 0,h=void 0;function p(e,r,s){u&&(u.key=e,u.index=r,u.first=0===r,u.last=!!s,h&&(u.contextPath=h+e)),l+=n(t[e],{data:u,blockParams:i.blockParams([t[e],e],[h+e,null])})}if(e.data&&e.ids&&(h=i.appendContextPath(e.data.contextPath,e.ids[0])+"."),i.isFunction(t)&&(t=t.call(this)),e.data&&(u=i.createFrame(e.data)),t&&"object"==typeof t)if(i.isArray(t))for(var f=t.length;c<f;c++)c in t&&p(c,c,c===t.length-1);else if(s.Symbol&&t[s.Symbol.iterator]){for(var d=[],m=t[s.Symbol.iterator](),g=m.next();!g.done;g=m.next())d.push(g.value);for(f=(t=d).length;c<f;c++)p(c,c,c===t.length-1)}else r=void 0,Object.keys(t).forEach((function(t){void 0!==r&&p(r,c-1),r=t,c++})),void 0!==r&&p(r,c-1,!0);return 0===c&&(l=o(this)),l}))},t.exports=e.default}).call(this,r(6))},function(t,e,r){"use strict";e.__esModule=!0;var s,n=r(1),i=(s=n)&&s.__esModule?s:{default:s};e.default=function(t){t.registerHelper("helperMissing",(function(){if(1!==arguments.length)throw new i.default('Missing helper: "'+arguments[arguments.length-1].name+'"')}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s,n=r(0),i=r(1),o=(s=i)&&s.__esModule?s:{default:s};e.default=function(t){t.registerHelper("if",(function(t,e){if(2!=arguments.length)throw new o.default("#if requires exactly one argument");return n.isFunction(t)&&(t=t.call(this)),!e.hash.includeZero&&!t||n.isEmpty(t)?e.inverse(this):e.fn(this)})),t.registerHelper("unless",(function(e,r){if(2!=arguments.length)throw new o.default("#unless requires exactly one argument");return t.helpers.if.call(this,e,{fn:r.inverse,inverse:r.fn,hash:r.hash})}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.default=function(t){t.registerHelper("log",(function(){for(var e=[void 0],r=arguments[arguments.length-1],s=0;s<arguments.length-1;s++)e.push(arguments[s]);var n=1;null!=r.hash.level?n=r.hash.level:r.data&&null!=r.data.level&&(n=r.data.level),e[0]=n,t.log.apply(t,e)}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.default=function(t){t.registerHelper("lookup",(function(t,e,r){return t?r.lookupProperty(t,e):t}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s,n=r(0),i=r(1),o=(s=i)&&s.__esModule?s:{default:s};e.default=function(t){t.registerHelper("with",(function(t,e){if(2!=arguments.length)throw new o.default("#with requires exactly one argument");n.isFunction(t)&&(t=t.call(this));var r=e.fn;if(n.isEmpty(t))return e.inverse(this);var s=e.data;return e.data&&e.ids&&((s=n.createFrame(e.data)).contextPath=n.appendContextPath(e.data.contextPath,e.ids[0])),r(t,{data:s,blockParams:n.blockParams([t],[s&&s.contextPath])})}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.registerDefaultDecorators=function(t){i.default(t)};var s,n=r(21),i=(s=n)&&s.__esModule?s:{default:s}},function(t,e,r){"use strict";e.__esModule=!0;var s=r(0);e.default=function(t){t.registerDecorator("inline",(function(t,e,r,n){var i=t;return e.partials||(e.partials={},i=function(n,i){var o=r.partials;r.partials=s.extend({},o,e.partials);var a=t(n,i);return r.partials=o,a}),e.partials[n.args[0]]=n.fn,i}))},t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.createNewLookupObject=function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];return s.extend.apply(void 0,[Object.create(null)].concat(e))};var s=r(0)},function(t,e,r){"use strict";function s(t){this.string=t}e.__esModule=!0,s.prototype.toString=s.prototype.toHTML=function(){return""+this.string},e.default=s,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.checkRevision=function(t){var e=t&&t[0]||1,r=a.COMPILER_REVISION;if(e>=a.LAST_COMPATIBLE_COMPILER_REVISION&&e<=a.COMPILER_REVISION)return;if(e<a.LAST_COMPATIBLE_COMPILER_REVISION){var s=a.REVISION_CHANGES[r],n=a.REVISION_CHANGES[e];throw new o.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+s+") or downgrade your runtime to an older version ("+n+").")}throw new o.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+t[1]+").")},e.template=function(t,e){if(!e)throw new o.default("No environment passed to template");if(!t||!t.main)throw new o.default("Unknown template object: "+typeof t);t.main.decorator=t.main_d,e.VM.checkRevision(t.compiler);var r=t.compiler&&7===t.compiler[0];var s={strict:function(t,e,r){if(!(t&&e in t))throw new o.default('"'+e+'" not defined in '+t,{loc:r});return s.lookupProperty(t,e)},lookupProperty:function(t,e){var r=t[e];return null==r?r:Object.prototype.hasOwnProperty.call(t,e)?r:u.resultIsAllowed(r,s.protoAccessControl,e)?r:void 0},lookup:function(t,e){for(var r=t.length,n=0;n<r;n++){if(null!=(t[n]&&s.lookupProperty(t[n],e)))return t[n][e]}},lambda:function(t,e){return"function"==typeof t?t.call(e):t},escapeExpression:n.escapeExpression,invokePartial:function(r,s,i){i.hash&&(s=n.extend({},s,i.hash),i.ids&&(i.ids[0]=!0)),r=e.VM.resolvePartial.call(this,r,s,i);var a=n.extend({},i,{hooks:this.hooks,protoAccessControl:this.protoAccessControl}),c=e.VM.invokePartial.call(this,r,s,a);if(null==c&&e.compile&&(i.partials[i.name]=e.compile(r,t.compilerOptions,e),c=i.partials[i.name](s,a)),null!=c){if(i.indent){for(var l=c.split("\n"),u=0,h=l.length;u<h&&(l[u]||u+1!==h);u++)l[u]=i.indent+l[u];c=l.join("\n")}return c}throw new o.default("The partial "+i.name+" could not be compiled when running in runtime-only mode")},fn:function(e){var r=t[e];return r.decorator=t[e+"_d"],r},programs:[],program:function(t,e,r,s,n){var i=this.programs[t],o=this.fn(t);return e||n||s||r?i=h(this,t,o,e,r,s,n):i||(i=this.programs[t]=h(this,t,o)),i},data:function(t,e){for(;t&&e--;)t=t._parent;return t},mergeIfNeeded:function(t,e){var r=t||e;return t&&e&&t!==e&&(r=n.extend({},e,t)),r},nullContext:Object.seal({}),noop:e.VM.noop,compilerInfo:t.compiler};function i(e){var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n=r.data;i._setup(r),!r.partial&&t.useData&&(n=f(e,n));var o=void 0,a=t.useBlockParams?[]:void 0;function c(e){return""+t.main(s,e,s.helpers,s.partials,n,a,o)}return t.useDepths&&(o=r.depths?e!=r.depths[0]?[e].concat(r.depths):r.depths:[e]),(c=d(t.main,c,s,r.depths||[],n,a))(e,r)}return i.isTop=!0,i._setup=function(i){if(i.partial)s.protoAccessControl=i.protoAccessControl,s.helpers=i.helpers,s.partials=i.partials,s.decorators=i.decorators,s.hooks=i.hooks;else{var o=n.extend({},e.helpers,i.helpers);!function(t,e){Object.keys(t).forEach((function(r){var s=t[r];t[r]=function(t,e){var r=e.lookupProperty;return l.wrapHelper(t,(function(t){return n.extend({lookupProperty:r},t)}))}(s,e)}))}(o,s),s.helpers=o,t.usePartial&&(s.partials=s.mergeIfNeeded(i.partials,e.partials)),(t.usePartial||t.useDecorators)&&(s.decorators=n.extend({},e.decorators,i.decorators)),s.hooks={},s.protoAccessControl=u.createProtoAccessControl(i);var a=i.allowCallsToHelperMissing||r;c.moveHelperToHooks(s,"helperMissing",a),c.moveHelperToHooks(s,"blockHelperMissing",a)}},i._child=function(e,r,n,i){if(t.useBlockParams&&!n)throw new o.default("must pass block params");if(t.useDepths&&!i)throw new o.default("must pass parent depths");return h(s,e,t[e],r,0,n,i)},i},e.wrapProgram=h,e.resolvePartial=function(t,e,r){t?t.call||r.name||(r.name=t,t=r.partials[t]):t="@partial-block"===r.name?r.data["partial-block"]:r.partials[r.name];return t},e.invokePartial=function(t,e,r){var s=r.data&&r.data["partial-block"];r.partial=!0,r.ids&&(r.data.contextPath=r.ids[0]||r.data.contextPath);var i=void 0;r.fn&&r.fn!==p&&function(){r.data=a.createFrame(r.data);var t=r.fn;i=r.data["partial-block"]=function(e){var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return r.data=a.createFrame(r.data),r.data["partial-block"]=s,t(e,r)},t.partials&&(r.partials=n.extend({},r.partials,t.partials))}();void 0===t&&i&&(t=i);if(void 0===t)throw new o.default("The partial "+r.name+" could not be found");if(t instanceof Function)return t(e,r)},e.noop=p;var s,n=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}(r(0)),i=r(1),o=(s=i)&&s.__esModule?s:{default:s},a=r(4),c=r(5),l=r(25),u=r(8);function h(t,e,r,s,n,i,o){function a(e){var n=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=o;return!o||e==o[0]||e===t.nullContext&&null===o[0]||(a=[e].concat(o)),r(t,e,t.helpers,t.partials,n.data||s,i&&[n.blockParams].concat(i),a)}return(a=d(r,a,t,o,s,i)).program=e,a.depth=o?o.length:0,a.blockParams=n||0,a}function p(){return""}function f(t,e){return e&&"root"in e||((e=e?a.createFrame(e):{}).root=t),e}function d(t,e,r,s,i,o){if(t.decorator){var a={};e=t.decorator(e,a,r,s&&s[0],i,o,s),n.extend(e,a)}return e}},function(t,e,r){"use strict";e.__esModule=!0,e.wrapHelper=function(t,e){if("function"!=typeof t)return t;return function(){var r=arguments[arguments.length-1];return arguments[arguments.length-1]=e(r),t.apply(this,arguments)}}},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.parseWithoutProcessing=l,e.parse=function(t,e){var r=l(t,e);return new i.default(e).accept(r)};var n=s(r(27)),i=s(r(28)),o=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}(r(29)),a=r(0);e.parser=n.default;var c={};function l(t,e){return"Program"===t.type?t:(n.default.yy=c,c.locInfo=function(t){return new c.SourceLocation(e&&e.srcName,t)},n.default.parse(t))}a.extend(c,o)},function(t,e,r){"use strict";e.__esModule=!0;var s=function(){var t={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,partialBlock:12,content:13,COMMENT:14,CONTENT:15,openRawBlock:16,rawBlock_repetition0:17,END_RAW_BLOCK:18,OPEN_RAW_BLOCK:19,helperName:20,openRawBlock_repetition0:21,openRawBlock_option0:22,CLOSE_RAW_BLOCK:23,openBlock:24,block_option0:25,closeBlock:26,openInverse:27,block_option1:28,OPEN_BLOCK:29,openBlock_repetition0:30,openBlock_option0:31,openBlock_option1:32,CLOSE:33,OPEN_INVERSE:34,openInverse_repetition0:35,openInverse_option0:36,openInverse_option1:37,openInverseChain:38,OPEN_INVERSE_CHAIN:39,openInverseChain_repetition0:40,openInverseChain_option0:41,openInverseChain_option1:42,inverseAndProgram:43,INVERSE:44,inverseChain:45,inverseChain_option0:46,OPEN_ENDBLOCK:47,OPEN:48,mustache_repetition0:49,mustache_option0:50,OPEN_UNESCAPED:51,mustache_repetition1:52,mustache_option1:53,CLOSE_UNESCAPED:54,OPEN_PARTIAL:55,partialName:56,partial_repetition0:57,partial_option0:58,openPartialBlock:59,OPEN_PARTIAL_BLOCK:60,openPartialBlock_repetition0:61,openPartialBlock_option0:62,param:63,sexpr:64,OPEN_SEXPR:65,sexpr_repetition0:66,sexpr_option0:67,CLOSE_SEXPR:68,hash:69,hash_repetition_plus0:70,hashSegment:71,ID:72,EQUALS:73,blockParams:74,OPEN_BLOCK_PARAMS:75,blockParams_repetition_plus0:76,CLOSE_BLOCK_PARAMS:77,path:78,dataName:79,STRING:80,NUMBER:81,BOOLEAN:82,UNDEFINED:83,NULL:84,DATA:85,pathSegments:86,SEP:87,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"COMMENT",15:"CONTENT",18:"END_RAW_BLOCK",19:"OPEN_RAW_BLOCK",23:"CLOSE_RAW_BLOCK",29:"OPEN_BLOCK",33:"CLOSE",34:"OPEN_INVERSE",39:"OPEN_INVERSE_CHAIN",44:"INVERSE",47:"OPEN_ENDBLOCK",48:"OPEN",51:"OPEN_UNESCAPED",54:"CLOSE_UNESCAPED",55:"OPEN_PARTIAL",60:"OPEN_PARTIAL_BLOCK",65:"OPEN_SEXPR",68:"CLOSE_SEXPR",72:"ID",73:"EQUALS",75:"OPEN_BLOCK_PARAMS",77:"CLOSE_BLOCK_PARAMS",80:"STRING",81:"NUMBER",82:"BOOLEAN",83:"UNDEFINED",84:"NULL",85:"DATA",87:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],performAction:function(t,e,r,s,n,i,o){var a=i.length-1;switch(n){case 1:return i[a-1];case 2:this.$=s.prepareProgram(i[a]);break;case 3:case 4:case 5:case 6:case 7:case 8:this.$=i[a];break;case 9:this.$={type:"CommentStatement",value:s.stripComment(i[a]),strip:s.stripFlags(i[a],i[a]),loc:s.locInfo(this._$)};break;case 10:this.$={type:"ContentStatement",original:i[a],value:i[a],loc:s.locInfo(this._$)};break;case 11:this.$=s.prepareRawBlock(i[a-2],i[a-1],i[a],this._$);break;case 12:this.$={path:i[a-3],params:i[a-2],hash:i[a-1]};break;case 13:this.$=s.prepareBlock(i[a-3],i[a-2],i[a-1],i[a],!1,this._$);break;case 14:this.$=s.prepareBlock(i[a-3],i[a-2],i[a-1],i[a],!0,this._$);break;case 15:this.$={open:i[a-5],path:i[a-4],params:i[a-3],hash:i[a-2],blockParams:i[a-1],strip:s.stripFlags(i[a-5],i[a])};break;case 16:case 17:this.$={path:i[a-4],params:i[a-3],hash:i[a-2],blockParams:i[a-1],strip:s.stripFlags(i[a-5],i[a])};break;case 18:this.$={strip:s.stripFlags(i[a-1],i[a-1]),program:i[a]};break;case 19:var c=s.prepareBlock(i[a-2],i[a-1],i[a],i[a],!1,this._$),l=s.prepareProgram([c],i[a-1].loc);l.chained=!0,this.$={strip:i[a-2].strip,program:l,chain:!0};break;case 20:this.$=i[a];break;case 21:this.$={path:i[a-1],strip:s.stripFlags(i[a-2],i[a])};break;case 22:case 23:this.$=s.prepareMustache(i[a-3],i[a-2],i[a-1],i[a-4],s.stripFlags(i[a-4],i[a]),this._$);break;case 24:this.$={type:"PartialStatement",name:i[a-3],params:i[a-2],hash:i[a-1],indent:"",strip:s.stripFlags(i[a-4],i[a]),loc:s.locInfo(this._$)};break;case 25:this.$=s.preparePartialBlock(i[a-2],i[a-1],i[a],this._$);break;case 26:this.$={path:i[a-3],params:i[a-2],hash:i[a-1],strip:s.stripFlags(i[a-4],i[a])};break;case 27:case 28:this.$=i[a];break;case 29:this.$={type:"SubExpression",path:i[a-3],params:i[a-2],hash:i[a-1],loc:s.locInfo(this._$)};break;case 30:this.$={type:"Hash",pairs:i[a],loc:s.locInfo(this._$)};break;case 31:this.$={type:"HashPair",key:s.id(i[a-2]),value:i[a],loc:s.locInfo(this._$)};break;case 32:this.$=s.id(i[a-1]);break;case 33:case 34:this.$=i[a];break;case 35:this.$={type:"StringLiteral",value:i[a],original:i[a],loc:s.locInfo(this._$)};break;case 36:this.$={type:"NumberLiteral",value:Number(i[a]),original:Number(i[a]),loc:s.locInfo(this._$)};break;case 37:this.$={type:"BooleanLiteral",value:"true"===i[a],original:"true"===i[a],loc:s.locInfo(this._$)};break;case 38:this.$={type:"UndefinedLiteral",original:void 0,value:void 0,loc:s.locInfo(this._$)};break;case 39:this.$={type:"NullLiteral",original:null,value:null,loc:s.locInfo(this._$)};break;case 40:case 41:this.$=i[a];break;case 42:this.$=s.preparePath(!0,i[a],this._$);break;case 43:this.$=s.preparePath(!1,i[a],this._$);break;case 44:i[a-2].push({part:s.id(i[a]),original:i[a],separator:i[a-1]}),this.$=i[a-2];break;case 45:this.$=[{part:s.id(i[a]),original:i[a]}];break;case 46:this.$=[];break;case 47:i[a-1].push(i[a]);break;case 48:this.$=[];break;case 49:i[a-1].push(i[a]);break;case 50:this.$=[];break;case 51:i[a-1].push(i[a]);break;case 58:this.$=[];break;case 59:i[a-1].push(i[a]);break;case 64:this.$=[];break;case 65:i[a-1].push(i[a]);break;case 70:this.$=[];break;case 71:i[a-1].push(i[a]);break;case 78:this.$=[];break;case 79:i[a-1].push(i[a]);break;case 82:this.$=[];break;case 83:i[a-1].push(i[a]);break;case 86:this.$=[];break;case 87:i[a-1].push(i[a]);break;case 90:this.$=[];break;case 91:i[a-1].push(i[a]);break;case 94:this.$=[];break;case 95:i[a-1].push(i[a]);break;case 98:this.$=[i[a]];break;case 99:i[a-1].push(i[a]);break;case 100:this.$=[i[a]];break;case 101:i[a-1].push(i[a])}},table:[{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],defaultActions:{4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},parseError:function(t,e){throw new Error(t)},parse:function(t){var e=this,r=[0],s=[null],n=[],i=this.table,o="",a=0,c=0,l=0;this.lexer.setInput(t),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,void 0===this.lexer.yylloc&&(this.lexer.yylloc={});var u=this.lexer.yylloc;n.push(u);var h=this.lexer.options&&this.lexer.options.ranges;"function"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var p,f,d,m,g,v,y,k,S,b,_={};;){if(d=r[r.length-1],this.defaultActions[d]?m=this.defaultActions[d]:(null==p&&(b=void 0,"number"!=typeof(b=e.lexer.lex()||1)&&(b=e.symbols_[b]||b),p=b),m=i[d]&&i[d][p]),void 0===m||!m.length||!m[0]){var P="";if(!l){for(v in S=[],i[d])this.terminals_[v]&&v>2&&S.push("'"+this.terminals_[v]+"'");P=this.lexer.showPosition?"Parse error on line "+(a+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+S.join(", ")+", got '"+(this.terminals_[p]||p)+"'":"Parse error on line "+(a+1)+": Unexpected "+(1==p?"end of input":"'"+(this.terminals_[p]||p)+"'"),this.parseError(P,{text:this.lexer.match,token:this.terminals_[p]||p,line:this.lexer.yylineno,loc:u,expected:S})}}if(m[0]instanceof Array&&m.length>1)throw new Error("Parse Error: multiple actions possible at state: "+d+", token: "+p);switch(m[0]){case 1:r.push(p),s.push(this.lexer.yytext),n.push(this.lexer.yylloc),r.push(m[1]),p=null,f?(p=f,f=null):(c=this.lexer.yyleng,o=this.lexer.yytext,a=this.lexer.yylineno,u=this.lexer.yylloc,l>0&&l--);break;case 2:if(y=this.productions_[m[1]][1],_.$=s[s.length-y],_._$={first_line:n[n.length-(y||1)].first_line,last_line:n[n.length-1].last_line,first_column:n[n.length-(y||1)].first_column,last_column:n[n.length-1].last_column},h&&(_._$.range=[n[n.length-(y||1)].range[0],n[n.length-1].range[1]]),void 0!==(g=this.performAction.call(_,o,c,a,this.yy,m[1],s,n)))return g;y&&(r=r.slice(0,-1*y*2),s=s.slice(0,-1*y),n=n.slice(0,-1*y)),r.push(this.productions_[m[1]][0]),s.push(_.$),n.push(_._$),k=i[r[r.length-2]][r[r.length-1]],r.push(k);break;case 3:return!0}}return!0}},e=function(){var t={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t){return this._input=t,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,r=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e-1),this.offset-=e;var s=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var n=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===s.length?this.yylloc.first_column:0)+s[s.length-r.length].length-r[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[n[0],n[0]+this.yyleng-e]),this},more:function(){return this._more=!0,this},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},next:function(){if(this.done)return this.EOF;var t,e,r,s,n;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var i=this._currentRules(),o=0;o<i.length&&(!(r=this._input.match(this.rules[i[o]]))||e&&!(r[0].length>e[0].length)||(e=r,s=o,this.options.flex));o++);return e?((n=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],t=this.performAction.call(this,this.yy,this,i[s],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),t||void 0):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return void 0!==t?t:this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(t){this.begin(t)},options:{},performAction:function(t,e,r,s){function n(t,r){return e.yytext=e.yytext.substring(t,e.yyleng-r+t)}switch(r){case 0:if("\\\\"===e.yytext.slice(-2)?(n(0,1),this.begin("mu")):"\\"===e.yytext.slice(-1)?(n(0,1),this.begin("emu")):this.begin("mu"),e.yytext)return 15;break;case 1:return 15;case 2:return this.popState(),15;case 3:return this.begin("raw"),15;case 4:return this.popState(),"raw"===this.conditionStack[this.conditionStack.length-1]?15:(n(5,9),"END_RAW_BLOCK");case 5:return 15;case 6:return this.popState(),14;case 7:return 65;case 8:return 68;case 9:return 19;case 10:return this.popState(),this.begin("raw"),23;case 11:return 55;case 12:return 60;case 13:return 29;case 14:return 47;case 15:case 16:return this.popState(),44;case 17:return 34;case 18:return 39;case 19:return 51;case 20:return 48;case 21:this.unput(e.yytext),this.popState(),this.begin("com");break;case 22:return this.popState(),14;case 23:return 48;case 24:return 73;case 25:case 26:return 72;case 27:return 87;case 28:break;case 29:return this.popState(),54;case 30:return this.popState(),33;case 31:return e.yytext=n(1,2).replace(/\\"/g,'"'),80;case 32:return e.yytext=n(1,2).replace(/\\'/g,"'"),80;case 33:return 85;case 34:case 35:return 82;case 36:return 83;case 37:return 84;case 38:return 81;case 39:return 75;case 40:return 77;case 41:return 72;case 42:return e.yytext=e.yytext.replace(/\\([\\\]])/g,"$1"),72;case 43:return"INVALID";case 44:return 5}},rules:[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{(?=[^\/]))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]+?(?=(\{\{\{\{)))/,/^(?:[\s\S]*?--(~)?\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#>)/,/^(?:\{\{(~)?#\*?)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{(~)?!--)/,/^(?:\{\{(~)?![\s\S]*?\}\})/,/^(?:\{\{(~)?\*?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)|])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:undefined(?=([~}\s)])))/,/^(?:null(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:as\s+\|)/,/^(?:\|)/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,/^(?:\[(\\\]|[^\]])*\])/,/^(?:.)/,/^(?:$)/],conditions:{mu:{rules:[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[6],inclusive:!1},raw:{rules:[3,4,5],inclusive:!1},INITIAL:{rules:[0,1,44],inclusive:!0}}};return t}();function r(){this.yy={}}return t.lexer=e,r.prototype=t,t.Parser=r,new r}();e.default=s,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s,n=r(11),i=(s=n)&&s.__esModule?s:{default:s};function o(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options=t}function a(t,e,r){void 0===e&&(e=t.length);var s=t[e-1],n=t[e-2];return s?"ContentStatement"===s.type?(n||!r?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(s.original):void 0:r}function c(t,e,r){void 0===e&&(e=-1);var s=t[e+1],n=t[e+2];return s?"ContentStatement"===s.type?(n||!r?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(s.original):void 0:r}function l(t,e,r){var s=t[null==e?0:e+1];if(s&&"ContentStatement"===s.type&&(r||!s.rightStripped)){var n=s.value;s.value=s.value.replace(r?/^\s+/:/^[ \t]*\r?\n?/,""),s.rightStripped=s.value!==n}}function u(t,e,r){var s=t[null==e?t.length-1:e-1];if(s&&"ContentStatement"===s.type&&(r||!s.leftStripped)){var n=s.value;return s.value=s.value.replace(r?/\s+$/:/[ \t]+$/,""),s.leftStripped=s.value!==n,s.leftStripped}}o.prototype=new i.default,o.prototype.Program=function(t){var e=!this.options.ignoreStandalone,r=!this.isRootSeen;this.isRootSeen=!0;for(var s=t.body,n=0,i=s.length;n<i;n++){var o=s[n],h=this.accept(o);if(h){var p=a(s,n,r),f=c(s,n,r),d=h.openStandalone&&p,m=h.closeStandalone&&f,g=h.inlineStandalone&&p&&f;h.close&&l(s,n,!0),h.open&&u(s,n,!0),e&&g&&(l(s,n),u(s,n)&&"PartialStatement"===o.type&&(o.indent=/([ \t]+$)/.exec(s[n-1].original)[1])),e&&d&&(l((o.program||o.inverse).body),u(s,n)),e&&m&&(l(s,n),u((o.inverse||o.program).body))}}return t},o.prototype.BlockStatement=o.prototype.DecoratorBlock=o.prototype.PartialBlockStatement=function(t){this.accept(t.program),this.accept(t.inverse);var e=t.program||t.inverse,r=t.program&&t.inverse,s=r,n=r;if(r&&r.chained)for(s=r.body[0].program;n.chained;)n=n.body[n.body.length-1].program;var i={open:t.openStrip.open,close:t.closeStrip.close,openStandalone:c(e.body),closeStandalone:a((s||e).body)};if(t.openStrip.close&&l(e.body,null,!0),r){var o=t.inverseStrip;o.open&&u(e.body,null,!0),o.close&&l(s.body,null,!0),t.closeStrip.open&&u(n.body,null,!0),!this.options.ignoreStandalone&&a(e.body)&&c(s.body)&&(u(e.body),l(s.body))}else t.closeStrip.open&&u(e.body,null,!0);return i},o.prototype.Decorator=o.prototype.MustacheStatement=function(t){return t.strip},o.prototype.PartialStatement=o.prototype.CommentStatement=function(t){var e=t.strip||{};return{inlineStandalone:!0,open:e.open,close:e.close}},e.default=o,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0,e.SourceLocation=function(t,e){this.source=t,this.start={line:e.first_line,column:e.first_column},this.end={line:e.last_line,column:e.last_column}},e.id=function(t){return/^\[.*\]$/.test(t)?t.substring(1,t.length-1):t},e.stripFlags=function(t,e){return{open:"~"===t.charAt(2),close:"~"===e.charAt(e.length-3)}},e.stripComment=function(t){return t.replace(/^\{\{~?!-?-?/,"").replace(/-?-?~?\}\}$/,"")},e.preparePath=function(t,e,r){r=this.locInfo(r);for(var s=t?"@":"",n=[],o=0,a=0,c=e.length;a<c;a++){var l=e[a].part,u=e[a].original!==l;if(s+=(e[a].separator||"")+l,u||".."!==l&&"."!==l&&"this"!==l)n.push(l);else{if(n.length>0)throw new i.default("Invalid path: "+s,{loc:r});".."===l&&o++}}return{type:"PathExpression",data:t,depth:o,parts:n,original:s,loc:r}},e.prepareMustache=function(t,e,r,s,n,i){var o=s.charAt(3)||s.charAt(2),a="{"!==o&&"&"!==o;return{type:/\*/.test(s)?"Decorator":"MustacheStatement",path:t,params:e,hash:r,escaped:a,strip:n,loc:this.locInfo(i)}},e.prepareRawBlock=function(t,e,r,s){o(t,r),s=this.locInfo(s);var n={type:"Program",body:e,strip:{},loc:s};return{type:"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:n,openStrip:{},inverseStrip:{},closeStrip:{},loc:s}},e.prepareBlock=function(t,e,r,s,n,a){s&&s.path&&o(t,s);var c=/\*/.test(t.open);e.blockParams=t.blockParams;var l=void 0,u=void 0;if(r){if(c)throw new i.default("Unexpected inverse block on decorator",r);r.chain&&(r.program.body[0].closeStrip=s.strip),u=r.strip,l=r.program}n&&(n=l,l=e,e=n);return{type:c?"DecoratorBlock":"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:e,inverse:l,openStrip:t.strip,inverseStrip:u,closeStrip:s&&s.strip,loc:this.locInfo(a)}},e.prepareProgram=function(t,e){if(!e&&t.length){var r=t[0].loc,s=t[t.length-1].loc;r&&s&&(e={source:r.source,start:{line:r.start.line,column:r.start.column},end:{line:s.end.line,column:s.end.column}})}return{type:"Program",body:t,strip:{},loc:e}},e.preparePartialBlock=function(t,e,r,s){return o(t,r),{type:"PartialBlockStatement",name:t.path,params:t.params,hash:t.hash,program:e,openStrip:t.strip,closeStrip:r&&r.strip,loc:this.locInfo(s)}};var s,n=r(1),i=(s=n)&&s.__esModule?s:{default:s};function o(t,e){if(e=e.path?e.path.original:e,t.path.original!==e){var r={loc:t.path.loc};throw new i.default(t.path.original+" doesn't match "+e,r)}}},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0,e.Compiler=c,e.precompile=function(t,e,r){if(null==t||"string"!=typeof t&&"Program"!==t.type)throw new n.default("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+t);"data"in(e=e||{})||(e.data=!0);e.compat&&(e.useDepths=!0);var s=r.parse(t,e),i=(new r.Compiler).compile(s,e);return(new r.JavaScriptCompiler).compile(i,e)},e.compile=function(t,e,r){void 0===e&&(e={});if(null==t||"string"!=typeof t&&"Program"!==t.type)throw new n.default("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+t);"data"in(e=i.extend({},e))||(e.data=!0);e.compat&&(e.useDepths=!0);var s=void 0;function o(){var s=r.parse(t,e),n=(new r.Compiler).compile(s,e),i=(new r.JavaScriptCompiler).compile(n,e,void 0,!0);return r.template(i)}function a(t,e){return s||(s=o()),s.call(this,t,e)}return a._setup=function(t){return s||(s=o()),s._setup(t)},a._child=function(t,e,r,n){return s||(s=o()),s._child(t,e,r,n)},a};var n=s(r(1)),i=r(0),o=s(r(10)),a=[].slice;function c(){}function l(t,e){if(t===e)return!0;if(i.isArray(t)&&i.isArray(e)&&t.length===e.length){for(var r=0;r<t.length;r++)if(!l(t[r],e[r]))return!1;return!0}}function u(t){if(!t.path.parts){var e=t.path;t.path={type:"PathExpression",data:!1,depth:0,parts:[e.original+""],original:e.original+"",loc:e.loc}}}c.prototype={compiler:c,equals:function(t){var e=this.opcodes.length;if(t.opcodes.length!==e)return!1;for(var r=0;r<e;r++){var s=this.opcodes[r],n=t.opcodes[r];if(s.opcode!==n.opcode||!l(s.args,n.args))return!1}e=this.children.length;for(r=0;r<e;r++)if(!this.children[r].equals(t.children[r]))return!1;return!0},guid:0,compile:function(t,e){return this.sourceNode=[],this.opcodes=[],this.children=[],this.options=e,this.stringParams=e.stringParams,this.trackIds=e.trackIds,e.blockParams=e.blockParams||[],e.knownHelpers=i.extend(Object.create(null),{helperMissing:!0,blockHelperMissing:!0,each:!0,if:!0,unless:!0,with:!0,log:!0,lookup:!0},e.knownHelpers),this.accept(t)},compileProgram:function(t){var e=(new this.compiler).compile(t,this.options),r=this.guid++;return this.usePartial=this.usePartial||e.usePartial,this.children[r]=e,this.useDepths=this.useDepths||e.useDepths,r},accept:function(t){if(!this[t.type])throw new n.default("Unknown type: "+t.type,t);this.sourceNode.unshift(t);var e=this[t.type](t);return this.sourceNode.shift(),e},Program:function(t){this.options.blockParams.unshift(t.blockParams);for(var e=t.body,r=e.length,s=0;s<r;s++)this.accept(e[s]);return this.options.blockParams.shift(),this.isSimple=1===r,this.blockParams=t.blockParams?t.blockParams.length:0,this},BlockStatement:function(t){u(t);var e=t.program,r=t.inverse;e=e&&this.compileProgram(e),r=r&&this.compileProgram(r);var s=this.classifySexpr(t);"helper"===s?this.helperSexpr(t,e,r):"simple"===s?(this.simpleSexpr(t),this.opcode("pushProgram",e),this.opcode("pushProgram",r),this.opcode("emptyHash"),this.opcode("blockValue",t.path.original)):(this.ambiguousSexpr(t,e,r),this.opcode("pushProgram",e),this.opcode("pushProgram",r),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},DecoratorBlock:function(t){var e=t.program&&this.compileProgram(t.program),r=this.setupFullMustacheParams(t,e,void 0),s=t.path;this.useDecorators=!0,this.opcode("registerDecorator",r.length,s.original)},PartialStatement:function(t){this.usePartial=!0;var e=t.program;e&&(e=this.compileProgram(t.program));var r=t.params;if(r.length>1)throw new n.default("Unsupported number of partial arguments: "+r.length,t);r.length||(this.options.explicitPartialContext?this.opcode("pushLiteral","undefined"):r.push({type:"PathExpression",parts:[],depth:0}));var s=t.name.original,i="SubExpression"===t.name.type;i&&this.accept(t.name),this.setupFullMustacheParams(t,e,void 0,!0);var o=t.indent||"";this.options.preventIndent&&o&&(this.opcode("appendContent",o),o=""),this.opcode("invokePartial",i,s,o),this.opcode("append")},PartialBlockStatement:function(t){this.PartialStatement(t)},MustacheStatement:function(t){this.SubExpression(t),t.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},Decorator:function(t){this.DecoratorBlock(t)},ContentStatement:function(t){t.value&&this.opcode("appendContent",t.value)},CommentStatement:function(){},SubExpression:function(t){u(t);var e=this.classifySexpr(t);"simple"===e?this.simpleSexpr(t):"helper"===e?this.helperSexpr(t):this.ambiguousSexpr(t)},ambiguousSexpr:function(t,e,r){var s=t.path,n=s.parts[0],i=null!=e||null!=r;this.opcode("getContext",s.depth),this.opcode("pushProgram",e),this.opcode("pushProgram",r),s.strict=!0,this.accept(s),this.opcode("invokeAmbiguous",n,i)},simpleSexpr:function(t){var e=t.path;e.strict=!0,this.accept(e),this.opcode("resolvePossibleLambda")},helperSexpr:function(t,e,r){var s=this.setupFullMustacheParams(t,e,r),i=t.path,a=i.parts[0];if(this.options.knownHelpers[a])this.opcode("invokeKnownHelper",s.length,a);else{if(this.options.knownHelpersOnly)throw new n.default("You specified knownHelpersOnly, but used the unknown helper "+a,t);i.strict=!0,i.falsy=!0,this.accept(i),this.opcode("invokeHelper",s.length,i.original,o.default.helpers.simpleId(i))}},PathExpression:function(t){this.addDepth(t.depth),this.opcode("getContext",t.depth);var e=t.parts[0],r=o.default.helpers.scopedId(t),s=!t.depth&&!r&&this.blockParamIndex(e);s?this.opcode("lookupBlockParam",s,t.parts):e?t.data?(this.options.data=!0,this.opcode("lookupData",t.depth,t.parts,t.strict)):this.opcode("lookupOnContext",t.parts,t.falsy,t.strict,r):this.opcode("pushContext")},StringLiteral:function(t){this.opcode("pushString",t.value)},NumberLiteral:function(t){this.opcode("pushLiteral",t.value)},BooleanLiteral:function(t){this.opcode("pushLiteral",t.value)},UndefinedLiteral:function(){this.opcode("pushLiteral","undefined")},NullLiteral:function(){this.opcode("pushLiteral","null")},Hash:function(t){var e=t.pairs,r=0,s=e.length;for(this.opcode("pushHash");r<s;r++)this.pushParam(e[r].value);for(;r--;)this.opcode("assignToHash",e[r].key);this.opcode("popHash")},opcode:function(t){this.opcodes.push({opcode:t,args:a.call(arguments,1),loc:this.sourceNode[0].loc})},addDepth:function(t){t&&(this.useDepths=!0)},classifySexpr:function(t){var e=o.default.helpers.simpleId(t.path),r=e&&!!this.blockParamIndex(t.path.parts[0]),s=!r&&o.default.helpers.helperExpression(t),n=!r&&(s||e);if(n&&!s){var i=t.path.parts[0],a=this.options;a.knownHelpers[i]?s=!0:a.knownHelpersOnly&&(n=!1)}return s?"helper":n?"ambiguous":"simple"},pushParams:function(t){for(var e=0,r=t.length;e<r;e++)this.pushParam(t[e])},pushParam:function(t){var e=null!=t.value?t.value:t.original||"";if(this.stringParams)e.replace&&(e=e.replace(/^(\.?\.\/)*/g,"").replace(/\//g,".")),t.depth&&this.addDepth(t.depth),this.opcode("getContext",t.depth||0),this.opcode("pushStringParam",e,t.type),"SubExpression"===t.type&&this.accept(t);else{if(this.trackIds){var r=void 0;if(!t.parts||o.default.helpers.scopedId(t)||t.depth||(r=this.blockParamIndex(t.parts[0])),r){var s=t.parts.slice(1).join(".");this.opcode("pushId","BlockParam",r,s)}else(e=t.original||e).replace&&(e=e.replace(/^this(?:\.|$)/,"").replace(/^\.\//,"").replace(/^\.$/,"")),this.opcode("pushId",t.type,e)}this.accept(t)}},setupFullMustacheParams:function(t,e,r,s){var n=t.params;return this.pushParams(n),this.opcode("pushProgram",e),this.opcode("pushProgram",r),t.hash?this.accept(t.hash):this.opcode("emptyHash",s),n},blockParamIndex:function(t){for(var e=0,r=this.options.blockParams.length;e<r;e++){var s=this.options.blockParams[e],n=s&&i.indexOf(s,t);if(s&&n>=0)return[e,n]}}}},function(t,e,r){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}e.__esModule=!0;var n=r(4),i=s(r(1)),o=r(0),a=s(r(32));function c(t){this.value=t}function l(){}l.prototype={nameLookup:function(t,e){return this.internalNameLookup(t,e)},depthedLookup:function(t){return[this.aliasable("container.lookup"),"(depths, ",JSON.stringify(t),")"]},compilerInfo:function(){var t=n.COMPILER_REVISION;return[t,n.REVISION_CHANGES[t]]},appendToBuffer:function(t,e,r){return o.isArray(t)||(t=[t]),t=this.source.wrap(t,e),this.environment.isSimple?["return ",t,";"]:r?["buffer += ",t,";"]:(t.appendToBuffer=!0,t)},initializeBuffer:function(){return this.quotedString("")},internalNameLookup:function(t,e){return this.lookupPropertyFunctionIsUsed=!0,["lookupProperty(",t,",",JSON.stringify(e),")"]},lookupPropertyFunctionIsUsed:!1,compile:function(t,e,r,s){this.environment=t,this.options=e,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!s,this.name=this.environment.name,this.isChild=!!r,this.context=r||{decorators:[],programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.blockParams=[],this.compileChildren(t,e),this.useDepths=this.useDepths||t.useDepths||t.useDecorators||this.options.compat,this.useBlockParams=this.useBlockParams||t.useBlockParams;var n=t.opcodes,o=void 0,a=void 0,c=void 0,l=void 0;for(c=0,l=n.length;c<l;c++)o=n[c],this.source.currentLocation=o.loc,a=a||o.loc,this[o.opcode].apply(this,o.args);if(this.source.currentLocation=a,this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new i.default("Compile completed with content left on stack");this.decorators.isEmpty()?this.decorators=void 0:(this.useDecorators=!0,this.decorators.prepend(["var decorators = container.decorators, ",this.lookupPropertyFunctionVarDeclaration(),";\n"]),this.decorators.push("return fn;"),s?this.decorators=Function.apply(this,["fn","props","container","depth0","data","blockParams","depths",this.decorators.merge()]):(this.decorators.prepend("function(fn, props, container, depth0, data, blockParams, depths) {\n"),this.decorators.push("}\n"),this.decorators=this.decorators.merge()));var u=this.createFunctionContext(s);if(this.isChild)return u;var h={compiler:this.compilerInfo(),main:u};this.decorators&&(h.main_d=this.decorators,h.useDecorators=!0);var p=this.context,f=p.programs,d=p.decorators;for(c=0,l=f.length;c<l;c++)f[c]&&(h[c]=f[c],d[c]&&(h[c+"_d"]=d[c],h.useDecorators=!0));return this.environment.usePartial&&(h.usePartial=!0),this.options.data&&(h.useData=!0),this.useDepths&&(h.useDepths=!0),this.useBlockParams&&(h.useBlockParams=!0),this.options.compat&&(h.compat=!0),s?h.compilerOptions=this.options:(h.compiler=JSON.stringify(h.compiler),this.source.currentLocation={start:{line:1,column:0}},h=this.objectLiteral(h),e.srcName?(h=h.toStringWithSourceMap({file:e.destName})).map=h.map&&h.map.toString():h=h.toString()),h},preamble:function(){this.lastContext=0,this.source=new a.default(this.options.srcName),this.decorators=new a.default(this.options.srcName)},createFunctionContext:function(t){var e=this,r="",s=this.stackVars.concat(this.registers.list);s.length>0&&(r+=", "+s.join(", "));var n=0;Object.keys(this.aliases).forEach((function(t){var s=e.aliases[t];s.children&&s.referenceCount>1&&(r+=", alias"+ ++n+"="+t,s.children[0]="alias"+n)})),this.lookupPropertyFunctionIsUsed&&(r+=", "+this.lookupPropertyFunctionVarDeclaration());var i=["container","depth0","helpers","partials","data"];(this.useBlockParams||this.useDepths)&&i.push("blockParams"),this.useDepths&&i.push("depths");var o=this.mergeSource(r);return t?(i.push(o),Function.apply(this,i)):this.source.wrap(["function(",i.join(","),") {\n  ",o,"}"])},mergeSource:function(t){var e=this.environment.isSimple,r=!this.forceBuffer,s=void 0,n=void 0,i=void 0,o=void 0;return this.source.each((function(t){t.appendToBuffer?(i?t.prepend("  + "):i=t,o=t):(i&&(n?i.prepend("buffer += "):s=!0,o.add(";"),i=o=void 0),n=!0,e||(r=!1))})),r?i?(i.prepend("return "),o.add(";")):n||this.source.push('return "";'):(t+=", buffer = "+(s?"":this.initializeBuffer()),i?(i.prepend("return buffer + "),o.add(";")):this.source.push("return buffer;")),t&&this.source.prepend("var "+t.substring(2)+(s?"":";\n")),this.source.merge()},lookupPropertyFunctionVarDeclaration:function(){return"\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    ".trim()},blockValue:function(t){var e=this.aliasable("container.hooks.blockHelperMissing"),r=[this.contextName(0)];this.setupHelperArgs(t,0,r);var s=this.popStack();r.splice(1,0,s),this.push(this.source.functionCall(e,"call",r))},ambiguousBlockValue:function(){var t=this.aliasable("container.hooks.blockHelperMissing"),e=[this.contextName(0)];this.setupHelperArgs("",0,e,!0),this.flushInline();var r=this.topStack();e.splice(1,0,r),this.pushSource(["if (!",this.lastHelper,") { ",r," = ",this.source.functionCall(t,"call",e),"}"])},appendContent:function(t){this.pendingContent?t=this.pendingContent+t:this.pendingLocation=this.source.currentLocation,this.pendingContent=t},append:function(){if(this.isInline())this.replaceStack((function(t){return[" != null ? ",t,' : ""']})),this.pushSource(this.appendToBuffer(this.popStack()));else{var t=this.popStack();this.pushSource(["if (",t," != null) { ",this.appendToBuffer(t,void 0,!0)," }"]),this.environment.isSimple&&this.pushSource(["else { ",this.appendToBuffer("''",void 0,!0)," }"])}},appendEscaped:function(){this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"),"(",this.popStack(),")"]))},getContext:function(t){this.lastContext=t},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(t,e,r,s){var n=0;s||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(t[n++])),this.resolvePath("context",t,n,e,r)},lookupBlockParam:function(t,e){this.useBlockParams=!0,this.push(["blockParams[",t[0],"][",t[1],"]"]),this.resolvePath("context",e,1)},lookupData:function(t,e,r){t?this.pushStackLiteral("container.data(data, "+t+")"):this.pushStackLiteral("data"),this.resolvePath("data",e,0,!0,r)},resolvePath:function(t,e,r,s,n){var i=this;if(this.options.strict||this.options.assumeObjects)this.push(function(t,e,r,s){var n=e.popStack(),i=0,o=r.length;t&&o--;for(;i<o;i++)n=e.nameLookup(n,r[i],s);return t?[e.aliasable("container.strict"),"(",n,", ",e.quotedString(r[i]),", ",JSON.stringify(e.source.currentLocation)," )"]:n}(this.options.strict&&n,this,e,t));else for(var o=e.length;r<o;r++)this.replaceStack((function(n){var o=i.nameLookup(n,e[r],t);return s?[" && ",o]:[" != null ? ",o," : ",n]}))},resolvePossibleLambda:function(){this.push([this.aliasable("container.lambda"),"(",this.popStack(),", ",this.contextName(0),")"])},pushStringParam:function(t,e){this.pushContext(),this.pushString(e),"SubExpression"!==e&&("string"==typeof t?this.pushString(t):this.pushStackLiteral(t))},emptyHash:function(t){this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}")),this.pushStackLiteral(t?"undefined":"{}")},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:{},types:[],contexts:[],ids:[]}},popHash:function(){var t=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(this.objectLiteral(t.ids)),this.stringParams&&(this.push(this.objectLiteral(t.contexts)),this.push(this.objectLiteral(t.types))),this.push(this.objectLiteral(t.values))},pushString:function(t){this.pushStackLiteral(this.quotedString(t))},pushLiteral:function(t){this.pushStackLiteral(t)},pushProgram:function(t){null!=t?this.pushStackLiteral(this.programExpression(t)):this.pushStackLiteral(null)},registerDecorator:function(t,e){var r=this.nameLookup("decorators",e,"decorator"),s=this.setupHelperArgs(e,t);this.decorators.push(["fn = ",this.decorators.functionCall(r,"",["fn","props","container",s])," || fn;"])},invokeHelper:function(t,e,r){var s=this.popStack(),n=this.setupHelper(t,e),i=[];r&&i.push(n.name),i.push(s),this.options.strict||i.push(this.aliasable("container.hooks.helperMissing"));var o=["(",this.itemsSeparatedBy(i,"||"),")"],a=this.source.functionCall(o,"call",n.callParams);this.push(a)},itemsSeparatedBy:function(t,e){var r=[];r.push(t[0]);for(var s=1;s<t.length;s++)r.push(e,t[s]);return r},invokeKnownHelper:function(t,e){var r=this.setupHelper(t,e);this.push(this.source.functionCall(r.name,"call",r.callParams))},invokeAmbiguous:function(t,e){this.useRegister("helper");var r=this.popStack();this.emptyHash();var s=this.setupHelper(0,t,e),n=["(","(helper = ",this.lastHelper=this.nameLookup("helpers",t,"helper")," || ",r,")"];this.options.strict||(n[0]="(helper = ",n.push(" != null ? helper : ",this.aliasable("container.hooks.helperMissing"))),this.push(["(",n,s.paramsInit?["),(",s.paramsInit]:[],"),","(typeof helper === ",this.aliasable('"function"')," ? ",this.source.functionCall("helper","call",s.callParams)," : helper))"])},invokePartial:function(t,e,r){var s=[],n=this.setupParams(e,1,s);t&&(e=this.popStack(),delete n.name),r&&(n.indent=JSON.stringify(r)),n.helpers="helpers",n.partials="partials",n.decorators="container.decorators",t?s.unshift(e):s.unshift(this.nameLookup("partials",e,"partial")),this.options.compat&&(n.depths="depths"),n=this.objectLiteral(n),s.push(n),this.push(this.source.functionCall("container.invokePartial","",s))},assignToHash:function(t){var e=this.popStack(),r=void 0,s=void 0,n=void 0;this.trackIds&&(n=this.popStack()),this.stringParams&&(s=this.popStack(),r=this.popStack());var i=this.hash;r&&(i.contexts[t]=r),s&&(i.types[t]=s),n&&(i.ids[t]=n),i.values[t]=e},pushId:function(t,e,r){"BlockParam"===t?this.pushStackLiteral("blockParams["+e[0]+"].path["+e[1]+"]"+(r?" + "+JSON.stringify("."+r):"")):"PathExpression"===t?this.pushString(e):"SubExpression"===t?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:l,compileChildren:function(t,e){for(var r=t.children,s=void 0,n=void 0,i=0,o=r.length;i<o;i++){s=r[i],n=new this.compiler;var a=this.matchExistingProgram(s);if(null==a){this.context.programs.push("");var c=this.context.programs.length;s.index=c,s.name="program"+c,this.context.programs[c]=n.compile(s,e,this.context,!this.precompile),this.context.decorators[c]=n.decorators,this.context.environments[c]=s,this.useDepths=this.useDepths||n.useDepths,this.useBlockParams=this.useBlockParams||n.useBlockParams,s.useDepths=this.useDepths,s.useBlockParams=this.useBlockParams}else s.index=a.index,s.name="program"+a.index,this.useDepths=this.useDepths||a.useDepths,this.useBlockParams=this.useBlockParams||a.useBlockParams}},matchExistingProgram:function(t){for(var e=0,r=this.context.environments.length;e<r;e++){var s=this.context.environments[e];if(s&&s.equals(t))return s}},programExpression:function(t){var e=this.environment.children[t],r=[e.index,"data",e.blockParams];return(this.useBlockParams||this.useDepths)&&r.push("blockParams"),this.useDepths&&r.push("depths"),"container.program("+r.join(", ")+")"},useRegister:function(t){this.registers[t]||(this.registers[t]=!0,this.registers.list.push(t))},push:function(t){return t instanceof c||(t=this.source.wrap(t)),this.inlineStack.push(t),t},pushStackLiteral:function(t){this.push(new c(t))},pushSource:function(t){this.pendingContent&&(this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent),this.pendingLocation)),this.pendingContent=void 0),t&&this.source.push(t)},replaceStack:function(t){var e=["("],r=void 0,s=void 0,n=void 0;if(!this.isInline())throw new i.default("replaceStack on non-inline");var o=this.popStack(!0);if(o instanceof c)e=["(",r=[o.value]],n=!0;else{s=!0;var a=this.incrStack();e=["((",this.push(a)," = ",o,")"],r=this.topStack()}var l=t.call(this,r);n||this.popStack(),s&&this.stackSlot--,this.push(e.concat(l,")"))},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var t=this.inlineStack;this.inlineStack=[];for(var e=0,r=t.length;e<r;e++){var s=t[e];if(s instanceof c)this.compileStack.push(s);else{var n=this.incrStack();this.pushSource([n," = ",s,";"]),this.compileStack.push(n)}}},isInline:function(){return this.inlineStack.length},popStack:function(t){var e=this.isInline(),r=(e?this.inlineStack:this.compileStack).pop();if(!t&&r instanceof c)return r.value;if(!e){if(!this.stackSlot)throw new i.default("Invalid stack pop");this.stackSlot--}return r},topStack:function(){var t=this.isInline()?this.inlineStack:this.compileStack,e=t[t.length-1];return e instanceof c?e.value:e},contextName:function(t){return this.useDepths&&t?"depths["+t+"]":"depth"+t},quotedString:function(t){return this.source.quotedString(t)},objectLiteral:function(t){return this.source.objectLiteral(t)},aliasable:function(t){var e=this.aliases[t];return e?(e.referenceCount++,e):((e=this.aliases[t]=this.source.wrap(t)).aliasable=!0,e.referenceCount=1,e)},setupHelper:function(t,e,r){var s=[];return{params:s,paramsInit:this.setupHelperArgs(e,t,s,r),name:this.nameLookup("helpers",e,"helper"),callParams:[this.aliasable(this.contextName(0)+" != null ? "+this.contextName(0)+" : (container.nullContext || {})")].concat(s)}},setupParams:function(t,e,r){var s={},n=[],i=[],o=[],a=!r,c=void 0;a&&(r=[]),s.name=this.quotedString(t),s.hash=this.popStack(),this.trackIds&&(s.hashIds=this.popStack()),this.stringParams&&(s.hashTypes=this.popStack(),s.hashContexts=this.popStack());var l=this.popStack(),u=this.popStack();(u||l)&&(s.fn=u||"container.noop",s.inverse=l||"container.noop");for(var h=e;h--;)c=this.popStack(),r[h]=c,this.trackIds&&(o[h]=this.popStack()),this.stringParams&&(i[h]=this.popStack(),n[h]=this.popStack());return a&&(s.args=this.source.generateArray(r)),this.trackIds&&(s.ids=this.source.generateArray(o)),this.stringParams&&(s.types=this.source.generateArray(i),s.contexts=this.source.generateArray(n)),this.options.data&&(s.data="data"),this.useBlockParams&&(s.blockParams="blockParams"),s},setupHelperArgs:function(t,e,r,s){var n=this.setupParams(t,e,r);return n.loc=JSON.stringify(this.source.currentLocation),n=this.objectLiteral(n),s?(this.useRegister("options"),r.push("options"),["options=",n]):r?(r.push(n),""):n}},function(){for(var t="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "),e=l.RESERVED_WORDS={},r=0,s=t.length;r<s;r++)e[t[r]]=!0}(),l.isValidJavaScriptVariableName=function(t){return!l.RESERVED_WORDS[t]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(t)},e.default=l,t.exports=e.default},function(t,e,r){"use strict";e.__esModule=!0;var s=r(0),n=void 0;try{}catch(t){}function i(t,e,r){if(s.isArray(t)){for(var n=[],i=0,o=t.length;i<o;i++)n.push(e.wrap(t[i],r));return n}return"boolean"==typeof t||"number"==typeof t?t+"":t}function o(t){this.srcFile=t,this.source=[]}n||((n=function(t,e,r,s){this.src="",s&&this.add(s)}).prototype={add:function(t){s.isArray(t)&&(t=t.join("")),this.src+=t},prepend:function(t){s.isArray(t)&&(t=t.join("")),this.src=t+this.src},toStringWithSourceMap:function(){return{code:this.toString()}},toString:function(){return this.src}}),o.prototype={isEmpty:function(){return!this.source.length},prepend:function(t,e){this.source.unshift(this.wrap(t,e))},push:function(t,e){this.source.push(this.wrap(t,e))},merge:function(){var t=this.empty();return this.each((function(e){t.add(["  ",e,"\n"])})),t},each:function(t){for(var e=0,r=this.source.length;e<r;e++)t(this.source[e])},empty:function(){var t=this.currentLocation||{start:{}};return new n(t.start.line,t.start.column,this.srcFile)},wrap:function(t){var e=arguments.length<=1||void 0===arguments[1]?this.currentLocation||{start:{}}:arguments[1];return t instanceof n?t:(t=i(t,this,e),new n(e.start.line,e.start.column,this.srcFile,t))},functionCall:function(t,e,r){return r=this.generateList(r),this.wrap([t,e?"."+e+"(":"(",r,")"])},quotedString:function(t){return'"'+(t+"").replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(t){var e=this,r=[];Object.keys(t).forEach((function(s){var n=i(t[s],e);"undefined"!==n&&r.push([e.quotedString(s),":",n])}));var s=this.generateList(r);return s.prepend("{"),s.add("}"),s},generateList:function(t){for(var e=this.empty(),r=0,s=t.length;r<s;r++)r&&e.add(","),e.add(i(t[r],this));return e},generateArray:function(t){var e=this.generateList(t);return e.prepend("["),e.add("]"),e}},e.default=o,t.exports=e.default},function(t,e,r){"use strict";r.r(e);var s={};r.r(s),r.d(s,"getName",(function(){return i})),r.d(s,"getPath",(function(){return o})),r.d(s,"getProperty",(function(){return l})),r.d(s,"gql",(function(){return u})),r.d(s,"obj",(function(){return h})),r.d(s,"renderComponent",(function(){return p})),r.d(s,"renderModule",(function(){return f}));var n=r(2),i=function(t){return("org.jahia.services.render.Resource"===t.getClass().getName()?t.getNode():t).getName()},o=function(t){return("org.jahia.services.render.Resource"===t.getClass().getName()?t.getNode():t).getPath()},a=r(3),c=r.n(a),l=function(t,e){const r="org.jahia.services.render.Resource"===t.getClass().getName()?t.getNode():t;return r.hasProperty(e)?10===r.getProperty(e).getType()?r.getProperty(e).getNode().getPath():new a.SafeString(r.getProperty(e).getString()):""},u=function(t){const e=t.fn(this),{varName:r,...s}=t.hash;let{data:i}=n.gqlHelper.executeQuerySync({query:e,...s});this[r||"gql"]=i},h=function(t){return t.hash},p=function(t){return new a.SafeString(n.renderHelper.renderComponentSync(t.hash,t.data.root.renderContext))},f=function(t){return new a.SafeString(n.renderHelper.renderModuleSync(t.hash,t.data.root.renderContext))};Object.keys(s).forEach(t=>{c.a.registerHelper(t,s[t])}),n.registry.add("module","handlebars",{exports:c.a}),n.registry.add("view","handlebars",{render:(t,e,r)=>{const s=n.osgi.loadResource(r.bundle,r.templateFile);return c.a.compile(s)({currentResource:t,renderContext:e})}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqYWhpYUhlbHBlcnNcIiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2hlbHBlcnMuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2xvZ2dlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2ludGVybmFsL3Byb3RvLWFjY2Vzcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvY29tcGlsZXIvdmlzaXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9oZWxwZXJzL2Jsb2NrLWhlbHBlci1taXNzaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvaGVscGVycy9lYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvaGVscGVycy9oZWxwZXItbWlzc2luZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9oZWxwZXJzL2xvZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvaGVscGVycy93aXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvZGVjb3JhdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvaW50ZXJuYWwvY3JlYXRlLW5ldy1sb29rdXAtb2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvc2FmZS1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9ydW50aW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvaW50ZXJuYWwvd3JhcEhlbHBlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGFuZGxlYmFycy9kaXN0L2Nqcy9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9jb21waWxlci9wYXJzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9jb21waWxlci93aGl0ZXNwYWNlLWNvbnRyb2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9jb21waWxlci9oZWxwZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvY29tcGlsZXIvY29tcGlsZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hhbmRsZWJhcnMvZGlzdC9janMvaGFuZGxlYmFycy9jb21waWxlci9qYXZhc2NyaXB0LWNvbXBpbGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oYW5kbGViYXJzL2Rpc3QvY2pzL2hhbmRsZWJhcnMvY29tcGlsZXIvY29kZS1nZW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2phdmFzY3JpcHQvaGFuZGxlYmFycy9oZWxwZXJzL2dldE5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2phdmFzY3JpcHQvaGFuZGxlYmFycy9oZWxwZXJzL2dldFBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2phdmFzY3JpcHQvaGFuZGxlYmFycy9oZWxwZXJzL2dldFByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL3NyYy9qYXZhc2NyaXB0L2hhbmRsZWJhcnMvaGVscGVycy9ncWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2phdmFzY3JpcHQvaGFuZGxlYmFycy9oZWxwZXJzL29iai5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvamF2YXNjcmlwdC9oYW5kbGViYXJzL2hlbHBlcnMvcmVuZGVyQ29tcG9uZW50LmpzIiwid2VicGFjazovLy8uL3NyYy9qYXZhc2NyaXB0L2hhbmRsZWJhcnMvaGVscGVycy9yZW5kZXJNb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2phdmFzY3JpcHQvaGFuZGxlYmFycy9pbml0LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZXh0ZW5kIiwiaW5kZXhPZiIsImFycmF5IiwibGVuIiwibGVuZ3RoIiwiZXNjYXBlRXhwcmVzc2lvbiIsInN0cmluZyIsInRvSFRNTCIsInBvc3NpYmxlIiwidGVzdCIsInJlcGxhY2UiLCJiYWRDaGFycyIsImVzY2FwZUNoYXIiLCJpc0VtcHR5IiwiaXNBcnJheSIsImNyZWF0ZUZyYW1lIiwiZnJhbWUiLCJfcGFyZW50IiwiYmxvY2tQYXJhbXMiLCJwYXJhbXMiLCJpZHMiLCJwYXRoIiwiYXBwZW5kQ29udGV4dFBhdGgiLCJjb250ZXh0UGF0aCIsImlkIiwiZXNjYXBlIiwiY2hyIiwib2JqIiwiYXJndW1lbnRzIiwidG9TdHJpbmciLCJpc0Z1bmN0aW9uIiwiQXJyYXkiLCJlcnJvclByb3BzIiwiRXhjZXB0aW9uIiwibWVzc2FnZSIsIm5vZGUiLCJsb2MiLCJsaW5lIiwidW5kZWZpbmVkIiwiZW5kTGluZU51bWJlciIsImNvbHVtbiIsImVuZENvbHVtbiIsInN0YXJ0IiwiZW5kIiwidG1wIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJpZHgiLCJjYXB0dXJlU3RhY2tUcmFjZSIsImxpbmVOdW1iZXIiLCJub3AiLCJqYWhpYUhlbHBlcnMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2hhbmRsZWJhcnNSdW50aW1lMiIsIl9oYW5kbGViYXJzQ29tcGlsZXJBc3QyIiwiX2hhbmRsZWJhcnNDb21waWxlckJhc2UiLCJfaGFuZGxlYmFyc0NvbXBpbGVyQ29tcGlsZXIiLCJfaGFuZGxlYmFyc0NvbXBpbGVySmF2YXNjcmlwdENvbXBpbGVyMiIsIl9oYW5kbGViYXJzQ29tcGlsZXJWaXNpdG9yMiIsIl9oYW5kbGViYXJzTm9Db25mbGljdDIiLCJfY3JlYXRlIiwiaGIiLCJjb21waWxlIiwiaW5wdXQiLCJvcHRpb25zIiwicHJlY29tcGlsZSIsIkFTVCIsIkNvbXBpbGVyIiwiSmF2YVNjcmlwdENvbXBpbGVyIiwiUGFyc2VyIiwicGFyc2VyIiwicGFyc2UiLCJwYXJzZVdpdGhvdXRQcm9jZXNzaW5nIiwiaW5zdCIsIlZpc2l0b3IiLCJIYW5kbGViYXJzRW52aXJvbm1lbnQiLCJfdXRpbHMiLCJfZXhjZXB0aW9uMiIsIl9oZWxwZXJzIiwiX2RlY29yYXRvcnMiLCJfbG9nZ2VyMiIsIl9pbnRlcm5hbFByb3RvQWNjZXNzIiwiVkVSU0lPTiIsIkNPTVBJTEVSX1JFVklTSU9OIiwiTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OIiwiUkVWSVNJT05fQ0hBTkdFUyIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiaGVscGVycyIsInBhcnRpYWxzIiwiZGVjb3JhdG9ycyIsInJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMiLCJyZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzIiwibG9nZ2VyIiwibG9nIiwicmVnaXN0ZXJIZWxwZXIiLCJmbiIsInVucmVnaXN0ZXJIZWxwZXIiLCJyZWdpc3RlclBhcnRpYWwiLCJwYXJ0aWFsIiwidW5yZWdpc3RlclBhcnRpYWwiLCJyZWdpc3RlckRlY29yYXRvciIsInVucmVnaXN0ZXJEZWNvcmF0b3IiLCJyZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMiLCJyZXNldExvZ2dlZFByb3BlcnRpZXMiLCJpbnN0YW5jZSIsIl9oZWxwZXJzQmxvY2tIZWxwZXJNaXNzaW5nMiIsIl9oZWxwZXJzRWFjaDIiLCJfaGVscGVyc0hlbHBlck1pc3NpbmcyIiwiX2hlbHBlcnNJZjIiLCJfaGVscGVyc0xvZzIiLCJfaGVscGVyc0xvb2t1cDIiLCJfaGVscGVyc1dpdGgyIiwibW92ZUhlbHBlclRvSG9va3MiLCJoZWxwZXJOYW1lIiwia2VlcEhlbHBlciIsImhvb2tzIiwiZyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsIm1ldGhvZE1hcCIsImxldmVsIiwibG9va3VwTGV2ZWwiLCJsZXZlbE1hcCIsInRvTG93ZXJDYXNlIiwicGFyc2VJbnQiLCJjb25zb2xlIiwibWV0aG9kIiwiX2xlbiIsIl9rZXkiLCJhcHBseSIsImNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbCIsInJ1bnRpbWVPcHRpb25zIiwiZGVmYXVsdE1ldGhvZFdoaXRlTGlzdCIsImRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdCIsInByb3BlcnRpZXMiLCJ3aGl0ZWxpc3QiLCJfY3JlYXRlTmV3TG9va3VwT2JqZWN0IiwiY3JlYXRlTmV3TG9va3VwT2JqZWN0IiwiYWxsb3dlZFByb3RvUHJvcGVydGllcyIsImRlZmF1bHRWYWx1ZSIsImFsbG93UHJvdG9Qcm9wZXJ0aWVzQnlEZWZhdWx0IiwibWV0aG9kcyIsImFsbG93ZWRQcm90b01ldGhvZHMiLCJhbGxvd1Byb3RvTWV0aG9kc0J5RGVmYXVsdCIsInJlc3VsdElzQWxsb3dlZCIsInJlc3VsdCIsInByb3RvQWNjZXNzQ29udHJvbCIsInByb3BlcnR5TmFtZSIsImNoZWNrV2hpdGVMaXN0Iiwia2V5cyIsImxvZ2dlZFByb3BlcnRpZXMiLCJmb3JFYWNoIiwibmV3T2JqIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJwcm90b0FjY2Vzc0NvbnRyb2xGb3JUeXBlIiwibG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlIiwiSGFuZGxlYmFycyIsInJvb3QiLCJnbG9iYWwiLCIkSGFuZGxlYmFycyIsIm5vQ29uZmxpY3QiLCJoZWxwZXJFeHByZXNzaW9uIiwidHlwZSIsImhhc2giLCJzY29wZWRJZCIsIm9yaWdpbmFsIiwic2ltcGxlSWQiLCJwYXJ0cyIsImRlcHRoIiwiX2V4Y2VwdGlvbiIsInBhcmVudHMiLCJ2aXNpdFN1YkV4cHJlc3Npb24iLCJtdXN0YWNoZSIsImFjY2VwdFJlcXVpcmVkIiwiYWNjZXB0QXJyYXkiLCJhY2NlcHRLZXkiLCJ2aXNpdEJsb2NrIiwiYmxvY2siLCJ2aXNpdFBhcnRpYWwiLCJtdXRhdGluZyIsImFjY2VwdCIsInNwbGljZSIsImN1cnJlbnQiLCJ1bnNoaWZ0IiwicmV0Iiwic2hpZnQiLCJQcm9ncmFtIiwicHJvZ3JhbSIsImJvZHkiLCJNdXN0YWNoZVN0YXRlbWVudCIsIkRlY29yYXRvciIsIkJsb2NrU3RhdGVtZW50IiwiRGVjb3JhdG9yQmxvY2siLCJQYXJ0aWFsU3RhdGVtZW50IiwiUGFydGlhbEJsb2NrU3RhdGVtZW50IiwiQ29udGVudFN0YXRlbWVudCIsIkNvbW1lbnRTdGF0ZW1lbnQiLCJTdWJFeHByZXNzaW9uIiwiUGF0aEV4cHJlc3Npb24iLCJTdHJpbmdMaXRlcmFsIiwiTnVtYmVyTGl0ZXJhbCIsIkJvb2xlYW5MaXRlcmFsIiwiVW5kZWZpbmVkTGl0ZXJhbCIsIk51bGxMaXRlcmFsIiwiSGFzaCIsInBhaXJzIiwiSGFzaFBhaXIiLCJwYWlyIiwiYmFzZSIsIl9oYW5kbGViYXJzU2FmZVN0cmluZzIiLCJfaGFuZGxlYmFyc0V4Y2VwdGlvbjIiLCJVdGlscyIsInJ1bnRpbWUiLCJTYWZlU3RyaW5nIiwiVk0iLCJ0ZW1wbGF0ZSIsInNwZWMiLCJjb250ZXh0IiwiaW52ZXJzZSIsImVhY2giLCJkYXRhIiwicHJpb3JLZXkiLCJleGVjSXRlcmF0aW9uIiwiZmllbGQiLCJpbmRleCIsImxhc3QiLCJmaXJzdCIsImoiLCJpdGVyYXRvciIsIm5ld0NvbnRleHQiLCJpdCIsIm5leHQiLCJkb25lIiwicHVzaCIsImNvbmRpdGlvbmFsIiwiaW5jbHVkZVplcm8iLCJhcmdzIiwibG9va3VwUHJvcGVydHkiLCJfZGVjb3JhdG9yc0lubGluZTIiLCJfZGVjb3JhdG9yc0lubGluZSIsInByb3BzIiwiY29udGFpbmVyIiwic291cmNlcyIsImNvbmNhdCIsImNoZWNrUmV2aXNpb24iLCJjb21waWxlckluZm8iLCJjb21waWxlclJldmlzaW9uIiwiY3VycmVudFJldmlzaW9uIiwiX2Jhc2UiLCJydW50aW1lVmVyc2lvbnMiLCJjb21waWxlclZlcnNpb25zIiwidGVtcGxhdGVTcGVjIiwiZW52IiwibWFpbiIsImRlY29yYXRvciIsIm1haW5fZCIsImNvbXBpbGVyIiwidGVtcGxhdGVXYXNQcmVjb21waWxlZFdpdGhDb21waWxlclY3Iiwic3RyaWN0IiwicGFyZW50IiwibG9va3VwIiwiZGVwdGhzIiwibGFtYmRhIiwiaW52b2tlUGFydGlhbCIsInJlc29sdmVQYXJ0aWFsIiwiZXh0ZW5kZWRPcHRpb25zIiwiY29tcGlsZXJPcHRpb25zIiwiaW5kZW50IiwibGluZXMiLCJzcGxpdCIsImpvaW4iLCJwcm9ncmFtcyIsImRlY2xhcmVkQmxvY2tQYXJhbXMiLCJwcm9ncmFtV3JhcHBlciIsIndyYXBQcm9ncmFtIiwibWVyZ2VJZk5lZWRlZCIsInBhcmFtIiwiY29tbW9uIiwibnVsbENvbnRleHQiLCJzZWFsIiwibm9vcCIsIl9zZXR1cCIsInVzZURhdGEiLCJpbml0RGF0YSIsInVzZUJsb2NrUGFyYW1zIiwidXNlRGVwdGhzIiwiZXhlY3V0ZURlY29yYXRvcnMiLCJpc1RvcCIsIm1lcmdlZEhlbHBlcnMiLCJoZWxwZXIiLCJfaW50ZXJuYWxXcmFwSGVscGVyIiwid3JhcEhlbHBlciIsInBhc3NMb29rdXBQcm9wZXJ0eU9wdGlvbiIsIndyYXBIZWxwZXJzVG9QYXNzTG9va3VwUHJvcGVydHkiLCJ1c2VQYXJ0aWFsIiwidXNlRGVjb3JhdG9ycyIsImtlZXBIZWxwZXJJbkhlbHBlcnMiLCJhbGxvd0NhbGxzVG9IZWxwZXJNaXNzaW5nIiwiX2NoaWxkIiwiY3VycmVudFBhcnRpYWxCbG9jayIsInBhcnRpYWxCbG9jayIsInByb2ciLCJjdXJyZW50RGVwdGhzIiwidHJhbnNmb3JtT3B0aW9uc0ZuIiwiYXN0IiwiX3doaXRlc3BhY2VDb250cm9sMiIsIl9wYXJzZXIyIiwiSGVscGVycyIsInl5IiwibG9jSW5mbyIsIlNvdXJjZUxvY2F0aW9uIiwic3JjTmFtZSIsImhhbmRsZWJhcnMiLCJ0cmFjZSIsInN5bWJvbHNfIiwidGVybWluYWxzXyIsIjE0IiwiMTUiLCIxOCIsIjE5IiwiMjMiLCIyOSIsIjMzIiwiMzQiLCIzOSIsIjQ0IiwiNDciLCI0OCIsIjUxIiwiNTQiLCI1NSIsIjYwIiwiNjUiLCI2OCIsIjcyIiwiNzMiLCI3NSIsIjc3IiwiODAiLCI4MSIsIjgyIiwiODMiLCI4NCIsIjg1IiwiODciLCJwcm9kdWN0aW9uc18iLCJwZXJmb3JtQWN0aW9uIiwieXl0ZXh0IiwieXlsZW5nIiwieXlsaW5lbm8iLCJ5eXN0YXRlIiwiJCQiLCJfJCIsIiQwIiwiJCIsInByZXBhcmVQcm9ncmFtIiwic3RyaXBDb21tZW50Iiwic3RyaXAiLCJzdHJpcEZsYWdzIiwicHJlcGFyZVJhd0Jsb2NrIiwicHJlcGFyZUJsb2NrIiwib3BlbiIsImNoYWluZWQiLCJjaGFpbiIsInByZXBhcmVNdXN0YWNoZSIsInByZXBhcmVQYXJ0aWFsQmxvY2siLCJOdW1iZXIiLCJwcmVwYXJlUGF0aCIsInBhcnQiLCJzZXBhcmF0b3IiLCJ0YWJsZSIsIjkiLCIxMCIsIjExIiwiMTIiLCIxMyIsIjE2IiwiMjQiLCIyNyIsIjU5IiwiMjAiLCI3OCIsIjc5IiwiODYiLCIxNyIsIjU2IiwiNjQiLCI0OSIsIjUyIiwiMjUiLCIzOCIsIjQzIiwiNDUiLCIyOCIsIjU3IiwiMjYiLCIzMCIsIjM1IiwiMjEiLCI2MSIsIjUwIiwiNjMiLCI2OSIsIjcwIiwiNzEiLCI1MyIsIjU4IiwiNjYiLCIzMSIsIjM2IiwiMjIiLCI2MiIsIjQ2IiwiNDAiLCI2NyIsIjMyIiwiNzQiLCIzNyIsIjQxIiwiNzYiLCI0MiIsImRlZmF1bHRBY3Rpb25zIiwiOTAiLCIxMDEiLCIxMDQiLCIxMTAiLCIxMTEiLCIxMTYiLCIxMTkiLCIxMjIiLCIxMzUiLCIxMzYiLCJwYXJzZUVycm9yIiwic3RyIiwic2VsZiIsInN0YWNrIiwidnN0YWNrIiwibHN0YWNrIiwicmVjb3ZlcmluZyIsImxleGVyIiwic2V0SW5wdXQiLCJ5eWxsb2MiLCJ5eWxvYyIsInJhbmdlcyIsInN5bWJvbCIsInByZUVycm9yU3ltYm9sIiwic3RhdGUiLCJhY3Rpb24iLCJuZXdTdGF0ZSIsImV4cGVjdGVkIiwidG9rZW4iLCJ5eXZhbCIsImxleCIsImVyclN0ciIsInNob3dQb3NpdGlvbiIsInRleHQiLCJtYXRjaCIsImZpcnN0X2xpbmUiLCJsYXN0X2xpbmUiLCJmaXJzdF9jb2x1bW4iLCJsYXN0X2NvbHVtbiIsInJhbmdlIiwic2xpY2UiLCJFT0YiLCJfaW5wdXQiLCJfbW9yZSIsIl9sZXNzIiwibWF0Y2hlZCIsImNvbmRpdGlvblN0YWNrIiwib2Zmc2V0IiwiY2giLCJ1bnB1dCIsInN1YnN0ciIsIm9sZExpbmVzIiwibW9yZSIsImxlc3MiLCJwYXN0SW5wdXQiLCJwYXN0IiwidXBjb21pbmdJbnB1dCIsInByZSIsInRlbXBNYXRjaCIsInJ1bGVzIiwiX2N1cnJlbnRSdWxlcyIsImZsZXgiLCJtYXRjaGVzIiwiYmVnaW4iLCJjb25kaXRpb24iLCJwb3BTdGF0ZSIsInBvcCIsImNvbmRpdGlvbnMiLCJ0b3BTdGF0ZSIsInB1c2hTdGF0ZSIsInl5XyIsIiRhdm9pZGluZ19uYW1lX2NvbGxpc2lvbnMiLCJZWV9TVEFSVCIsInN1YnN0cmluZyIsIl92aXNpdG9yIiwiX3Zpc2l0b3IyIiwiV2hpdGVzcGFjZUNvbnRyb2wiLCJpc1ByZXZXaGl0ZXNwYWNlIiwiaXNSb290IiwicHJldiIsInNpYmxpbmciLCJpc05leHRXaGl0ZXNwYWNlIiwib21pdFJpZ2h0IiwibXVsdGlwbGUiLCJyaWdodFN0cmlwcGVkIiwib21pdExlZnQiLCJsZWZ0U3RyaXBwZWQiLCJkb1N0YW5kYWxvbmUiLCJpZ25vcmVTdGFuZGFsb25lIiwiaXNSb290U2VlbiIsIl9pc1ByZXZXaGl0ZXNwYWNlIiwiX2lzTmV4dFdoaXRlc3BhY2UiLCJvcGVuU3RhbmRhbG9uZSIsImNsb3NlU3RhbmRhbG9uZSIsImlubGluZVN0YW5kYWxvbmUiLCJjbG9zZSIsImV4ZWMiLCJmaXJzdEludmVyc2UiLCJsYXN0SW52ZXJzZSIsIm9wZW5TdHJpcCIsImNsb3NlU3RyaXAiLCJpbnZlcnNlU3RyaXAiLCJzb3VyY2UiLCJjaGFyQXQiLCJjb21tZW50IiwiZGlnIiwiaXNMaXRlcmFsIiwiZXNjYXBlRmxhZyIsImVzY2FwZWQiLCJvcGVuUmF3QmxvY2siLCJjb250ZW50cyIsInZhbGlkYXRlQ2xvc2UiLCJvcGVuQmxvY2siLCJpbnZlcnNlQW5kUHJvZ3JhbSIsImludmVydGVkIiwic3RhdGVtZW50cyIsImZpcnN0TG9jIiwibGFzdExvYyIsImVycm9yTm9kZSIsImNvbXBhdCIsImVudmlyb25tZW50IiwiY29tcGlsZWQiLCJjb21waWxlSW5wdXQiLCJleGVjT3B0aW9ucyIsInNldHVwT3B0aW9ucyIsIl9hc3QyIiwiYXJnRXF1YWxzIiwiYSIsImIiLCJ0cmFuc2Zvcm1MaXRlcmFsVG9QYXRoIiwic2V4cHIiLCJsaXRlcmFsIiwiZXF1YWxzIiwib3RoZXIiLCJvcGNvZGVzIiwib3Bjb2RlIiwib3RoZXJPcGNvZGUiLCJjaGlsZHJlbiIsImd1aWQiLCJzb3VyY2VOb2RlIiwic3RyaW5nUGFyYW1zIiwidHJhY2tJZHMiLCJrbm93bkhlbHBlcnMiLCJoZWxwZXJNaXNzaW5nIiwiYmxvY2tIZWxwZXJNaXNzaW5nIiwidW5sZXNzIiwiY29tcGlsZVByb2dyYW0iLCJib2R5TGVuZ3RoIiwiaXNTaW1wbGUiLCJjbGFzc2lmeVNleHByIiwiaGVscGVyU2V4cHIiLCJzaW1wbGVTZXhwciIsImFtYmlndW91c1NleHByIiwic2V0dXBGdWxsTXVzdGFjaGVQYXJhbXMiLCJleHBsaWNpdFBhcnRpYWxDb250ZXh0IiwicGFydGlhbE5hbWUiLCJpc0R5bmFtaWMiLCJwcmV2ZW50SW5kZW50Iiwibm9Fc2NhcGUiLCJjb250ZW50IiwiaXNCbG9jayIsImtub3duSGVscGVyc09ubHkiLCJmYWxzeSIsImFkZERlcHRoIiwic2NvcGVkIiwiYmxvY2tQYXJhbUlkIiwiYmxvY2tQYXJhbUluZGV4IiwibnVtYmVyIiwiYm9vbCIsInB1c2hQYXJhbSIsImlzQmxvY2tQYXJhbSIsImlzSGVscGVyIiwiaXNFbGlnaWJsZSIsIl9uYW1lIiwicHVzaFBhcmFtcyIsInZhbCIsImJsb2NrUGFyYW1DaGlsZCIsIm9taXRFbXB0eSIsIl9jb2RlR2VuMiIsIkxpdGVyYWwiLCJuYW1lTG9va3VwIiwiaW50ZXJuYWxOYW1lTG9va3VwIiwiZGVwdGhlZExvb2t1cCIsImFsaWFzYWJsZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXZpc2lvbiIsImFwcGVuZFRvQnVmZmVyIiwibG9jYXRpb24iLCJleHBsaWNpdCIsIndyYXAiLCJpbml0aWFsaXplQnVmZmVyIiwicXVvdGVkU3RyaW5nIiwibG9va3VwUHJvcGVydHlGdW5jdGlvbklzVXNlZCIsImFzT2JqZWN0IiwiaXNDaGlsZCIsImVudmlyb25tZW50cyIsInByZWFtYmxlIiwic3RhY2tTbG90Iiwic3RhY2tWYXJzIiwiYWxpYXNlcyIsInJlZ2lzdGVycyIsImxpc3QiLCJoYXNoZXMiLCJjb21waWxlU3RhY2siLCJpbmxpbmVTdGFjayIsImNvbXBpbGVDaGlsZHJlbiIsImN1cnJlbnRMb2NhdGlvbiIsInB1c2hTb3VyY2UiLCJwcmVwZW5kIiwibG9va3VwUHJvcGVydHlGdW5jdGlvblZhckRlY2xhcmF0aW9uIiwibWVyZ2UiLCJjcmVhdGVGdW5jdGlvbkNvbnRleHQiLCJfY29udGV4dCIsIm9iamVjdExpdGVyYWwiLCJ0b1N0cmluZ1dpdGhTb3VyY2VNYXAiLCJmaWxlIiwiZGVzdE5hbWUiLCJtYXAiLCJsYXN0Q29udGV4dCIsIl90aGlzIiwidmFyRGVjbGFyYXRpb25zIiwibG9jYWxzIiwiYWxpYXNDb3VudCIsImFsaWFzIiwicmVmZXJlbmNlQ291bnQiLCJtZXJnZVNvdXJjZSIsImFwcGVuZE9ubHkiLCJmb3JjZUJ1ZmZlciIsImFwcGVuZEZpcnN0Iiwic291cmNlU2VlbiIsImJ1ZmZlclN0YXJ0IiwiYnVmZmVyRW5kIiwiYWRkIiwidHJpbSIsImJsb2NrVmFsdWUiLCJjb250ZXh0TmFtZSIsInNldHVwSGVscGVyQXJncyIsImJsb2NrTmFtZSIsInBvcFN0YWNrIiwiZnVuY3Rpb25DYWxsIiwiYW1iaWd1b3VzQmxvY2tWYWx1ZSIsImZsdXNoSW5saW5lIiwidG9wU3RhY2siLCJsYXN0SGVscGVyIiwiYXBwZW5kQ29udGVudCIsInBlbmRpbmdDb250ZW50IiwicGVuZGluZ0xvY2F0aW9uIiwiYXBwZW5kIiwiaXNJbmxpbmUiLCJyZXBsYWNlU3RhY2siLCJsb2NhbCIsImFwcGVuZEVzY2FwZWQiLCJnZXRDb250ZXh0IiwicHVzaENvbnRleHQiLCJwdXNoU3RhY2tMaXRlcmFsIiwibG9va3VwT25Db250ZXh0IiwicmVzb2x2ZVBhdGgiLCJsb29rdXBCbG9ja1BhcmFtIiwibG9va3VwRGF0YSIsIl90aGlzMiIsImFzc3VtZU9iamVjdHMiLCJyZXF1aXJlVGVybWluYWwiLCJzdHJpY3RMb29rdXAiLCJyZXNvbHZlUG9zc2libGVMYW1iZGEiLCJwdXNoU3RyaW5nUGFyYW0iLCJwdXNoU3RyaW5nIiwiZW1wdHlIYXNoIiwicHVzaEhhc2giLCJ2YWx1ZXMiLCJ0eXBlcyIsImNvbnRleHRzIiwicG9wSGFzaCIsInB1c2hMaXRlcmFsIiwicHVzaFByb2dyYW0iLCJwcm9ncmFtRXhwcmVzc2lvbiIsInBhcmFtU2l6ZSIsImZvdW5kRGVjb3JhdG9yIiwiaW52b2tlSGVscGVyIiwibm9uSGVscGVyIiwic2V0dXBIZWxwZXIiLCJwb3NzaWJsZUZ1bmN0aW9uQ2FsbHMiLCJmdW5jdGlvbkxvb2t1cENvZGUiLCJpdGVtc1NlcGFyYXRlZEJ5IiwiY2FsbFBhcmFtcyIsIml0ZW1zIiwiaW52b2tlS25vd25IZWxwZXIiLCJpbnZva2VBbWJpZ3VvdXMiLCJoZWxwZXJDYWxsIiwidXNlUmVnaXN0ZXIiLCJwYXJhbXNJbml0Iiwic2V0dXBQYXJhbXMiLCJhc3NpZ25Ub0hhc2giLCJwdXNoSWQiLCJjaGlsZCIsImV4aXN0aW5nIiwibWF0Y2hFeGlzdGluZ1Byb2dyYW0iLCJwcm9ncmFtUGFyYW1zIiwiZXhwciIsIml0ZW0iLCJjYWxsYmFjayIsInByZWZpeCIsImNyZWF0ZWRTdGFjayIsInVzZWRMaXRlcmFsIiwidG9wIiwiaW5jclN0YWNrIiwidG9wU3RhY2tOYW1lIiwiZW50cnkiLCJ3cmFwcGVkIiwiaW5saW5lIiwiYmxvY2tIZWxwZXIiLCJvYmplY3RBcmdzIiwiaGFzaElkcyIsImhhc2hUeXBlcyIsImhhc2hDb250ZXh0cyIsImdlbmVyYXRlQXJyYXkiLCJyZXNlcnZlZFdvcmRzIiwiY29tcGlsZXJXb3JkcyIsIlJFU0VSVkVEX1dPUkRTIiwiaXNWYWxpZEphdmFTY3JpcHRWYXJpYWJsZU5hbWUiLCJTb3VyY2VOb2RlIiwiZXJyIiwiY2FzdENodW5rIiwiY2h1bmsiLCJjb2RlR2VuIiwiQ29kZUdlbiIsInNyY0ZpbGUiLCJjaHVua3MiLCJzcmMiLCJjb2RlIiwiZW1wdHkiLCJpdGVyIiwiZ2VuZXJhdGVMaXN0IiwiZW50cmllcyIsInJlc291cmNlIiwiZ2V0Q2xhc3MiLCJnZXROYW1lIiwiZ2V0Tm9kZSIsImdldFBhdGgiLCJoYXNQcm9wZXJ0eSIsImdldFByb3BlcnR5IiwiZ2V0VHlwZSIsImdldFN0cmluZyIsInF1ZXJ5IiwidmFyTmFtZSIsInJlc3QiLCJleGVjdXRlUXVlcnlTeW5jIiwib3B0cyIsInJlbmRlckNvbXBvbmVudFN5bmMiLCJyZW5kZXJDb250ZXh0IiwicmVuZGVyTW9kdWxlU3luYyIsImsiLCJyZW5kZXIiLCJjdXJyZW50UmVzb3VyY2UiLCJ2aWV3IiwidGVtcGxhdGVTdHIiLCJsb2FkUmVzb3VyY2UiLCJidW5kbGUiLCJ0ZW1wbGF0ZUZpbGUiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0MsZUFBZVUsRUFBSSxVQUFXLENBQUVULFlBQVksRUFBTUssTUFBT0EsSUFDdEQsRUFBUEUsR0FBNEIsaUJBQVRGLEVBQW1CLElBQUksSUFBSU0sS0FBT04sRUFBT3JCLEVBQW9CVSxFQUFFZSxFQUFJRSxFQUFLLFNBQVNBLEdBQU8sT0FBT04sRUFBTU0sSUFBUUMsS0FBSyxLQUFNRCxJQUM5SSxPQUFPRixHQUlSekIsRUFBb0I2QixFQUFJLFNBQVMxQixHQUNoQyxJQUFJUyxFQUFTVCxHQUFVQSxFQUFPcUIsV0FDN0IsV0FBd0IsT0FBT3JCLEVBQWdCLFNBQy9DLFdBQThCLE9BQU9BLEdBRXRDLE9BREFILEVBQW9CVSxFQUFFRSxFQUFRLElBQUtBLEdBQzVCQSxHQUlSWixFQUFvQmEsRUFBSSxTQUFTaUIsRUFBUUMsR0FBWSxPQUFPakIsT0FBT2tCLFVBQVVDLGVBQWUxQixLQUFLdUIsRUFBUUMsSUFHekcvQixFQUFvQmtDLEVBQUksR0FJakJsQyxFQUFvQkEsRUFBb0JtQyxFQUFJLEksK0JDaEZyRGpDLEVBQVFzQixZQUFhLEVBQ3JCdEIsRUFBUWtDLE9BQVNBLEVBQ2pCbEMsRUFBUW1DLFFBK0RSLFNBQWlCQyxFQUFPakIsR0FDdEIsSUFBSyxJQUFJakIsRUFBSSxFQUFHbUMsRUFBTUQsRUFBTUUsT0FBUXBDLEVBQUltQyxFQUFLbkMsSUFDM0MsR0FBSWtDLEVBQU1sQyxLQUFPaUIsRUFDZixPQUFPakIsRUFHWCxPQUFRLEdBcEVWRixFQUFRdUMsaUJBdUVSLFNBQTBCQyxHQUN4QixHQUFzQixpQkFBWEEsRUFBcUIsQ0FFOUIsR0FBSUEsR0FBVUEsRUFBT0MsT0FDbkIsT0FBT0QsRUFBT0MsU0FDVCxHQUFjLE1BQVZELEVBQ1QsTUFBTyxHQUNGLElBQUtBLEVBQ1YsT0FBT0EsRUFBUyxHQU1sQkEsRUFBUyxHQUFLQSxFQUdoQixJQUFLRSxFQUFTQyxLQUFLSCxHQUNqQixPQUFPQSxFQUVULE9BQU9BLEVBQU9JLFFBQVFDLEVBQVVDLElBMUZsQzlDLEVBQVErQyxRQTZGUixTQUFpQjVCLEdBQ2YsT0FBS0EsR0FBbUIsSUFBVkEsTUFFSDZCLEVBQVE3QixJQUEyQixJQUFqQkEsRUFBTW1CLFNBL0ZyQ3RDLEVBQVFpRCxZQXNHUixTQUFxQnJCLEdBQ25CLElBQUlzQixFQUFRaEIsRUFBTyxHQUFJTixHQUV2QixPQURBc0IsRUFBTUMsUUFBVXZCLEVBQ1RzQixHQXhHVGxELEVBQVFvRCxZQTJHUixTQUFxQkMsRUFBUUMsR0FFM0IsT0FEQUQsRUFBT0UsS0FBT0QsRUFDUEQsR0E1R1RyRCxFQUFRd0Qsa0JBK0dSLFNBQTJCQyxFQUFhQyxHQUN0QyxPQUFRRCxFQUFjQSxFQUFjLElBQU0sSUFBTUMsR0EvR2xELElBQUlDLEVBQVMsQ0FDWCxJQUFLLFFBQ0wsSUFBSyxPQUNMLElBQUssT0FDTCxJQUFLLFNBQ0wsSUFBSyxTQUNMLElBQUssU0FDTCxJQUFLLFVBR0hkLEVBQVcsYUFDWEgsRUFBVyxZQUVmLFNBQVNJLEVBQVdjLEdBQ2xCLE9BQU9ELEVBQU9DLEdBR2hCLFNBQVMxQixFQUFPMkIsR0FDZCxJQUFLLElBQUkzRCxFQUFJLEVBQUdBLEVBQUk0RCxVQUFVeEIsT0FBUXBDLElBQ3BDLElBQUssSUFBSXVCLEtBQU9xQyxVQUFVNUQsR0FDcEJVLE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3lELFVBQVU1RCxHQUFJdUIsS0FDckRvQyxFQUFJcEMsR0FBT3FDLFVBQVU1RCxHQUFHdUIsSUFLOUIsT0FBT29DLEVBR1QsSUFBSUUsRUFBV25ELE9BQU9rQixVQUFVaUMsU0FFaEMvRCxFQUFRK0QsU0FBV0EsRUFJbkIsSUFBSUMsRUFBYSxTQUFvQjdDLEdBQ25DLE1BQXdCLG1CQUFWQSxHQUlaNkMsRUFBVyxPQUNiaEUsRUFBUWdFLFdBQWFBLEVBQWEsU0FBVTdDLEdBQzFDLE1BQXdCLG1CQUFWQSxHQUFpRCxzQkFBekI0QyxFQUFTMUQsS0FBS2MsS0FHeERuQixFQUFRZ0UsV0FBYUEsRUFLckIsSUFBSWhCLEVBQVVpQixNQUFNakIsU0FBVyxTQUFVN0IsR0FDdkMsU0FBT0EsR0FBMEIsaUJBQVZBLElBQThDLG1CQUF6QjRDLEVBQVMxRCxLQUFLYyxJQUc1RG5CLEVBQVFnRCxRQUFVQSxHLDZCQzlEbEJoRCxFQUFRc0IsWUFBYSxFQUNyQixJQUFJNEMsRUFBYSxDQUFDLGNBQWUsV0FBWSxhQUFjLGdCQUFpQixVQUFXLE9BQVEsU0FBVSxTQUV6RyxTQUFTQyxFQUFVQyxFQUFTQyxHQUMxQixJQUFJQyxFQUFNRCxHQUFRQSxFQUFLQyxJQUNuQkMsT0FBT0MsRUFDUEMsT0FBZ0JELEVBQ2hCRSxPQUFTRixFQUNURyxPQUFZSCxFQUVaRixJQUNGQyxFQUFPRCxFQUFJTSxNQUFNTCxLQUNqQkUsRUFBZ0JILEVBQUlPLElBQUlOLEtBQ3hCRyxFQUFTSixFQUFJTSxNQUFNRixPQUNuQkMsRUFBWUwsRUFBSU8sSUFBSUgsT0FFcEJOLEdBQVcsTUFBUUcsRUFBTyxJQUFNRyxHQU1sQyxJQUhBLElBQUlJLEVBQU1DLE1BQU1qRCxVQUFVa0QsWUFBWTNFLEtBQUs0RSxLQUFNYixHQUd4Q2MsRUFBTSxFQUFHQSxFQUFNaEIsRUFBVzVCLE9BQVE0QyxJQUN6Q0QsS0FBS2YsRUFBV2dCLElBQVFKLEVBQUlaLEVBQVdnQixJQUlyQ0gsTUFBTUksbUJBQ1JKLE1BQU1JLGtCQUFrQkYsS0FBTWQsR0FHaEMsSUFDTUcsSUFDRlcsS0FBS0csV0FBYWIsRUFDbEJVLEtBQUtSLGNBQWdCQSxFQUlqQjdELE9BQU9DLGdCQUNURCxPQUFPQyxlQUFlb0UsS0FBTSxTQUFVLENBQ3BDOUQsTUFBT3VELEVBQ1A1RCxZQUFZLElBRWRGLE9BQU9DLGVBQWVvRSxLQUFNLFlBQWEsQ0FDdkM5RCxNQUFPd0QsRUFDUDdELFlBQVksTUFHZG1FLEtBQUtQLE9BQVNBLEVBQ2RPLEtBQUtOLFVBQVlBLElBR3JCLE1BQU9VLEtBS1hsQixFQUFVckMsVUFBWSxJQUFJaUQsTUFFMUIvRSxFQUFpQixRQUFJbUUsRUFDckJsRSxFQUFPRCxRQUFVQSxFQUFpQixTLGNDOURsQ0MsRUFBT0QsUUFBVXNGLGMsNkJDS2pCLFNBQVNDLEVBQXVCMUIsR0FBTyxPQUFPQSxHQUFPQSxFQUFJdkMsV0FBYXVDLEVBQU0sQ0FBRSxRQUFXQSxHQUh6RjdELEVBQVFzQixZQUFhLEVBS3JCLElBRUlrRSxFQUFzQkQsRUFGRCxFQUFRLEtBUTdCRSxFQUEwQkYsRUFGRCxFQUFRLEtBSWpDRyxFQUEwQixFQUFRLElBRWxDQyxFQUE4QixFQUFRLElBSXRDQyxFQUF5Q0wsRUFGRCxFQUFRLEtBTWhETSxFQUE4Qk4sRUFGRCxFQUFRLEtBTXJDTyxFQUF5QlAsRUFGRCxFQUFRLElBSWhDUSxFQUFVUCxFQUE2QixRQUFFaEUsT0FDN0MsU0FBU0EsSUFDUCxJQUFJd0UsRUFBS0QsSUFnQlQsT0FkQUMsRUFBR0MsUUFBVSxTQUFVQyxFQUFPQyxHQUM1QixPQUFPUixFQUE0Qk0sUUFBUUMsRUFBT0MsRUFBU0gsSUFFN0RBLEVBQUdJLFdBQWEsU0FBVUYsRUFBT0MsR0FDL0IsT0FBT1IsRUFBNEJTLFdBQVdGLEVBQU9DLEVBQVNILElBR2hFQSxFQUFHSyxJQUFNWixFQUFpQyxRQUMxQ08sRUFBR00sU0FBV1gsRUFBNEJXLFNBQzFDTixFQUFHTyxtQkFBcUJYLEVBQWdELFFBQ3hFSSxFQUFHUSxPQUFTZCxFQUF3QmUsT0FDcENULEVBQUdVLE1BQVFoQixFQUF3QmdCLE1BQ25DVixFQUFHVyx1QkFBeUJqQixFQUF3QmlCLHVCQUU3Q1gsRUFHVCxJQUFJWSxFQUFPcEYsSUFDWG9GLEVBQUtwRixPQUFTQSxFQUVkc0UsRUFBZ0MsUUFBRWMsR0FFbENBLEVBQUtDLFFBQVVoQixFQUFxQyxRQUVwRGUsRUFBYyxRQUFJQSxFQUVsQjVHLEVBQWlCLFFBQUk0RyxFQUNyQjNHLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDMURsQyxTQUFTdUYsRUFBdUIxQixHQUFPLE9BQU9BLEdBQU9BLEVBQUl2QyxXQUFhdUMsRUFBTSxDQUFFLFFBQVdBLEdBSnpGN0QsRUFBUXNCLFlBQWEsRUFDckJ0QixFQUFROEcsc0JBQXdCQSxFQUtoQyxJQUFJQyxFQUFTLEVBQVEsR0FJakJDLEVBQWN6QixFQUZELEVBQVEsSUFJckIwQixFQUFXLEVBQVEsR0FFbkJDLEVBQWMsRUFBUSxJQUl0QkMsRUFBVzVCLEVBRkQsRUFBUSxJQUlsQjZCLEVBQXVCLEVBQVEsR0FHbkNwSCxFQUFRcUgsUUFETSxRQUdkckgsRUFBUXNILGtCQURnQixFQUl4QnRILEVBQVF1SCxrQ0FGZ0MsRUFjeEN2SCxFQUFRd0gsaUJBWGUsQ0FDckJDLEVBQUcsY0FDSEMsRUFBRyxnQkFDSEMsRUFBRyxnQkFDSEMsRUFBRyxXQUNIQyxFQUFHLG1CQUNIQyxFQUFHLGtCQUNIQyxFQUFHLGtCQUNIQyxFQUFHLFlBTUwsU0FBU2xCLEVBQXNCbUIsRUFBU0MsRUFBVUMsR0FDaERsRCxLQUFLZ0QsUUFBVUEsR0FBVyxHQUMxQmhELEtBQUtpRCxTQUFXQSxHQUFZLEdBQzVCakQsS0FBS2tELFdBQWFBLEdBQWMsR0FFaENsQixFQUFTbUIsdUJBQXVCbkQsTUFDaENpQyxFQUFZbUIsMEJBQTBCcEQsTUFHeEM2QixFQUFzQmhGLFVBQVksQ0FDaENrRCxZQUFhOEIsRUFFYndCLE9BQVFuQixFQUFrQixRQUMxQm9CLElBQUtwQixFQUFrQixRQUFFb0IsSUFFekJDLGVBQWdCLFNBQXdCL0gsRUFBTWdJLEdBQzVDLEdBbEJhLG9CQWtCVDFCLEVBQU9oRCxTQUFTMUQsS0FBS0ksR0FBc0IsQ0FDN0MsR0FBSWdJLEVBQ0YsTUFBTSxJQUFJekIsRUFBcUIsUUFBRSwyQ0FFbkNELEVBQU83RSxPQUFPK0MsS0FBS2dELFFBQVN4SCxRQUU1QndFLEtBQUtnRCxRQUFReEgsR0FBUWdJLEdBR3pCQyxpQkFBa0IsU0FBMEJqSSxVQUNuQ3dFLEtBQUtnRCxRQUFReEgsSUFHdEJrSSxnQkFBaUIsU0FBeUJsSSxFQUFNbUksR0FDOUMsR0FoQ2Esb0JBZ0NUN0IsRUFBT2hELFNBQVMxRCxLQUFLSSxHQUN2QnNHLEVBQU83RSxPQUFPK0MsS0FBS2lELFNBQVV6SCxPQUN4QixDQUNMLFFBQXVCLElBQVptSSxFQUNULE1BQU0sSUFBSTVCLEVBQXFCLFFBQUUsNENBQThDdkcsRUFBTyxrQkFFeEZ3RSxLQUFLaUQsU0FBU3pILEdBQVFtSSxJQUcxQkMsa0JBQW1CLFNBQTJCcEksVUFDckN3RSxLQUFLaUQsU0FBU3pILElBR3ZCcUksa0JBQW1CLFNBQTJCckksRUFBTWdJLEdBQ2xELEdBOUNhLG9CQThDVDFCLEVBQU9oRCxTQUFTMUQsS0FBS0ksR0FBc0IsQ0FDN0MsR0FBSWdJLEVBQ0YsTUFBTSxJQUFJekIsRUFBcUIsUUFBRSw4Q0FFbkNELEVBQU83RSxPQUFPK0MsS0FBS2tELFdBQVkxSCxRQUUvQndFLEtBQUtrRCxXQUFXMUgsR0FBUWdJLEdBRzVCTSxvQkFBcUIsU0FBNkJ0SSxVQUN6Q3dFLEtBQUtrRCxXQUFXMUgsSUFNekJ1SSw0QkFBNkIsV0FDM0I1QixFQUFxQjZCLDBCQUl6QixJQUFJVixFQUFNcEIsRUFBa0IsUUFBRW9CLElBRTlCdkksRUFBUXVJLElBQU1BLEVBQ2R2SSxFQUFRaUQsWUFBYzhELEVBQU85RCxZQUM3QmpELEVBQVFzSSxPQUFTbkIsRUFBa0IsUyw2QkMzR25DLFNBQVM1QixFQUF1QjFCLEdBQU8sT0FBT0EsR0FBT0EsRUFBSXZDLFdBQWF1QyxFQUFNLENBQUUsUUFBV0EsR0FMekY3RCxFQUFRc0IsWUFBYSxFQUNyQnRCLEVBQVFvSSx1QkFrQ1IsU0FBZ0NjLEdBQzlCQyxFQUFxQyxRQUFFRCxHQUN2Q0UsRUFBdUIsUUFBRUYsR0FDekJHLEVBQWdDLFFBQUVILEdBQ2xDSSxFQUFxQixRQUFFSixHQUN2QkssRUFBc0IsUUFBRUwsR0FDeEJNLEVBQXlCLFFBQUVOLEdBQzNCTyxFQUF1QixRQUFFUCxJQXhDM0JsSixFQUFRMEosa0JBMkNSLFNBQTJCUixFQUFVUyxFQUFZQyxHQUMzQ1YsRUFBU2pCLFFBQVEwQixLQUNuQlQsRUFBU1csTUFBTUYsR0FBY1QsRUFBU2pCLFFBQVEwQixHQUN6Q0MsVUFDSVYsRUFBU2pCLFFBQVEwQixLQTFDOUIsSUFFSVIsRUFBOEI1RCxFQUZELEVBQVEsS0FNckM2RCxFQUFnQjdELEVBRkQsRUFBUSxLQU12QjhELEVBQXlCOUQsRUFGRCxFQUFRLEtBTWhDK0QsRUFBYy9ELEVBRkQsRUFBUSxLQU1yQmdFLEVBQWVoRSxFQUZELEVBQVEsS0FNdEJpRSxFQUFrQmpFLEVBRkQsRUFBUSxLQU16QmtFLEVBQWdCbEUsRUFGRCxFQUFRLE0sY0NqQzNCLElBQUl1RSxFQUdKQSxFQUFJLFdBQ0gsT0FBTzdFLEtBREosR0FJSixJQUVDNkUsRUFBSUEsR0FBSyxJQUFJQyxTQUFTLGNBQWIsR0FDUixNQUFPQyxHQUVjLGlCQUFYQyxTQUFxQkgsRUFBSUcsUUFPckNoSyxFQUFPRCxRQUFVOEosRyw2QkNqQmpCOUosRUFBUXNCLFlBQWEsRUFFckIsSUFBSXlGLEVBQVMsRUFBUSxHQUVqQnVCLEVBQVMsQ0FDWDRCLFVBQVcsQ0FBQyxRQUFTLE9BQVEsT0FBUSxTQUNyQ0MsTUFBTyxPQUdQQyxZQUFhLFNBQXFCRCxHQUNoQyxHQUFxQixpQkFBVkEsRUFBb0IsQ0FDN0IsSUFBSUUsRUFBV3RELEVBQU81RSxRQUFRbUcsRUFBTzRCLFVBQVdDLEVBQU1HLGVBRXBESCxFQURFRSxHQUFZLEVBQ05BLEVBRUFFLFNBQVNKLEVBQU8sSUFJNUIsT0FBT0EsR0FJVDVCLElBQUssU0FBYTRCLEdBR2hCLEdBRkFBLEVBQVE3QixFQUFPOEIsWUFBWUQsR0FFSixvQkFBWkssU0FBMkJsQyxFQUFPOEIsWUFBWTlCLEVBQU82QixRQUFVQSxFQUFPLENBQy9FLElBQUlNLEVBQVNuQyxFQUFPNEIsVUFBVUMsR0FFekJLLFFBQVFDLEtBQ1hBLEVBQVMsT0FHWCxJQUFLLElBQUlDLEVBQU81RyxVQUFVeEIsT0FBUThCLEVBQVVILE1BQU15RyxFQUFPLEVBQUlBLEVBQU8sRUFBSSxHQUFJQyxFQUFPLEVBQUdBLEVBQU9ELEVBQU1DLElBQ2pHdkcsRUFBUXVHLEVBQU8sR0FBSzdHLFVBQVU2RyxHQUdoQ0gsUUFBUUMsR0FBUUcsTUFBTUosUUFBU3BHLE1BS3JDcEUsRUFBaUIsUUFBSXNJLEVBQ3JCckksRUFBT0QsUUFBVUEsRUFBaUIsUyw2QkMzQ2xDQSxFQUFRc0IsWUFBYSxFQUNyQnRCLEVBQVE2Syx5QkFlUixTQUFrQ0MsR0FDaEMsSUFBSUMsRUFBeUJuSyxPQUFPWSxPQUFPLE1BQzNDdUosRUFBb0MsYUFBSSxFQUN4Q0EsRUFBeUMsa0JBQUksRUFDN0NBLEVBQXlDLGtCQUFJLEVBQzdDQSxFQUF5QyxrQkFBSSxFQUU3QyxJQUFJQyxFQUEyQnBLLE9BQU9ZLE9BQU8sTUFJN0MsT0FGQXdKLEVBQW9DLFdBQUksRUFFakMsQ0FDTEMsV0FBWSxDQUNWQyxVQUFXQyxFQUF1QkMsc0JBQXNCSixFQUEwQkYsRUFBZU8sd0JBQ2pHQyxhQUFjUixFQUFlUywrQkFFL0JDLFFBQVMsQ0FDUE4sVUFBV0MsRUFBdUJDLHNCQUFzQkwsRUFBd0JELEVBQWVXLHFCQUMvRkgsYUFBY1IsRUFBZVksOEJBaENuQzFMLEVBQVEyTCxnQkFxQ1IsU0FBeUJDLEVBQVFDLEVBQW9CQyxHQUNuRCxPQUNTQyxFQURhLG1CQUFYSCxFQUNhQyxFQUFtQkwsUUFFbkJLLEVBQW1CWixXQUZTYSxJQXRDdEQ5TCxFQUFRaUosc0JBOERSLFdBQ0VySSxPQUFPb0wsS0FBS0MsR0FBa0JDLFNBQVEsU0FBVUosVUFDdkNHLEVBQWlCSCxPQTNENUIsSUFBSVgsRUFBeUIsRUFBUSxJQUlqQzdDLEVBTkosU0FBaUN6RSxHQUFPLEdBQUlBLEdBQU9BLEVBQUl2QyxXQUFjLE9BQU91QyxFQUFjLElBQUlzSSxFQUFTLEdBQUksR0FBVyxNQUFQdEksRUFBZSxJQUFLLElBQUlwQyxLQUFPb0MsRUFBV2pELE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3dELEVBQUtwQyxLQUFNMEssRUFBTzFLLEdBQU9vQyxFQUFJcEMsSUFBbUMsT0FBekIwSyxFQUFnQixRQUFJdEksRUFBWXNJLEVBTXhQQyxDQUZDLEVBQVEsSUFJbEJILEVBQW1CckwsT0FBT1ksT0FBTyxNQWlDckMsU0FBU3VLLEVBQWVNLEVBQTJCUCxHQUNqRCxZQUEwRHRILElBQXRENkgsRUFBMEJuQixVQUFVWSxJQUN1QixJQUF0RE8sRUFBMEJuQixVQUFVWSxRQUVFdEgsSUFBM0M2SCxFQUEwQmYsYUFDckJlLEVBQTBCZixjQU1yQyxTQUF3Q1EsSUFDQyxJQUFuQ0csRUFBaUJILEtBQ25CRyxFQUFpQkgsSUFBZ0IsRUFDakN4RCxFQUFPQyxJQUFJLFFBQVMsK0RBQWlFdUQsRUFBZSw4T0FQdEdRLENBQStCUixJQUN4QixLLDhCQ3pEVCxZQUVBOUwsRUFBUXNCLFlBQWEsRUFFckJ0QixFQUFpQixRQUFJLFNBQVV1TSxHQUU3QixJQUFJQyxPQUF5QixJQUFYQyxFQUF5QkEsRUFBU3hDLE9BQ2hEeUMsRUFBY0YsRUFBS0QsV0FFdkJBLEVBQVdJLFdBQWEsV0FJdEIsT0FISUgsRUFBS0QsYUFBZUEsSUFDdEJDLEVBQUtELFdBQWFHLEdBRWJILElBSVh0TSxFQUFPRCxRQUFVQSxFQUFpQixVLDhDQ2ZsQ0EsRUFBUXNCLFlBQWEsRUFDckIsSUFBSStFLEVBQU0sQ0FFUjRCLFFBQVMsQ0FJUDJFLGlCQUFrQixTQUEwQnZJLEdBQzFDLE1BQXFCLGtCQUFkQSxFQUFLd0ksT0FBMkMsc0JBQWR4SSxFQUFLd0ksTUFBOEMsbUJBQWR4SSxFQUFLd0ksVUFBaUN4SSxFQUFLaEIsUUFBVWdCLEVBQUtoQixPQUFPZixRQUFVK0IsRUFBS3lJLE9BR2hLQyxTQUFVLFNBQWtCeEosR0FDMUIsTUFBUSxhQUFhWixLQUFLWSxFQUFLeUosV0FNakNDLFNBQVUsU0FBa0IxSixHQUMxQixPQUE2QixJQUF0QkEsRUFBSzJKLE1BQU01SyxTQUFpQitELEVBQUk0QixRQUFROEUsU0FBU3hKLEtBQVVBLEVBQUs0SixTQU83RW5OLEVBQWlCLFFBQUlxRyxFQUNyQnBHLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDM0JsQ0EsRUFBUXNCLFlBQWEsRUFLckIsSUFGZ0N1QyxFQUU1QnVKLEVBQWEsRUFBUSxHQUVyQnBHLEdBSjRCbkQsRUFJU3VKLElBSll2SixFQUFJdkMsV0FBYXVDLEVBQU0sQ0FBRSxRQUFXQSxHQU16RixTQUFTZ0QsSUFDUDVCLEtBQUtvSSxRQUFVLEdBNEdqQixTQUFTQyxFQUFtQkMsR0FDMUJ0SSxLQUFLdUksZUFBZUQsRUFBVSxRQUM5QnRJLEtBQUt3SSxZQUFZRixFQUFTbEssUUFDMUI0QixLQUFLeUksVUFBVUgsRUFBVSxRQUUzQixTQUFTSSxFQUFXQyxHQUNsQk4sRUFBbUJqTixLQUFLNEUsS0FBTTJJLEdBRTlCM0ksS0FBS3lJLFVBQVVFLEVBQU8sV0FDdEIzSSxLQUFLeUksVUFBVUUsRUFBTyxXQUV4QixTQUFTQyxFQUFhakYsR0FDcEIzRCxLQUFLdUksZUFBZTVFLEVBQVMsUUFDN0IzRCxLQUFLd0ksWUFBWTdFLEVBQVF2RixRQUN6QjRCLEtBQUt5SSxVQUFVOUUsRUFBUyxRQXZIMUIvQixFQUFRL0UsVUFBWSxDQUNsQmtELFlBQWE2QixFQUNiaUgsVUFBVSxFQUdWSixVQUFXLFNBQW1CckosRUFBTTVELEdBQ2xDLElBQUlVLEVBQVE4RCxLQUFLOEksT0FBTzFKLEVBQUs1RCxJQUM3QixHQUFJd0UsS0FBSzZJLFNBQVUsQ0FHakIsR0FBSTNNLElBQVUwRixFQUFRL0UsVUFBVVgsRUFBTTBMLE1BQ3BDLE1BQU0sSUFBSTdGLEVBQXFCLFFBQUUseUJBQTJCN0YsRUFBTTBMLEtBQU8sMEJBQTRCcE0sRUFBTyxPQUFTNEQsRUFBS3dJLE1BRTVIeEksRUFBSzVELEdBQVFVLElBTWpCcU0sZUFBZ0IsU0FBd0JuSixFQUFNNUQsR0FHNUMsR0FGQXdFLEtBQUt5SSxVQUFVckosRUFBTTVELElBRWhCNEQsRUFBSzVELEdBQ1IsTUFBTSxJQUFJdUcsRUFBcUIsUUFBRTNDLEVBQUt3SSxLQUFPLGFBQWVwTSxJQU1oRWdOLFlBQWEsU0FBcUJyTCxHQUNoQyxJQUFLLElBQUlsQyxFQUFJLEVBQUdDLEVBQUlpQyxFQUFNRSxPQUFRcEMsRUFBSUMsRUFBR0QsSUFDdkMrRSxLQUFLeUksVUFBVXRMLEVBQU9sQyxHQUVqQmtDLEVBQU1sQyxLQUNUa0MsRUFBTTRMLE9BQU85TixFQUFHLEdBQ2hCQSxJQUNBQyxNQUtONE4sT0FBUSxTQUFnQm5NLEdBQ3RCLEdBQUtBLEVBQUwsQ0FLQSxJQUFLcUQsS0FBS3JELEVBQU9pTCxNQUNmLE1BQU0sSUFBSTdGLEVBQXFCLFFBQUUsaUJBQW1CcEYsRUFBT2lMLEtBQU1qTCxHQUcvRHFELEtBQUtnSixTQUNQaEosS0FBS29JLFFBQVFhLFFBQVFqSixLQUFLZ0osU0FFNUJoSixLQUFLZ0osUUFBVXJNLEVBRWYsSUFBSXVNLEVBQU1sSixLQUFLckQsRUFBT2lMLE1BQU1qTCxHQUk1QixPQUZBcUQsS0FBS2dKLFFBQVVoSixLQUFLb0ksUUFBUWUsU0FFdkJuSixLQUFLNkksVUFBWUssRUFDYkEsR0FDVSxJQUFSQSxFQUNGdk0sT0FERixJQUtUeU0sUUFBUyxTQUFpQkMsR0FDeEJySixLQUFLd0ksWUFBWWEsRUFBUUMsT0FHM0JDLGtCQUFtQmxCLEVBQ25CbUIsVUFBV25CLEVBRVhvQixlQUFnQmYsRUFDaEJnQixlQUFnQmhCLEVBRWhCaUIsaUJBQWtCZixFQUNsQmdCLHNCQUF1QixTQUErQmpHLEdBQ3BEaUYsRUFBYXhOLEtBQUs0RSxLQUFNMkQsR0FFeEIzRCxLQUFLeUksVUFBVTlFLEVBQVMsWUFHMUJrRyxpQkFBa0IsYUFDbEJDLGlCQUFrQixhQUVsQkMsY0FBZTFCLEVBRWYyQixlQUFnQixhQUVoQkMsY0FBZSxhQUNmQyxjQUFlLGFBQ2ZDLGVBQWdCLGFBQ2hCQyxpQkFBa0IsYUFDbEJDLFlBQWEsYUFFYkMsS0FBTSxTQUFjekMsR0FDbEI3SCxLQUFLd0ksWUFBWVgsRUFBSzBDLFFBRXhCQyxTQUFVLFNBQWtCQyxHQUMxQnpLLEtBQUt1SSxlQUFla0MsRUFBTSxXQXFCOUIxUCxFQUFpQixRQUFJNkcsRUFDckI1RyxFQUFPRCxRQUFVQSxFQUFpQixTLDZCQ3JJbEMsU0FBU3VGLEVBQXVCMUIsR0FBTyxPQUFPQSxHQUFPQSxFQUFJdkMsV0FBYXVDLEVBQU0sQ0FBRSxRQUFXQSxHQUl6RixTQUFTdUksRUFBd0J2SSxHQUFPLEdBQUlBLEdBQU9BLEVBQUl2QyxXQUFjLE9BQU91QyxFQUFjLElBQUlzSSxFQUFTLEdBQUksR0FBVyxNQUFQdEksRUFBZSxJQUFLLElBQUlwQyxLQUFPb0MsRUFBV2pELE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3dELEVBQUtwQyxLQUFNMEssRUFBTzFLLEdBQU9vQyxFQUFJcEMsSUFBbUMsT0FBekIwSyxFQUFnQixRQUFJdEksRUFBWXNJLEVBUHJRbk0sRUFBUXNCLFlBQWEsRUFTckIsSUFFSXFPLEVBQU92RCxFQUZXLEVBQVEsSUFTMUJ3RCxFQUF5QnJLLEVBRkQsRUFBUSxLQU1oQ3NLLEVBQXdCdEssRUFGRCxFQUFRLElBTS9CdUssRUFBUTFELEVBRlcsRUFBUSxJQU0zQjJELEVBQVUzRCxFQUZXLEVBQVEsS0FNN0J0RyxFQUF5QlAsRUFGRCxFQUFRLElBS3BDLFNBQVMvRCxJQUNQLElBQUl3RSxFQUFLLElBQUkySixFQUFLN0ksc0JBYWxCLE9BWEFnSixFQUFNNU4sT0FBTzhELEVBQUkySixHQUNqQjNKLEVBQUdnSyxXQUFhSixFQUFnQyxRQUNoRDVKLEVBQUc3QixVQUFZMEwsRUFBK0IsUUFDOUM3SixFQUFHOEosTUFBUUEsRUFDWDlKLEVBQUd6RCxpQkFBbUJ1TixFQUFNdk4saUJBRTVCeUQsRUFBR2lLLEdBQUtGLEVBQ1IvSixFQUFHa0ssU0FBVyxTQUFVQyxHQUN0QixPQUFPSixFQUFRRyxTQUFTQyxFQUFNbkssSUFHekJBLEVBR1QsSUFBSVksRUFBT3BGLElBQ1hvRixFQUFLcEYsT0FBU0EsRUFFZHNFLEVBQWdDLFFBQUVjLEdBRWxDQSxFQUFjLFFBQUlBLEVBRWxCNUcsRUFBaUIsUUFBSTRHLEVBQ3JCM0csRUFBT0QsUUFBVUEsRUFBaUIsUyw2QkM5RGxDQSxFQUFRc0IsWUFBYSxFQUVyQixJQUFJeUYsRUFBUyxFQUFRLEdBRXJCL0csRUFBaUIsUUFBSSxTQUFVa0osR0FDN0JBLEVBQVNWLGVBQWUsc0JBQXNCLFNBQVU0SCxFQUFTakssR0FDL0QsSUFBSWtLLEVBQVVsSyxFQUFRa0ssUUFDbEI1SCxFQUFLdEMsRUFBUXNDLEdBRWpCLElBQWdCLElBQVoySCxFQUNGLE9BQU8zSCxFQUFHeEQsTUFDTCxJQUFnQixJQUFabUwsR0FBZ0MsTUFBWEEsRUFDOUIsT0FBT0MsRUFBUXBMLE1BQ1YsR0FBSThCLEVBQU8vRCxRQUFRb04sR0FDeEIsT0FBSUEsRUFBUTlOLE9BQVMsR0FDZjZELEVBQVE3QyxNQUNWNkMsRUFBUTdDLElBQU0sQ0FBQzZDLEVBQVExRixPQUdsQnlJLEVBQVNqQixRQUFRcUksS0FBS0YsRUFBU2pLLElBRS9Ca0ssRUFBUXBMLE1BR2pCLEdBQUlrQixFQUFRb0ssTUFBUXBLLEVBQVE3QyxJQUFLLENBQy9CLElBQUlpTixFQUFPeEosRUFBTzlELFlBQVlrRCxFQUFRb0ssTUFDdENBLEVBQUs5TSxZQUFjc0QsRUFBT3ZELGtCQUFrQjJDLEVBQVFvSyxLQUFLOU0sWUFBYTBDLEVBQVExRixNQUM5RTBGLEVBQVUsQ0FBRW9LLEtBQU1BLEdBR3BCLE9BQU85SCxFQUFHMkgsRUFBU2pLLE9BS3pCbEcsRUFBT0QsUUFBVUEsRUFBaUIsUyw4QkNyQ2xDLFlBRUFBLEVBQVFzQixZQUFhLEVBS3JCLElBRmdDdUMsRUFFNUJrRCxFQUFTLEVBQVEsR0FFakJxRyxFQUFhLEVBQVEsR0FFckJwRyxHQU40Qm5ELEVBTVN1SixJQU5ZdkosRUFBSXZDLFdBQWF1QyxFQUFNLENBQUUsUUFBV0EsR0FRekY3RCxFQUFpQixRQUFJLFNBQVVrSixHQUM3QkEsRUFBU1YsZUFBZSxRQUFRLFNBQVU0SCxFQUFTakssR0FDakQsSUFBS0EsRUFDSCxNQUFNLElBQUlhLEVBQXFCLFFBQUUsK0JBR25DLElBd0RVd0osRUF4RE4vSCxFQUFLdEMsRUFBUXNDLEdBQ2I0SCxFQUFVbEssRUFBUWtLLFFBQ2xCblEsRUFBSSxFQUNKaU8sRUFBTSxHQUNOb0MsT0FBTy9MLEVBQ1BmLE9BQWNlLEVBY2xCLFNBQVNpTSxFQUFjQyxFQUFPQyxFQUFPQyxHQUMvQkwsSUFDRkEsRUFBSzlPLElBQU1pUCxFQUNYSCxFQUFLSSxNQUFRQSxFQUNiSixFQUFLTSxNQUFrQixJQUFWRixFQUNiSixFQUFLSyxPQUFTQSxFQUVWbk4sSUFDRjhNLEVBQUs5TSxZQUFjQSxFQUFjaU4sSUFJckN2QyxHQUFZMUYsRUFBRzJILEVBQVFNLEdBQVEsQ0FDN0JILEtBQU1BLEVBQ05uTixZQUFhMkQsRUFBTzNELFlBQVksQ0FBQ2dOLEVBQVFNLEdBQVFBLEdBQVEsQ0FBQ2pOLEVBQWNpTixFQUFPLFNBSW5GLEdBOUJJdkssRUFBUW9LLE1BQVFwSyxFQUFRN0MsTUFDMUJHLEVBQWNzRCxFQUFPdkQsa0JBQWtCMkMsRUFBUW9LLEtBQUs5TSxZQUFhMEMsRUFBUTdDLElBQUksSUFBTSxLQUdqRnlELEVBQU8vQyxXQUFXb00sS0FDcEJBLEVBQVVBLEVBQVEvUCxLQUFLNEUsT0FHckJrQixFQUFRb0ssT0FDVkEsRUFBT3hKLEVBQU85RCxZQUFZa0QsRUFBUW9LLE9BcUJoQ0gsR0FBOEIsaUJBQVpBLEVBQ3BCLEdBQUlySixFQUFPL0QsUUFBUW9OLEdBQ2pCLElBQUssSUFBSVUsRUFBSVYsRUFBUTlOLE9BQVFwQyxFQUFJNFEsRUFBRzVRLElBQzlCQSxLQUFLa1EsR0FDUEssRUFBY3ZRLEVBQUdBLEVBQUdBLElBQU1rUSxFQUFROU4sT0FBUyxRQUcxQyxHQUFJbUssRUFBT3hMLFFBQVVtUCxFQUFRM0QsRUFBT3hMLE9BQU84UCxVQUFXLENBRzNELElBRkEsSUFBSUMsRUFBYSxHQUNiRCxFQUFXWCxFQUFRM0QsRUFBT3hMLE9BQU84UCxZQUM1QkUsRUFBS0YsRUFBU0csUUFBU0QsRUFBR0UsS0FBTUYsRUFBS0YsRUFBU0csT0FDckRGLEVBQVdJLEtBQUtILEVBQUc5UCxPQUdyQixJQUFTMlAsR0FEVFYsRUFBVVksR0FDVzFPLE9BQVFwQyxFQUFJNFEsRUFBRzVRLElBQ2xDdVEsRUFBY3ZRLEVBQUdBLEVBQUdBLElBQU1rUSxFQUFROU4sT0FBUyxRQUl2Q2tPLE9BQVdoTSxFQUVmNUQsT0FBT29MLEtBQUtvRSxHQUFTbEUsU0FBUSxTQUFVekssUUFJcEIrQyxJQUFiZ00sR0FDRkMsRUFBY0QsRUFBVXRRLEVBQUksR0FFOUJzUSxFQUFXL08sRUFDWHZCLFlBRWVzRSxJQUFiZ00sR0FDRkMsRUFBY0QsRUFBVXRRLEVBQUksR0FBRyxHQVV2QyxPQUpVLElBQU5BLElBQ0ZpTyxFQUFNa0MsRUFBUXBMLE9BR1RrSixNQUlYbE8sRUFBT0QsUUFBVUEsRUFBaUIsVSw4Q0NwR2xDQSxFQUFRc0IsWUFBYSxFQUtyQixJQUZnQ3VDLEVBRTVCdUosRUFBYSxFQUFRLEdBRXJCcEcsR0FKNEJuRCxFQUlTdUosSUFKWXZKLEVBQUl2QyxXQUFhdUMsRUFBTSxDQUFFLFFBQVdBLEdBTXpGN0QsRUFBaUIsUUFBSSxTQUFVa0osR0FDN0JBLEVBQVNWLGVBQWUsaUJBQWlCLFdBQ3ZDLEdBQXlCLElBQXJCMUUsVUFBVXhCLE9BS1osTUFBTSxJQUFJMEUsRUFBcUIsUUFBRSxvQkFBc0JsRCxVQUFVQSxVQUFVeEIsT0FBUyxHQUFHN0IsS0FBTyxTQUtwR1IsRUFBT0QsUUFBVUEsRUFBaUIsUyw2QkNyQmxDQSxFQUFRc0IsWUFBYSxFQUtyQixJQUZnQ3VDLEVBRTVCa0QsRUFBUyxFQUFRLEdBRWpCcUcsRUFBYSxFQUFRLEdBRXJCcEcsR0FONEJuRCxFQU1TdUosSUFOWXZKLEVBQUl2QyxXQUFhdUMsRUFBTSxDQUFFLFFBQVdBLEdBUXpGN0QsRUFBaUIsUUFBSSxTQUFVa0osR0FDN0JBLEVBQVNWLGVBQWUsTUFBTSxTQUFVNkksRUFBYWxMLEdBQ25ELEdBQXdCLEdBQXBCckMsVUFBVXhCLE9BQ1osTUFBTSxJQUFJMEUsRUFBcUIsUUFBRSxxQ0FTbkMsT0FQSUQsRUFBTy9DLFdBQVdxTixLQUNwQkEsRUFBY0EsRUFBWWhSLEtBQUs0RSxRQU01QmtCLEVBQVEyRyxLQUFLd0UsY0FBZ0JELEdBQWV0SyxFQUFPaEUsUUFBUXNPLEdBQ3ZEbEwsRUFBUWtLLFFBQVFwTCxNQUVoQmtCLEVBQVFzQyxHQUFHeEQsU0FJdEJpRSxFQUFTVixlQUFlLFVBQVUsU0FBVTZJLEVBQWFsTCxHQUN2RCxHQUF3QixHQUFwQnJDLFVBQVV4QixPQUNaLE1BQU0sSUFBSTBFLEVBQXFCLFFBQUUseUNBRW5DLE9BQU9rQyxFQUFTakIsUUFBWSxHQUFFNUgsS0FBSzRFLEtBQU1vTSxFQUFhLENBQ3BENUksR0FBSXRDLEVBQVFrSyxRQUNaQSxRQUFTbEssRUFBUXNDLEdBQ2pCcUUsS0FBTTNHLEVBQVEyRyxXQUtwQjdNLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDMUNsQ0EsRUFBUXNCLFlBQWEsRUFFckJ0QixFQUFpQixRQUFJLFNBQVVrSixHQUM3QkEsRUFBU1YsZUFBZSxPQUFPLFdBRzdCLElBRkEsSUFBSStJLEVBQU8sTUFBQy9NLEdBQ1IyQixFQUFVckMsVUFBVUEsVUFBVXhCLE9BQVMsR0FDbENwQyxFQUFJLEVBQUdBLEVBQUk0RCxVQUFVeEIsT0FBUyxFQUFHcEMsSUFDeENxUixFQUFLSCxLQUFLdE4sVUFBVTVELElBR3RCLElBQUlpSyxFQUFRLEVBQ2MsTUFBdEJoRSxFQUFRMkcsS0FBSzNDLE1BQ2ZBLEVBQVFoRSxFQUFRMkcsS0FBSzNDLE1BQ1poRSxFQUFRb0ssTUFBOEIsTUFBdEJwSyxFQUFRb0ssS0FBS3BHLFFBQ3RDQSxFQUFRaEUsRUFBUW9LLEtBQUtwRyxPQUV2Qm9ILEVBQUssR0FBS3BILEVBRVZqQixFQUFTWCxJQUFJcUMsTUFBTTFCLEVBQVVxSSxPQUlqQ3RSLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDdEJsQ0EsRUFBUXNCLFlBQWEsRUFFckJ0QixFQUFpQixRQUFJLFNBQVVrSixHQUM3QkEsRUFBU1YsZUFBZSxVQUFVLFNBQVUzRSxFQUFLNk0sRUFBT3ZLLEdBQ3RELE9BQUt0QyxFQUlFc0MsRUFBUXFMLGVBQWUzTixFQUFLNk0sR0FGMUI3TSxNQU1iNUQsRUFBT0QsUUFBVUEsRUFBaUIsUyw2QkNabENBLEVBQVFzQixZQUFhLEVBS3JCLElBRmdDdUMsRUFFNUJrRCxFQUFTLEVBQVEsR0FFakJxRyxFQUFhLEVBQVEsR0FFckJwRyxHQU40Qm5ELEVBTVN1SixJQU5ZdkosRUFBSXZDLFdBQWF1QyxFQUFNLENBQUUsUUFBV0EsR0FRekY3RCxFQUFpQixRQUFJLFNBQVVrSixHQUM3QkEsRUFBU1YsZUFBZSxRQUFRLFNBQVU0SCxFQUFTakssR0FDakQsR0FBd0IsR0FBcEJyQyxVQUFVeEIsT0FDWixNQUFNLElBQUkwRSxFQUFxQixRQUFFLHVDQUUvQkQsRUFBTy9DLFdBQVdvTSxLQUNwQkEsRUFBVUEsRUFBUS9QLEtBQUs0RSxPQUd6QixJQUFJd0QsRUFBS3RDLEVBQVFzQyxHQUVqQixHQUFLMUIsRUFBT2hFLFFBQVFxTixHQVlsQixPQUFPakssRUFBUWtLLFFBQVFwTCxNQVh2QixJQUFJc0wsRUFBT3BLLEVBQVFvSyxLQU1uQixPQUxJcEssRUFBUW9LLE1BQVFwSyxFQUFRN0MsT0FDMUJpTixFQUFPeEosRUFBTzlELFlBQVlrRCxFQUFRb0ssT0FDN0I5TSxZQUFjc0QsRUFBT3ZELGtCQUFrQjJDLEVBQVFvSyxLQUFLOU0sWUFBYTBDLEVBQVE3QyxJQUFJLEtBRzdFbUYsRUFBRzJILEVBQVMsQ0FDakJHLEtBQU1BLEVBQ05uTixZQUFhMkQsRUFBTzNELFlBQVksQ0FBQ2dOLEdBQVUsQ0FBQ0csR0FBUUEsRUFBSzlNLG9CQVFqRXhELEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDdkNsQ0EsRUFBUXNCLFlBQWEsRUFDckJ0QixFQUFRcUksMEJBU1IsU0FBbUNhLEdBQ2pDdUksRUFBNEIsUUFBRXZJLElBTGhDLElBRmdDckYsRUFFNUI2TixFQUFvQixFQUFRLElBRTVCRCxHQUo0QjVOLEVBSWdCNk4sSUFKSzdOLEVBQUl2QyxXQUFhdUMsRUFBTSxDQUFFLFFBQVdBLEksNkJDSnpGN0QsRUFBUXNCLFlBQWEsRUFFckIsSUFBSXlGLEVBQVMsRUFBUSxHQUVyQi9HLEVBQWlCLFFBQUksU0FBVWtKLEdBQzdCQSxFQUFTSixrQkFBa0IsVUFBVSxTQUFVTCxFQUFJa0osRUFBT0MsRUFBV3pMLEdBQ25FLElBQUlnSSxFQUFNMUYsRUFlVixPQWRLa0osRUFBTXpKLFdBQ1R5SixFQUFNekosU0FBVyxHQUNqQmlHLEVBQU0sU0FBVWlDLEVBQVNqSyxHQUV2QixJQUFJNkcsRUFBVzRFLEVBQVUxSixTQUN6QjBKLEVBQVUxSixTQUFXbkIsRUFBTzdFLE9BQU8sR0FBSThLLEVBQVUyRSxFQUFNekosVUFDdkQsSUFBSWlHLEVBQU0xRixFQUFHMkgsRUFBU2pLLEdBRXRCLE9BREF5TCxFQUFVMUosU0FBVzhFLEVBQ2RtQixJQUlYd0QsRUFBTXpKLFNBQVMvQixFQUFRb0wsS0FBSyxJQUFNcEwsRUFBUXNDLEdBRW5DMEYsTUFJWGxPLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDekJsQ0EsRUFBUXNCLFlBQWEsRUFDckJ0QixFQUFRb0wsc0JBV1IsV0FDRSxJQUFLLElBQUlWLEVBQU81RyxVQUFVeEIsT0FBUXVQLEVBQVU1TixNQUFNeUcsR0FBT0MsRUFBTyxFQUFHQSxFQUFPRCxFQUFNQyxJQUM5RWtILEVBQVFsSCxHQUFRN0csVUFBVTZHLEdBRzVCLE9BQU81RCxFQUFPN0UsT0FBTzBJLFdBQU1wRyxFQUFXLENBQUM1RCxPQUFPWSxPQUFPLE9BQU9zUSxPQUFPRCxLQWRyRSxJQUFJOUssRUFBUyxFQUFRLEksNkJDRHJCLFNBQVNpSixFQUFXeE4sR0FDbEJ5QyxLQUFLekMsT0FBU0EsRUFGaEJ4QyxFQUFRc0IsWUFBYSxFQUtyQjBPLEVBQVdsTyxVQUFVaUMsU0FBV2lNLEVBQVdsTyxVQUFVVyxPQUFTLFdBQzVELE1BQU8sR0FBS3dDLEtBQUt6QyxRQUduQnhDLEVBQWlCLFFBQUlnUSxFQUNyQi9QLEVBQU9ELFFBQVVBLEVBQWlCLFMsNkJDWGxDQSxFQUFRc0IsWUFBYSxFQUNyQnRCLEVBQVErUixjQThCUixTQUF1QkMsR0FDckIsSUFBSUMsRUFBbUJELEdBQWdCQSxFQUFhLElBQU0sRUFDdERFLEVBQWtCQyxFQUFNN0ssa0JBRTVCLEdBQUkySyxHQUFvQkUsRUFBTTVLLG1DQUFxQzBLLEdBQW9CRSxFQUFNN0ssa0JBQzNGLE9BR0YsR0FBSTJLLEVBQW1CRSxFQUFNNUssa0NBQW1DLENBQzlELElBQUk2SyxFQUFrQkQsRUFBTTNLLGlCQUFpQjBLLEdBQ3pDRyxFQUFtQkYsRUFBTTNLLGlCQUFpQnlLLEdBQzlDLE1BQU0sSUFBSWpMLEVBQXFCLFFBQUUsNklBQW9Kb0wsRUFBa0Isb0RBQXNEQyxFQUFtQixNQUdoUixNQUFNLElBQUlyTCxFQUFxQixRQUFFLHdJQUErSWdMLEVBQWEsR0FBSyxPQTNDdE1oUyxFQUFRa1EsU0ErQ1IsU0FBa0JvQyxFQUFjQyxHQUU5QixJQUFLQSxFQUNILE1BQU0sSUFBSXZMLEVBQXFCLFFBQUUscUNBRW5DLElBQUtzTCxJQUFpQkEsRUFBYUUsS0FDakMsTUFBTSxJQUFJeEwsRUFBcUIsUUFBRSxtQ0FBcUNzTCxHQUd4RUEsRUFBYUUsS0FBS0MsVUFBWUgsRUFBYUksT0FJM0NILEVBQUl0QyxHQUFHOEIsY0FBY08sRUFBYUssVUFHbEMsSUFBSUMsRUFBdUNOLEVBQWFLLFVBQXlDLElBQTdCTCxFQUFhSyxTQUFTLEdBeUMxRixJQUFJZixFQUFZLENBQ2RpQixPQUFRLFNBQWdCaFAsRUFBS3BELEVBQU02RCxHQUNqQyxLQUFLVCxHQUFTcEQsS0FBUW9ELEdBQ3BCLE1BQU0sSUFBSW1ELEVBQXFCLFFBQUUsSUFBTXZHLEVBQU8sb0JBQXNCb0QsRUFBSyxDQUN2RVMsSUFBS0EsSUFHVCxPQUFPc04sRUFBVUosZUFBZTNOLEVBQUtwRCxJQUV2QytRLGVBQWdCLFNBQXdCc0IsRUFBUWhILEdBQzlDLElBQUlGLEVBQVNrSCxFQUFPaEgsR0FDcEIsT0FBYyxNQUFWRixFQUNLQSxFQUVMaEwsT0FBT2tCLFVBQVVDLGVBQWUxQixLQUFLeVMsRUFBUWhILEdBQ3hDRixFQUdMeEUsRUFBcUJ1RSxnQkFBZ0JDLEVBQVFnRyxFQUFVL0YsbUJBQW9CQyxHQUN0RUYsT0FEVCxHQUtGbUgsT0FBUSxTQUFnQkMsRUFBUXZTLEdBRTlCLElBREEsSUFBSTRCLEVBQU0yUSxFQUFPMVEsT0FDUnBDLEVBQUksRUFBR0EsRUFBSW1DLEVBQUtuQyxJQUFLLENBRTVCLEdBQWMsT0FERDhTLEVBQU85UyxJQUFNMFIsRUFBVUosZUFBZXdCLEVBQU85UyxHQUFJTyxJQUU1RCxPQUFPdVMsRUFBTzlTLEdBQUdPLEtBSXZCd1MsT0FBUSxTQUFnQmhGLEVBQVNtQyxHQUMvQixNQUEwQixtQkFBWm5DLEVBQXlCQSxFQUFRNU4sS0FBSytQLEdBQVduQyxHQUdqRTFMLGlCQUFrQnVOLEVBQU12TixpQkFDeEIyUSxjQTVFRixTQUE4QnRLLEVBQVN3SCxFQUFTakssR0FDMUNBLEVBQVEyRyxPQUNWc0QsRUFBVU4sRUFBTTVOLE9BQU8sR0FBSWtPLEVBQVNqSyxFQUFRMkcsTUFDeEMzRyxFQUFRN0MsTUFDVjZDLEVBQVE3QyxJQUFJLElBQUssSUFHckJzRixFQUFVMkosRUFBSXRDLEdBQUdrRCxlQUFlOVMsS0FBSzRFLEtBQU0yRCxFQUFTd0gsRUFBU2pLLEdBRTdELElBQUlpTixFQUFrQnRELEVBQU01TixPQUFPLEdBQUlpRSxFQUFTLENBQzlDMEQsTUFBTzVFLEtBQUs0RSxNQUNaZ0MsbUJBQW9CNUcsS0FBSzRHLHFCQUd2QkQsRUFBUzJHLEVBQUl0QyxHQUFHaUQsY0FBYzdTLEtBQUs0RSxLQUFNMkQsRUFBU3dILEVBQVNnRCxHQU0vRCxHQUpjLE1BQVZ4SCxHQUFrQjJHLEVBQUl0TSxVQUN4QkUsRUFBUStCLFNBQVMvQixFQUFRMUYsTUFBUThSLEVBQUl0TSxRQUFRMkMsRUFBUzBKLEVBQWFlLGdCQUFpQmQsR0FDcEYzRyxFQUFTekYsRUFBUStCLFNBQVMvQixFQUFRMUYsTUFBTTJQLEVBQVNnRCxJQUVyQyxNQUFWeEgsRUFBZ0IsQ0FDbEIsR0FBSXpGLEVBQVFtTixPQUFRLENBRWxCLElBREEsSUFBSUMsRUFBUTNILEVBQU80SCxNQUFNLE1BQ2hCdFQsRUFBSSxFQUFHQyxFQUFJb1QsRUFBTWpSLE9BQVFwQyxFQUFJQyxJQUMvQm9ULEVBQU1yVCxJQUFNQSxFQUFJLElBQU1DLEdBRFlELElBS3ZDcVQsRUFBTXJULEdBQUtpRyxFQUFRbU4sT0FBU0MsRUFBTXJULEdBRXBDMEwsRUFBUzJILEVBQU1FLEtBQUssTUFFdEIsT0FBTzdILEVBRVAsTUFBTSxJQUFJNUUsRUFBcUIsUUFBRSxlQUFpQmIsRUFBUTFGLEtBQU8sNkRBNENuRWdJLEdBQUksU0FBWXZJLEdBQ2QsSUFBSWlPLEVBQU1tRSxFQUFhcFMsR0FFdkIsT0FEQWlPLEVBQUlzRSxVQUFZSCxFQUFhcFMsRUFBSSxNQUMxQmlPLEdBR1R1RixTQUFVLEdBQ1ZwRixRQUFTLFNBQWlCcE8sRUFBR3FRLEVBQU1vRCxFQUFxQnZRLEVBQWE0UCxHQUNuRSxJQUFJWSxFQUFpQjNPLEtBQUt5TyxTQUFTeFQsR0FDL0J1SSxFQUFLeEQsS0FBS3dELEdBQUd2SSxHQU1qQixPQUxJcVEsR0FBUXlDLEdBQVU1UCxHQUFldVEsRUFDbkNDLEVBQWlCQyxFQUFZNU8sS0FBTS9FLEVBQUd1SSxFQUFJOEgsRUFBTW9ELEVBQXFCdlEsRUFBYTRQLEdBQ3hFWSxJQUNWQSxFQUFpQjNPLEtBQUt5TyxTQUFTeFQsR0FBSzJULEVBQVk1TyxLQUFNL0UsRUFBR3VJLElBRXBEbUwsR0FHVHJELEtBQU0sU0FBY3BQLEVBQU9nTSxHQUN6QixLQUFPaE0sR0FBU2dNLEtBQ2RoTSxFQUFRQSxFQUFNZ0MsUUFFaEIsT0FBT2hDLEdBRVQyUyxjQUFlLFNBQXVCQyxFQUFPQyxHQUMzQyxJQUFJblEsRUFBTWtRLEdBQVNDLEVBTW5CLE9BSklELEdBQVNDLEdBQVVELElBQVVDLElBQy9CblEsRUFBTWlNLEVBQU01TixPQUFPLEdBQUk4UixFQUFRRCxJQUcxQmxRLEdBR1RvUSxZQUFhclQsT0FBT3NULEtBQUssSUFFekJDLEtBQU01QixFQUFJdEMsR0FBR2tFLEtBQ2JuQyxhQUFjTSxFQUFhSyxVQUc3QixTQUFTeEUsRUFBSWlDLEdBQ1gsSUFBSWpLLEVBQVVyQyxVQUFVeEIsUUFBVSxRQUFzQmtDLElBQWpCVixVQUFVLEdBQW1CLEdBQUtBLFVBQVUsR0FFL0V5TSxFQUFPcEssRUFBUW9LLEtBRW5CcEMsRUFBSWlHLE9BQU9qTyxJQUNOQSxFQUFReUMsU0FBVzBKLEVBQWErQixVQUNuQzlELEVBQU8rRCxFQUFTbEUsRUFBU0csSUFFM0IsSUFBSXlDLE9BQVN4TyxFQUNUcEIsRUFBY2tQLEVBQWFpQyxlQUFpQixRQUFLL1AsRUFTckQsU0FBU2dPLEVBQUtwQyxHQUNaLE1BQU8sR0FBS2tDLEVBQWFFLEtBQUtaLEVBQVd4QixFQUFTd0IsRUFBVTNKLFFBQVMySixFQUFVMUosU0FBVXFJLEVBQU1uTixFQUFhNFAsR0FJOUcsT0FiSVYsRUFBYWtDLFlBRWJ4QixFQURFN00sRUFBUTZNLE9BQ0Q1QyxHQUFXakssRUFBUTZNLE9BQU8sR0FBSyxDQUFDNUMsR0FBUzBCLE9BQU8zTCxFQUFRNk0sUUFBVTdNLEVBQVE2TSxPQUUxRSxDQUFDNUMsS0FRZG9DLEVBQU9pQyxFQUFrQm5DLEVBQWFFLEtBQU1BLEVBQU1aLEVBQVd6TCxFQUFRNk0sUUFBVSxHQUFJekMsRUFBTW5OLElBQzdFZ04sRUFBU2pLLEdBNEN2QixPQXpDQWdJLEVBQUl1RyxPQUFRLEVBRVp2RyxFQUFJaUcsT0FBUyxTQUFVak8sR0FDckIsR0FBS0EsRUFBUXlDLFFBb0JYZ0osRUFBVS9GLG1CQUFxQjFGLEVBQVEwRixtQkFDdkMrRixFQUFVM0osUUFBVTlCLEVBQVE4QixRQUM1QjJKLEVBQVUxSixTQUFXL0IsRUFBUStCLFNBQzdCMEosRUFBVXpKLFdBQWFoQyxFQUFRZ0MsV0FDL0J5SixFQUFVL0gsTUFBUTFELEVBQVEwRCxVQXhCTixDQUNwQixJQUFJOEssRUFBZ0I3RSxFQUFNNU4sT0FBTyxHQUFJcVEsRUFBSXRLLFFBQVM5QixFQUFROEIsVUE0SWhFLFNBQXlDME0sRUFBZS9DLEdBQ3REaFIsT0FBT29MLEtBQUsySSxHQUFlekksU0FBUSxTQUFVdkMsR0FDM0MsSUFBSWlMLEVBQVNELEVBQWNoTCxHQUMzQmdMLEVBQWNoTCxHQUlsQixTQUFrQ2lMLEVBQVFoRCxHQUN4QyxJQUFJSixFQUFpQkksRUFBVUosZUFDL0IsT0FBT3FELEVBQW9CQyxXQUFXRixHQUFRLFNBQVV6TyxHQUN0RCxPQUFPMkosRUFBTTVOLE9BQU8sQ0FBRXNQLGVBQWdCQSxHQUFrQnJMLE1BUDVCNE8sQ0FBeUJILEVBQVFoRCxNQTlJM0RvRCxDQUFnQ0wsRUFBZS9DLEdBQy9DQSxFQUFVM0osUUFBVTBNLEVBRWhCckMsRUFBYTJDLGFBRWZyRCxFQUFVMUosU0FBVzBKLEVBQVVrQyxjQUFjM04sRUFBUStCLFNBQVVxSyxFQUFJckssWUFFakVvSyxFQUFhMkMsWUFBYzNDLEVBQWE0QyxpQkFDMUN0RCxFQUFVekosV0FBYTJILEVBQU01TixPQUFPLEdBQUlxUSxFQUFJcEssV0FBWWhDLEVBQVFnQyxhQUdsRXlKLEVBQVUvSCxNQUFRLEdBQ2xCK0gsRUFBVS9GLG1CQUFxQnpFLEVBQXFCeUQseUJBQXlCMUUsR0FFN0UsSUFBSWdQLEVBQXNCaFAsRUFBUWlQLDJCQUE2QnhDLEVBQy9EM0wsRUFBU3lDLGtCQUFrQmtJLEVBQVcsZ0JBQWlCdUQsR0FDdkRsTyxFQUFTeUMsa0JBQWtCa0ksRUFBVyxxQkFBc0J1RCxLQVVoRWhILEVBQUlrSCxPQUFTLFNBQVVuVixFQUFHcVEsRUFBTW5OLEVBQWE0UCxHQUMzQyxHQUFJVixFQUFhaUMsaUJBQW1CblIsRUFDbEMsTUFBTSxJQUFJNEQsRUFBcUIsUUFBRSwwQkFFbkMsR0FBSXNMLEVBQWFrQyxZQUFjeEIsRUFDN0IsTUFBTSxJQUFJaE0sRUFBcUIsUUFBRSwyQkFHbkMsT0FBTzZNLEVBQVlqQyxFQUFXMVIsRUFBR29TLEVBQWFwUyxHQUFJcVEsRUFBTSxFQUFHbk4sRUFBYTRQLElBRW5FN0UsR0ExUFRuTyxFQUFRNlQsWUFBY0EsRUFDdEI3VCxFQUFRbVQsZUFvUlIsU0FBd0J2SyxFQUFTd0gsRUFBU2pLLEdBQ25DeUMsRUFNT0EsRUFBUXZJLE1BQVM4RixFQUFRMUYsT0FFbkMwRixFQUFRMUYsS0FBT21JLEVBQ2ZBLEVBQVV6QyxFQUFRK0IsU0FBU1UsSUFQekJBLEVBRG1CLG1CQUFqQnpDLEVBQVExRixLQUNBMEYsRUFBUW9LLEtBQUssaUJBRWJwSyxFQUFRK0IsU0FBUy9CLEVBQVExRixNQU92QyxPQUFPbUksR0EvUlQ1SSxFQUFRa1QsY0FrU1IsU0FBdUJ0SyxFQUFTd0gsRUFBU2pLLEdBRXZDLElBQUltUCxFQUFzQm5QLEVBQVFvSyxNQUFRcEssRUFBUW9LLEtBQUssaUJBQ3ZEcEssRUFBUXlDLFNBQVUsRUFDZHpDLEVBQVE3QyxNQUNWNkMsRUFBUW9LLEtBQUs5TSxZQUFjMEMsRUFBUTdDLElBQUksSUFBTTZDLEVBQVFvSyxLQUFLOU0sYUFHNUQsSUFBSThSLE9BQWUvUSxFQUNmMkIsRUFBUXNDLElBQU10QyxFQUFRc0MsS0FBTzBMLEdBQy9CLFdBQ0VoTyxFQUFRb0ssS0FBTzRCLEVBQU1sUCxZQUFZa0QsRUFBUW9LLE1BRXpDLElBQUk5SCxFQUFLdEMsRUFBUXNDLEdBQ2pCOE0sRUFBZXBQLEVBQVFvSyxLQUFLLGlCQUFtQixTQUE2QkgsR0FDMUUsSUFBSWpLLEVBQVVyQyxVQUFVeEIsUUFBVSxRQUFzQmtDLElBQWpCVixVQUFVLEdBQW1CLEdBQUtBLFVBQVUsR0FNbkYsT0FGQXFDLEVBQVFvSyxLQUFPNEIsRUFBTWxQLFlBQVlrRCxFQUFRb0ssTUFDekNwSyxFQUFRb0ssS0FBSyxpQkFBbUIrRSxFQUN6QjdNLEVBQUcySCxFQUFTakssSUFFakJzQyxFQUFHUCxXQUNML0IsRUFBUStCLFNBQVc0SCxFQUFNNU4sT0FBTyxHQUFJaUUsRUFBUStCLFNBQVVPLEVBQUdQLFdBZDdELFFBbUJjMUQsSUFBWm9FLEdBQXlCMk0sSUFDM0IzTSxFQUFVMk0sR0FHWixRQUFnQi9RLElBQVpvRSxFQUNGLE1BQU0sSUFBSTVCLEVBQXFCLFFBQUUsZUFBaUJiLEVBQVExRixLQUFPLHVCQUM1RCxHQUFJbUksYUFBbUJtQixTQUM1QixPQUFPbkIsRUFBUXdILEVBQVNqSyxJQXJVNUJuRyxFQUFRbVUsS0FBT0EsRUFTZixJQU5nQ3RRLEVBUTVCaU0sRUFKSixTQUFpQ2pNLEdBQU8sR0FBSUEsR0FBT0EsRUFBSXZDLFdBQWMsT0FBT3VDLEVBQWMsSUFBSXNJLEVBQVMsR0FBSSxHQUFXLE1BQVB0SSxFQUFlLElBQUssSUFBSXBDLEtBQU9vQyxFQUFXakQsT0FBT2tCLFVBQVVDLGVBQWUxQixLQUFLd0QsRUFBS3BDLEtBQU0wSyxFQUFPMUssR0FBT29DLEVBQUlwQyxJQUFtQyxPQUF6QjBLLEVBQWdCLFFBQUl0SSxFQUFZc0ksRUFJelBDLENBRkMsRUFBUSxJQUlqQmdCLEVBQWEsRUFBUSxHQUVyQnBHLEdBWjRCbkQsRUFZU3VKLElBWll2SixFQUFJdkMsV0FBYXVDLEVBQU0sQ0FBRSxRQUFXQSxHQWNyRnNPLEVBQVEsRUFBUSxHQUVoQmxMLEVBQVcsRUFBUSxHQUVuQjROLEVBQXNCLEVBQVEsSUFFOUJ6TixFQUF1QixFQUFRLEdBbU9uQyxTQUFTeU0sRUFBWWpDLEVBQVcxUixFQUFHdUksRUFBSThILEVBQU1vRCxFQUFxQnZRLEVBQWE0UCxHQUM3RSxTQUFTd0MsRUFBS3BGLEdBQ1osSUFBSWpLLEVBQVVyQyxVQUFVeEIsUUFBVSxRQUFzQmtDLElBQWpCVixVQUFVLEdBQW1CLEdBQUtBLFVBQVUsR0FFL0UyUixFQUFnQnpDLEVBS3BCLE9BSklBLEdBQVU1QyxHQUFXNEMsRUFBTyxJQUFRNUMsSUFBWXdCLEVBQVVxQyxhQUE2QixPQUFkakIsRUFBTyxLQUNsRnlDLEVBQWdCLENBQUNyRixHQUFTMEIsT0FBT2tCLElBRzVCdkssRUFBR21KLEVBQVd4QixFQUFTd0IsRUFBVTNKLFFBQVMySixFQUFVMUosU0FBVS9CLEVBQVFvSyxNQUFRQSxFQUFNbk4sR0FBZSxDQUFDK0MsRUFBUS9DLGFBQWEwTyxPQUFPMU8sR0FBY3FTLEdBUXZKLE9BTEFELEVBQU9mLEVBQWtCaE0sRUFBSStNLEVBQU01RCxFQUFXb0IsRUFBUXpDLEVBQU1uTixJQUV2RGtMLFFBQVVwTyxFQUNmc1YsRUFBS3JJLE1BQVE2RixFQUFTQSxFQUFPMVEsT0FBUyxFQUN0Q2tULEVBQUtwUyxZQUFjdVEsR0FBdUIsRUFDbkM2QixFQThEVCxTQUFTckIsSUFDUCxNQUFPLEdBR1QsU0FBU0csRUFBU2xFLEVBQVNHLEdBS3pCLE9BSktBLEdBQVUsU0FBVUEsS0FDdkJBLEVBQU9BLEVBQU80QixFQUFNbFAsWUFBWXNOLEdBQVEsSUFDbkMvRCxLQUFPNEQsR0FFUEcsRUFHVCxTQUFTa0UsRUFBa0JoTSxFQUFJK00sRUFBTTVELEVBQVdvQixFQUFRekMsRUFBTW5OLEdBQzVELEdBQUlxRixFQUFHZ0ssVUFBVyxDQUNoQixJQUFJZCxFQUFRLEdBQ1o2RCxFQUFPL00sRUFBR2dLLFVBQVUrQyxFQUFNN0QsRUFBT0MsRUFBV29CLEdBQVVBLEVBQU8sR0FBSXpDLEVBQU1uTixFQUFhNFAsR0FDcEZsRCxFQUFNNU4sT0FBT3NULEVBQU03RCxHQUVyQixPQUFPNkQsSSw2QkNqV1R4VixFQUFRc0IsWUFBYSxFQUNyQnRCLEVBQVE4VSxXQUVSLFNBQW9CRixFQUFRYyxHQUMxQixHQUFzQixtQkFBWGQsRUFHVCxPQUFPQSxFQU9ULE9BTGMsV0FDWixJQUFJek8sRUFBVXJDLFVBQVVBLFVBQVV4QixPQUFTLEdBRTNDLE9BREF3QixVQUFVQSxVQUFVeEIsT0FBUyxHQUFLb1QsRUFBbUJ2UCxHQUM5Q3lPLEVBQU9oSyxNQUFNM0YsS0FBTW5CLGMsNkJDSDlCLFNBQVN5QixFQUF1QjFCLEdBQU8sT0FBT0EsR0FBT0EsRUFBSXZDLFdBQWF1QyxFQUFNLENBQUUsUUFBV0EsR0FUekY3RCxFQUFRc0IsWUFBYSxFQUNyQnRCLEVBQVEyRyx1QkFBeUJBLEVBQ2pDM0csRUFBUTBHLE1BOENSLFNBQWVSLEVBQU9DLEdBQ3BCLElBQUl3UCxFQUFNaFAsRUFBdUJULEVBQU9DLEdBR3hDLE9BRlksSUFBSXlQLEVBQTZCLFFBQUV6UCxHQUVsQzRILE9BQU80SCxJQXpDdEIsSUFFSUUsRUFBV3RRLEVBRkQsRUFBUSxLQU1sQnFRLEVBQXNCclEsRUFGRCxFQUFRLEtBTTdCdVEsRUFoQkosU0FBaUNqUyxHQUFPLEdBQUlBLEdBQU9BLEVBQUl2QyxXQUFjLE9BQU91QyxFQUFjLElBQUlzSSxFQUFTLEdBQUksR0FBVyxNQUFQdEksRUFBZSxJQUFLLElBQUlwQyxLQUFPb0MsRUFBV2pELE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3dELEVBQUtwQyxLQUFNMEssRUFBTzFLLEdBQU9vQyxFQUFJcEMsSUFBbUMsT0FBekIwSyxFQUFnQixRQUFJdEksRUFBWXNJLEVBZ0J2UEMsQ0FGQyxFQUFRLEtBSW5CckYsRUFBUyxFQUFRLEdBRXJCL0csRUFBUXlHLE9BQVNvUCxFQUFrQixRQUVuQyxJQUFJRSxFQUFLLEdBR1QsU0FBU3BQLEVBQXVCVCxFQUFPQyxHQUVyQyxNQUFtQixZQUFmRCxFQUFNMkcsS0FDRDNHLEdBR1QyUCxFQUFrQixRQUFFRSxHQUFLQSxFQUd6QkEsRUFBR0MsUUFBVSxTQUFVQSxHQUNyQixPQUFPLElBQUlELEVBQUdFLGVBQWU5UCxHQUFXQSxFQUFRK1AsUUFBU0YsSUFHakRILEVBQWtCLFFBQUVuUCxNQUFNUixJQWZ0Q2EsRUFBTzdFLE9BQU82VCxFQUFJRCxJLDZCQzFCbEI5VixFQUFRc0IsWUFBYSxFQUNyQixJQUFJNlUsRUFBYSxXQUNiLElBQUkxUCxFQUFTLENBQUUyUCxNQUFPLGFBQ2xCTCxHQUFJLEdBQ0pNLFNBQVUsQ0FBRSxNQUFTLEVBQUcsS0FBUSxFQUFHLFFBQVcsRUFBRyxJQUFPLEVBQUcsb0JBQXVCLEVBQUcsVUFBYSxFQUFHLFNBQVksRUFBRyxNQUFTLEVBQUcsU0FBWSxHQUFJLFFBQVcsR0FBSSxhQUFnQixHQUFJLFFBQVcsR0FBSSxRQUFXLEdBQUksUUFBVyxHQUFJLGFBQWdCLEdBQUkscUJBQXdCLEdBQUksY0FBaUIsR0FBSSxlQUFrQixHQUFJLFdBQWMsR0FBSSx5QkFBNEIsR0FBSSxxQkFBd0IsR0FBSSxnQkFBbUIsR0FBSSxVQUFhLEdBQUksY0FBaUIsR0FBSSxXQUFjLEdBQUksWUFBZSxHQUFJLGNBQWlCLEdBQUksV0FBYyxHQUFJLHNCQUF5QixHQUFJLGtCQUFxQixHQUFJLGtCQUFxQixHQUFJLE1BQVMsR0FBSSxhQUFnQixHQUFJLHdCQUEyQixHQUFJLG9CQUF1QixHQUFJLG9CQUF1QixHQUFJLGlCQUFvQixHQUFJLG1CQUFzQixHQUFJLDZCQUFnQyxHQUFJLHlCQUE0QixHQUFJLHlCQUE0QixHQUFJLGtCQUFxQixHQUFJLFFBQVcsR0FBSSxhQUFnQixHQUFJLHFCQUF3QixHQUFJLGNBQWlCLEdBQUksS0FBUSxHQUFJLHFCQUF3QixHQUFJLGlCQUFvQixHQUFJLGVBQWtCLEdBQUkscUJBQXdCLEdBQUksaUJBQW9CLEdBQUksZ0JBQW1CLEdBQUksYUFBZ0IsR0FBSSxZQUFlLEdBQUksb0JBQXVCLEdBQUksZ0JBQW1CLEdBQUksaUJBQW9CLEdBQUksbUJBQXNCLEdBQUksNkJBQWdDLEdBQUkseUJBQTRCLEdBQUksTUFBUyxHQUFJLE1BQVMsR0FBSSxXQUFjLEdBQUksa0JBQXFCLEdBQUksY0FBaUIsR0FBSSxZQUFlLEdBQUksS0FBUSxHQUFJLHNCQUF5QixHQUFJLFlBQWUsR0FBSSxHQUFNLEdBQUksT0FBVSxHQUFJLFlBQWUsR0FBSSxrQkFBcUIsR0FBSSw2QkFBZ0MsR0FBSSxtQkFBc0IsR0FBSSxLQUFRLEdBQUksU0FBWSxHQUFJLE9BQVUsR0FBSSxPQUFVLEdBQUksUUFBVyxHQUFJLFVBQWEsR0FBSSxLQUFRLEdBQUksS0FBUSxHQUFJLGFBQWdCLEdBQUksSUFBTyxHQUFJLFFBQVcsRUFBRyxLQUFRLEdBQzF4REMsV0FBWSxDQUFFNU8sRUFBRyxRQUFTRyxFQUFHLE1BQU8wTyxHQUFJLFVBQVdDLEdBQUksVUFBV0MsR0FBSSxnQkFBaUJDLEdBQUksaUJBQWtCQyxHQUFJLGtCQUFtQkMsR0FBSSxhQUFjQyxHQUFJLFFBQVNDLEdBQUksZUFBZ0JDLEdBQUkscUJBQXNCQyxHQUFJLFVBQVdDLEdBQUksZ0JBQWlCQyxHQUFJLE9BQVFDLEdBQUksaUJBQWtCQyxHQUFJLGtCQUFtQkMsR0FBSSxlQUFnQkMsR0FBSSxxQkFBc0JDLEdBQUksYUFBY0MsR0FBSSxjQUFlQyxHQUFJLEtBQU1DLEdBQUksU0FBVUMsR0FBSSxvQkFBcUJDLEdBQUkscUJBQXNCQyxHQUFJLFNBQVVDLEdBQUksU0FBVUMsR0FBSSxVQUFXQyxHQUFJLFlBQWFDLEdBQUksT0FBUUMsR0FBSSxPQUFRQyxHQUFJLE9BQ3BpQkMsYUFBYyxDQUFDLEVBQUcsQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJLEdBQUksQ0FBQyxHQUFJ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RUFBRyxFQUFHQyxFQUFHLEVBQUc4UixFQUFHLEVBQUdDLEdBQUksRUFBR0MsR0FBSSxFQUFHQyxHQUFJLEdBQUlDLEdBQUksR0FBSTNELEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUsyRCxHQUFJLEdBQUl6RCxHQUFJLENBQUMsRUFBRyxJQUFLMEQsR0FBSSxHQUFJQyxHQUFJLEdBQUl6RCxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLaUQsR0FBSSxHQUFJaEQsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFN1AsRUFBRyxDQUFDLEVBQUcsSUFBTSxDQUFFSSxFQUFHLENBQUMsRUFBRyxJQUFLME8sR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFelAsRUFBRyxDQUFDLEVBQUcsR0FBSTBPLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLElBQU0sQ0FBRXpQLEVBQUcsQ0FBQyxFQUFHLEdBQUkwTyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxJQUFNLENBQUV6UCxFQUFHLENBQUMsRUFBRyxHQUFJME8sR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsSUFBTSxDQUFFelAsRUFBRyxDQUFDLEVBQUcsR0FBSTBPLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLElBQU0sQ0FBRXpQLEVBQUcsQ0FBQyxFQUFHLEdBQUkwTyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxHQUFJRSxHQUFJLENBQUMsRUFBRyxHQUFJQyxHQUFJLENBQUMsRUFBRyxJQUFNLENBQUV6UCxFQUFHLENBQUMsRUFBRyxHQUFJME8sR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsR0FBSUUsR0FBSSxDQUFDLEVBQUcsR0FBSUMsR0FBSSxDQUFDLEVBQUcsSUFBTSxDQUFFelAsRUFBRyxDQUFDLEVBQUcsR0FBSTBPLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLEdBQUlFLEdBQUksQ0FBQyxFQUFHLEdBQUlDLEdBQUksQ0FBQyxFQUFHLElBQU0sQ0FBRWlELEdBQUksR0FBSTlDLEdBQUksQ0FBQyxFQUFHLElBQUsrQyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRUgsR0FBSSxHQUFJOUMsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFOVMsRUFBRyxHQUFJRSxFQUFHLEVBQUd5TyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUUxUCxFQUFHLEdBQUlFLEVBQUcsRUFBR3lPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWQsR0FBSSxDQUFDLEVBQUcsSUFBS21FLEdBQUksR0FBSWxFLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRThELEdBQUksR0FBSUssR0FBSSxHQUFJQyxHQUFJLEdBQUl0RCxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUU5UyxFQUFHLEdBQUlFLEVBQUcsRUFBR3lPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXpQLEVBQUcsQ0FBQyxFQUFHLElBQUswTyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVpRCxHQUFJLEdBQUk5QyxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUVILEdBQUksR0FBSTlDLEdBQUksQ0FBQyxFQUFHLElBQUsrQyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRUgsR0FBSSxHQUFJOUMsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFSCxHQUFJLEdBQUlLLEdBQUksR0FBSUMsR0FBSSxHQUFJdEQsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFN0QsR0FBSSxDQUFDLEVBQUcsSUFBS2lFLEdBQUksR0FBSXZELEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtJLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRVYsR0FBSSxDQUFDLEVBQUcsSUFBS2lELEdBQUksSUFBTSxDQUFFL0QsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0csR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFNEMsR0FBSSxHQUFJM0QsR0FBSSxDQUFDLEVBQUcsSUFBS0csR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFOEMsR0FBSSxHQUFJQyxHQUFJLEdBQUlsRSxHQUFJLENBQUMsRUFBRyxJQUFLbUUsR0FBSSxHQUFJbEUsR0FBSSxDQUFDLEVBQUcsSUFBS21FLEdBQUksR0FBSWxFLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRW1FLEdBQUksR0FBSUYsR0FBSSxHQUFJbEUsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFaUQsR0FBSSxHQUFJMUQsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFSSxHQUFJLENBQUMsRUFBRyxJQUFLd0UsR0FBSSxHQUFJOUQsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsSUFBS1UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsSUFBS1UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFcUMsR0FBSSxHQUFJOUMsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFWSxHQUFJLEdBQUlyRSxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVzRSxHQUFJLEdBQUkxRSxHQUFJLENBQUMsRUFBRyxJQUFLVSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVyQixHQUFJLENBQUMsRUFBRyxJQUFLMkUsR0FBSSxHQUFJakUsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFdUQsR0FBSSxHQUFJOUUsR0FBSSxDQUFDLEVBQUcsSUFBS1ksR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsSUFBSzZFLEdBQUksR0FBSW5FLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtJLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXFDLEdBQUksR0FBSTFELEdBQUksQ0FBQyxFQUFHLElBQUs4RSxHQUFJLEdBQUlDLEdBQUksR0FBSWYsR0FBSSxHQUFJdEQsR0FBSSxDQUFDLEVBQUcsSUFBS3NFLEdBQUksR0FBSUMsR0FBSSxHQUFJQyxHQUFJLEdBQUl0RSxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUVqRCxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVkLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRW9DLEdBQUksR0FBSXlCLEdBQUksR0FBSTVFLEdBQUksQ0FBQyxFQUFHLElBQUt3RSxHQUFJLEdBQUlmLEdBQUksR0FBSXRELEdBQUksQ0FBQyxFQUFHLElBQUtzRSxHQUFJLEdBQUlDLEdBQUksR0FBSUMsR0FBSSxHQUFJdEUsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFWSxHQUFJLEdBQUlyRSxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVBLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXJQLEVBQUcsR0FBSUUsRUFBRyxFQUFHeU8sR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFTCxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVzRCxHQUFJLEdBQUk5QyxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUU5UyxFQUFHLEdBQUlFLEVBQUcsRUFBR3lPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWdFLEdBQUksR0FBSXJFLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRUEsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFcFAsRUFBRyxDQUFDLEVBQUcsSUFBSzBPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWQsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFOEQsR0FBSSxHQUFJMUQsR0FBSSxDQUFDLEVBQUcsSUFBS29GLEdBQUksR0FBSUwsR0FBSSxHQUFJZixHQUFJLEdBQUl0RCxHQUFJLENBQUMsRUFBRyxJQUFLc0UsR0FBSSxHQUFJQyxHQUFJLEdBQUlDLEdBQUksR0FBSXRFLEdBQUksQ0FBQyxFQUFHLElBQUsrQyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRW5ELEdBQUksQ0FBQyxFQUFHLElBQUsyRSxHQUFJLEdBQUkxRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLSSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVyUSxFQUFHLENBQUMsRUFBRyxJQUFLME8sR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFaUQsR0FBSSxHQUFJOUMsR0FBSSxDQUFDLEVBQUcsSUFBSytDLEdBQUksR0FBSUMsR0FBSSxHQUFJNUMsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS3dDLEdBQUksSUFBTSxDQUFFSCxHQUFJLEdBQUk0QixHQUFJLEdBQUl0RixHQUFJLENBQUMsRUFBRyxJQUFLK0UsR0FBSSxHQUFJZixHQUFJLEdBQUl0RCxHQUFJLENBQUMsRUFBRyxJQUFLc0UsR0FBSSxHQUFJQyxHQUFJLEdBQUlDLEdBQUksR0FBSXRFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUs2QyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRUgsR0FBSSxHQUFJMUQsR0FBSSxDQUFDLEVBQUcsSUFBS3VGLEdBQUksR0FBSVIsR0FBSSxHQUFJZixHQUFJLEdBQUl0RCxHQUFJLENBQUMsRUFBRyxJQUFLc0UsR0FBSSxHQUFJQyxHQUFJLEdBQUlDLEdBQUksR0FBSXRFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUs2QyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRUgsR0FBSSxHQUFJOEIsR0FBSSxHQUFJMUYsR0FBSSxDQUFDLEVBQUcsSUFBS2lGLEdBQUksSUFBS2YsR0FBSSxHQUFJdEQsR0FBSSxDQUFDLEVBQUcsSUFBS3NFLEdBQUksSUFBS0MsR0FBSSxHQUFJQyxHQUFJLEdBQUl0RSxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUVILEdBQUksR0FBSTFELEdBQUksQ0FBQyxFQUFHLElBQUt5RixHQUFJLElBQUtWLEdBQUksSUFBS2YsR0FBSSxHQUFJdEQsR0FBSSxDQUFDLEVBQUcsSUFBS3NFLEdBQUksSUFBS0MsR0FBSSxHQUFJQyxHQUFJLEdBQUl0RSxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUU3RCxHQUFJLENBQUMsRUFBRyxNQUFRLENBQUVBLEdBQUksQ0FBQyxFQUFHLElBQUtVLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtJLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXJCLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRUYsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0csR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFdkIsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0csR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFdkIsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS3VFLEdBQUksSUFBS3RFLEdBQUksQ0FBQyxFQUFHLEtBQU1FLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWhCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtJLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWhCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU1DLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXhCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWYsR0FBSSxDQUFDLEVBQUcsTUFBUSxDQUFFQSxHQUFJLENBQUMsRUFBRyxJQUFLRyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLSSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVkLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXZQLEVBQUcsQ0FBQyxFQUFHLElBQUswTyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUUyRCxHQUFJLEdBQUlsRSxHQUFJLENBQUMsRUFBRyxJQUFLbUUsR0FBSSxHQUFJbEUsR0FBSSxDQUFDLEVBQUcsSUFBS21FLEdBQUksSUFBS29CLEdBQUksSUFBS3RGLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRUosR0FBSSxDQUFDLEVBQUcsSUFBSzJGLEdBQUksSUFBS2pGLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWpCLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXBQLEVBQUcsQ0FBQyxFQUFHLElBQUswTyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVULEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRUEsR0FBSSxDQUFDLEVBQUcsSUFBS1UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFMEQsR0FBSSxHQUFJcUIsR0FBSSxJQUFLZixHQUFJLEdBQUl0RCxHQUFJLENBQUMsRUFBRyxJQUFLa0YsR0FBSSxJQUFLakYsR0FBSSxDQUFDLEVBQUcsSUFBS3FFLEdBQUksSUFBS0MsR0FBSSxHQUFJQyxHQUFJLEdBQUl0RSxHQUFJLENBQUMsRUFBRyxJQUFLK0MsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUU3RCxHQUFJLENBQUMsRUFBRyxNQUFRLENBQUU2RixHQUFJLElBQUs3RixHQUFJLENBQUMsRUFBRyxJQUFLOEYsR0FBSSxJQUFLaEYsR0FBSSxDQUFDLEVBQUcsTUFBUSxDQUFFZCxHQUFJLENBQUMsRUFBRyxJQUFLVSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVyQixHQUFJLENBQUMsRUFBRyxJQUFLYyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVkLEdBQUksQ0FBQyxFQUFHLElBQUsrRixHQUFJLElBQUtELEdBQUksSUFBS2hGLEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRWQsR0FBSSxDQUFDLEVBQUcsSUFBS1UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsSUFBS2MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFaEIsR0FBSSxDQUFDLEVBQUcsTUFBUSxDQUFFQSxHQUFJLENBQUMsRUFBRyxJQUFLWSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLSSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUV2QixHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVFLEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRUEsR0FBSSxDQUFDLEVBQUcsSUFBS1UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFckIsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFaFAsRUFBRyxDQUFDLEVBQUcsSUFBSzBPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRVgsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFRCxHQUFJLENBQUMsRUFBRyxNQUFRLENBQUU2QyxHQUFJLEdBQUlxQixHQUFJLElBQUtmLEdBQUksR0FBSXRELEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUsrQyxHQUFJLEdBQUlDLEdBQUksR0FBSTVDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUt3QyxHQUFJLElBQU0sQ0FBRTdTLEVBQUcsQ0FBQyxFQUFHLElBQUswTyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVMLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRUEsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFc0QsR0FBSSxHQUFJMUQsR0FBSSxDQUFDLEVBQUcsSUFBS2dHLEdBQUksSUFBS2pCLEdBQUksSUFBS2YsR0FBSSxHQUFJdEQsR0FBSSxDQUFDLEVBQUcsSUFBS3NFLEdBQUksSUFBS0MsR0FBSSxHQUFJQyxHQUFJLEdBQUl0RSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLNkMsR0FBSSxHQUFJQyxHQUFJLEdBQUk1QyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLd0MsR0FBSSxJQUFNLENBQUU3UyxFQUFHLENBQUMsRUFBRyxJQUFLME8sR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFRSxHQUFJLENBQUMsRUFBRyxNQUFRLENBQUVELEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtJLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRVYsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFM1AsRUFBRyxDQUFDLEVBQUcsSUFBSzBPLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRVQsR0FBSSxDQUFDLEVBQUcsTUFBUSxDQUFFQSxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVZLEdBQUksQ0FBQyxFQUFHLEtBQU1xRixHQUFJLEtBQU8sQ0FBRWpHLEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRUEsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFTCxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVGLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRVgsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsSUFBS08sR0FBSSxDQUFDLEVBQUcsSUFBS0ksR0FBSSxDQUFDLEVBQUcsSUFBS0MsR0FBSSxDQUFDLEVBQUcsSUFBS0UsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFZCxHQUFJLENBQUMsRUFBRyxJQUFLa0csR0FBSSxJQUFLSixHQUFJLElBQUtoRixHQUFJLENBQUMsRUFBRyxNQUFRLENBQUVkLEdBQUksQ0FBQyxFQUFHLElBQUtVLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRXJCLEdBQUksQ0FBQyxFQUFHLElBQUtjLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRWhCLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtPLEdBQUksQ0FBQyxFQUFHLElBQUtHLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRTNCLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLEtBQU8sQ0FBRUcsR0FBSSxDQUFDLEVBQUcsS0FBTUcsR0FBSSxDQUFDLEVBQUcsTUFBUSxDQUFFSCxHQUFJLENBQUMsRUFBRyxLQUFNRyxHQUFJLENBQUMsRUFBRyxNQUFRLENBQUVyQixHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxJQUFLRSxHQUFJLENBQUMsRUFBRyxJQUFLQyxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVULEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRUEsR0FBSSxDQUFDLEVBQUcsS0FBTyxDQUFFQSxHQUFJLENBQUMsRUFBRyxLQUFPLENBQUVZLEdBQUksQ0FBQyxFQUFHLEtBQU1HLEdBQUksQ0FBQyxFQUFHLE1BQVEsQ0FBRXJCLEdBQUksQ0FBQyxFQUFHLElBQUtDLEdBQUksQ0FBQyxFQUFHLElBQUtFLEdBQUksQ0FB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aUJKIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMzMpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5leHRlbmQgPSBleHRlbmQ7XG5leHBvcnRzLmluZGV4T2YgPSBpbmRleE9mO1xuZXhwb3J0cy5lc2NhcGVFeHByZXNzaW9uID0gZXNjYXBlRXhwcmVzc2lvbjtcbmV4cG9ydHMuaXNFbXB0eSA9IGlzRW1wdHk7XG5leHBvcnRzLmNyZWF0ZUZyYW1lID0gY3JlYXRlRnJhbWU7XG5leHBvcnRzLmJsb2NrUGFyYW1zID0gYmxvY2tQYXJhbXM7XG5leHBvcnRzLmFwcGVuZENvbnRleHRQYXRoID0gYXBwZW5kQ29udGV4dFBhdGg7XG52YXIgZXNjYXBlID0ge1xuICAnJic6ICcmYW1wOycsXG4gICc8JzogJyZsdDsnLFxuICAnPic6ICcmZ3Q7JyxcbiAgJ1wiJzogJyZxdW90OycsXG4gIFwiJ1wiOiAnJiN4Mjc7JyxcbiAgJ2AnOiAnJiN4NjA7JyxcbiAgJz0nOiAnJiN4M0Q7J1xufTtcblxudmFyIGJhZENoYXJzID0gL1smPD5cIidgPV0vZyxcbiAgICBwb3NzaWJsZSA9IC9bJjw+XCInYD1dLztcblxuZnVuY3Rpb24gZXNjYXBlQ2hhcihjaHIpIHtcbiAgcmV0dXJuIGVzY2FwZVtjaHJdO1xufVxuXG5mdW5jdGlvbiBleHRlbmQob2JqIC8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG5leHBvcnRzLnRvU3RyaW5nID0gdG9TdHJpbmc7XG4vLyBTb3VyY2VkIGZyb20gbG9kYXNoXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYmVzdGllanMvbG9kYXNoL2Jsb2IvbWFzdGVyL0xJQ0VOU0UudHh0XG4vKiBlc2xpbnQtZGlzYWJsZSBmdW5jLXN0eWxlICovXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn07XG4vLyBmYWxsYmFjayBmb3Igb2xkZXIgdmVyc2lvbnMgb2YgQ2hyb21lIGFuZCBTYWZhcmlcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5pZiAoaXNGdW5jdGlvbigveC8pKSB7XG4gIGV4cG9ydHMuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24gPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nICYmIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xuICB9O1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuLyogZXNsaW50LWVuYWJsZSBmdW5jLXN0eWxlICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnID8gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEFycmF5XScgOiBmYWxzZTtcbn07XG5cbmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG4vLyBPbGRlciBJRSB2ZXJzaW9ucyBkbyBub3QgZGlyZWN0bHkgc3VwcG9ydCBpbmRleE9mIHNvIHdlIG11c3QgaW1wbGVtZW50IG91ciBvd24sIHNhZGx5LlxuXG5mdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICBmb3IgKHZhciBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5mdW5jdGlvbiBlc2NhcGVFeHByZXNzaW9uKHN0cmluZykge1xuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBlc2NhcGUgU2FmZVN0cmluZ3MsIHNpbmNlIHRoZXkncmUgYWxyZWFkeSBzYWZlXG4gICAgaWYgKHN0cmluZyAmJiBzdHJpbmcudG9IVE1MKSB7XG4gICAgICByZXR1cm4gc3RyaW5nLnRvSFRNTCgpO1xuICAgIH0gZWxzZSBpZiAoc3RyaW5nID09IG51bGwpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9IGVsc2UgaWYgKCFzdHJpbmcpIHtcbiAgICAgIHJldHVybiBzdHJpbmcgKyAnJztcbiAgICB9XG5cbiAgICAvLyBGb3JjZSBhIHN0cmluZyBjb252ZXJzaW9uIGFzIHRoaXMgd2lsbCBiZSBkb25lIGJ5IHRoZSBhcHBlbmQgcmVnYXJkbGVzcyBhbmRcbiAgICAvLyB0aGUgcmVnZXggdGVzdCB3aWxsIGRvIHRoaXMgdHJhbnNwYXJlbnRseSBiZWhpbmQgdGhlIHNjZW5lcywgY2F1c2luZyBpc3N1ZXMgaWZcbiAgICAvLyBhbiBvYmplY3QncyB0byBzdHJpbmcgaGFzIGVzY2FwZWQgY2hhcmFjdGVycyBpbiBpdC5cbiAgICBzdHJpbmcgPSAnJyArIHN0cmluZztcbiAgfVxuXG4gIGlmICghcG9zc2libGUudGVzdChzdHJpbmcpKSB7XG4gICAgcmV0dXJuIHN0cmluZztcbiAgfVxuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoYmFkQ2hhcnMsIGVzY2FwZUNoYXIpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7XG4gIGlmICghdmFsdWUgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KSB7XG4gIHZhciBmcmFtZSA9IGV4dGVuZCh7fSwgb2JqZWN0KTtcbiAgZnJhbWUuX3BhcmVudCA9IG9iamVjdDtcbiAgcmV0dXJuIGZyYW1lO1xufVxuXG5mdW5jdGlvbiBibG9ja1BhcmFtcyhwYXJhbXMsIGlkcykge1xuICBwYXJhbXMucGF0aCA9IGlkcztcbiAgcmV0dXJuIHBhcmFtcztcbn1cblxuZnVuY3Rpb24gYXBwZW5kQ29udGV4dFBhdGgoY29udGV4dFBhdGgsIGlkKSB7XG4gIHJldHVybiAoY29udGV4dFBhdGggPyBjb250ZXh0UGF0aCArICcuJyA6ICcnKSArIGlkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMM1YwYVd4ekxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPenM3T3pzN096czdRVUZCUVN4SlFVRk5MRTFCUVUwc1IwRkJSenRCUVVOaUxFdEJRVWNzUlVGQlJTeFBRVUZQTzBGQlExb3NTMEZCUnl4RlFVRkZMRTFCUVUwN1FVRkRXQ3hMUVVGSExFVkJRVVVzVFVGQlRUdEJRVU5ZTEV0QlFVY3NSVUZCUlN4UlFVRlJPMEZCUTJJc1MwRkJSeXhGUVVGRkxGRkJRVkU3UVVGRFlpeExRVUZITEVWQlFVVXNVVUZCVVR0QlFVTmlMRXRCUVVjc1JVRkJSU3hSUVVGUk8wTkJRMlFzUTBGQlF6czdRVUZGUml4SlFVRk5MRkZCUVZFc1IwRkJSeXhaUVVGWk8wbEJRek5DTEZGQlFWRXNSMEZCUnl4WFFVRlhMRU5CUVVNN08wRkJSWHBDTEZOQlFWTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVOMlFpeFRRVUZQTEUxQlFVMHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenREUVVOd1FqczdRVUZGVFN4VFFVRlRMRTFCUVUwc1EwRkJReXhIUVVGSExHOUNRVUZ2UWp0QlFVTTFReXhQUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1UwRkJVeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTjZReXhUUVVGTExFbEJRVWtzUjBGQlJ5eEpRVUZKTEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRCUVVNMVFpeFZRVUZKTEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1kwRkJZeXhEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1IwRkJSeXhEUVVGRExFVkJRVVU3UVVGRE0wUXNWMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExGTkJRVk1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRQUVVNNVFqdExRVU5HTzBkQlEwWTdPMEZCUlVRc1UwRkJUeXhIUVVGSExFTkJRVU03UTBGRFdqczdRVUZGVFN4SlFVRkpMRkZCUVZFc1IwRkJSeXhOUVVGTkxFTkJRVU1zVTBGQlV5eERRVUZETEZGQlFWRXNRMEZCUXpzN096czdPMEZCUzJoRUxFbEJRVWtzVlVGQlZTeEhRVUZITEc5Q1FVRlRMRXRCUVVzc1JVRkJSVHRCUVVNdlFpeFRRVUZQTEU5QlFVOHNTMEZCU3l4TFFVRkxMRlZCUVZVc1EwRkJRenREUVVOd1F5eERRVUZET3pzN1FVRkhSaXhKUVVGSkxGVkJRVlVzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlR0QlFVTnVRaXhWUVU5UExGVkJRVlVzUjBGUWFrSXNWVUZCVlN4SFFVRkhMRlZCUVZNc1MwRkJTeXhGUVVGRk8wRkJRek5DTEZkQlEwVXNUMEZCVHl4TFFVRkxMRXRCUVVzc1ZVRkJWU3hKUVVNelFpeFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExHMUNRVUZ0UWl4RFFVTTFRenRIUVVOSUxFTkJRVU03UTBGRFNEdFJRVU5STEZWQlFWVXNSMEZCVml4VlFVRlZPenM3T3p0QlFVbGFMRWxCUVUwc1QwRkJUeXhIUVVOc1FpeExRVUZMTEVOQlFVTXNUMEZCVHl4SlFVTmlMRlZCUVZNc1MwRkJTeXhGUVVGRk8wRkJRMlFzVTBGQlR5eExRVUZMTEVsQlFVa3NUMEZCVHl4TFFVRkxMRXRCUVVzc1VVRkJVU3hIUVVOeVF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExHZENRVUZuUWl4SFFVTjZReXhMUVVGTExFTkJRVU03UTBGRFdDeERRVUZET3pzN096dEJRVWRITEZOQlFWTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1JVRkJSU3hMUVVGTExFVkJRVVU3UVVGRGNFTXNUMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTm9SQ3hSUVVGSkxFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4TFFVRkxMRVZCUVVVN1FVRkRkRUlzWVVGQlR5eERRVUZETEVOQlFVTTdTMEZEVmp0SFFVTkdPMEZCUTBRc1UwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF6dERRVU5ZT3p0QlFVVk5MRk5CUVZNc1owSkJRV2RDTEVOQlFVTXNUVUZCVFN4RlFVRkZPMEZCUTNaRExFMUJRVWtzVDBGQlR5eE5RVUZOTEV0QlFVc3NVVUZCVVN4RlFVRkZPenRCUVVVNVFpeFJRVUZKTEUxQlFVMHNTVUZCU1N4TlFVRk5MRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRek5DTEdGQlFVOHNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRE8wdEJRM2hDTEUxQlFVMHNTVUZCU1N4TlFVRk5MRWxCUVVrc1NVRkJTU3hGUVVGRk8wRkJRM3BDTEdGQlFVOHNSVUZCUlN4RFFVRkRPMHRCUTFnc1RVRkJUU3hKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTzBGQlEyeENMR0ZCUVU4c1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF6dExRVU53UWpzN096czdRVUZMUkN4VlFVRk5MRWRCUVVjc1JVRkJSU3hIUVVGSExFMUJRVTBzUTBGQlF6dEhRVU4wUWpzN1FVRkZSQ3hOUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSVHRCUVVNeFFpeFhRVUZQTEUxQlFVMHNRMEZCUXp0SFFVTm1PMEZCUTBRc1UwRkJUeXhOUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNSVUZCUlN4VlFVRlZMRU5CUVVNc1EwRkJRenREUVVNM1F6czdRVUZGVFN4VFFVRlRMRTlCUVU4c1EwRkJReXhMUVVGTExFVkJRVVU3UVVGRE4wSXNUVUZCU1N4RFFVRkRMRXRCUVVzc1NVRkJTU3hMUVVGTExFdEJRVXNzUTBGQlF5eEZRVUZGTzBGQlEzcENMRmRCUVU4c1NVRkJTU3hEUVVGRE8wZEJRMklzVFVGQlRTeEpRVUZKTEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zVFVGQlRTeExRVUZMTEVOQlFVTXNSVUZCUlR0QlFVTXZReXhYUVVGUExFbEJRVWtzUTBGQlF6dEhRVU5pTEUxQlFVMDdRVUZEVEN4WFFVRlBMRXRCUVVzc1EwRkJRenRIUVVOa08wTkJRMFk3TzBGQlJVMHNVMEZCVXl4WFFVRlhMRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRMnhETEUxQlFVa3NTMEZCU3l4SFFVRkhMRTFCUVUwc1EwRkJReXhGUVVGRkxFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdRVUZETDBJc1QwRkJTeXhEUVVGRExFOUJRVThzUjBGQlJ5eE5RVUZOTEVOQlFVTTdRVUZEZGtJc1UwRkJUeXhMUVVGTExFTkJRVU03UTBGRFpEczdRVUZGVFN4VFFVRlRMRmRCUVZjc1EwRkJReXhOUVVGTkxFVkJRVVVzUjBGQlJ5eEZRVUZGTzBGQlEzWkRMRkZCUVUwc1EwRkJReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eERRVUZETzBGQlEyeENMRk5CUVU4c1RVRkJUU3hEUVVGRE8wTkJRMlk3TzBGQlJVMHNVMEZCVXl4cFFrRkJhVUlzUTBGQlF5eFhRVUZYTEVWQlFVVXNSVUZCUlN4RlFVRkZPMEZCUTJwRUxGTkJRVThzUTBGQlF5eFhRVUZYTEVkQlFVY3NWMEZCVnl4SFFVRkhMRWRCUVVjc1IwRkJSeXhGUVVGRkxFTkJRVUVzUjBGQlNTeEZRVUZGTEVOQlFVTTdRMEZEY0VRaUxDSm1hV3hsSWpvaWRYUnBiSE11YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SmpiMjV6ZENCbGMyTmhjR1VnUFNCN1hHNGdJQ2NtSnpvZ0p5WmhiWEE3Snl4Y2JpQWdKenduT2lBbkpteDBPeWNzWEc0Z0lDYytKem9nSnlabmREc25MRnh1SUNBblhDSW5PaUFuSm5GMWIzUTdKeXhjYmlBZ1hDSW5YQ0k2SUNjbUkzZ3lOenNuTEZ4dUlDQW5ZQ2M2SUNjbUkzZzJNRHNuTEZ4dUlDQW5QU2M2SUNjbUkzZ3pSRHNuWEc1OU8xeHVYRzVqYjI1emRDQmlZV1JEYUdGeWN5QTlJQzliSmp3K1hDSW5ZRDFkTDJjc1hHNGdJSEJ2YzNOcFlteGxJRDBnTDFzbVBENWNJaWRnUFYwdk8xeHVYRzVtZFc1amRHbHZiaUJsYzJOaGNHVkRhR0Z5S0dOb2Npa2dlMXh1SUNCeVpYUjFjbTRnWlhOallYQmxXMk5vY2wwN1hHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJsZUhSbGJtUW9iMkpxSUM4cUlDd2dMaTR1YzI5MWNtTmxJQ292S1NCN1hHNGdJR1p2Y2lBb2JHVjBJR2tnUFNBeE95QnBJRHdnWVhKbmRXMWxiblJ6TG14bGJtZDBhRHNnYVNzcktTQjdYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2EyVjVJR2x1SUdGeVozVnRaVzUwYzF0cFhTa2dlMXh1SUNBZ0lDQWdhV1lnS0U5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNoaGNtZDFiV1Z1ZEhOYmFWMHNJR3RsZVNrcElIdGNiaUFnSUNBZ0lDQWdiMkpxVzJ0bGVWMGdQU0JoY21kMWJXVnVkSE5iYVYxYmEyVjVYVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdiMkpxTzF4dWZWeHVYRzVsZUhCdmNuUWdiR1YwSUhSdlUzUnlhVzVuSUQwZ1QySnFaV04wTG5CeWIzUnZkSGx3WlM1MGIxTjBjbWx1Wnp0Y2JseHVMeThnVTI5MWNtTmxaQ0JtY205dElHeHZaR0Z6YUZ4dUx5OGdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMkpsYzNScFpXcHpMMnh2WkdGemFDOWliRzlpTDIxaGMzUmxjaTlNU1VORlRsTkZMblI0ZEZ4dUx5b2daWE5zYVc1MExXUnBjMkZpYkdVZ1puVnVZeTF6ZEhsc1pTQXFMMXh1YkdWMElHbHpSblZ1WTNScGIyNGdQU0JtZFc1amRHbHZiaWgyWVd4MVpTa2dlMXh1SUNCeVpYUjFjbTRnZEhsd1pXOW1JSFpoYkhWbElEMDlQU0FuWm5WdVkzUnBiMjRuTzF4dWZUdGNiaTh2SUdaaGJHeGlZV05ySUdadmNpQnZiR1JsY2lCMlpYSnphVzl1Y3lCdlppQkRhSEp2YldVZ1lXNWtJRk5oWm1GeWFWeHVMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJRzVsZUhRZ0tpOWNibWxtSUNocGMwWjFibU4wYVc5dUtDOTRMeWtwSUh0Y2JpQWdhWE5HZFc1amRHbHZiaUE5SUdaMWJtTjBhVzl1S0haaGJIVmxLU0I3WEc0Z0lDQWdjbVYwZFhKdUlDaGNiaUFnSUNBZ0lIUjVjR1Z2WmlCMllXeDFaU0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KbHh1SUNBZ0lDQWdkRzlUZEhKcGJtY3VZMkZzYkNoMllXeDFaU2tnUFQwOUlDZGJiMkpxWldOMElFWjFibU4wYVc5dVhTZGNiaUFnSUNBcE8xeHVJQ0I5TzF4dWZWeHVaWGh3YjNKMElIc2dhWE5HZFc1amRHbHZiaUI5TzF4dUx5b2daWE5zYVc1MExXVnVZV0pzWlNCbWRXNWpMWE4wZVd4bElDb3ZYRzVjYmk4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCdVpYaDBJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdhWE5CY25KaGVTQTlYRzRnSUVGeWNtRjVMbWx6UVhKeVlYa2dmSHhjYmlBZ1puVnVZM1JwYjI0b2RtRnNkV1VwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkbUZzZFdVZ0ppWWdkSGx3Wlc5bUlIWmhiSFZsSUQwOVBTQW5iMkpxWldOMEoxeHVJQ0FnSUNBZ1B5QjBiMU4wY21sdVp5NWpZV3hzS0haaGJIVmxLU0E5UFQwZ0oxdHZZbXBsWTNRZ1FYSnlZWGxkSjF4dUlDQWdJQ0FnT2lCbVlXeHpaVHRjYmlBZ2ZUdGNibHh1THk4Z1QyeGtaWElnU1VVZ2RtVnljMmx2Ym5NZ1pHOGdibTkwSUdScGNtVmpkR3g1SUhOMWNIQnZjblFnYVc1a1pYaFBaaUJ6YnlCM1pTQnRkWE4wSUdsdGNHeGxiV1Z1ZENCdmRYSWdiM2R1TENCellXUnNlUzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJwYm1SbGVFOW1LR0Z5Y21GNUxDQjJZV3gxWlNrZ2UxeHVJQ0JtYjNJZ0tHeGxkQ0JwSUQwZ01Dd2diR1Z1SUQwZ1lYSnlZWGt1YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNCcFppQW9ZWEp5WVhsYmFWMGdQVDA5SUhaaGJIVmxLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdhVHRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdjbVYwZFhKdUlDMHhPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1pYTmpZWEJsUlhod2NtVnpjMmx2YmloemRISnBibWNwSUh0Y2JpQWdhV1lnS0hSNWNHVnZaaUJ6ZEhKcGJtY2dJVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnTHk4Z1pHOXVKM1FnWlhOallYQmxJRk5oWm1WVGRISnBibWR6TENCemFXNWpaU0IwYUdWNUozSmxJR0ZzY21WaFpIa2djMkZtWlZ4dUlDQWdJR2xtSUNoemRISnBibWNnSmlZZ2MzUnlhVzVuTG5SdlNGUk5UQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJSE4wY21sdVp5NTBiMGhVVFV3b0tUdGNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tITjBjbWx1WnlBOVBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnSnljN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNnaGMzUnlhVzVuS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnYzNSeWFXNW5JQ3NnSnljN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1JtOXlZMlVnWVNCemRISnBibWNnWTI5dWRtVnljMmx2YmlCaGN5QjBhR2x6SUhkcGJHd2dZbVVnWkc5dVpTQmllU0IwYUdVZ1lYQndaVzVrSUhKbFoyRnlaR3hsYzNNZ1lXNWtYRzRnSUNBZ0x5OGdkR2hsSUhKbFoyVjRJSFJsYzNRZ2QybHNiQ0JrYnlCMGFHbHpJSFJ5WVc1emNHRnlaVzUwYkhrZ1ltVm9hVzVrSUhSb1pTQnpZMlZ1WlhNc0lHTmhkWE5wYm1jZ2FYTnpkV1Z6SUdsbVhHNGdJQ0FnTHk4Z1lXNGdiMkpxWldOMEozTWdkRzhnYzNSeWFXNW5JR2hoY3lCbGMyTmhjR1ZrSUdOb1lYSmhZM1JsY25NZ2FXNGdhWFF1WEc0Z0lDQWdjM1J5YVc1bklEMGdKeWNnS3lCemRISnBibWM3WEc0Z0lIMWNibHh1SUNCcFppQW9JWEJ2YzNOcFlteGxMblJsYzNRb2MzUnlhVzVuS1NrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ6ZEhKcGJtYzdYRzRnSUgxY2JpQWdjbVYwZFhKdUlITjBjbWx1Wnk1eVpYQnNZV05sS0dKaFpFTm9ZWEp6TENCbGMyTmhjR1ZEYUdGeUtUdGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdselJXMXdkSGtvZG1Gc2RXVXBJSHRjYmlBZ2FXWWdLQ0YyWVd4MVpTQW1KaUIyWVd4MVpTQWhQVDBnTUNrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwY25WbE8xeHVJQ0I5SUdWc2MyVWdhV1lnS0dselFYSnlZWGtvZG1Gc2RXVXBJQ1ltSUhaaGJIVmxMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwY25WbE8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxSbkpoYldVb2IySnFaV04wS1NCN1hHNGdJR3hsZENCbWNtRnRaU0E5SUdWNGRHVnVaQ2g3ZlN3Z2IySnFaV04wS1R0Y2JpQWdabkpoYldVdVgzQmhjbVZ1ZENBOUlHOWlhbVZqZER0Y2JpQWdjbVYwZFhKdUlHWnlZVzFsTzF4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZbXh2WTJ0UVlYSmhiWE1vY0dGeVlXMXpMQ0JwWkhNcElIdGNiaUFnY0dGeVlXMXpMbkJoZEdnZ1BTQnBaSE03WEc0Z0lISmxkSFZ5YmlCd1lYSmhiWE03WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmhjSEJsYm1SRGIyNTBaWGgwVUdGMGFDaGpiMjUwWlhoMFVHRjBhQ3dnYVdRcElIdGNiaUFnY21WMGRYSnVJQ2hqYjI1MFpYaDBVR0YwYUNBL0lHTnZiblJsZUhSUVlYUm9JQ3NnSnk0bklEb2dKeWNwSUNzZ2FXUTdYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBlcnJvclByb3BzID0gWydkZXNjcmlwdGlvbicsICdmaWxlTmFtZScsICdsaW5lTnVtYmVyJywgJ2VuZExpbmVOdW1iZXInLCAnbWVzc2FnZScsICduYW1lJywgJ251bWJlcicsICdzdGFjayddO1xuXG5mdW5jdGlvbiBFeGNlcHRpb24obWVzc2FnZSwgbm9kZSkge1xuICB2YXIgbG9jID0gbm9kZSAmJiBub2RlLmxvYyxcbiAgICAgIGxpbmUgPSB1bmRlZmluZWQsXG4gICAgICBlbmRMaW5lTnVtYmVyID0gdW5kZWZpbmVkLFxuICAgICAgY29sdW1uID0gdW5kZWZpbmVkLFxuICAgICAgZW5kQ29sdW1uID0gdW5kZWZpbmVkO1xuXG4gIGlmIChsb2MpIHtcbiAgICBsaW5lID0gbG9jLnN0YXJ0LmxpbmU7XG4gICAgZW5kTGluZU51bWJlciA9IGxvYy5lbmQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuICAgIGVuZENvbHVtbiA9IGxvYy5lbmQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICB2YXIgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAodmFyIGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICAgIHRoaXMuZW5kTGluZU51bWJlciA9IGVuZExpbmVOdW1iZXI7XG5cbiAgICAgIC8vIFdvcmsgYXJvdW5kIGlzc3VlIHVuZGVyIHNhZmFyaSB3aGVyZSB3ZSBjYW4ndCBkaXJlY3RseSBzZXQgdGhlIGNvbHVtbiB2YWx1ZVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdjb2x1bW4nLCB7XG4gICAgICAgICAgdmFsdWU6IGNvbHVtbixcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2VuZENvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogZW5kQ29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBlbmRDb2x1bW47XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChub3ApIHtcbiAgICAvKiBJZ25vcmUgaWYgdGhlIGJyb3dzZXIgaXMgdmVyeSBwYXJ0aWN1bGFyICovXG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBFeGNlcHRpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJWNFkyVndkR2x2Ymk1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU96czdRVUZCUVN4SlFVRk5MRlZCUVZVc1IwRkJSeXhEUVVOcVFpeGhRVUZoTEVWQlEySXNWVUZCVlN4RlFVTldMRmxCUVZrc1JVRkRXaXhsUVVGbExFVkJRMllzVTBGQlV5eEZRVU5VTEUxQlFVMHNSVUZEVGl4UlFVRlJMRVZCUTFJc1QwRkJUeXhEUVVOU0xFTkJRVU03TzBGQlJVWXNVMEZCVXl4VFFVRlRMRU5CUVVNc1QwRkJUeXhGUVVGRkxFbEJRVWtzUlVGQlJUdEJRVU5vUXl4TlFVRkpMRWRCUVVjc1IwRkJSeXhKUVVGSkxFbEJRVWtzU1VGQlNTeERRVUZETEVkQlFVYzdUVUZEZUVJc1NVRkJTU3haUVVGQk8wMUJRMG9zWVVGQllTeFpRVUZCTzAxQlEySXNUVUZCVFN4WlFVRkJPMDFCUTA0c1UwRkJVeXhaUVVGQkxFTkJRVU03TzBGQlJWb3NUVUZCU1N4SFFVRkhMRVZCUVVVN1FVRkRVQ3hSUVVGSkxFZEJRVWNzUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNN1FVRkRkRUlzYVVKQlFXRXNSMEZCUnl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF6dEJRVU0zUWl4VlFVRk5MRWRCUVVjc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTTdRVUZETVVJc1lVRkJVeXhIUVVGSExFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRPenRCUVVVelFpeFhRVUZQTEVsQlFVa3NTMEZCU3l4SFFVRkhMRWxCUVVrc1IwRkJSeXhIUVVGSExFZEJRVWNzVFVGQlRTeERRVUZETzBkQlEzaERPenRCUVVWRUxFMUJRVWtzUjBGQlJ5eEhRVUZITEV0QlFVc3NRMEZCUXl4VFFVRlRMRU5CUVVNc1YwRkJWeXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVXNUMEZCVHl4RFFVRkRMRU5CUVVNN096dEJRVWN4UkN4UFFVRkxMRWxCUVVrc1IwRkJSeXhIUVVGSExFTkJRVU1zUlVGQlJTeEhRVUZITEVkQlFVY3NWVUZCVlN4RFFVRkRMRTFCUVUwc1JVRkJSU3hIUVVGSExFVkJRVVVzUlVGQlJUdEJRVU5vUkN4UlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVkQlFVY3NSMEZCUnl4RFFVRkRMRlZCUVZVc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzBkQlF6bERPenM3UVVGSFJDeE5RVUZKTEV0QlFVc3NRMEZCUXl4cFFrRkJhVUlzUlVGQlJUdEJRVU16UWl4VFFVRkxMRU5CUVVNc2FVSkJRV2xDTEVOQlFVTXNTVUZCU1N4RlFVRkZMRk5CUVZNc1EwRkJReXhEUVVGRE8wZEJRekZET3p0QlFVVkVMRTFCUVVrN1FVRkRSaXhSUVVGSkxFZEJRVWNzUlVGQlJUdEJRVU5RTEZWQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRE8wRkJRM1pDTEZWQlFVa3NRMEZCUXl4aFFVRmhMRWRCUVVjc1lVRkJZU3hEUVVGRE96czdPMEZCU1c1RExGVkJRVWtzVFVGQlRTeERRVUZETEdOQlFXTXNSVUZCUlR0QlFVTjZRaXhqUVVGTkxFTkJRVU1zWTBGQll5eERRVUZETEVsQlFVa3NSVUZCUlN4UlFVRlJMRVZCUVVVN1FVRkRjRU1zWlVGQlN5eEZRVUZGTEUxQlFVMDdRVUZEWWl4dlFrRkJWU3hGUVVGRkxFbEJRVWs3VTBGRGFrSXNRMEZCUXl4RFFVRkRPMEZCUTBnc1kwRkJUU3hEUVVGRExHTkJRV01zUTBGQlF5eEpRVUZKTEVWQlFVVXNWMEZCVnl4RlFVRkZPMEZCUTNaRExHVkJRVXNzUlVGQlJTeFRRVUZUTzBGQlEyaENMRzlDUVVGVkxFVkJRVVVzU1VGQlNUdFRRVU5xUWl4RFFVRkRMRU5CUVVNN1QwRkRTaXhOUVVGTk8wRkJRMHdzV1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNN1FVRkRja0lzV1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4VFFVRlRMRU5CUVVNN1QwRkROVUk3UzBGRFJqdEhRVU5HTEVOQlFVTXNUMEZCVHl4SFFVRkhMRVZCUVVVN08wZEJSV0k3UTBGRFJqczdRVUZGUkN4VFFVRlRMRU5CUVVNc1UwRkJVeXhIUVVGSExFbEJRVWtzUzBGQlN5eEZRVUZGTEVOQlFVTTdPM0ZDUVVWdVFpeFRRVUZUSWl3aVptbHNaU0k2SW1WNFkyVndkR2x2Ymk1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbU52Ym5OMElHVnljbTl5VUhKdmNITWdQU0JiWEc0Z0lDZGtaWE5qY21sd2RHbHZiaWNzWEc0Z0lDZG1hV3hsVG1GdFpTY3NYRzRnSUNkc2FXNWxUblZ0WW1WeUp5eGNiaUFnSjJWdVpFeHBibVZPZFcxaVpYSW5MRnh1SUNBbmJXVnpjMkZuWlNjc1hHNGdJQ2R1WVcxbEp5eGNiaUFnSjI1MWJXSmxjaWNzWEc0Z0lDZHpkR0ZqYXlkY2JsMDdYRzVjYm1aMWJtTjBhVzl1SUVWNFkyVndkR2x2YmlodFpYTnpZV2RsTENCdWIyUmxLU0I3WEc0Z0lHeGxkQ0JzYjJNZ1BTQnViMlJsSUNZbUlHNXZaR1V1Ykc5akxGeHVJQ0FnSUd4cGJtVXNYRzRnSUNBZ1pXNWtUR2x1WlU1MWJXSmxjaXhjYmlBZ0lDQmpiMngxYlc0c1hHNGdJQ0FnWlc1a1EyOXNkVzF1TzF4dVhHNGdJR2xtSUNoc2IyTXBJSHRjYmlBZ0lDQnNhVzVsSUQwZ2JHOWpMbk4wWVhKMExteHBibVU3WEc0Z0lDQWdaVzVrVEdsdVpVNTFiV0psY2lBOUlHeHZZeTVsYm1RdWJHbHVaVHRjYmlBZ0lDQmpiMngxYlc0Z1BTQnNiMk11YzNSaGNuUXVZMjlzZFcxdU8xeHVJQ0FnSUdWdVpFTnZiSFZ0YmlBOUlHeHZZeTVsYm1RdVkyOXNkVzF1TzF4dVhHNGdJQ0FnYldWemMyRm5aU0FyUFNBbklDMGdKeUFySUd4cGJtVWdLeUFuT2ljZ0t5QmpiMngxYlc0N1hHNGdJSDFjYmx4dUlDQnNaWFFnZEcxd0lEMGdSWEp5YjNJdWNISnZkRzkwZVhCbExtTnZibk4wY25WamRHOXlMbU5oYkd3b2RHaHBjeXdnYldWemMyRm5aU2s3WEc1Y2JpQWdMeThnVlc1bWIzSjBkVzVoZEdWc2VTQmxjbkp2Y25NZ1lYSmxJRzV2ZENCbGJuVnRaWEpoWW14bElHbHVJRU5vY205dFpTQW9ZWFFnYkdWaGMzUXBMQ0J6YnlCZ1ptOXlJSEJ5YjNBZ2FXNGdkRzF3WUNCa2IyVnpiaWQwSUhkdmNtc3VYRzRnSUdadmNpQW9iR1YwSUdsa2VDQTlJREE3SUdsa2VDQThJR1Z5Y205eVVISnZjSE11YkdWdVozUm9PeUJwWkhnckt5a2dlMXh1SUNBZ0lIUm9hWE5iWlhKeWIzSlFjbTl3YzF0cFpIaGRYU0E5SUhSdGNGdGxjbkp2Y2xCeWIzQnpXMmxrZUYxZE8xeHVJQ0I5WEc1Y2JpQWdMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJR1ZzYzJVZ0tpOWNiaUFnYVdZZ0tFVnljbTl5TG1OaGNIUjFjbVZUZEdGamExUnlZV05sS1NCN1hHNGdJQ0FnUlhKeWIzSXVZMkZ3ZEhWeVpWTjBZV05yVkhKaFkyVW9kR2hwY3l3Z1JYaGpaWEIwYVc5dUtUdGNiaUFnZlZ4dVhHNGdJSFJ5ZVNCN1hHNGdJQ0FnYVdZZ0tHeHZZeWtnZTF4dUlDQWdJQ0FnZEdocGN5NXNhVzVsVG5WdFltVnlJRDBnYkdsdVpUdGNiaUFnSUNBZ0lIUm9hWE11Wlc1a1RHbHVaVTUxYldKbGNpQTlJR1Z1WkV4cGJtVk9kVzFpWlhJN1hHNWNiaUFnSUNBZ0lDOHZJRmR2Y21zZ1lYSnZkVzVrSUdsemMzVmxJSFZ1WkdWeUlITmhabUZ5YVNCM2FHVnlaU0IzWlNCallXNG5kQ0JrYVhKbFkzUnNlU0J6WlhRZ2RHaGxJR052YkhWdGJpQjJZV3gxWlZ4dUlDQWdJQ0FnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUc1bGVIUWdLaTljYmlBZ0lDQWdJR2xtSUNoUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa3BJSHRjYmlBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNkamIyeDFiVzRuTENCN1hHNGdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHTnZiSFZ0Yml4Y2JpQWdJQ0FnSUNBZ0lDQmxiblZ0WlhKaFlteGxPaUIwY25WbFhHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHaHBjeXdnSjJWdVpFTnZiSFZ0Ymljc0lIdGNiaUFnSUNBZ0lDQWdJQ0IyWVd4MVpUb2daVzVrUTI5c2RXMXVMRnh1SUNBZ0lDQWdJQ0FnSUdWdWRXMWxjbUZpYkdVNklIUnlkV1ZjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbU52YkhWdGJpQTlJR052YkhWdGJqdGNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJtUkRiMngxYlc0Z1BTQmxibVJEYjJ4MWJXNDdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUdOaGRHTm9JQ2h1YjNBcElIdGNiaUFnSUNBdktpQkpaMjV2Y21VZ2FXWWdkR2hsSUdKeWIzZHpaWElnYVhNZ2RtVnllU0J3WVhKMGFXTjFiR0Z5SUNvdlhHNGdJSDFjYm4xY2JseHVSWGhqWlhCMGFXOXVMbkJ5YjNSdmRIbHdaU0E5SUc1bGR5QkZjbkp2Y2lncE8xeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQkZlR05sY0hScGIyNDdYRzRpWFgwPVxuIiwibW9kdWxlLmV4cG9ydHMgPSBqYWhpYUhlbHBlcnM7IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX2hhbmRsZWJhcnNSdW50aW1lID0gcmVxdWlyZSgnLi9oYW5kbGViYXJzLnJ1bnRpbWUnKTtcblxudmFyIF9oYW5kbGViYXJzUnVudGltZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzUnVudGltZSk7XG5cbi8vIENvbXBpbGVyIGltcG9ydHNcblxudmFyIF9oYW5kbGViYXJzQ29tcGlsZXJBc3QgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0Jyk7XG5cbnZhciBfaGFuZGxlYmFyc0NvbXBpbGVyQXN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hhbmRsZWJhcnNDb21waWxlckFzdCk7XG5cbnZhciBfaGFuZGxlYmFyc0NvbXBpbGVyQmFzZSA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJyk7XG5cbnZhciBfaGFuZGxlYmFyc0NvbXBpbGVyQ29tcGlsZXIgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvY29tcGlsZXIvY29tcGlsZXInKTtcblxudmFyIF9oYW5kbGViYXJzQ29tcGlsZXJKYXZhc2NyaXB0Q29tcGlsZXIgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvY29tcGlsZXIvamF2YXNjcmlwdC1jb21waWxlcicpO1xuXG52YXIgX2hhbmRsZWJhcnNDb21waWxlckphdmFzY3JpcHRDb21waWxlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzQ29tcGlsZXJKYXZhc2NyaXB0Q29tcGlsZXIpO1xuXG52YXIgX2hhbmRsZWJhcnNDb21waWxlclZpc2l0b3IgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvY29tcGlsZXIvdmlzaXRvcicpO1xuXG52YXIgX2hhbmRsZWJhcnNDb21waWxlclZpc2l0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGFuZGxlYmFyc0NvbXBpbGVyVmlzaXRvcik7XG5cbnZhciBfaGFuZGxlYmFyc05vQ29uZmxpY3QgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnKTtcblxudmFyIF9oYW5kbGViYXJzTm9Db25mbGljdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzTm9Db25mbGljdCk7XG5cbnZhciBfY3JlYXRlID0gX2hhbmRsZWJhcnNSdW50aW1lMlsnZGVmYXVsdCddLmNyZWF0ZTtcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgdmFyIGhiID0gX2NyZWF0ZSgpO1xuXG4gIGhiLmNvbXBpbGUgPSBmdW5jdGlvbiAoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gX2hhbmRsZWJhcnNDb21waWxlckNvbXBpbGVyLmNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uIChpbnB1dCwgb3B0aW9ucykge1xuICAgIHJldHVybiBfaGFuZGxlYmFyc0NvbXBpbGVyQ29tcGlsZXIucHJlY29tcGlsZShpbnB1dCwgb3B0aW9ucywgaGIpO1xuICB9O1xuXG4gIGhiLkFTVCA9IF9oYW5kbGViYXJzQ29tcGlsZXJBc3QyWydkZWZhdWx0J107XG4gIGhiLkNvbXBpbGVyID0gX2hhbmRsZWJhcnNDb21waWxlckNvbXBpbGVyLkNvbXBpbGVyO1xuICBoYi5KYXZhU2NyaXB0Q29tcGlsZXIgPSBfaGFuZGxlYmFyc0NvbXBpbGVySmF2YXNjcmlwdENvbXBpbGVyMlsnZGVmYXVsdCddO1xuICBoYi5QYXJzZXIgPSBfaGFuZGxlYmFyc0NvbXBpbGVyQmFzZS5wYXJzZXI7XG4gIGhiLnBhcnNlID0gX2hhbmRsZWJhcnNDb21waWxlckJhc2UucGFyc2U7XG4gIGhiLnBhcnNlV2l0aG91dFByb2Nlc3NpbmcgPSBfaGFuZGxlYmFyc0NvbXBpbGVyQmFzZS5wYXJzZVdpdGhvdXRQcm9jZXNzaW5nO1xuXG4gIHJldHVybiBoYjtcbn1cblxudmFyIGluc3QgPSBjcmVhdGUoKTtcbmluc3QuY3JlYXRlID0gY3JlYXRlO1xuXG5faGFuZGxlYmFyc05vQ29uZmxpY3QyWydkZWZhdWx0J10oaW5zdCk7XG5cbmluc3QuVmlzaXRvciA9IF9oYW5kbGViYXJzQ29tcGlsZXJWaXNpdG9yMlsnZGVmYXVsdCddO1xuXG5pbnN0WydkZWZhdWx0J10gPSBpbnN0O1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBpbnN0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN096czdPenM3YVVOQlFXOUNMSE5DUVVGelFqczdPenM3TzNGRFFVY3hRaXd5UWtGQk1rSTdPenM3YzBOQlMzQkRMRFJDUVVFMFFqczdNRU5CUTFjc1owTkJRV2RET3p0dlJFRkRMME1zTWtOQlFUSkRPenM3TzNsRFFVTjBSQ3dyUWtGQkswSTdPenM3YjBOQlJUVkNMREJDUVVFd1FqczdPenRCUVVWcVJDeEpRVUZKTEU5QlFVOHNSMEZCUnl3clFrRkJVU3hOUVVGTkxFTkJRVU03UVVGRE4wSXNVMEZCVXl4TlFVRk5MRWRCUVVjN1FVRkRhRUlzVFVGQlNTeEZRVUZGTEVkQlFVY3NUMEZCVHl4RlFVRkZMRU5CUVVNN08wRkJSVzVDTEVsQlFVVXNRMEZCUXl4UFFVRlBMRWRCUVVjc1ZVRkJVeXhMUVVGTExFVkJRVVVzVDBGQlR5eEZRVUZGTzBGQlEzQkRMRmRCUVU4c2IwTkJRVkVzUzBGQlN5eEZRVUZGTEU5QlFVOHNSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJRenRIUVVOd1F5eERRVUZETzBGQlEwWXNTVUZCUlN4RFFVRkRMRlZCUVZVc1IwRkJSeXhWUVVGVExFdEJRVXNzUlVGQlJTeFBRVUZQTEVWQlFVVTdRVUZEZGtNc1YwRkJUeXgxUTBGQlZ5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRE8wZEJRM1pETEVOQlFVTTdPMEZCUlVZc1NVRkJSU3hEUVVGRExFZEJRVWNzY1VOQlFVMHNRMEZCUXp0QlFVTmlMRWxCUVVVc1EwRkJReXhSUVVGUkxIVkRRVUZYTEVOQlFVTTdRVUZEZGtJc1NVRkJSU3hEUVVGRExHdENRVUZyUWl4dlJFRkJjVUlzUTBGQlF6dEJRVU16UXl4SlFVRkZMRU5CUVVNc1RVRkJUU3hwUTBGQlV5eERRVUZETzBGQlEyNUNMRWxCUVVVc1EwRkJReXhMUVVGTExHZERRVUZSTEVOQlFVTTdRVUZEYWtJc1NVRkJSU3hEUVVGRExITkNRVUZ6UWl4cFJFRkJlVUlzUTBGQlF6czdRVUZGYmtRc1UwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFdEczdRVUZGUkN4SlFVRkpMRWxCUVVrc1IwRkJSeXhOUVVGTkxFVkJRVVVzUTBGQlF6dEJRVU53UWl4SlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF6czdRVUZGY2tJc2EwTkJRVmNzU1VGQlNTeERRVUZETEVOQlFVTTdPMEZCUldwQ0xFbEJRVWtzUTBGQlF5eFBRVUZQTEhsRFFVRlZMRU5CUVVNN08wRkJSWFpDTEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhKUVVGSkxFTkJRVU03TzNGQ1FVVlNMRWxCUVVraUxDSm1hV3hsSWpvaWFHRnVaR3hsWW1GeWN5NXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0J5ZFc1MGFXMWxJR1p5YjIwZ0p5NHZhR0Z1Wkd4bFltRnljeTV5ZFc1MGFXMWxKenRjYmx4dUx5OGdRMjl0Y0dsc1pYSWdhVzF3YjNKMGMxeHVhVzF3YjNKMElFRlRWQ0JtY205dElDY3VMMmhoYm1Sc1pXSmhjbk12WTI5dGNHbHNaWEl2WVhOMEp6dGNibWx0Y0c5eWRDQjdYRzRnSUhCaGNuTmxjaUJoY3lCUVlYSnpaWElzWEc0Z0lIQmhjbk5sTEZ4dUlDQndZWEp6WlZkcGRHaHZkWFJRY205alpYTnphVzVuWEc1OUlHWnliMjBnSnk0dmFHRnVaR3hsWW1GeWN5OWpiMjF3YVd4bGNpOWlZWE5sSnp0Y2JtbHRjRzl5ZENCN0lFTnZiWEJwYkdWeUxDQmpiMjF3YVd4bExDQndjbVZqYjIxd2FXeGxJSDBnWm5KdmJTQW5MaTlvWVc1a2JHVmlZWEp6TDJOdmJYQnBiR1Z5TDJOdmJYQnBiR1Z5Snp0Y2JtbHRjRzl5ZENCS1lYWmhVMk55YVhCMFEyOXRjR2xzWlhJZ1puSnZiU0FuTGk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwycGhkbUZ6WTNKcGNIUXRZMjl0Y0dsc1pYSW5PMXh1YVcxd2IzSjBJRlpwYzJsMGIzSWdabkp2YlNBbkxpOW9ZVzVrYkdWaVlYSnpMMk52YlhCcGJHVnlMM1pwYzJsMGIzSW5PMXh1WEc1cGJYQnZjblFnYm05RGIyNW1iR2xqZENCbWNtOXRJQ2N1TDJoaGJtUnNaV0poY25NdmJtOHRZMjl1Wm14cFkzUW5PMXh1WEc1c1pYUWdYMk55WldGMFpTQTlJSEoxYm5ScGJXVXVZM0psWVhSbE8xeHVablZ1WTNScGIyNGdZM0psWVhSbEtDa2dlMXh1SUNCc1pYUWdhR0lnUFNCZlkzSmxZWFJsS0NrN1hHNWNiaUFnYUdJdVkyOXRjR2xzWlNBOUlHWjFibU4wYVc5dUtHbHVjSFYwTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnY21WMGRYSnVJR052YlhCcGJHVW9hVzV3ZFhRc0lHOXdkR2x2Ym5Nc0lHaGlLVHRjYmlBZ2ZUdGNiaUFnYUdJdWNISmxZMjl0Y0dsc1pTQTlJR1oxYm1OMGFXOXVLR2x1Y0hWMExDQnZjSFJwYjI1ektTQjdYRzRnSUNBZ2NtVjBkWEp1SUhCeVpXTnZiWEJwYkdVb2FXNXdkWFFzSUc5d2RHbHZibk1zSUdoaUtUdGNiaUFnZlR0Y2JseHVJQ0JvWWk1QlUxUWdQU0JCVTFRN1hHNGdJR2hpTGtOdmJYQnBiR1Z5SUQwZ1EyOXRjR2xzWlhJN1hHNGdJR2hpTGtwaGRtRlRZM0pwY0hSRGIyMXdhV3hsY2lBOUlFcGhkbUZUWTNKcGNIUkRiMjF3YVd4bGNqdGNiaUFnYUdJdVVHRnljMlZ5SUQwZ1VHRnljMlZ5TzF4dUlDQm9ZaTV3WVhKelpTQTlJSEJoY25ObE8xeHVJQ0JvWWk1d1lYSnpaVmRwZEdodmRYUlFjbTlqWlhOemFXNW5JRDBnY0dGeWMyVlhhWFJvYjNWMFVISnZZMlZ6YzJsdVp6dGNibHh1SUNCeVpYUjFjbTRnYUdJN1hHNTlYRzVjYm14bGRDQnBibk4wSUQwZ1kzSmxZWFJsS0NrN1hHNXBibk4wTG1OeVpXRjBaU0E5SUdOeVpXRjBaVHRjYmx4dWJtOURiMjVtYkdsamRDaHBibk4wS1R0Y2JseHVhVzV6ZEM1V2FYTnBkRzl5SUQwZ1ZtbHphWFJ2Y2p0Y2JseHVhVzV6ZEZzblpHVm1ZWFZzZENkZElEMGdhVzV6ZER0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2FXNXpkRHRjYmlKZGZRPT1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuSGFuZGxlYmFyc0Vudmlyb25tZW50ID0gSGFuZGxlYmFyc0Vudmlyb25tZW50O1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgX2V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4vZXhjZXB0aW9uJyk7XG5cbnZhciBfZXhjZXB0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4Y2VwdGlvbik7XG5cbnZhciBfaGVscGVycyA9IHJlcXVpcmUoJy4vaGVscGVycycpO1xuXG52YXIgX2RlY29yYXRvcnMgPSByZXF1aXJlKCcuL2RlY29yYXRvcnMnKTtcblxudmFyIF9sb2dnZXIgPSByZXF1aXJlKCcuL2xvZ2dlcicpO1xuXG52YXIgX2xvZ2dlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2dnZXIpO1xuXG52YXIgX2ludGVybmFsUHJvdG9BY2Nlc3MgPSByZXF1aXJlKCcuL2ludGVybmFsL3Byb3RvLWFjY2VzcycpO1xuXG52YXIgVkVSU0lPTiA9ICc0LjcuNyc7XG5leHBvcnRzLlZFUlNJT04gPSBWRVJTSU9OO1xudmFyIENPTVBJTEVSX1JFVklTSU9OID0gODtcbmV4cG9ydHMuQ09NUElMRVJfUkVWSVNJT04gPSBDT01QSUxFUl9SRVZJU0lPTjtcbnZhciBMQVNUX0NPTVBBVElCTEVfQ09NUElMRVJfUkVWSVNJT04gPSA3O1xuXG5leHBvcnRzLkxBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTiA9IExBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTjtcbnZhciBSRVZJU0lPTl9DSEFOR0VTID0ge1xuICAxOiAnPD0gMS4wLnJjLjInLCAvLyAxLjAucmMuMiBpcyBhY3R1YWxseSByZXYyIGJ1dCBkb2Vzbid0IHJlcG9ydCBpdFxuICAyOiAnPT0gMS4wLjAtcmMuMycsXG4gIDM6ICc9PSAxLjAuMC1yYy40JyxcbiAgNDogJz09IDEueC54JyxcbiAgNTogJz09IDIuMC4wLWFscGhhLngnLFxuICA2OiAnPj0gMi4wLjAtYmV0YS4xJyxcbiAgNzogJz49IDQuMC4wIDw0LjMuMCcsXG4gIDg6ICc+PSA0LjMuMCdcbn07XG5cbmV4cG9ydHMuUkVWSVNJT05fQ0hBTkdFUyA9IFJFVklTSU9OX0NIQU5HRVM7XG52YXIgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5mdW5jdGlvbiBIYW5kbGViYXJzRW52aXJvbm1lbnQoaGVscGVycywgcGFydGlhbHMsIGRlY29yYXRvcnMpIHtcbiAgdGhpcy5oZWxwZXJzID0gaGVscGVycyB8fCB7fTtcbiAgdGhpcy5wYXJ0aWFscyA9IHBhcnRpYWxzIHx8IHt9O1xuICB0aGlzLmRlY29yYXRvcnMgPSBkZWNvcmF0b3JzIHx8IHt9O1xuXG4gIF9oZWxwZXJzLnJlZ2lzdGVyRGVmYXVsdEhlbHBlcnModGhpcyk7XG4gIF9kZWNvcmF0b3JzLnJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnModGhpcyk7XG59XG5cbkhhbmRsZWJhcnNFbnZpcm9ubWVudC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBIYW5kbGViYXJzRW52aXJvbm1lbnQsXG5cbiAgbG9nZ2VyOiBfbG9nZ2VyMlsnZGVmYXVsdCddLFxuICBsb2c6IF9sb2dnZXIyWydkZWZhdWx0J10ubG9nLFxuXG4gIHJlZ2lzdGVySGVscGVyOiBmdW5jdGlvbiByZWdpc3RlckhlbHBlcihuYW1lLCBmbikge1xuICAgIGlmIChfdXRpbHMudG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTtcbiAgICAgIH1cbiAgICAgIF91dGlscy5leHRlbmQodGhpcy5oZWxwZXJzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5oZWxwZXJzW25hbWVdID0gZm47XG4gICAgfVxuICB9LFxuICB1bnJlZ2lzdGVySGVscGVyOiBmdW5jdGlvbiB1bnJlZ2lzdGVySGVscGVyKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24gcmVnaXN0ZXJQYXJ0aWFsKG5hbWUsIHBhcnRpYWwpIHtcbiAgICBpZiAoX3V0aWxzLnRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIF91dGlscy5leHRlbmQodGhpcy5wYXJ0aWFscywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcGFydGlhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ0F0dGVtcHRpbmcgdG8gcmVnaXN0ZXIgYSBwYXJ0aWFsIGNhbGxlZCBcIicgKyBuYW1lICsgJ1wiIGFzIHVuZGVmaW5lZCcpO1xuICAgICAgfVxuICAgICAgdGhpcy5wYXJ0aWFsc1tuYW1lXSA9IHBhcnRpYWw7XG4gICAgfVxuICB9LFxuICB1bnJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24gdW5yZWdpc3RlclBhcnRpYWwobmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLnBhcnRpYWxzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyRGVjb3JhdG9yOiBmdW5jdGlvbiByZWdpc3RlckRlY29yYXRvcihuYW1lLCBmbikge1xuICAgIGlmIChfdXRpbHMudG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGRlY29yYXRvcnMnKTtcbiAgICAgIH1cbiAgICAgIF91dGlscy5leHRlbmQodGhpcy5kZWNvcmF0b3JzLCBuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kZWNvcmF0b3JzW25hbWVdID0gZm47XG4gICAgfVxuICB9LFxuICB1bnJlZ2lzdGVyRGVjb3JhdG9yOiBmdW5jdGlvbiB1bnJlZ2lzdGVyRGVjb3JhdG9yKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5kZWNvcmF0b3JzW25hbWVdO1xuICB9LFxuICAvKipcbiAgICogUmVzZXQgdGhlIG1lbW9yeSBvZiBpbGxlZ2FsIHByb3BlcnR5IGFjY2Vzc2VzIHRoYXQgaGF2ZSBhbHJlYWR5IGJlZW4gbG9nZ2VkLlxuICAgKiBAZGVwcmVjYXRlZCBzaG91bGQgb25seSBiZSB1c2VkIGluIGhhbmRsZWJhcnMgdGVzdC1jYXNlc1xuICAgKi9cbiAgcmVzZXRMb2dnZWRQcm9wZXJ0eUFjY2Vzc2VzOiBmdW5jdGlvbiByZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMoKSB7XG4gICAgX2ludGVybmFsUHJvdG9BY2Nlc3MucmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCk7XG4gIH1cbn07XG5cbnZhciBsb2cgPSBfbG9nZ2VyMlsnZGVmYXVsdCddLmxvZztcblxuZXhwb3J0cy5sb2cgPSBsb2c7XG5leHBvcnRzLmNyZWF0ZUZyYW1lID0gX3V0aWxzLmNyZWF0ZUZyYW1lO1xuZXhwb3J0cy5sb2dnZXIgPSBfbG9nZ2VyMlsnZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMkpoYzJVdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN2NVSkJRVGhETEZOQlFWTTdPM2xDUVVOcVF5eGhRVUZoT3pzN08zVkNRVU5KTEZkQlFWYzdPekJDUVVOU0xHTkJRV003TzNOQ1FVTnlReXhWUVVGVk96czdPMjFEUVVOVExIbENRVUY1UWpzN1FVRkZlRVFzU1VGQlRTeFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRPenRCUVVONFFpeEpRVUZOTEdsQ1FVRnBRaXhIUVVGSExFTkJRVU1zUTBGQlF6czdRVUZETlVJc1NVRkJUU3hwUTBGQmFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN096dEJRVVUxUXl4SlFVRk5MR2RDUVVGblFpeEhRVUZITzBGQlF6bENMRWRCUVVNc1JVRkJSU3hoUVVGaE8wRkJRMmhDTEVkQlFVTXNSVUZCUlN4bFFVRmxPMEZCUTJ4Q0xFZEJRVU1zUlVGQlJTeGxRVUZsTzBGQlEyeENMRWRCUVVNc1JVRkJSU3hWUVVGVk8wRkJRMklzUjBGQlF5eEZRVUZGTEd0Q1FVRnJRanRCUVVOeVFpeEhRVUZETEVWQlFVVXNhVUpCUVdsQ08wRkJRM0JDTEVkQlFVTXNSVUZCUlN4cFFrRkJhVUk3UVVGRGNFSXNSMEZCUXl4RlFVRkZMRlZCUVZVN1EwRkRaQ3hEUVVGRE96czdRVUZGUml4SlFVRk5MRlZCUVZVc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXpzN1FVRkZPVUlzVTBGQlV5eHhRa0ZCY1VJc1EwRkJReXhQUVVGUExFVkJRVVVzVVVGQlVTeEZRVUZGTEZWQlFWVXNSVUZCUlR0QlFVTnVSU3hOUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEU5QlFVOHNTVUZCU1N4RlFVRkZMRU5CUVVNN1FVRkROMElzVFVGQlNTeERRVUZETEZGQlFWRXNSMEZCUnl4UlFVRlJMRWxCUVVrc1JVRkJSU3hEUVVGRE8wRkJReTlDTEUxQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc1ZVRkJWU3hKUVVGSkxFVkJRVVVzUTBGQlF6czdRVUZGYmtNc2EwTkJRWFZDTEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUXpkQ0xIZERRVUV3UWl4SlFVRkpMRU5CUVVNc1EwRkJRenREUVVOcVF6czdRVUZGUkN4eFFrRkJjVUlzUTBGQlF5eFRRVUZUTEVkQlFVYzdRVUZEYUVNc1lVRkJWeXhGUVVGRkxIRkNRVUZ4UWpzN1FVRkZiRU1zVVVGQlRTeHhRa0ZCVVR0QlFVTmtMRXRCUVVjc1JVRkJSU3h2UWtGQlR5eEhRVUZIT3p0QlFVVm1MR2RDUVVGakxFVkJRVVVzZDBKQlFWTXNTVUZCU1N4RlFVRkZMRVZCUVVVc1JVRkJSVHRCUVVOcVF5eFJRVUZKTEdkQ1FVRlRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eFZRVUZWTEVWQlFVVTdRVUZEZEVNc1ZVRkJTU3hGUVVGRkxFVkJRVVU3UVVGRFRpeGpRVUZOTERKQ1FVRmpMSGxEUVVGNVF5eERRVUZETEVOQlFVTTdUMEZEYUVVN1FVRkRSQ3h2UWtGQlR5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRelZDTEUxQlFVMDdRVUZEVEN4VlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0TFFVTjZRanRIUVVOR08wRkJRMFFzYTBKQlFXZENMRVZCUVVVc01FSkJRVk1zU1VGQlNTeEZRVUZGTzBGQlF5OUNMRmRCUVU4c1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0SFFVTXpRanM3UVVGRlJDeHBRa0ZCWlN4RlFVRkZMSGxDUVVGVExFbEJRVWtzUlVGQlJTeFBRVUZQTEVWQlFVVTdRVUZEZGtNc1VVRkJTU3huUWtGQlV5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1ZVRkJWU3hGUVVGRk8wRkJRM1JETEc5Q1FVRlBMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTMEZETjBJc1RVRkJUVHRCUVVOTUxGVkJRVWtzVDBGQlR5eFBRVUZQTEV0QlFVc3NWMEZCVnl4RlFVRkZPMEZCUTJ4RExHTkJRVTBzZVVWQlEzZERMRWxCUVVrc2IwSkJRMnBFTEVOQlFVTTdUMEZEU0R0QlFVTkVMRlZCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NUMEZCVHl4RFFVRkRPMHRCUXk5Q08wZEJRMFk3UVVGRFJDeHRRa0ZCYVVJc1JVRkJSU3d5UWtGQlV5eEpRVUZKTEVWQlFVVTdRVUZEYUVNc1YwRkJUeXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMGRCUXpWQ096dEJRVVZFTEcxQ1FVRnBRaXhGUVVGRkxESkNRVUZUTEVsQlFVa3NSVUZCUlN4RlFVRkZMRVZCUVVVN1FVRkRjRU1zVVVGQlNTeG5Ra0ZCVXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzVlVGQlZTeEZRVUZGTzBGQlEzUkRMRlZCUVVrc1JVRkJSU3hGUVVGRk8wRkJRMDRzWTBGQlRTd3lRa0ZCWXl3MFEwRkJORU1zUTBGQlF5eERRVUZETzA5QlEyNUZPMEZCUTBRc2IwSkJRVThzU1VGQlNTeERRVUZETEZWQlFWVXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRMUVVNdlFpeE5RVUZOTzBGQlEwd3NWVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdTMEZETlVJN1IwRkRSanRCUVVORUxIRkNRVUZ0UWl4RlFVRkZMRFpDUVVGVExFbEJRVWtzUlVGQlJUdEJRVU5zUXl4WFFVRlBMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdSMEZET1VJN096czdPMEZCUzBRc05rSkJRVEpDTEVWQlFVRXNkVU5CUVVjN1FVRkROVUlzWjBSQlFYVkNMRU5CUVVNN1IwRkRla0k3UTBGRFJpeERRVUZET3p0QlFVVkxMRWxCUVVrc1IwRkJSeXhIUVVGSExHOUNRVUZQTEVkQlFVY3NRMEZCUXpzN08xRkJSVzVDTEZkQlFWYzdVVUZCUlN4TlFVRk5JaXdpWm1sc1pTSTZJbUpoYzJVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdleUJqY21WaGRHVkdjbUZ0WlN3Z1pYaDBaVzVrTENCMGIxTjBjbWx1WnlCOUlHWnliMjBnSnk0dmRYUnBiSE1uTzF4dWFXMXdiM0owSUVWNFkyVndkR2x2YmlCbWNtOXRJQ2N1TDJWNFkyVndkR2x2YmljN1hHNXBiWEJ2Y25RZ2V5QnlaV2RwYzNSbGNrUmxabUYxYkhSSVpXeHdaWEp6SUgwZ1puSnZiU0FuTGk5b1pXeHdaWEp6Snp0Y2JtbHRjRzl5ZENCN0lISmxaMmx6ZEdWeVJHVm1ZWFZzZEVSbFkyOXlZWFJ2Y25NZ2ZTQm1jbTl0SUNjdUwyUmxZMjl5WVhSdmNuTW5PMXh1YVcxd2IzSjBJR3h2WjJkbGNpQm1jbTl0SUNjdUwyeHZaMmRsY2ljN1hHNXBiWEJ2Y25RZ2V5QnlaWE5sZEV4dloyZGxaRkJ5YjNCbGNuUnBaWE1nZlNCbWNtOXRJQ2N1TDJsdWRHVnlibUZzTDNCeWIzUnZMV0ZqWTJWemN5YzdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQldSVkpUU1U5T0lEMGdKelF1Tnk0M0p6dGNibVY0Y0c5eWRDQmpiMjV6ZENCRFQwMVFTVXhGVWw5U1JWWkpVMGxQVGlBOUlEZzdYRzVsZUhCdmNuUWdZMjl1YzNRZ1RFRlRWRjlEVDAxUVFWUkpRa3hGWDBOUFRWQkpURVZTWDFKRlZrbFRTVTlPSUQwZ056dGNibHh1Wlhod2IzSjBJR052Ym5OMElGSkZWa2xUU1U5T1gwTklRVTVIUlZNZ1BTQjdYRzRnSURFNklDYzhQU0F4TGpBdWNtTXVNaWNzSUM4dklERXVNQzV5WXk0eUlHbHpJR0ZqZEhWaGJHeDVJSEpsZGpJZ1luVjBJR1J2WlhOdUozUWdjbVZ3YjNKMElHbDBYRzRnSURJNklDYzlQU0F4TGpBdU1DMXlZeTR6Snl4Y2JpQWdNem9nSnowOUlERXVNQzR3TFhKakxqUW5MRnh1SUNBME9pQW5QVDBnTVM1NExuZ25MRnh1SUNBMU9pQW5QVDBnTWk0d0xqQXRZV3h3YUdFdWVDY3NYRzRnSURZNklDYytQU0F5TGpBdU1DMWlaWFJoTGpFbkxGeHVJQ0EzT2lBblBqMGdOQzR3TGpBZ1BEUXVNeTR3Snl4Y2JpQWdPRG9nSno0OUlEUXVNeTR3SjF4dWZUdGNibHh1WTI5dWMzUWdiMkpxWldOMFZIbHdaU0E5SUNkYmIySnFaV04wSUU5aWFtVmpkRjBuTzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1NHRnVaR3hsWW1GeWMwVnVkbWx5YjI1dFpXNTBLR2hsYkhCbGNuTXNJSEJoY25ScFlXeHpMQ0JrWldOdmNtRjBiM0p6S1NCN1hHNGdJSFJvYVhNdWFHVnNjR1Z5Y3lBOUlHaGxiSEJsY25NZ2ZId2dlMzA3WEc0Z0lIUm9hWE11Y0dGeWRHbGhiSE1nUFNCd1lYSjBhV0ZzY3lCOGZDQjdmVHRjYmlBZ2RHaHBjeTVrWldOdmNtRjBiM0p6SUQwZ1pHVmpiM0poZEc5eWN5QjhmQ0I3ZlR0Y2JseHVJQ0J5WldkcGMzUmxja1JsWm1GMWJIUklaV3h3WlhKektIUm9hWE1wTzF4dUlDQnlaV2RwYzNSbGNrUmxabUYxYkhSRVpXTnZjbUYwYjNKektIUm9hWE1wTzF4dWZWeHVYRzVJWVc1a2JHVmlZWEp6Ulc1MmFYSnZibTFsYm5RdWNISnZkRzkwZVhCbElEMGdlMXh1SUNCamIyNXpkSEoxWTNSdmNqb2dTR0Z1Wkd4bFltRnljMFZ1ZG1seWIyNXRaVzUwTEZ4dVhHNGdJR3h2WjJkbGNqb2diRzluWjJWeUxGeHVJQ0JzYjJjNklHeHZaMmRsY2k1c2IyY3NYRzVjYmlBZ2NtVm5hWE4wWlhKSVpXeHdaWEk2SUdaMWJtTjBhVzl1S0c1aGJXVXNJR1p1S1NCN1hHNGdJQ0FnYVdZZ0tIUnZVM1J5YVc1bkxtTmhiR3dvYm1GdFpTa2dQVDA5SUc5aWFtVmpkRlI1Y0dVcElIdGNiaUFnSUNBZ0lHbG1JQ2htYmlrZ2UxeHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLQ2RCY21jZ2JtOTBJSE4xY0hCdmNuUmxaQ0IzYVhSb0lHMTFiSFJwY0d4bElHaGxiSEJsY25NbktUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHVjRkR1Z1WkNoMGFHbHpMbWhsYkhCbGNuTXNJRzVoYldVcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IwYUdsekxtaGxiSEJsY25OYmJtRnRaVjBnUFNCbWJqdGNiaUFnSUNCOVhHNGdJSDBzWEc0Z0lIVnVjbVZuYVhOMFpYSklaV3h3WlhJNklHWjFibU4wYVc5dUtHNWhiV1VwSUh0Y2JpQWdJQ0JrWld4bGRHVWdkR2hwY3k1b1pXeHdaWEp6VzI1aGJXVmRPMXh1SUNCOUxGeHVYRzRnSUhKbFoybHpkR1Z5VUdGeWRHbGhiRG9nWm5WdVkzUnBiMjRvYm1GdFpTd2djR0Z5ZEdsaGJDa2dlMXh1SUNBZ0lHbG1JQ2gwYjFOMGNtbHVaeTVqWVd4c0tHNWhiV1VwSUQwOVBTQnZZbXBsWTNSVWVYQmxLU0I3WEc0Z0lDQWdJQ0JsZUhSbGJtUW9kR2hwY3k1d1lYSjBhV0ZzY3l3Z2JtRnRaU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdjR0Z5ZEdsaGJDQTlQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVY0WTJWd2RHbHZiaWhjYmlBZ0lDQWdJQ0FnSUNCZ1FYUjBaVzF3ZEdsdVp5QjBieUJ5WldkcGMzUmxjaUJoSUhCaGNuUnBZV3dnWTJGc2JHVmtJRndpSkh0dVlXMWxmVndpSUdGeklIVnVaR1ZtYVc1bFpHQmNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFJvYVhNdWNHRnlkR2xoYkhOYmJtRnRaVjBnUFNCd1lYSjBhV0ZzTzF4dUlDQWdJSDFjYmlBZ2ZTeGNiaUFnZFc1eVpXZHBjM1JsY2xCaGNuUnBZV3c2SUdaMWJtTjBhVzl1S0c1aGJXVXBJSHRjYmlBZ0lDQmtaV3hsZEdVZ2RHaHBjeTV3WVhKMGFXRnNjMXR1WVcxbFhUdGNiaUFnZlN4Y2JseHVJQ0J5WldkcGMzUmxja1JsWTI5eVlYUnZjam9nWm5WdVkzUnBiMjRvYm1GdFpTd2dabTRwSUh0Y2JpQWdJQ0JwWmlBb2RHOVRkSEpwYm1jdVkyRnNiQ2h1WVcxbEtTQTlQVDBnYjJKcVpXTjBWSGx3WlNrZ2UxeHVJQ0FnSUNBZ2FXWWdLR1p1S1NCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZlR05sY0hScGIyNG9KMEZ5WnlCdWIzUWdjM1Z3Y0c5eWRHVmtJSGRwZEdnZ2JYVnNkR2x3YkdVZ1pHVmpiM0poZEc5eWN5Y3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdaWGgwWlc1a0tIUm9hWE11WkdWamIzSmhkRzl5Y3l3Z2JtRnRaU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lIUm9hWE11WkdWamIzSmhkRzl5YzF0dVlXMWxYU0E5SUdadU8xeHVJQ0FnSUgxY2JpQWdmU3hjYmlBZ2RXNXlaV2RwYzNSbGNrUmxZMjl5WVhSdmNqb2dablZ1WTNScGIyNG9ibUZ0WlNrZ2UxeHVJQ0FnSUdSbGJHVjBaU0IwYUdsekxtUmxZMjl5WVhSdmNuTmJibUZ0WlYwN1hHNGdJSDBzWEc0Z0lDOHFLbHh1SUNBZ0tpQlNaWE5sZENCMGFHVWdiV1Z0YjNKNUlHOW1JR2xzYkdWbllXd2djSEp2Y0dWeWRIa2dZV05qWlhOelpYTWdkR2hoZENCb1lYWmxJR0ZzY21WaFpIa2dZbVZsYmlCc2IyZG5aV1F1WEc0Z0lDQXFJRUJrWlhCeVpXTmhkR1ZrSUhOb2IzVnNaQ0J2Ym14NUlHSmxJSFZ6WldRZ2FXNGdhR0Z1Wkd4bFltRnljeUIwWlhOMExXTmhjMlZ6WEc0Z0lDQXFMMXh1SUNCeVpYTmxkRXh2WjJkbFpGQnliM0JsY25SNVFXTmpaWE56WlhNb0tTQjdYRzRnSUNBZ2NtVnpaWFJNYjJkblpXUlFjbTl3WlhKMGFXVnpLQ2s3WEc0Z0lIMWNibjA3WEc1Y2JtVjRjRzl5ZENCc1pYUWdiRzluSUQwZ2JHOW5aMlZ5TG14dlp6dGNibHh1Wlhod2IzSjBJSHNnWTNKbFlYUmxSbkpoYldVc0lHeHZaMmRsY2lCOU8xeHVJbDE5XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLnJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMgPSByZWdpc3RlckRlZmF1bHRIZWxwZXJzO1xuZXhwb3J0cy5tb3ZlSGVscGVyVG9Ib29rcyA9IG1vdmVIZWxwZXJUb0hvb2tzO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX2hlbHBlcnNCbG9ja0hlbHBlck1pc3NpbmcgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcnKTtcblxudmFyIF9oZWxwZXJzQmxvY2tIZWxwZXJNaXNzaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hlbHBlcnNCbG9ja0hlbHBlck1pc3NpbmcpO1xuXG52YXIgX2hlbHBlcnNFYWNoID0gcmVxdWlyZSgnLi9oZWxwZXJzL2VhY2gnKTtcblxudmFyIF9oZWxwZXJzRWFjaDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzRWFjaCk7XG5cbnZhciBfaGVscGVyc0hlbHBlck1pc3NpbmcgPSByZXF1aXJlKCcuL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcnKTtcblxudmFyIF9oZWxwZXJzSGVscGVyTWlzc2luZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzSGVscGVyTWlzc2luZyk7XG5cbnZhciBfaGVscGVyc0lmID0gcmVxdWlyZSgnLi9oZWxwZXJzL2lmJyk7XG5cbnZhciBfaGVscGVyc0lmMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hlbHBlcnNJZik7XG5cbnZhciBfaGVscGVyc0xvZyA9IHJlcXVpcmUoJy4vaGVscGVycy9sb2cnKTtcblxudmFyIF9oZWxwZXJzTG9nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hlbHBlcnNMb2cpO1xuXG52YXIgX2hlbHBlcnNMb29rdXAgPSByZXF1aXJlKCcuL2hlbHBlcnMvbG9va3VwJyk7XG5cbnZhciBfaGVscGVyc0xvb2t1cDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzTG9va3VwKTtcblxudmFyIF9oZWxwZXJzV2l0aCA9IHJlcXVpcmUoJy4vaGVscGVycy93aXRoJyk7XG5cbnZhciBfaGVscGVyc1dpdGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGVscGVyc1dpdGgpO1xuXG5mdW5jdGlvbiByZWdpc3RlckRlZmF1bHRIZWxwZXJzKGluc3RhbmNlKSB7XG4gIF9oZWxwZXJzQmxvY2tIZWxwZXJNaXNzaW5nMlsnZGVmYXVsdCddKGluc3RhbmNlKTtcbiAgX2hlbHBlcnNFYWNoMlsnZGVmYXVsdCddKGluc3RhbmNlKTtcbiAgX2hlbHBlcnNIZWxwZXJNaXNzaW5nMlsnZGVmYXVsdCddKGluc3RhbmNlKTtcbiAgX2hlbHBlcnNJZjJbJ2RlZmF1bHQnXShpbnN0YW5jZSk7XG4gIF9oZWxwZXJzTG9nMlsnZGVmYXVsdCddKGluc3RhbmNlKTtcbiAgX2hlbHBlcnNMb29rdXAyWydkZWZhdWx0J10oaW5zdGFuY2UpO1xuICBfaGVscGVyc1dpdGgyWydkZWZhdWx0J10oaW5zdGFuY2UpO1xufVxuXG5mdW5jdGlvbiBtb3ZlSGVscGVyVG9Ib29rcyhpbnN0YW5jZSwgaGVscGVyTmFtZSwga2VlcEhlbHBlcikge1xuICBpZiAoaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXSkge1xuICAgIGluc3RhbmNlLmhvb2tzW2hlbHBlck5hbWVdID0gaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXTtcbiAgICBpZiAoIWtlZXBIZWxwZXIpIHtcbiAgICAgIGRlbGV0ZSBpbnN0YW5jZS5oZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIH1cbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMmhsYkhCbGNuTXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN096czdPM2xEUVVGMVF5eG5RMEZCWjBNN096czdNa0pCUXpsRExHZENRVUZuUWpzN096dHZRMEZEVUN3d1FrRkJNRUk3T3pzN2VVSkJRM0pETEdOQlFXTTdPenM3TUVKQlEySXNaVUZCWlRzN096czJRa0ZEV2l4clFrRkJhMEk3T3pzN01rSkJRM0JDTEdkQ1FVRm5RanM3T3p0QlFVVnNReXhUUVVGVExITkNRVUZ6UWl4RFFVRkRMRkZCUVZFc1JVRkJSVHRCUVVNdlF5eDVRMEZCTWtJc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGNrTXNNa0pCUVdFc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGRrSXNiME5CUVhOQ0xGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEyaERMSGxDUVVGWExGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEzSkNMREJDUVVGWkxGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEzUkNMRFpDUVVGbExGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEzcENMREpDUVVGaExGRkJRVkVzUTBGQlF5eERRVUZETzBOQlEzaENPenRCUVVWTkxGTkJRVk1zYVVKQlFXbENMRU5CUVVNc1VVRkJVU3hGUVVGRkxGVkJRVlVzUlVGQlJTeFZRVUZWTEVWQlFVVTdRVUZEYkVVc1RVRkJTU3hSUVVGUkxFTkJRVU1zVDBGQlR5eERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZPMEZCUTJoRExGbEJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWRCUVVjc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXp0QlFVTXhSQ3hSUVVGSkxFTkJRVU1zVlVGQlZTeEZRVUZGTzBGQlEyWXNZVUZCVHl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETzB0QlEzSkRPMGRCUTBZN1EwRkRSaUlzSW1acGJHVWlPaUpvWld4d1pYSnpMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhKbFoybHpkR1Z5UW14dlkydElaV3h3WlhKTmFYTnphVzVuSUdaeWIyMGdKeTR2YUdWc2NHVnljeTlpYkc5amF5MW9aV3h3WlhJdGJXbHpjMmx1WnljN1hHNXBiWEJ2Y25RZ2NtVm5hWE4wWlhKRllXTm9JR1p5YjIwZ0p5NHZhR1ZzY0dWeWN5OWxZV05vSnp0Y2JtbHRjRzl5ZENCeVpXZHBjM1JsY2tobGJIQmxjazFwYzNOcGJtY2dabkp2YlNBbkxpOW9aV3h3WlhKekwyaGxiSEJsY2kxdGFYTnphVzVuSnp0Y2JtbHRjRzl5ZENCeVpXZHBjM1JsY2tsbUlHWnliMjBnSnk0dmFHVnNjR1Z5Y3k5cFppYzdYRzVwYlhCdmNuUWdjbVZuYVhOMFpYSk1iMmNnWm5KdmJTQW5MaTlvWld4d1pYSnpMMnh2WnljN1hHNXBiWEJ2Y25RZ2NtVm5hWE4wWlhKTWIyOXJkWEFnWm5KdmJTQW5MaTlvWld4d1pYSnpMMnh2YjJ0MWNDYzdYRzVwYlhCdmNuUWdjbVZuYVhOMFpYSlhhWFJvSUdaeWIyMGdKeTR2YUdWc2NHVnljeTkzYVhSb0p6dGNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSEpsWjJsemRHVnlSR1ZtWVhWc2RFaGxiSEJsY25Nb2FXNXpkR0Z1WTJVcElIdGNiaUFnY21WbmFYTjBaWEpDYkc5amEwaGxiSEJsY2sxcGMzTnBibWNvYVc1emRHRnVZMlVwTzF4dUlDQnlaV2RwYzNSbGNrVmhZMmdvYVc1emRHRnVZMlVwTzF4dUlDQnlaV2RwYzNSbGNraGxiSEJsY2sxcGMzTnBibWNvYVc1emRHRnVZMlVwTzF4dUlDQnlaV2RwYzNSbGNrbG1LR2x1YzNSaGJtTmxLVHRjYmlBZ2NtVm5hWE4wWlhKTWIyY29hVzV6ZEdGdVkyVXBPMXh1SUNCeVpXZHBjM1JsY2t4dmIydDFjQ2hwYm5OMFlXNWpaU2s3WEc0Z0lISmxaMmx6ZEdWeVYybDBhQ2hwYm5OMFlXNWpaU2s3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnRiM1psU0dWc2NHVnlWRzlJYjI5cmN5aHBibk4wWVc1alpTd2dhR1ZzY0dWeVRtRnRaU3dnYTJWbGNFaGxiSEJsY2lrZ2UxeHVJQ0JwWmlBb2FXNXpkR0Z1WTJVdWFHVnNjR1Z5YzF0b1pXeHdaWEpPWVcxbFhTa2dlMXh1SUNBZ0lHbHVjM1JoYm1ObExtaHZiMnR6VzJobGJIQmxjazVoYldWZElEMGdhVzV6ZEdGdVkyVXVhR1ZzY0dWeWMxdG9aV3h3WlhKT1lXMWxYVHRjYmlBZ0lDQnBaaUFvSVd0bFpYQklaV3h3WlhJcElIdGNiaUFnSUNBZ0lHUmxiR1YwWlNCcGJuTjBZVzVqWlM1b1pXeHdaWEp6VzJobGJIQmxjazVoYldWZE8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlsMTlcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIGxvZ2dlciA9IHtcbiAgbWV0aG9kTWFwOiBbJ2RlYnVnJywgJ2luZm8nLCAnd2FybicsICdlcnJvciddLFxuICBsZXZlbDogJ2luZm8nLFxuXG4gIC8vIE1hcHMgYSBnaXZlbiBsZXZlbCB2YWx1ZSB0byB0aGUgYG1ldGhvZE1hcGAgaW5kZXhlcyBhYm92ZS5cbiAgbG9va3VwTGV2ZWw6IGZ1bmN0aW9uIGxvb2t1cExldmVsKGxldmVsKSB7XG4gICAgaWYgKHR5cGVvZiBsZXZlbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhciBsZXZlbE1hcCA9IF91dGlscy5pbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbiBsb2cobGV2ZWwpIHtcbiAgICBsZXZlbCA9IGxvZ2dlci5sb29rdXBMZXZlbChsZXZlbCk7XG5cbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIGxvZ2dlci5sb29rdXBMZXZlbChsb2dnZXIubGV2ZWwpIDw9IGxldmVsKSB7XG4gICAgICB2YXIgbWV0aG9kID0gbG9nZ2VyLm1ldGhvZE1hcFtsZXZlbF07XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgaWYgKCFjb25zb2xlW21ldGhvZF0pIHtcbiAgICAgICAgbWV0aG9kID0gJ2xvZyc7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtZXNzYWdlID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBtZXNzYWdlW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZVttZXRob2RdLmFwcGx5KGNvbnNvbGUsIG1lc3NhZ2UpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGxvZ2dlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMnh2WjJkbGNpNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3TzNGQ1FVRjNRaXhUUVVGVE96dEJRVVZxUXl4SlFVRkpMRTFCUVUwc1IwRkJSenRCUVVOWUxGZEJRVk1zUlVGQlJTeERRVUZETEU5QlFVOHNSVUZCUlN4TlFVRk5MRVZCUVVVc1RVRkJUU3hGUVVGRkxFOUJRVThzUTBGQlF6dEJRVU0zUXl4UFFVRkxMRVZCUVVVc1RVRkJUVHM3TzBGQlIySXNZVUZCVnl4RlFVRkZMSEZDUVVGVExFdEJRVXNzUlVGQlJUdEJRVU16UWl4UlFVRkpMRTlCUVU4c1MwRkJTeXhMUVVGTExGRkJRVkVzUlVGQlJUdEJRVU0zUWl4VlFVRkpMRkZCUVZFc1IwRkJSeXhsUVVGUkxFMUJRVTBzUTBGQlF5eFRRVUZUTEVWQlFVVXNTMEZCU3l4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRE9VUXNWVUZCU1N4UlFVRlJMRWxCUVVrc1EwRkJReXhGUVVGRk8wRkJRMnBDTEdGQlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNN1QwRkRiRUlzVFVGQlRUdEJRVU5NTEdGQlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGQlF5eERRVUZETzA5QlF6ZENPMHRCUTBZN08wRkJSVVFzVjBGQlR5eExRVUZMTEVOQlFVTTdSMEZEWkRzN08wRkJSMFFzUzBGQlJ5eEZRVUZGTEdGQlFWTXNTMEZCU3l4RlFVRmpPMEZCUXk5Q0xGTkJRVXNzUjBGQlJ5eE5RVUZOTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE96dEJRVVZzUXl4UlFVTkZMRTlCUVU4c1QwRkJUeXhMUVVGTExGZEJRVmNzU1VGRE9VSXNUVUZCVFN4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NTMEZCU3l4RlFVTjZRenRCUVVOQkxGVkJRVWtzVFVGQlRTeEhRVUZITEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03TzBGQlJYSkRMRlZCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVTdRVUZEY0VJc1kwRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF6dFBRVU5vUWpzN2QwTkJXRzFDTEU5QlFVODdRVUZCVUN4bFFVRlBPenM3UVVGWk0wSXNZVUZCVHl4RFFVRkRMRTFCUVUwc1QwRkJReXhEUVVGbUxFOUJRVThzUlVGQldTeFBRVUZQTEVOQlFVTXNRMEZCUXp0TFFVTTNRanRIUVVOR08wTkJRMFlzUTBGQlF6czdjVUpCUldFc1RVRkJUU0lzSW1acGJHVWlPaUpzYjJkblpYSXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCcGJtUmxlRTltSUgwZ1puSnZiU0FuTGk5MWRHbHNjeWM3WEc1Y2JteGxkQ0JzYjJkblpYSWdQU0I3WEc0Z0lHMWxkR2h2WkUxaGNEb2dXeWRrWldKMVp5Y3NJQ2RwYm1adkp5d2dKM2RoY200bkxDQW5aWEp5YjNJblhTeGNiaUFnYkdWMlpXdzZJQ2RwYm1adkp5eGNibHh1SUNBdkx5Qk5ZWEJ6SUdFZ1oybDJaVzRnYkdWMlpXd2dkbUZzZFdVZ2RHOGdkR2hsSUdCdFpYUm9iMlJOWVhCZ0lHbHVaR1Y0WlhNZ1lXSnZkbVV1WEc0Z0lHeHZiMnQxY0V4bGRtVnNPaUJtZFc1amRHbHZiaWhzWlhabGJDa2dlMXh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdiR1YyWld3Z1BUMDlJQ2R6ZEhKcGJtY25LU0I3WEc0Z0lDQWdJQ0JzWlhRZ2JHVjJaV3hOWVhBZ1BTQnBibVJsZUU5bUtHeHZaMmRsY2k1dFpYUm9iMlJOWVhBc0lHeGxkbVZzTG5SdlRHOTNaWEpEWVhObEtDa3BPMXh1SUNBZ0lDQWdhV1lnS0d4bGRtVnNUV0Z3SUQ0OUlEQXBJSHRjYmlBZ0lDQWdJQ0FnYkdWMlpXd2dQU0JzWlhabGJFMWhjRHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJR3hsZG1Wc0lEMGdjR0Z5YzJWSmJuUW9iR1YyWld3c0lERXdLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2JHVjJaV3c3WEc0Z0lIMHNYRzVjYmlBZ0x5OGdRMkZ1SUdKbElHOTJaWEp5YVdSa1pXNGdhVzRnZEdobElHaHZjM1FnWlc1MmFYSnZibTFsYm5SY2JpQWdiRzluT2lCbWRXNWpkR2x2Ymloc1pYWmxiQ3dnTGk0dWJXVnpjMkZuWlNrZ2UxeHVJQ0FnSUd4bGRtVnNJRDBnYkc5bloyVnlMbXh2YjJ0MWNFeGxkbVZzS0d4bGRtVnNLVHRjYmx4dUlDQWdJR2xtSUNoY2JpQWdJQ0FnSUhSNWNHVnZaaUJqYjI1emIyeGxJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QW1KbHh1SUNBZ0lDQWdiRzluWjJWeUxteHZiMnQxY0V4bGRtVnNLR3h2WjJkbGNpNXNaWFpsYkNrZ1BEMGdiR1YyWld4Y2JpQWdJQ0FwSUh0Y2JpQWdJQ0FnSUd4bGRDQnRaWFJvYjJRZ1BTQnNiMmRuWlhJdWJXVjBhRzlrVFdGd1cyeGxkbVZzWFR0Y2JpQWdJQ0FnSUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCdWJ5MWpiMjV6YjJ4bFhHNGdJQ0FnSUNCcFppQW9JV052Ym5OdmJHVmJiV1YwYUc5a1hTa2dlMXh1SUNBZ0lDQWdJQ0J0WlhSb2IyUWdQU0FuYkc5bkp6dGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHTnZibk52YkdWYmJXVjBhRzlrWFNndUxpNXRaWE56WVdkbEtUc2dMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRiR2x1WlNCdWJ5MWpiMjV6YjJ4bFhHNGdJQ0FnZlZ4dUlDQjlYRzU5TzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCc2IyZG5aWEk3WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuY3JlYXRlUHJvdG9BY2Nlc3NDb250cm9sID0gY3JlYXRlUHJvdG9BY2Nlc3NDb250cm9sO1xuZXhwb3J0cy5yZXN1bHRJc0FsbG93ZWQgPSByZXN1bHRJc0FsbG93ZWQ7XG5leHBvcnRzLnJlc2V0TG9nZ2VkUHJvcGVydGllcyA9IHJlc2V0TG9nZ2VkUHJvcGVydGllcztcbi8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSBuZXdPYmpbJ2RlZmF1bHQnXSA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbnZhciBfY3JlYXRlTmV3TG9va3VwT2JqZWN0ID0gcmVxdWlyZSgnLi9jcmVhdGUtbmV3LWxvb2t1cC1vYmplY3QnKTtcblxudmFyIF9sb2dnZXIgPSByZXF1aXJlKCcuLi9sb2dnZXInKTtcblxudmFyIGxvZ2dlciA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9sb2dnZXIpO1xuXG52YXIgbG9nZ2VkUHJvcGVydGllcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZVByb3RvQWNjZXNzQ29udHJvbChydW50aW1lT3B0aW9ucykge1xuICB2YXIgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ2NvbnN0cnVjdG9yJ10gPSBmYWxzZTtcbiAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdFsnX19kZWZpbmVHZXR0ZXJfXyddID0gZmFsc2U7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ19fZGVmaW5lU2V0dGVyX18nXSA9IGZhbHNlO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0WydfX2xvb2t1cEdldHRlcl9fJ10gPSBmYWxzZTtcblxuICB2YXIgZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvXG4gIGRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdFsnX19wcm90b19fJ10gPSBmYWxzZTtcblxuICByZXR1cm4ge1xuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIHdoaXRlbGlzdDogX2NyZWF0ZU5ld0xvb2t1cE9iamVjdC5jcmVhdGVOZXdMb29rdXBPYmplY3QoZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0LCBydW50aW1lT3B0aW9ucy5hbGxvd2VkUHJvdG9Qcm9wZXJ0aWVzKSxcbiAgICAgIGRlZmF1bHRWYWx1ZTogcnVudGltZU9wdGlvbnMuYWxsb3dQcm90b1Byb3BlcnRpZXNCeURlZmF1bHRcbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgIHdoaXRlbGlzdDogX2NyZWF0ZU5ld0xvb2t1cE9iamVjdC5jcmVhdGVOZXdMb29rdXBPYmplY3QoZGVmYXVsdE1ldGhvZFdoaXRlTGlzdCwgcnVudGltZU9wdGlvbnMuYWxsb3dlZFByb3RvTWV0aG9kcyksXG4gICAgICBkZWZhdWx0VmFsdWU6IHJ1bnRpbWVPcHRpb25zLmFsbG93UHJvdG9NZXRob2RzQnlEZWZhdWx0XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiByZXN1bHRJc0FsbG93ZWQocmVzdWx0LCBwcm90b0FjY2Vzc0NvbnRyb2wsIHByb3BlcnR5TmFtZSkge1xuICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBjaGVja1doaXRlTGlzdChwcm90b0FjY2Vzc0NvbnRyb2wubWV0aG9kcywgcHJvcGVydHlOYW1lKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sLnByb3BlcnRpZXMsIHByb3BlcnR5TmFtZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZSwgcHJvcGVydHlOYW1lKSB7XG4gIGlmIChwcm90b0FjY2Vzc0NvbnRyb2xGb3JUeXBlLndoaXRlbGlzdFtwcm9wZXJ0eU5hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS53aGl0ZWxpc3RbcHJvcGVydHlOYW1lXSA9PT0gdHJ1ZTtcbiAgfVxuICBpZiAocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS5kZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBwcm90b0FjY2Vzc0NvbnRyb2xGb3JUeXBlLmRlZmF1bHRWYWx1ZTtcbiAgfVxuICBsb2dVbmV4cGVjZWRQcm9wZXJ0eUFjY2Vzc09uY2UocHJvcGVydHlOYW1lKTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBsb2dVbmV4cGVjZWRQcm9wZXJ0eUFjY2Vzc09uY2UocHJvcGVydHlOYW1lKSB7XG4gIGlmIChsb2dnZWRQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV0gIT09IHRydWUpIHtcbiAgICBsb2dnZWRQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV0gPSB0cnVlO1xuICAgIGxvZ2dlci5sb2coJ2Vycm9yJywgJ0hhbmRsZWJhcnM6IEFjY2VzcyBoYXMgYmVlbiBkZW5pZWQgdG8gcmVzb2x2ZSB0aGUgcHJvcGVydHkgXCInICsgcHJvcGVydHlOYW1lICsgJ1wiIGJlY2F1c2UgaXQgaXMgbm90IGFuIFwib3duIHByb3BlcnR5XCIgb2YgaXRzIHBhcmVudC5cXG4nICsgJ1lvdSBjYW4gYWRkIGEgcnVudGltZSBvcHRpb24gdG8gZGlzYWJsZSB0aGUgY2hlY2sgb3IgdGhpcyB3YXJuaW5nOlxcbicgKyAnU2VlIGh0dHBzOi8vaGFuZGxlYmFyc2pzLmNvbS9hcGktcmVmZXJlbmNlL3J1bnRpbWUtb3B0aW9ucy5odG1sI29wdGlvbnMtdG8tY29udHJvbC1wcm90b3R5cGUtYWNjZXNzIGZvciBkZXRhaWxzJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCkge1xuICBPYmplY3Qua2V5cyhsb2dnZWRQcm9wZXJ0aWVzKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eU5hbWUpIHtcbiAgICBkZWxldGUgbG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdO1xuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwybHVkR1Z5Ym1Gc0wzQnliM1J2TFdGalkyVnpjeTVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3pzN096czdPenM3TzNGRFFVRnpReXcwUWtGQk5FSTdPM05DUVVNeFF5eFhRVUZYT3p0SlFVRjJRaXhOUVVGTk96dEJRVVZzUWl4SlFVRk5MR2RDUVVGblFpeEhRVUZITEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03TzBGQlJYUkRMRk5CUVZNc2QwSkJRWGRDTEVOQlFVTXNZMEZCWXl4RlFVRkZPMEZCUTNaRUxFMUJRVWtzYzBKQlFYTkNMRWRCUVVjc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVTnFSQ3gzUWtGQmMwSXNRMEZCUXl4aFFVRmhMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03UVVGRE9VTXNkMEpCUVhOQ0xFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03UVVGRGJrUXNkMEpCUVhOQ0xFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03UVVGRGJrUXNkMEpCUVhOQ0xFTkJRVU1zYTBKQlFXdENMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03TzBGQlJXNUVMRTFCUVVrc2QwSkJRWGRDTEVkQlFVY3NUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6czdRVUZGYmtRc01FSkJRWGRDTEVOQlFVTXNWMEZCVnl4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRE96dEJRVVU1UXl4VFFVRlBPMEZCUTB3c1kwRkJWU3hGUVVGRk8wRkJRMVlzWlVGQlV5eEZRVUZGTERaRFFVTlVMSGRDUVVGM1FpeEZRVU40UWl4alFVRmpMRU5CUVVNc2MwSkJRWE5DTEVOQlEzUkRPMEZCUTBRc2EwSkJRVmtzUlVGQlJTeGpRVUZqTEVOQlFVTXNOa0pCUVRaQ08wdEJRek5FTzBGQlEwUXNWMEZCVHl4RlFVRkZPMEZCUTFBc1pVRkJVeXhGUVVGRkxEWkRRVU5VTEhOQ1FVRnpRaXhGUVVOMFFpeGpRVUZqTEVOQlFVTXNiVUpCUVcxQ0xFTkJRMjVETzBGQlEwUXNhMEpCUVZrc1JVRkJSU3hqUVVGakxFTkJRVU1zTUVKQlFUQkNPMHRCUTNoRU8wZEJRMFlzUTBGQlF6dERRVU5JT3p0QlFVVk5MRk5CUVZNc1pVRkJaU3hEUVVGRExFMUJRVTBzUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3haUVVGWkxFVkJRVVU3UVVGRGVFVXNUVUZCU1N4UFFVRlBMRTFCUVUwc1MwRkJTeXhWUVVGVkxFVkJRVVU3UVVGRGFFTXNWMEZCVHl4alFVRmpMRU5CUVVNc2EwSkJRV3RDTEVOQlFVTXNUMEZCVHl4RlFVRkZMRmxCUVZrc1EwRkJReXhEUVVGRE8wZEJRMnBGTEUxQlFVMDdRVUZEVEN4WFFVRlBMR05CUVdNc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4VlFVRlZMRVZCUVVVc1dVRkJXU3hEUVVGRExFTkJRVU03UjBGRGNFVTdRMEZEUmpzN1FVRkZSQ3hUUVVGVExHTkJRV01zUTBGQlF5eDVRa0ZCZVVJc1JVRkJSU3haUVVGWkxFVkJRVVU3UVVGREwwUXNUVUZCU1N4NVFrRkJlVUlzUTBGQlF5eFRRVUZUTEVOQlFVTXNXVUZCV1N4RFFVRkRMRXRCUVVzc1UwRkJVeXhGUVVGRk8wRkJRMjVGTEZkQlFVOHNlVUpCUVhsQ0xFTkJRVU1zVTBGQlV5eERRVUZETEZsQlFWa3NRMEZCUXl4TFFVRkxMRWxCUVVrc1EwRkJRenRIUVVOdVJUdEJRVU5FTEUxQlFVa3NlVUpCUVhsQ0xFTkJRVU1zV1VGQldTeExRVUZMTEZOQlFWTXNSVUZCUlR0QlFVTjRSQ3hYUVVGUExIbENRVUY1UWl4RFFVRkRMRmxCUVZrc1EwRkJRenRIUVVNdlF6dEJRVU5FTEdkRFFVRTRRaXhEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzBGQlF6ZERMRk5CUVU4c1MwRkJTeXhEUVVGRE8wTkJRMlE3TzBGQlJVUXNVMEZCVXl3NFFrRkJPRUlzUTBGQlF5eFpRVUZaTEVWQlFVVTdRVUZEY0VRc1RVRkJTU3huUWtGQlowSXNRMEZCUXl4WlFVRlpMRU5CUVVNc1MwRkJTeXhKUVVGSkxFVkJRVVU3UVVGRE0wTXNiMEpCUVdkQ0xFTkJRVU1zV1VGQldTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRPMEZCUTNSRExGVkJRVTBzUTBGQlF5eEhRVUZITEVOQlExSXNUMEZCVHl4RlFVTlFMR2xGUVVFclJDeFpRVUZaTEc5SlFVTklMRzlJUVVNeVF5eERRVU53U0N4RFFVRkRPMGRCUTBnN1EwRkRSanM3UVVGRlRTeFRRVUZUTEhGQ1FVRnhRaXhIUVVGSE8wRkJRM1JETEZGQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNc1ZVRkJRU3haUVVGWkxFVkJRVWs3UVVGRGNFUXNWMEZCVHl4blFrRkJaMElzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0SFFVTjJReXhEUVVGRExFTkJRVU03UTBGRFNpSXNJbVpwYkdVaU9pSndjbTkwYnkxaFkyTmxjM011YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SnBiWEJ2Y25RZ2V5QmpjbVZoZEdWT1pYZE1iMjlyZFhCUFltcGxZM1FnZlNCbWNtOXRJQ2N1TDJOeVpXRjBaUzF1WlhjdGJHOXZhM1Z3TFc5aWFtVmpkQ2M3WEc1cGJYQnZjblFnS2lCaGN5QnNiMmRuWlhJZ1puSnZiU0FuTGk0dmJHOW5aMlZ5Snp0Y2JseHVZMjl1YzNRZ2JHOW5aMlZrVUhKdmNHVnlkR2xsY3lBOUlFOWlhbVZqZEM1amNtVmhkR1VvYm5Wc2JDazdYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlFjbTkwYjBGalkyVnpjME52Ym5SeWIyd29jblZ1ZEdsdFpVOXdkR2x2Ym5NcElIdGNiaUFnYkdWMElHUmxabUYxYkhSTlpYUm9iMlJYYUdsMFpVeHBjM1FnUFNCUFltcGxZM1F1WTNKbFlYUmxLRzUxYkd3cE8xeHVJQ0JrWldaaGRXeDBUV1YwYUc5a1YyaHBkR1ZNYVhOMFd5ZGpiMjV6ZEhKMVkzUnZjaWRkSUQwZ1ptRnNjMlU3WEc0Z0lHUmxabUYxYkhSTlpYUm9iMlJYYUdsMFpVeHBjM1JiSjE5ZlpHVm1hVzVsUjJWMGRHVnlYMThuWFNBOUlHWmhiSE5sTzF4dUlDQmtaV1poZFd4MFRXVjBhRzlrVjJocGRHVk1hWE4wV3lkZlgyUmxabWx1WlZObGRIUmxjbDlmSjEwZ1BTQm1ZV3h6WlR0Y2JpQWdaR1ZtWVhWc2RFMWxkR2h2WkZkb2FYUmxUR2x6ZEZzblgxOXNiMjlyZFhCSFpYUjBaWEpmWHlkZElEMGdabUZzYzJVN1hHNWNiaUFnYkdWMElHUmxabUYxYkhSUWNtOXdaWEowZVZkb2FYUmxUR2x6ZENBOUlFOWlhbVZqZEM1amNtVmhkR1VvYm5Wc2JDazdYRzRnSUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCdWJ5MXdjbTkwYjF4dUlDQmtaV1poZFd4MFVISnZjR1Z5ZEhsWGFHbDBaVXhwYzNSYkoxOWZjSEp2ZEc5Zlh5ZGRJRDBnWm1Gc2MyVTdYRzVjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN1hHNGdJQ0FnSUNCM2FHbDBaV3hwYzNRNklHTnlaV0YwWlU1bGQweHZiMnQxY0U5aWFtVmpkQ2hjYmlBZ0lDQWdJQ0FnWkdWbVlYVnNkRkJ5YjNCbGNuUjVWMmhwZEdWTWFYTjBMRnh1SUNBZ0lDQWdJQ0J5ZFc1MGFXMWxUM0IwYVc5dWN5NWhiR3h2ZDJWa1VISnZkRzlRY205d1pYSjBhV1Z6WEc0Z0lDQWdJQ0FwTEZ4dUlDQWdJQ0FnWkdWbVlYVnNkRlpoYkhWbE9pQnlkVzUwYVcxbFQzQjBhVzl1Y3k1aGJHeHZkMUJ5YjNSdlVISnZjR1Z5ZEdsbGMwSjVSR1ZtWVhWc2RGeHVJQ0FnSUgwc1hHNGdJQ0FnYldWMGFHOWtjem9nZTF4dUlDQWdJQ0FnZDJocGRHVnNhWE4wT2lCamNtVmhkR1ZPWlhkTWIyOXJkWEJQWW1wbFkzUW9YRzRnSUNBZ0lDQWdJR1JsWm1GMWJIUk5aWFJvYjJSWGFHbDBaVXhwYzNRc1hHNGdJQ0FnSUNBZ0lISjFiblJwYldWUGNIUnBiMjV6TG1Gc2JHOTNaV1JRY205MGIwMWxkR2h2WkhOY2JpQWdJQ0FnSUNrc1hHNGdJQ0FnSUNCa1pXWmhkV3gwVm1Gc2RXVTZJSEoxYm5ScGJXVlBjSFJwYjI1ekxtRnNiRzkzVUhKdmRHOU5aWFJvYjJSelFubEVaV1poZFd4MFhHNGdJQ0FnZlZ4dUlDQjlPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2NtVnpkV3gwU1hOQmJHeHZkMlZrS0hKbGMzVnNkQ3dnY0hKdmRHOUJZMk5sYzNORGIyNTBjbTlzTENCd2NtOXdaWEowZVU1aGJXVXBJSHRjYmlBZ2FXWWdLSFI1Y0dWdlppQnlaWE4xYkhRZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZMmhsWTJ0WGFHbDBaVXhwYzNRb2NISnZkRzlCWTJObGMzTkRiMjUwY205c0xtMWxkR2h2WkhNc0lIQnliM0JsY25SNVRtRnRaU2s3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnY21WMGRYSnVJR05vWldOclYyaHBkR1ZNYVhOMEtIQnliM1J2UVdOalpYTnpRMjl1ZEhKdmJDNXdjbTl3WlhKMGFXVnpMQ0J3Y205d1pYSjBlVTVoYldVcE8xeHVJQ0I5WEc1OVhHNWNibVoxYm1OMGFXOXVJR05vWldOclYyaHBkR1ZNYVhOMEtIQnliM1J2UVdOalpYTnpRMjl1ZEhKdmJFWnZjbFI1Y0dVc0lIQnliM0JsY25SNVRtRnRaU2tnZTF4dUlDQnBaaUFvY0hKdmRHOUJZMk5sYzNORGIyNTBjbTlzUm05eVZIbHdaUzUzYUdsMFpXeHBjM1JiY0hKdmNHVnlkSGxPWVcxbFhTQWhQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnY21WMGRYSnVJSEJ5YjNSdlFXTmpaWE56UTI5dWRISnZiRVp2Y2xSNWNHVXVkMmhwZEdWc2FYTjBXM0J5YjNCbGNuUjVUbUZ0WlYwZ1BUMDlJSFJ5ZFdVN1hHNGdJSDFjYmlBZ2FXWWdLSEJ5YjNSdlFXTmpaWE56UTI5dWRISnZiRVp2Y2xSNWNHVXVaR1ZtWVhWc2RGWmhiSFZsSUNFOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQnlaWFIxY200Z2NISnZkRzlCWTJObGMzTkRiMjUwY205c1JtOXlWSGx3WlM1a1pXWmhkV3gwVm1Gc2RXVTdYRzRnSUgxY2JpQWdiRzluVlc1bGVIQmxZMlZrVUhKdmNHVnlkSGxCWTJObGMzTlBibU5sS0hCeWIzQmxjblI1VG1GdFpTazdYRzRnSUhKbGRIVnliaUJtWVd4elpUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z2JHOW5WVzVsZUhCbFkyVmtVSEp2Y0dWeWRIbEJZMk5sYzNOUGJtTmxLSEJ5YjNCbGNuUjVUbUZ0WlNrZ2UxeHVJQ0JwWmlBb2JHOW5aMlZrVUhKdmNHVnlkR2xsYzF0d2NtOXdaWEowZVU1aGJXVmRJQ0U5UFNCMGNuVmxLU0I3WEc0Z0lDQWdiRzluWjJWa1VISnZjR1Z5ZEdsbGMxdHdjbTl3WlhKMGVVNWhiV1ZkSUQwZ2RISjFaVHRjYmlBZ0lDQnNiMmRuWlhJdWJHOW5LRnh1SUNBZ0lDQWdKMlZ5Y205eUp5eGNiaUFnSUNBZ0lHQklZVzVrYkdWaVlYSnpPaUJCWTJObGMzTWdhR0Z6SUdKbFpXNGdaR1Z1YVdWa0lIUnZJSEpsYzI5c2RtVWdkR2hsSUhCeWIzQmxjblI1SUZ3aUpIdHdjbTl3WlhKMGVVNWhiV1Y5WENJZ1ltVmpZWFZ6WlNCcGRDQnBjeUJ1YjNRZ1lXNGdYQ0p2ZDI0Z2NISnZjR1Z5ZEhsY0lpQnZaaUJwZEhNZ2NHRnlaVzUwTGx4Y2JtQWdLMXh1SUNBZ0lDQWdJQ0JnV1c5MUlHTmhiaUJoWkdRZ1lTQnlkVzUwYVcxbElHOXdkR2x2YmlCMGJ5QmthWE5oWW14bElIUm9aU0JqYUdWamF5QnZjaUIwYUdseklIZGhjbTVwYm1jNlhGeHVZQ0FyWEc0Z0lDQWdJQ0FnSUdCVFpXVWdhSFIwY0hNNkx5OW9ZVzVrYkdWaVlYSnphbk11WTI5dEwyRndhUzF5WldabGNtVnVZMlV2Y25WdWRHbHRaUzF2Y0hScGIyNXpMbWgwYld3amIzQjBhVzl1Y3kxMGJ5MWpiMjUwY205c0xYQnliM1J2ZEhsd1pTMWhZMk5sYzNNZ1ptOXlJR1JsZEdGcGJITmdYRzRnSUNBZ0tUdGNiaUFnZlZ4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjbVZ6WlhSTWIyZG5aV1JRY205d1pYSjBhV1Z6S0NrZ2UxeHVJQ0JQWW1wbFkzUXVhMlY1Y3loc2IyZG5aV1JRY205d1pYSjBhV1Z6S1M1bWIzSkZZV05vS0hCeWIzQmxjblI1VG1GdFpTQTlQaUI3WEc0Z0lDQWdaR1ZzWlhSbElHeHZaMmRsWkZCeWIzQmxjblJwWlhOYmNISnZjR1Z5ZEhsT1lXMWxYVHRjYmlBZ2ZTazdYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKEhhbmRsZWJhcnMpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgdmFyIHJvb3QgPSB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHdpbmRvdyxcbiAgICAgICRIYW5kbGViYXJzID0gcm9vdC5IYW5kbGViYXJzO1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBIYW5kbGViYXJzLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHJvb3QuSGFuZGxlYmFycyA9PT0gSGFuZGxlYmFycykge1xuICAgICAgcm9vdC5IYW5kbGViYXJzID0gJEhhbmRsZWJhcnM7XG4gICAgfVxuICAgIHJldHVybiBIYW5kbGViYXJzO1xuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyNXZMV052Ym1ac2FXTjBMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3pzN2NVSkJRV1VzVlVGQlV5eFZRVUZWTEVWQlFVVTdPMEZCUld4RExFMUJRVWtzU1VGQlNTeEhRVUZITEU5QlFVOHNUVUZCVFN4TFFVRkxMRmRCUVZjc1IwRkJSeXhOUVVGTkxFZEJRVWNzVFVGQlRUdE5RVU40UkN4WFFVRlhMRWRCUVVjc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF6czdRVUZGYUVNc1dVRkJWU3hEUVVGRExGVkJRVlVzUjBGQlJ5eFpRVUZYTzBGQlEycERMRkZCUVVrc1NVRkJTU3hEUVVGRExGVkJRVlVzUzBGQlN5eFZRVUZWTEVWQlFVVTdRVUZEYkVNc1ZVRkJTU3hEUVVGRExGVkJRVlVzUjBGQlJ5eFhRVUZYTEVOQlFVTTdTMEZETDBJN1FVRkRSQ3hYUVVGUExGVkJRVlVzUTBGQlF6dEhRVU51UWl4RFFVRkRPME5CUTBnaUxDSm1hV3hsSWpvaWJtOHRZMjl1Wm14cFkzUXVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKbGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaWhJWVc1a2JHVmlZWEp6S1NCN1hHNGdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0J1WlhoMElDb3ZYRzRnSUd4bGRDQnliMjkwSUQwZ2RIbHdaVzltSUdkc2IySmhiQ0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJuYkc5aVlXd2dPaUIzYVc1a2IzY3NYRzRnSUNBZ0pFaGhibVJzWldKaGNuTWdQU0J5YjI5MExraGhibVJzWldKaGNuTTdYRzRnSUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCdVpYaDBJQ292WEc0Z0lFaGhibVJzWldKaGNuTXVibTlEYjI1bWJHbGpkQ0E5SUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUdsbUlDaHliMjkwTGtoaGJtUnNaV0poY25NZ1BUMDlJRWhoYm1Sc1pXSmhjbk1wSUh0Y2JpQWdJQ0FnSUhKdmIzUXVTR0Z1Wkd4bFltRnljeUE5SUNSSVlXNWtiR1ZpWVhKek8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhSMWNtNGdTR0Z1Wkd4bFltRnljenRjYmlBZ2ZUdGNibjFjYmlKZGZRPT1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBBU1QgPSB7XG4gIC8vIFB1YmxpYyBBUEkgdXNlZCB0byBldmFsdWF0ZSBkZXJpdmVkIGF0dHJpYnV0ZXMgcmVnYXJkaW5nIEFTVCBub2Rlc1xuICBoZWxwZXJzOiB7XG4gICAgLy8gYSBtdXN0YWNoZSBpcyBkZWZpbml0ZWx5IGEgaGVscGVyIGlmOlxuICAgIC8vICogaXQgaXMgYW4gZWxpZ2libGUgaGVscGVyLCBhbmRcbiAgICAvLyAqIGl0IGhhcyBhdCBsZWFzdCBvbmUgcGFyYW1ldGVyIG9yIGhhc2ggc2VnbWVudFxuICAgIGhlbHBlckV4cHJlc3Npb246IGZ1bmN0aW9uIGhlbHBlckV4cHJlc3Npb24obm9kZSkge1xuICAgICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gJ1N1YkV4cHJlc3Npb24nIHx8IChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgfHwgbm9kZS50eXBlID09PSAnQmxvY2tTdGF0ZW1lbnQnKSAmJiAhIShub2RlLnBhcmFtcyAmJiBub2RlLnBhcmFtcy5sZW5ndGggfHwgbm9kZS5oYXNoKTtcbiAgICB9LFxuXG4gICAgc2NvcGVkSWQ6IGZ1bmN0aW9uIHNjb3BlZElkKHBhdGgpIHtcbiAgICAgIHJldHVybiAoL15cXC58dGhpc1xcYi8udGVzdChwYXRoLm9yaWdpbmFsKVxuICAgICAgKTtcbiAgICB9LFxuXG4gICAgLy8gYW4gSUQgaXMgc2ltcGxlIGlmIGl0IG9ubHkgaGFzIG9uZSBwYXJ0LCBhbmQgdGhhdCBwYXJ0IGlzIG5vdFxuICAgIC8vIGAuLmAgb3IgYHRoaXNgLlxuICAgIHNpbXBsZUlkOiBmdW5jdGlvbiBzaW1wbGVJZChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5wYXJ0cy5sZW5ndGggPT09IDEgJiYgIUFTVC5oZWxwZXJzLnNjb3BlZElkKHBhdGgpICYmICFwYXRoLmRlcHRoO1xuICAgIH1cbiAgfVxufTtcblxuLy8gTXVzdCBiZSBleHBvcnRlZCBhcyBhbiBvYmplY3QgcmF0aGVyIHRoYW4gdGhlIHJvb3Qgb2YgdGhlIG1vZHVsZSBhcyB0aGUgamlzb24gbGV4ZXJcbi8vIG11c3QgbW9kaWZ5IHRoZSBvYmplY3QgdG8gb3BlcmF0ZSBwcm9wZXJseS5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IEFTVDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJOdmJYQnBiR1Z5TDJGemRDNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3UVVGQlFTeEpRVUZKTEVkQlFVY3NSMEZCUnpzN1FVRkZVaXhUUVVGUExFVkJRVVU3T3pzN1FVRkpVQ3h2UWtGQlowSXNSVUZCUlN3d1FrRkJVeXhKUVVGSkxFVkJRVVU3UVVGREwwSXNZVUZEUlN4SlFVRkpMRU5CUVVNc1NVRkJTU3hMUVVGTExHVkJRV1VzU1VGRE5VSXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hMUVVGTExHMUNRVUZ0UWl4SlFVTnFReXhKUVVGSkxFTkJRVU1zU1VGQlNTeExRVUZMTEdkQ1FVRm5RaXhEUVVGQkxFbEJRemxDTEVOQlFVTXNSVUZCUlN4QlFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFbEJRVWtzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVzc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlFTeEJRVUZETEVGQlFVTXNRMEZEZGtRN1MwRkRTRHM3UVVGRlJDeFpRVUZSTEVWQlFVVXNhMEpCUVZNc1NVRkJTU3hGUVVGRk8wRkJRM1pDTEdGQlFVOHNZVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETzFGQlFVTTdTMEZEZWtNN096czdRVUZKUkN4WlFVRlJMRVZCUVVVc2EwSkJRVk1zU1VGQlNTeEZRVUZGTzBGQlEzWkNMR0ZCUTBVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVU55UlR0TFFVTklPMGRCUTBZN1EwRkRSaXhEUVVGRE96czdPM0ZDUVVsaExFZEJRVWNpTENKbWFXeGxJam9pWVhOMExtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYkdWMElFRlRWQ0E5SUh0Y2JpQWdMeThnVUhWaWJHbGpJRUZRU1NCMWMyVmtJSFJ2SUdWMllXeDFZWFJsSUdSbGNtbDJaV1FnWVhSMGNtbGlkWFJsY3lCeVpXZGhjbVJwYm1jZ1FWTlVJRzV2WkdWelhHNGdJR2hsYkhCbGNuTTZJSHRjYmlBZ0lDQXZMeUJoSUcxMWMzUmhZMmhsSUdseklHUmxabWx1YVhSbGJIa2dZU0JvWld4d1pYSWdhV1k2WEc0Z0lDQWdMeThnS2lCcGRDQnBjeUJoYmlCbGJHbG5hV0pzWlNCb1pXeHdaWElzSUdGdVpGeHVJQ0FnSUM4dklDb2dhWFFnYUdGeklHRjBJR3hsWVhOMElHOXVaU0J3WVhKaGJXVjBaWElnYjNJZ2FHRnphQ0J6WldkdFpXNTBYRzRnSUNBZ2FHVnNjR1Z5Ulhod2NtVnpjMmx2YmpvZ1puVnVZM1JwYjI0b2JtOWtaU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJQ2hjYmlBZ0lDQWdJQ0FnYm05a1pTNTBlWEJsSUQwOVBTQW5VM1ZpUlhod2NtVnpjMmx2YmljZ2ZIeGNiaUFnSUNBZ0lDQWdLQ2h1YjJSbExuUjVjR1VnUFQwOUlDZE5kWE4wWVdOb1pWTjBZWFJsYldWdWRDY2dmSHhjYmlBZ0lDQWdJQ0FnSUNCdWIyUmxMblI1Y0dVZ1BUMDlJQ2RDYkc5amExTjBZWFJsYldWdWRDY3BJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lTRW9LRzV2WkdVdWNHRnlZVzF6SUNZbUlHNXZaR1V1Y0dGeVlXMXpMbXhsYm1kMGFDa2dmSHdnYm05a1pTNW9ZWE5vS1NsY2JpQWdJQ0FnSUNrN1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUhOamIzQmxaRWxrT2lCbWRXNWpkR2x2Ymlod1lYUm9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdMMTVjWEM1OGRHaHBjMXhjWWk4dWRHVnpkQ2h3WVhSb0xtOXlhV2RwYm1Gc0tUdGNiaUFnSUNCOUxGeHVYRzRnSUNBZ0x5OGdZVzRnU1VRZ2FYTWdjMmx0Y0d4bElHbG1JR2wwSUc5dWJIa2dhR0Z6SUc5dVpTQndZWEowTENCaGJtUWdkR2hoZENCd1lYSjBJR2x6SUc1dmRGeHVJQ0FnSUM4dklHQXVMbUFnYjNJZ1lIUm9hWE5nTGx4dUlDQWdJSE5wYlhCc1pVbGtPaUJtZFc1amRHbHZiaWh3WVhSb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z0tGeHVJQ0FnSUNBZ0lDQndZWFJvTG5CaGNuUnpMbXhsYm1kMGFDQTlQVDBnTVNBbUppQWhRVk5VTG1obGJIQmxjbk11YzJOdmNHVmtTV1FvY0dGMGFDa2dKaVlnSVhCaGRHZ3VaR1Z3ZEdoY2JpQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5TzF4dVhHNHZMeUJOZFhOMElHSmxJR1Y0Y0c5eWRHVmtJR0Z6SUdGdUlHOWlhbVZqZENCeVlYUm9aWElnZEdoaGJpQjBhR1VnY205dmRDQnZaaUIwYUdVZ2JXOWtkV3hsSUdGeklIUm9aU0JxYVhOdmJpQnNaWGhsY2x4dUx5OGdiWFZ6ZENCdGIyUnBabmtnZEdobElHOWlhbVZqZENCMGJ5QnZjR1Z5WVhSbElIQnliM0JsY214NUxseHVaWGh3YjNKMElHUmxabUYxYkhRZ1FWTlVPMXh1SWwxOVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX2V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4uL2V4Y2VwdGlvbicpO1xuXG52YXIgX2V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO1xuXG5mdW5jdGlvbiBWaXNpdG9yKCkge1xuICB0aGlzLnBhcmVudHMgPSBbXTtcbn1cblxuVmlzaXRvci5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBWaXNpdG9yLFxuICBtdXRhdGluZzogZmFsc2UsXG5cbiAgLy8gVmlzaXRzIGEgZ2l2ZW4gdmFsdWUuIElmIG11dGF0aW5nLCB3aWxsIHJlcGxhY2UgdGhlIHZhbHVlIGlmIG5lY2Vzc2FyeS5cbiAgYWNjZXB0S2V5OiBmdW5jdGlvbiBhY2NlcHRLZXkobm9kZSwgbmFtZSkge1xuICAgIHZhciB2YWx1ZSA9IHRoaXMuYWNjZXB0KG5vZGVbbmFtZV0pO1xuICAgIGlmICh0aGlzLm11dGF0aW5nKSB7XG4gICAgICAvLyBIYWNreSBzYW5pdHkgY2hlY2s6IFRoaXMgbWF5IGhhdmUgYSBmZXcgZmFsc2UgcG9zaXRpdmVzIGZvciB0eXBlIGZvciB0aGUgaGVscGVyXG4gICAgICAvLyBtZXRob2RzIGJ1dCB3aWxsIGdlbmVyYWxseSBkbyB0aGUgcmlnaHQgdGhpbmcgd2l0aG91dCBhIGxvdCBvZiBvdmVyaGVhZC5cbiAgICAgIGlmICh2YWx1ZSAmJiAhVmlzaXRvci5wcm90b3R5cGVbdmFsdWUudHlwZV0pIHtcbiAgICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1VuZXhwZWN0ZWQgbm9kZSB0eXBlIFwiJyArIHZhbHVlLnR5cGUgKyAnXCIgZm91bmQgd2hlbiBhY2NlcHRpbmcgJyArIG5hbWUgKyAnIG9uICcgKyBub2RlLnR5cGUpO1xuICAgICAgfVxuICAgICAgbm9kZVtuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICAvLyBQZXJmb3JtcyBhbiBhY2NlcHQgb3BlcmF0aW9uIHdpdGggYWRkZWQgc2FuaXR5IGNoZWNrIHRvIGVuc3VyZVxuICAvLyByZXF1aXJlZCBrZXlzIGFyZSBub3QgcmVtb3ZlZC5cbiAgYWNjZXB0UmVxdWlyZWQ6IGZ1bmN0aW9uIGFjY2VwdFJlcXVpcmVkKG5vZGUsIG5hbWUpIHtcbiAgICB0aGlzLmFjY2VwdEtleShub2RlLCBuYW1lKTtcblxuICAgIGlmICghbm9kZVtuYW1lXSkge1xuICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10obm9kZS50eXBlICsgJyByZXF1aXJlcyAnICsgbmFtZSk7XG4gICAgfVxuICB9LFxuXG4gIC8vIFRyYXZlcnNlcyBhIGdpdmVuIGFycmF5LiBJZiBtdXRhdGluZywgZW1wdHkgcmVzcG5zZXMgd2lsbCBiZSByZW1vdmVkXG4gIC8vIGZvciBjaGlsZCBlbGVtZW50cy5cbiAgYWNjZXB0QXJyYXk6IGZ1bmN0aW9uIGFjY2VwdEFycmF5KGFycmF5KSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRoaXMuYWNjZXB0S2V5KGFycmF5LCBpKTtcblxuICAgICAgaWYgKCFhcnJheVtpXSkge1xuICAgICAgICBhcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgIGktLTtcbiAgICAgICAgbC0tO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBhY2NlcHQ6IGZ1bmN0aW9uIGFjY2VwdChvYmplY3QpIHtcbiAgICBpZiAoIW9iamVjdCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0OiBTYW5pdHkgY29kZSAqL1xuICAgIGlmICghdGhpc1tvYmplY3QudHlwZV0pIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdVbmtub3duIHR5cGU6ICcgKyBvYmplY3QudHlwZSwgb2JqZWN0KTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jdXJyZW50KSB7XG4gICAgICB0aGlzLnBhcmVudHMudW5zaGlmdCh0aGlzLmN1cnJlbnQpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnQgPSBvYmplY3Q7XG5cbiAgICB2YXIgcmV0ID0gdGhpc1tvYmplY3QudHlwZV0ob2JqZWN0KTtcblxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMucGFyZW50cy5zaGlmdCgpO1xuXG4gICAgaWYgKCF0aGlzLm11dGF0aW5nIHx8IHJldCkge1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9IGVsc2UgaWYgKHJldCAhPT0gZmFsc2UpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuICB9LFxuXG4gIFByb2dyYW06IGZ1bmN0aW9uIFByb2dyYW0ocHJvZ3JhbSkge1xuICAgIHRoaXMuYWNjZXB0QXJyYXkocHJvZ3JhbS5ib2R5KTtcbiAgfSxcblxuICBNdXN0YWNoZVN0YXRlbWVudDogdmlzaXRTdWJFeHByZXNzaW9uLFxuICBEZWNvcmF0b3I6IHZpc2l0U3ViRXhwcmVzc2lvbixcblxuICBCbG9ja1N0YXRlbWVudDogdmlzaXRCbG9jayxcbiAgRGVjb3JhdG9yQmxvY2s6IHZpc2l0QmxvY2ssXG5cbiAgUGFydGlhbFN0YXRlbWVudDogdmlzaXRQYXJ0aWFsLFxuICBQYXJ0aWFsQmxvY2tTdGF0ZW1lbnQ6IGZ1bmN0aW9uIFBhcnRpYWxCbG9ja1N0YXRlbWVudChwYXJ0aWFsKSB7XG4gICAgdmlzaXRQYXJ0aWFsLmNhbGwodGhpcywgcGFydGlhbCk7XG5cbiAgICB0aGlzLmFjY2VwdEtleShwYXJ0aWFsLCAncHJvZ3JhbScpO1xuICB9LFxuXG4gIENvbnRlbnRTdGF0ZW1lbnQ6IGZ1bmN0aW9uIENvbnRlbnRTdGF0ZW1lbnQoKSAvKiBjb250ZW50ICove30sXG4gIENvbW1lbnRTdGF0ZW1lbnQ6IGZ1bmN0aW9uIENvbW1lbnRTdGF0ZW1lbnQoKSAvKiBjb21tZW50ICove30sXG5cbiAgU3ViRXhwcmVzc2lvbjogdmlzaXRTdWJFeHByZXNzaW9uLFxuXG4gIFBhdGhFeHByZXNzaW9uOiBmdW5jdGlvbiBQYXRoRXhwcmVzc2lvbigpIC8qIHBhdGggKi97fSxcblxuICBTdHJpbmdMaXRlcmFsOiBmdW5jdGlvbiBTdHJpbmdMaXRlcmFsKCkgLyogc3RyaW5nICove30sXG4gIE51bWJlckxpdGVyYWw6IGZ1bmN0aW9uIE51bWJlckxpdGVyYWwoKSAvKiBudW1iZXIgKi97fSxcbiAgQm9vbGVhbkxpdGVyYWw6IGZ1bmN0aW9uIEJvb2xlYW5MaXRlcmFsKCkgLyogYm9vbCAqL3t9LFxuICBVbmRlZmluZWRMaXRlcmFsOiBmdW5jdGlvbiBVbmRlZmluZWRMaXRlcmFsKCkgLyogbGl0ZXJhbCAqL3t9LFxuICBOdWxsTGl0ZXJhbDogZnVuY3Rpb24gTnVsbExpdGVyYWwoKSAvKiBsaXRlcmFsICove30sXG5cbiAgSGFzaDogZnVuY3Rpb24gSGFzaChoYXNoKSB7XG4gICAgdGhpcy5hY2NlcHRBcnJheShoYXNoLnBhaXJzKTtcbiAgfSxcbiAgSGFzaFBhaXI6IGZ1bmN0aW9uIEhhc2hQYWlyKHBhaXIpIHtcbiAgICB0aGlzLmFjY2VwdFJlcXVpcmVkKHBhaXIsICd2YWx1ZScpO1xuICB9XG59O1xuXG5mdW5jdGlvbiB2aXNpdFN1YkV4cHJlc3Npb24obXVzdGFjaGUpIHtcbiAgdGhpcy5hY2NlcHRSZXF1aXJlZChtdXN0YWNoZSwgJ3BhdGgnKTtcbiAgdGhpcy5hY2NlcHRBcnJheShtdXN0YWNoZS5wYXJhbXMpO1xuICB0aGlzLmFjY2VwdEtleShtdXN0YWNoZSwgJ2hhc2gnKTtcbn1cbmZ1bmN0aW9uIHZpc2l0QmxvY2soYmxvY2spIHtcbiAgdmlzaXRTdWJFeHByZXNzaW9uLmNhbGwodGhpcywgYmxvY2spO1xuXG4gIHRoaXMuYWNjZXB0S2V5KGJsb2NrLCAncHJvZ3JhbScpO1xuICB0aGlzLmFjY2VwdEtleShibG9jaywgJ2ludmVyc2UnKTtcbn1cbmZ1bmN0aW9uIHZpc2l0UGFydGlhbChwYXJ0aWFsKSB7XG4gIHRoaXMuYWNjZXB0UmVxdWlyZWQocGFydGlhbCwgJ25hbWUnKTtcbiAgdGhpcy5hY2NlcHRBcnJheShwYXJ0aWFsLnBhcmFtcyk7XG4gIHRoaXMuYWNjZXB0S2V5KHBhcnRpYWwsICdoYXNoJyk7XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IFZpc2l0b3I7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwzWnBjMmwwYjNJdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3p0NVFrRkJjMElzWTBGQll6czdPenRCUVVWd1F5eFRRVUZUTEU5QlFVOHNSMEZCUnp0QlFVTnFRaXhOUVVGSkxFTkJRVU1zVDBGQlR5eEhRVUZITEVWQlFVVXNRMEZCUXp0RFFVTnVRanM3UVVGRlJDeFBRVUZQTEVOQlFVTXNVMEZCVXl4SFFVRkhPMEZCUTJ4Q0xHRkJRVmNzUlVGQlJTeFBRVUZQTzBGQlEzQkNMRlZCUVZFc1JVRkJSU3hMUVVGTE96czdRVUZIWml4WFFVRlRMRVZCUVVVc2JVSkJRVk1zU1VGQlNTeEZRVUZGTEVsQlFVa3NSVUZCUlR0QlFVTTVRaXhSUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEzQkRMRkZCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUczdPMEZCUjJwQ0xGVkJRVWtzUzBGQlN5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdRVUZETTBNc1kwRkJUU3d5UWtGRFNpeDNRa0ZCZDBJc1IwRkRkRUlzUzBGQlN5eERRVUZETEVsQlFVa3NSMEZEVml4NVFrRkJlVUlzUjBGRGVrSXNTVUZCU1N4SFFVTktMRTFCUVUwc1IwRkRUaXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVU5hTEVOQlFVTTdUMEZEU0R0QlFVTkVMRlZCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTTdTMEZEY0VJN1IwRkRSanM3T3p0QlFVbEVMR2RDUVVGakxFVkJRVVVzZDBKQlFWTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkJSVHRCUVVOdVF5eFJRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6czdRVUZGTTBJc1VVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlR0QlFVTm1MRmxCUVUwc01rSkJRV01zU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4WlFVRlpMRWRCUVVjc1NVRkJTU3hEUVVGRExFTkJRVU03UzBGRGRFUTdSMEZEUmpzN096dEJRVWxFTEdGQlFWY3NSVUZCUlN4eFFrRkJVeXhMUVVGTExFVkJRVVU3UVVGRE0wSXNVMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTTFReXhWUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEV0QlFVc3NSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenM3UVVGRmVrSXNWVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJUdEJRVU5pTEdGQlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEyNUNMRk5CUVVNc1JVRkJSU3hEUVVGRE8wRkJRMG9zVTBGQlF5eEZRVUZGTEVOQlFVTTdUMEZEVER0TFFVTkdPMGRCUTBZN08wRkJSVVFzVVVGQlRTeEZRVUZGTEdkQ1FVRlRMRTFCUVUwc1JVRkJSVHRCUVVOMlFpeFJRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZPMEZCUTFnc1lVRkJUenRMUVVOU096czdRVUZIUkN4UlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlR0QlFVTjBRaXhaUVVGTkxESkNRVUZqTEdkQ1FVRm5RaXhIUVVGSExFMUJRVTBzUTBGQlF5eEpRVUZKTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN1MwRkROMFE3TzBGQlJVUXNVVUZCU1N4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRk8wRkJRMmhDTEZWQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0TFFVTndRenRCUVVORUxGRkJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NUVUZCVFN4RFFVRkRPenRCUVVWMFFpeFJRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPenRCUVVWd1F5eFJRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUzBGQlN5eEZRVUZGTEVOQlFVTTdPMEZCUlhCRExGRkJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRWRCUVVjc1JVRkJSVHRCUVVONlFpeGhRVUZQTEVkQlFVY3NRMEZCUXp0TFFVTmFMRTFCUVUwc1NVRkJTU3hIUVVGSExFdEJRVXNzUzBGQlN5eEZRVUZGTzBGQlEzaENMR0ZCUVU4c1RVRkJUU3hEUVVGRE8wdEJRMlk3UjBGRFJqczdRVUZGUkN4VFFVRlBMRVZCUVVVc2FVSkJRVk1zVDBGQlR5eEZRVUZGTzBGQlEzcENMRkZCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMGRCUTJoRE96dEJRVVZFTEcxQ1FVRnBRaXhGUVVGRkxHdENRVUZyUWp0QlFVTnlReXhYUVVGVExFVkJRVVVzYTBKQlFXdENPenRCUVVVM1FpeG5Ra0ZCWXl4RlFVRkZMRlZCUVZVN1FVRkRNVUlzWjBKQlFXTXNSVUZCUlN4VlFVRlZPenRCUVVVeFFpeHJRa0ZCWjBJc1JVRkJSU3haUVVGWk8wRkJRemxDTEhWQ1FVRnhRaXhGUVVGRkxDdENRVUZUTEU5QlFVOHNSVUZCUlR0QlFVTjJReXhuUWtGQldTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03TzBGQlJXcERMRkZCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zVDBGQlR5eEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRPMGRCUTNCRE96dEJRVVZFTEd0Q1FVRm5RaXhGUVVGRkxIbERRVUYzUWl4RlFVRkZPMEZCUXpWRExHdENRVUZuUWl4RlFVRkZMSGxEUVVGM1FpeEZRVUZGT3p0QlFVVTFReXhsUVVGaExFVkJRVVVzYTBKQlFXdENPenRCUVVWcVF5eG5Ra0ZCWXl4RlFVRkZMRzlEUVVGeFFpeEZRVUZGT3p0QlFVVjJReXhsUVVGaExFVkJRVVVzY1VOQlFYVkNMRVZCUVVVN1FVRkRlRU1zWlVGQllTeEZRVUZGTEhGRFFVRjFRaXhGUVVGRk8wRkJRM2hETEdkQ1FVRmpMRVZCUVVVc2IwTkJRWEZDTEVWQlFVVTdRVUZEZGtNc2EwSkJRV2RDTEVWQlFVVXNlVU5CUVhkQ0xFVkJRVVU3UVVGRE5VTXNZVUZCVnl4RlFVRkZMRzlEUVVGM1FpeEZRVUZGT3p0QlFVVjJReXhOUVVGSkxFVkJRVVVzWTBGQlV5eEpRVUZKTEVWQlFVVTdRVUZEYmtJc1VVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1IwRkRPVUk3UVVGRFJDeFZRVUZSTEVWQlFVVXNhMEpCUVZNc1NVRkJTU3hGUVVGRk8wRkJRM1pDTEZGQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzBkQlEzQkRPME5CUTBZc1EwRkJRenM3UVVGRlJpeFRRVUZUTEd0Q1FVRnJRaXhEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU53UXl4TlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExGRkJRVkVzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0QlFVTjBReXhOUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEZGQlFWRXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRCUVVOc1F5eE5RVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRkZCUVZFc1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dERRVU5zUXp0QlFVTkVMRk5CUVZNc1ZVRkJWU3hEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU42UWl4dlFrRkJhMElzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJReXhEUVVGRE96dEJRVVZ5UXl4TlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFdEJRVXNzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0QlFVTnFReXhOUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEV0QlFVc3NSVUZCUlN4VFFVRlRMRU5CUVVNc1EwRkJRenREUVVOc1F6dEJRVU5FTEZOQlFWTXNXVUZCV1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRCUVVNM1FpeE5RVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRTlCUVU4c1JVRkJSU3hOUVVGTkxFTkJRVU1zUTBGQlF6dEJRVU55UXl4TlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0QlFVTnFReXhOUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEU5QlFVOHNSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenREUVVOcVF6czdjVUpCUldNc1QwRkJUeUlzSW1acGJHVWlPaUoyYVhOcGRHOXlMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUVWNFkyVndkR2x2YmlCbWNtOXRJQ2N1TGk5bGVHTmxjSFJwYjI0bk8xeHVYRzVtZFc1amRHbHZiaUJXYVhOcGRHOXlLQ2tnZTF4dUlDQjBhR2x6TG5CaGNtVnVkSE1nUFNCYlhUdGNibjFjYmx4dVZtbHphWFJ2Y2k1d2NtOTBiM1I1Y0dVZ1BTQjdYRzRnSUdOdmJuTjBjblZqZEc5eU9pQldhWE5wZEc5eUxGeHVJQ0J0ZFhSaGRHbHVaem9nWm1Gc2MyVXNYRzVjYmlBZ0x5OGdWbWx6YVhSeklHRWdaMmwyWlc0Z2RtRnNkV1V1SUVsbUlHMTFkR0YwYVc1bkxDQjNhV3hzSUhKbGNHeGhZMlVnZEdobElIWmhiSFZsSUdsbUlHNWxZMlZ6YzJGeWVTNWNiaUFnWVdOalpYQjBTMlY1T2lCbWRXNWpkR2x2YmlodWIyUmxMQ0J1WVcxbEtTQjdYRzRnSUNBZ2JHVjBJSFpoYkhWbElEMGdkR2hwY3k1aFkyTmxjSFFvYm05a1pWdHVZVzFsWFNrN1hHNGdJQ0FnYVdZZ0tIUm9hWE11YlhWMFlYUnBibWNwSUh0Y2JpQWdJQ0FnSUM4dklFaGhZMnQ1SUhOaGJtbDBlU0JqYUdWamF6b2dWR2hwY3lCdFlYa2dhR0YyWlNCaElHWmxkeUJtWVd4elpTQndiM05wZEdsMlpYTWdabTl5SUhSNWNHVWdabTl5SUhSb1pTQm9aV3h3WlhKY2JpQWdJQ0FnSUM4dklHMWxkR2h2WkhNZ1luVjBJSGRwYkd3Z1oyVnVaWEpoYkd4NUlHUnZJSFJvWlNCeWFXZG9kQ0IwYUdsdVp5QjNhWFJvYjNWMElHRWdiRzkwSUc5bUlHOTJaWEpvWldGa0xseHVJQ0FnSUNBZ2FXWWdLSFpoYkhWbElDWW1JQ0ZXYVhOcGRHOXlMbkJ5YjNSdmRIbHdaVnQyWVd4MVpTNTBlWEJsWFNrZ2UxeHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLRnh1SUNBZ0lDQWdJQ0FnSUNkVmJtVjRjR1ZqZEdWa0lHNXZaR1VnZEhsd1pTQmNJaWNnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVdWRIbHdaU0FyWEc0Z0lDQWdJQ0FnSUNBZ0lDQW5YQ0lnWm05MWJtUWdkMmhsYmlCaFkyTmxjSFJwYm1jZ0p5QXJYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDY2diMjRnSnlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0J1YjJSbExuUjVjR1ZjYmlBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc1dlpHVmJibUZ0WlYwZ1BTQjJZV3gxWlR0Y2JpQWdJQ0I5WEc0Z0lIMHNYRzVjYmlBZ0x5OGdVR1Z5Wm05eWJYTWdZVzRnWVdOalpYQjBJRzl3WlhKaGRHbHZiaUIzYVhSb0lHRmtaR1ZrSUhOaGJtbDBlU0JqYUdWamF5QjBieUJsYm5OMWNtVmNiaUFnTHk4Z2NtVnhkV2x5WldRZ2EyVjVjeUJoY21VZ2JtOTBJSEpsYlc5MlpXUXVYRzRnSUdGalkyVndkRkpsY1hWcGNtVmtPaUJtZFc1amRHbHZiaWh1YjJSbExDQnVZVzFsS1NCN1hHNGdJQ0FnZEdocGN5NWhZMk5sY0hSTFpYa29ibTlrWlN3Z2JtRnRaU2s3WEc1Y2JpQWdJQ0JwWmlBb0lXNXZaR1ZiYm1GdFpWMHBJSHRjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGZUdObGNIUnBiMjRvYm05a1pTNTBlWEJsSUNzZ0p5QnlaWEYxYVhKbGN5QW5JQ3NnYm1GdFpTazdYRzRnSUNBZ2ZWeHVJQ0I5TEZ4dVhHNGdJQzh2SUZSeVlYWmxjbk5sY3lCaElHZHBkbVZ1SUdGeWNtRjVMaUJKWmlCdGRYUmhkR2x1Wnl3Z1pXMXdkSGtnY21WemNHNXpaWE1nZDJsc2JDQmlaU0J5WlcxdmRtVmtYRzRnSUM4dklHWnZjaUJqYUdsc1pDQmxiR1Z0Wlc1MGN5NWNiaUFnWVdOalpYQjBRWEp5WVhrNklHWjFibU4wYVc5dUtHRnljbUY1S1NCN1hHNGdJQ0FnWm05eUlDaHNaWFFnYVNBOUlEQXNJR3dnUFNCaGNuSmhlUzVzWlc1bmRHZzdJR2tnUENCc095QnBLeXNwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVZV05qWlhCMFMyVjVLR0Z5Y21GNUxDQnBLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tDRmhjbkpoZVZ0cFhTa2dlMXh1SUNBZ0lDQWdJQ0JoY25KaGVTNXpjR3hwWTJVb2FTd2dNU2s3WEc0Z0lDQWdJQ0FnSUdrdExUdGNiaUFnSUNBZ0lDQWdiQzB0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCaFkyTmxjSFE2SUdaMWJtTjBhVzl1S0c5aWFtVmpkQ2tnZTF4dUlDQWdJR2xtSUNnaGIySnFaV04wS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJRzVsZUhRNklGTmhibWwwZVNCamIyUmxJQ292WEc0Z0lDQWdhV1lnS0NGMGFHbHpXMjlpYW1WamRDNTBlWEJsWFNrZ2UxeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVjRZMlZ3ZEdsdmJpZ25WVzVyYm05M2JpQjBlWEJsT2lBbklDc2diMkpxWldOMExuUjVjR1VzSUc5aWFtVmpkQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSb2FYTXVZM1Z5Y21WdWRDa2dlMXh1SUNBZ0lDQWdkR2hwY3k1d1lYSmxiblJ6TG5WdWMyaHBablFvZEdocGN5NWpkWEp5Wlc1MEtUdGNiaUFnSUNCOVhHNGdJQ0FnZEdocGN5NWpkWEp5Wlc1MElEMGdiMkpxWldOME8xeHVYRzRnSUNBZ2JHVjBJSEpsZENBOUlIUm9hWE5iYjJKcVpXTjBMblI1Y0dWZEtHOWlhbVZqZENrN1hHNWNiaUFnSUNCMGFHbHpMbU4xY25KbGJuUWdQU0IwYUdsekxuQmhjbVZ1ZEhNdWMyaHBablFvS1R0Y2JseHVJQ0FnSUdsbUlDZ2hkR2hwY3k1dGRYUmhkR2x1WnlCOGZDQnlaWFFwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJ5WlhRN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNoeVpYUWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdiMkpxWldOME8xeHVJQ0FnSUgxY2JpQWdmU3hjYmx4dUlDQlFjbTluY21GdE9pQm1kVzVqZEdsdmJpaHdjbTluY21GdEtTQjdYRzRnSUNBZ2RHaHBjeTVoWTJObGNIUkJjbkpoZVNod2NtOW5jbUZ0TG1KdlpIa3BPMXh1SUNCOUxGeHVYRzRnSUUxMWMzUmhZMmhsVTNSaGRHVnRaVzUwT2lCMmFYTnBkRk4xWWtWNGNISmxjM05wYjI0c1hHNGdJRVJsWTI5eVlYUnZjam9nZG1semFYUlRkV0pGZUhCeVpYTnphVzl1TEZ4dVhHNGdJRUpzYjJOclUzUmhkR1Z0Wlc1ME9pQjJhWE5wZEVKc2IyTnJMRnh1SUNCRVpXTnZjbUYwYjNKQ2JHOWphem9nZG1semFYUkNiRzlqYXl4Y2JseHVJQ0JRWVhKMGFXRnNVM1JoZEdWdFpXNTBPaUIyYVhOcGRGQmhjblJwWVd3c1hHNGdJRkJoY25ScFlXeENiRzlqYTFOMFlYUmxiV1Z1ZERvZ1puVnVZM1JwYjI0b2NHRnlkR2xoYkNrZ2UxeHVJQ0FnSUhacGMybDBVR0Z5ZEdsaGJDNWpZV3hzS0hSb2FYTXNJSEJoY25ScFlXd3BPMXh1WEc0Z0lDQWdkR2hwY3k1aFkyTmxjSFJMWlhrb2NHRnlkR2xoYkN3Z0ozQnliMmR5WVcwbktUdGNiaUFnZlN4Y2JseHVJQ0JEYjI1MFpXNTBVM1JoZEdWdFpXNTBPaUJtZFc1amRHbHZiaWd2S2lCamIyNTBaVzUwSUNvdktTQjdmU3hjYmlBZ1EyOXRiV1Z1ZEZOMFlYUmxiV1Z1ZERvZ1puVnVZM1JwYjI0b0x5b2dZMjl0YldWdWRDQXFMeWtnZTMwc1hHNWNiaUFnVTNWaVJYaHdjbVZ6YzJsdmJqb2dkbWx6YVhSVGRXSkZlSEJ5WlhOemFXOXVMRnh1WEc0Z0lGQmhkR2hGZUhCeVpYTnphVzl1T2lCbWRXNWpkR2x2YmlndktpQndZWFJvSUNvdktTQjdmU3hjYmx4dUlDQlRkSEpwYm1kTWFYUmxjbUZzT2lCbWRXNWpkR2x2YmlndktpQnpkSEpwYm1jZ0tpOHBJSHQ5TEZ4dUlDQk9kVzFpWlhKTWFYUmxjbUZzT2lCbWRXNWpkR2x2YmlndktpQnVkVzFpWlhJZ0tpOHBJSHQ5TEZ4dUlDQkNiMjlzWldGdVRHbDBaWEpoYkRvZ1puVnVZM1JwYjI0b0x5b2dZbTl2YkNBcUx5a2dlMzBzWEc0Z0lGVnVaR1ZtYVc1bFpFeHBkR1Z5WVd3NklHWjFibU4wYVc5dUtDOHFJR3hwZEdWeVlXd2dLaThwSUh0OUxGeHVJQ0JPZFd4c1RHbDBaWEpoYkRvZ1puVnVZM1JwYjI0b0x5b2diR2wwWlhKaGJDQXFMeWtnZTMwc1hHNWNiaUFnU0dGemFEb2dablZ1WTNScGIyNG9hR0Z6YUNrZ2UxeHVJQ0FnSUhSb2FYTXVZV05qWlhCMFFYSnlZWGtvYUdGemFDNXdZV2x5Y3lrN1hHNGdJSDBzWEc0Z0lFaGhjMmhRWVdseU9pQm1kVzVqZEdsdmJpaHdZV2x5S1NCN1hHNGdJQ0FnZEdocGN5NWhZMk5sY0hSU1pYRjFhWEpsWkNod1lXbHlMQ0FuZG1Gc2RXVW5LVHRjYmlBZ2ZWeHVmVHRjYmx4dVpuVnVZM1JwYjI0Z2RtbHphWFJUZFdKRmVIQnlaWE56YVc5dUtHMTFjM1JoWTJobEtTQjdYRzRnSUhSb2FYTXVZV05qWlhCMFVtVnhkV2x5WldRb2JYVnpkR0ZqYUdVc0lDZHdZWFJvSnlrN1hHNGdJSFJvYVhNdVlXTmpaWEIwUVhKeVlYa29iWFZ6ZEdGamFHVXVjR0Z5WVcxektUdGNiaUFnZEdocGN5NWhZMk5sY0hSTFpYa29iWFZ6ZEdGamFHVXNJQ2RvWVhOb0p5azdYRzU5WEc1bWRXNWpkR2x2YmlCMmFYTnBkRUpzYjJOcktHSnNiMk5yS1NCN1hHNGdJSFpwYzJsMFUzVmlSWGh3Y21WemMybHZiaTVqWVd4c0tIUm9hWE1zSUdKc2IyTnJLVHRjYmx4dUlDQjBhR2x6TG1GalkyVndkRXRsZVNoaWJHOWpheXdnSjNCeWIyZHlZVzBuS1R0Y2JpQWdkR2hwY3k1aFkyTmxjSFJMWlhrb1lteHZZMnNzSUNkcGJuWmxjbk5sSnlrN1hHNTlYRzVtZFc1amRHbHZiaUIyYVhOcGRGQmhjblJwWVd3b2NHRnlkR2xoYkNrZ2UxeHVJQ0IwYUdsekxtRmpZMlZ3ZEZKbGNYVnBjbVZrS0hCaGNuUnBZV3dzSUNkdVlXMWxKeWs3WEc0Z0lIUm9hWE11WVdOalpYQjBRWEp5WVhrb2NHRnlkR2xoYkM1d1lYSmhiWE1wTzF4dUlDQjBhR2x6TG1GalkyVndkRXRsZVNod1lYSjBhV0ZzTENBbmFHRnphQ2NwTzF4dWZWeHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQldhWE5wZEc5eU8xeHVJbDE5XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbi8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSBuZXdPYmpbJ2RlZmF1bHQnXSA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbnZhciBfaGFuZGxlYmFyc0Jhc2UgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvYmFzZScpO1xuXG52YXIgYmFzZSA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9oYW5kbGViYXJzQmFzZSk7XG5cbi8vIEVhY2ggb2YgdGhlc2UgYXVnbWVudCB0aGUgSGFuZGxlYmFycyBvYmplY3QuIE5vIG5lZWQgdG8gc2V0dXAgaGVyZS5cbi8vIChUaGlzIGlzIGRvbmUgdG8gZWFzaWx5IHNoYXJlIGNvZGUgYmV0d2VlbiBjb21tb25qcyBhbmQgYnJvd3NlIGVudnMpXG5cbnZhciBfaGFuZGxlYmFyc1NhZmVTdHJpbmcgPSByZXF1aXJlKCcuL2hhbmRsZWJhcnMvc2FmZS1zdHJpbmcnKTtcblxudmFyIF9oYW5kbGViYXJzU2FmZVN0cmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzU2FmZVN0cmluZyk7XG5cbnZhciBfaGFuZGxlYmFyc0V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy9leGNlcHRpb24nKTtcblxudmFyIF9oYW5kbGViYXJzRXhjZXB0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hhbmRsZWJhcnNFeGNlcHRpb24pO1xuXG52YXIgX2hhbmRsZWJhcnNVdGlscyA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy91dGlscycpO1xuXG52YXIgVXRpbHMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaGFuZGxlYmFyc1V0aWxzKTtcblxudmFyIF9oYW5kbGViYXJzUnVudGltZSA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy9ydW50aW1lJyk7XG5cbnZhciBydW50aW1lID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX2hhbmRsZWJhcnNSdW50aW1lKTtcblxudmFyIF9oYW5kbGViYXJzTm9Db25mbGljdCA9IHJlcXVpcmUoJy4vaGFuZGxlYmFycy9uby1jb25mbGljdCcpO1xuXG52YXIgX2hhbmRsZWJhcnNOb0NvbmZsaWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hhbmRsZWJhcnNOb0NvbmZsaWN0KTtcblxuLy8gRm9yIGNvbXBhdGliaWxpdHkgYW5kIHVzYWdlIG91dHNpZGUgb2YgbW9kdWxlIHN5c3RlbXMsIG1ha2UgdGhlIEhhbmRsZWJhcnMgb2JqZWN0IGEgbmFtZXNwYWNlXG5mdW5jdGlvbiBjcmVhdGUoKSB7XG4gIHZhciBoYiA9IG5ldyBiYXNlLkhhbmRsZWJhcnNFbnZpcm9ubWVudCgpO1xuXG4gIFV0aWxzLmV4dGVuZChoYiwgYmFzZSk7XG4gIGhiLlNhZmVTdHJpbmcgPSBfaGFuZGxlYmFyc1NhZmVTdHJpbmcyWydkZWZhdWx0J107XG4gIGhiLkV4Y2VwdGlvbiA9IF9oYW5kbGViYXJzRXhjZXB0aW9uMlsnZGVmYXVsdCddO1xuICBoYi5VdGlscyA9IFV0aWxzO1xuICBoYi5lc2NhcGVFeHByZXNzaW9uID0gVXRpbHMuZXNjYXBlRXhwcmVzc2lvbjtcblxuICBoYi5WTSA9IHJ1bnRpbWU7XG4gIGhiLnRlbXBsYXRlID0gZnVuY3Rpb24gKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG52YXIgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbl9oYW5kbGViYXJzTm9Db25mbGljdDJbJ2RlZmF1bHQnXShpbnN0KTtcblxuaW5zdFsnZGVmYXVsdCddID0gaW5zdDtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gaW5zdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekxuSjFiblJwYldVdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN096czdPRUpCUVhOQ0xHMUNRVUZ0UWpzN1NVRkJOMElzU1VGQlNUczdPenM3YjBOQlNVOHNNRUpCUVRCQ096czdPMjFEUVVNelFpeDNRa0ZCZDBJN096czdLMEpCUTNaQ0xHOUNRVUZ2UWpzN1NVRkJMMElzUzBGQlN6czdhVU5CUTFFc2MwSkJRWE5DT3p0SlFVRnVReXhQUVVGUE96dHZRMEZGU1N3d1FrRkJNRUk3T3pzN08wRkJSMnBFTEZOQlFWTXNUVUZCVFN4SFFVRkhPMEZCUTJoQ0xFMUJRVWtzUlVGQlJTeEhRVUZITEVsQlFVa3NTVUZCU1N4RFFVRkRMSEZDUVVGeFFpeEZRVUZGTEVOQlFVTTdPMEZCUlRGRExFOUJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNSVUZCUlN4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8wRkJRM1pDTEVsQlFVVXNRMEZCUXl4VlFVRlZMRzlEUVVGaExFTkJRVU03UVVGRE0wSXNTVUZCUlN4RFFVRkRMRk5CUVZNc2JVTkJRVmtzUTBGQlF6dEJRVU42UWl4SlFVRkZMRU5CUVVNc1MwRkJTeXhIUVVGSExFdEJRVXNzUTBGQlF6dEJRVU5xUWl4SlFVRkZMRU5CUVVNc1owSkJRV2RDTEVkQlFVY3NTMEZCU3l4RFFVRkRMR2RDUVVGblFpeERRVUZET3p0QlFVVTNReXhKUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZITEU5QlFVOHNRMEZCUXp0QlFVTm9RaXhKUVVGRkxFTkJRVU1zVVVGQlVTeEhRVUZITEZWQlFWTXNTVUZCU1N4RlFVRkZPMEZCUXpOQ0xGZEJRVThzVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1JVRkJSU3hEUVVGRExFTkJRVU03UjBGRGJrTXNRMEZCUXpzN1FVRkZSaXhUUVVGUExFVkJRVVVzUTBGQlF6dERRVU5ZT3p0QlFVVkVMRWxCUVVrc1NVRkJTU3hIUVVGSExFMUJRVTBzUlVGQlJTeERRVUZETzBGQlEzQkNMRWxCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzVFVGQlRTeERRVUZET3p0QlFVVnlRaXhyUTBGQlZ5eEpRVUZKTEVOQlFVTXNRMEZCUXpzN1FVRkZha0lzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJRenM3Y1VKQlJWSXNTVUZCU1NJc0ltWnBiR1VpT2lKb1lXNWtiR1ZpWVhKekxuSjFiblJwYldVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdLaUJoY3lCaVlYTmxJR1p5YjIwZ0p5NHZhR0Z1Wkd4bFltRnljeTlpWVhObEp6dGNibHh1THk4Z1JXRmphQ0J2WmlCMGFHVnpaU0JoZFdkdFpXNTBJSFJvWlNCSVlXNWtiR1ZpWVhKeklHOWlhbVZqZEM0Z1RtOGdibVZsWkNCMGJ5QnpaWFIxY0NCb1pYSmxMbHh1THk4Z0tGUm9hWE1nYVhNZ1pHOXVaU0IwYnlCbFlYTnBiSGtnYzJoaGNtVWdZMjlrWlNCaVpYUjNaV1Z1SUdOdmJXMXZibXB6SUdGdVpDQmljbTkzYzJVZ1pXNTJjeWxjYm1sdGNHOXlkQ0JUWVdabFUzUnlhVzVuSUdaeWIyMGdKeTR2YUdGdVpHeGxZbUZ5Y3k5ellXWmxMWE4wY21sdVp5YzdYRzVwYlhCdmNuUWdSWGhqWlhCMGFXOXVJR1p5YjIwZ0p5NHZhR0Z1Wkd4bFltRnljeTlsZUdObGNIUnBiMjRuTzF4dWFXMXdiM0owSUNvZ1lYTWdWWFJwYkhNZ1puSnZiU0FuTGk5b1lXNWtiR1ZpWVhKekwzVjBhV3h6Snp0Y2JtbHRjRzl5ZENBcUlHRnpJSEoxYm5ScGJXVWdabkp2YlNBbkxpOW9ZVzVrYkdWaVlYSnpMM0oxYm5ScGJXVW5PMXh1WEc1cGJYQnZjblFnYm05RGIyNW1iR2xqZENCbWNtOXRJQ2N1TDJoaGJtUnNaV0poY25NdmJtOHRZMjl1Wm14cFkzUW5PMXh1WEc0dkx5QkdiM0lnWTI5dGNHRjBhV0pwYkdsMGVTQmhibVFnZFhOaFoyVWdiM1YwYzJsa1pTQnZaaUJ0YjJSMWJHVWdjM2x6ZEdWdGN5d2diV0ZyWlNCMGFHVWdTR0Z1Wkd4bFltRnljeUJ2WW1wbFkzUWdZU0J1WVcxbGMzQmhZMlZjYm1aMWJtTjBhVzl1SUdOeVpXRjBaU2dwSUh0Y2JpQWdiR1YwSUdoaUlEMGdibVYzSUdKaGMyVXVTR0Z1Wkd4bFltRnljMFZ1ZG1seWIyNXRaVzUwS0NrN1hHNWNiaUFnVlhScGJITXVaWGgwWlc1a0tHaGlMQ0JpWVhObEtUdGNiaUFnYUdJdVUyRm1aVk4wY21sdVp5QTlJRk5oWm1WVGRISnBibWM3WEc0Z0lHaGlMa1Y0WTJWd2RHbHZiaUE5SUVWNFkyVndkR2x2Ymp0Y2JpQWdhR0l1VlhScGJITWdQU0JWZEdsc2N6dGNiaUFnYUdJdVpYTmpZWEJsUlhod2NtVnpjMmx2YmlBOUlGVjBhV3h6TG1WelkyRndaVVY0Y0hKbGMzTnBiMjQ3WEc1Y2JpQWdhR0l1VmswZ1BTQnlkVzUwYVcxbE8xeHVJQ0JvWWk1MFpXMXdiR0YwWlNBOUlHWjFibU4wYVc5dUtITndaV01wSUh0Y2JpQWdJQ0J5WlhSMWNtNGdjblZ1ZEdsdFpTNTBaVzF3YkdGMFpTaHpjR1ZqTENCb1lpazdYRzRnSUgwN1hHNWNiaUFnY21WMGRYSnVJR2hpTzF4dWZWeHVYRzVzWlhRZ2FXNXpkQ0E5SUdOeVpXRjBaU2dwTzF4dWFXNXpkQzVqY21WaGRHVWdQU0JqY21WaGRHVTdYRzVjYm01dlEyOXVabXhwWTNRb2FXNXpkQ2s3WEc1Y2JtbHVjM1JiSjJSbFptRjFiSFFuWFNBOUlHbHVjM1E3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdsdWMzUTdYRzRpWFgwPVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdibG9ja0hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbiAoY29udGV4dCwgb3B0aW9ucykge1xuICAgIHZhciBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgICBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoY29udGV4dCA9PT0gdHJ1ZSkge1xuICAgICAgcmV0dXJuIGZuKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoY29udGV4dCA9PT0gZmFsc2UgfHwgY29udGV4dCA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gaW52ZXJzZSh0aGlzKTtcbiAgICB9IGVsc2UgaWYgKF91dGlscy5pc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICBpZiAoY29udGV4dC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGlmIChvcHRpb25zLmlkcykge1xuICAgICAgICAgIG9wdGlvbnMuaWRzID0gW29wdGlvbnMubmFtZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5zdGFuY2UuaGVscGVycy5lYWNoKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGludmVyc2UodGhpcyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgICAgdmFyIGRhdGEgPSBfdXRpbHMuY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IF91dGlscy5hcHBlbmRDb250ZXh0UGF0aChvcHRpb25zLmRhdGEuY29udGV4dFBhdGgsIG9wdGlvbnMubmFtZSk7XG4gICAgICAgIG9wdGlvbnMgPSB7IGRhdGE6IGRhdGEgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyaGxiSEJsY25NdllteHZZMnN0YUdWc2NHVnlMVzFwYzNOcGJtY3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3p0eFFrRkJkMFFzVlVGQlZUczdjVUpCUlc1RUxGVkJRVk1zVVVGQlVTeEZRVUZGTzBGQlEyaERMRlZCUVZFc1EwRkJReXhqUVVGakxFTkJRVU1zYjBKQlFXOUNMRVZCUVVVc1ZVRkJVeXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTzBGQlEzWkZMRkZCUVVrc1QwRkJUeXhIUVVGSExFOUJRVThzUTBGQlF5eFBRVUZQTzFGQlF6TkNMRVZCUVVVc1IwRkJSeXhQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZET3p0QlFVVnNRaXhSUVVGSkxFOUJRVThzUzBGQlN5eEpRVUZKTEVWQlFVVTdRVUZEY0VJc1lVRkJUeXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTMEZEYWtJc1RVRkJUU3hKUVVGSkxFOUJRVThzUzBGQlN5eExRVUZMTEVsQlFVa3NUMEZCVHl4SlFVRkpMRWxCUVVrc1JVRkJSVHRCUVVNdlF5eGhRVUZQTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRMUVVOMFFpeE5RVUZOTEVsQlFVa3NaVUZCVVN4UFFVRlBMRU5CUVVNc1JVRkJSVHRCUVVNelFpeFZRVUZKTEU5QlFVOHNRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhGUVVGRk8wRkJRM1JDTEZsQlFVa3NUMEZCVHl4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVObUxHbENRVUZQTEVOQlFVTXNSMEZCUnl4SFFVRkhMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzFOQlF6bENPenRCUVVWRUxHVkJRVThzVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzA5QlEyaEVMRTFCUVUwN1FVRkRUQ3hsUVVGUExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0UFFVTjBRanRMUVVOR0xFMUJRVTA3UVVGRFRDeFZRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpMRWxCUVVrc1QwRkJUeXhEUVVGRExFZEJRVWNzUlVGQlJUdEJRVU12UWl4WlFVRkpMRWxCUVVrc1IwRkJSeXh0UWtGQldTeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkRja01zV1VGQlNTeERRVUZETEZkQlFWY3NSMEZCUnl4NVFrRkRha0lzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUTNoQ0xFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlEySXNRMEZCUXp0QlFVTkdMR1ZCUVU4c1IwRkJSeXhGUVVGRkxFbEJRVWtzUlVGQlJTeEpRVUZKTEVWQlFVVXNRMEZCUXp0UFFVTXhRanM3UVVGRlJDeGhRVUZQTEVWQlFVVXNRMEZCUXl4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03UzBGRE4wSTdSMEZEUml4RFFVRkRMRU5CUVVNN1EwRkRTaUlzSW1acGJHVWlPaUppYkc5amF5MW9aV3h3WlhJdGJXbHpjMmx1Wnk1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJR0Z3Y0dWdVpFTnZiblJsZUhSUVlYUm9MQ0JqY21WaGRHVkdjbUZ0WlN3Z2FYTkJjbkpoZVNCOUlHWnliMjBnSnk0dUwzVjBhV3h6Snp0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0b2FXNXpkR0Z1WTJVcElIdGNiaUFnYVc1emRHRnVZMlV1Y21WbmFYTjBaWEpJWld4d1pYSW9KMkpzYjJOclNHVnNjR1Z5VFdsemMybHVaeWNzSUdaMWJtTjBhVzl1S0dOdmJuUmxlSFFzSUc5d2RHbHZibk1wSUh0Y2JpQWdJQ0JzWlhRZ2FXNTJaWEp6WlNBOUlHOXdkR2x2Ym5NdWFXNTJaWEp6WlN4Y2JpQWdJQ0FnSUdadUlEMGdiM0IwYVc5dWN5NW1ianRjYmx4dUlDQWdJR2xtSUNoamIyNTBaWGgwSUQwOVBTQjBjblZsS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnWm00b2RHaHBjeWs3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2hqYjI1MFpYaDBJRDA5UFNCbVlXeHpaU0I4ZkNCamIyNTBaWGgwSUQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJwYm5abGNuTmxLSFJvYVhNcE8xeHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb2FYTkJjbkpoZVNoamIyNTBaWGgwS1NrZ2UxeHVJQ0FnSUNBZ2FXWWdLR052Ym5SbGVIUXViR1Z1WjNSb0lENGdNQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9iM0IwYVc5dWN5NXBaSE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZjSFJwYjI1ekxtbGtjeUE5SUZ0dmNIUnBiMjV6TG01aGJXVmRPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsdWMzUmhibU5sTG1obGJIQmxjbk11WldGamFDaGpiMjUwWlhoMExDQnZjSFJwYjI1ektUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuWmxjbk5sS0hSb2FYTXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCcFppQW9iM0IwYVc5dWN5NWtZWFJoSUNZbUlHOXdkR2x2Ym5NdWFXUnpLU0I3WEc0Z0lDQWdJQ0FnSUd4bGRDQmtZWFJoSUQwZ1kzSmxZWFJsUm5KaGJXVW9iM0IwYVc5dWN5NWtZWFJoS1R0Y2JpQWdJQ0FnSUNBZ1pHRjBZUzVqYjI1MFpYaDBVR0YwYUNBOUlHRndjR1Z1WkVOdmJuUmxlSFJRWVhSb0tGeHVJQ0FnSUNBZ0lDQWdJRzl3ZEdsdmJuTXVaR0YwWVM1amIyNTBaWGgwVUdGMGFDeGNiaUFnSUNBZ0lDQWdJQ0J2Y0hScGIyNXpMbTVoYldWY2JpQWdJQ0FnSUNBZ0tUdGNiaUFnSUNBZ0lDQWdiM0IwYVc5dWN5QTlJSHNnWkdGMFlUb2daR0YwWVNCOU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z1ptNG9ZMjl1ZEdWNGRDd2diM0IwYVc5dWN5azdYRzRnSUNBZ2ZWeHVJQ0I5S1R0Y2JuMWNiaUpkZlE9PVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxudmFyIF9leGNlcHRpb24gPSByZXF1aXJlKCcuLi9leGNlcHRpb24nKTtcblxudmFyIF9leGNlcHRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhjZXB0aW9uKTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdlYWNoJywgZnVuY3Rpb24gKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdNdXN0IHBhc3MgaXRlcmF0b3IgdG8gI2VhY2gnKTtcbiAgICB9XG5cbiAgICB2YXIgZm4gPSBvcHRpb25zLmZuLFxuICAgICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgICBpID0gMCxcbiAgICAgICAgcmV0ID0gJycsXG4gICAgICAgIGRhdGEgPSB1bmRlZmluZWQsXG4gICAgICAgIGNvbnRleHRQYXRoID0gdW5kZWZpbmVkO1xuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgY29udGV4dFBhdGggPSBfdXRpbHMuYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSkgKyAnLic7XG4gICAgfVxuXG4gICAgaWYgKF91dGlscy5pc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmRhdGEpIHtcbiAgICAgIGRhdGEgPSBfdXRpbHMuY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleGVjSXRlcmF0aW9uKGZpZWxkLCBpbmRleCwgbGFzdCkge1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgZGF0YS5rZXkgPSBmaWVsZDtcbiAgICAgICAgZGF0YS5pbmRleCA9IGluZGV4O1xuICAgICAgICBkYXRhLmZpcnN0ID0gaW5kZXggPT09IDA7XG4gICAgICAgIGRhdGEubGFzdCA9ICEhbGFzdDtcblxuICAgICAgICBpZiAoY29udGV4dFBhdGgpIHtcbiAgICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gY29udGV4dFBhdGggKyBmaWVsZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXQgPSByZXQgKyBmbihjb250ZXh0W2ZpZWxkXSwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogX3V0aWxzLmJsb2NrUGFyYW1zKFtjb250ZXh0W2ZpZWxkXSwgZmllbGRdLCBbY29udGV4dFBhdGggKyBmaWVsZCwgbnVsbF0pXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChfdXRpbHMuaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgICBmb3IgKHZhciBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBpZiAoaSBpbiBjb250ZXh0KSB7XG4gICAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGdsb2JhbC5TeW1ib2wgJiYgY29udGV4dFtnbG9iYWwuU3ltYm9sLml0ZXJhdG9yXSkge1xuICAgICAgICB2YXIgbmV3Q29udGV4dCA9IFtdO1xuICAgICAgICB2YXIgaXRlcmF0b3IgPSBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgIGZvciAodmFyIGl0ID0gaXRlcmF0b3IubmV4dCgpOyAhaXQuZG9uZTsgaXQgPSBpdGVyYXRvci5uZXh0KCkpIHtcbiAgICAgICAgICBuZXdDb250ZXh0LnB1c2goaXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQgPSBuZXdDb250ZXh0O1xuICAgICAgICBmb3IgKHZhciBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIHByaW9yS2V5ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgT2JqZWN0LmtleXMoY29udGV4dCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICAvLyBXZSdyZSBydW5uaW5nIHRoZSBpdGVyYXRpb25zIG9uZSBzdGVwIG91dCBvZiBzeW5jIHNvIHdlIGNhbiBkZXRlY3RcbiAgICAgICAgICAgIC8vIHRoZSBsYXN0IGl0ZXJhdGlvbiB3aXRob3V0IGhhdmUgdG8gc2NhbiB0aGUgb2JqZWN0IHR3aWNlIGFuZCBjcmVhdGVcbiAgICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgICBpZiAocHJpb3JLZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmlvcktleSA9IGtleTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBpZiAocHJpb3JLZXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZXhlY0l0ZXJhdGlvbihwcmlvcktleSwgaSAtIDEsIHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJobGJIQmxjbk12WldGamFDNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3T3pzN08zRkNRVTFQTEZWQlFWVTdPM2xDUVVOTExHTkJRV003T3pzN2NVSkJSWEpDTEZWQlFWTXNVVUZCVVN4RlFVRkZPMEZCUTJoRExGVkJRVkVzUTBGQlF5eGpRVUZqTEVOQlFVTXNUVUZCVFN4RlFVRkZMRlZCUVZNc1QwRkJUeXhGUVVGRkxFOUJRVThzUlVGQlJUdEJRVU42UkN4UlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVGRk8wRkJRMW9zV1VGQlRTd3lRa0ZCWXl3MlFrRkJOa0lzUTBGQlF5eERRVUZETzB0QlEzQkVPenRCUVVWRUxGRkJRVWtzUlVGQlJTeEhRVUZITEU5QlFVOHNRMEZCUXl4RlFVRkZPMUZCUTJwQ0xFOUJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTXNUMEZCVHp0UlFVTjZRaXhEUVVGRExFZEJRVWNzUTBGQlF6dFJRVU5NTEVkQlFVY3NSMEZCUnl4RlFVRkZPMUZCUTFJc1NVRkJTU3haUVVGQk8xRkJRMG9zVjBGQlZ5eFpRVUZCTEVOQlFVTTdPMEZCUldRc1VVRkJTU3hQUVVGUExFTkJRVU1zU1VGQlNTeEpRVUZKTEU5QlFVOHNRMEZCUXl4SFFVRkhMRVZCUVVVN1FVRkRMMElzYVVKQlFWY3NSMEZEVkN4NVFrRkJhMElzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRWRCUVVjc1EwRkJRenRMUVVOeVJUczdRVUZGUkN4UlFVRkpMR3RDUVVGWExFOUJRVThzUTBGQlF5eEZRVUZGTzBGQlEzWkNMR0ZCUVU4c1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUXpsQ096dEJRVVZFTEZGQlFVa3NUMEZCVHl4RFFVRkRMRWxCUVVrc1JVRkJSVHRCUVVOb1FpeFZRVUZKTEVkQlFVY3NiVUpCUVZrc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzB0QlEyeERPenRCUVVWRUxHRkJRVk1zWVVGQllTeERRVUZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRVZCUVVVc1NVRkJTU3hGUVVGRk8wRkJRM3BETEZWQlFVa3NTVUZCU1N4RlFVRkZPMEZCUTFJc1dVRkJTU3hEUVVGRExFZEJRVWNzUjBGQlJ5eExRVUZMTEVOQlFVTTdRVUZEYWtJc1dVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTTdRVUZEYmtJc1dVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eExRVUZMTEV0QlFVc3NRMEZCUXl4RFFVRkRPMEZCUTNwQ0xGbEJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJRenM3UVVGRmJrSXNXVUZCU1N4WFFVRlhMRVZCUVVVN1FVRkRaaXhqUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEZkQlFWY3NSMEZCUnl4TFFVRkxMRU5CUVVNN1UwRkRlRU03VDBGRFJqczdRVUZGUkN4VFFVRkhMRWRCUTBRc1IwRkJSeXhIUVVOSUxFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN1FVRkRha0lzV1VGQlNTeEZRVUZGTEVsQlFVazdRVUZEVml4dFFrRkJWeXhGUVVGRkxHMUNRVU5ZTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRkxFdEJRVXNzUTBGQlF5eEZRVU4yUWl4RFFVRkRMRmRCUVZjc1IwRkJSeXhMUVVGTExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlF6VkNPMDlCUTBZc1EwRkJReXhEUVVGRE8wdEJRMDQ3TzBGQlJVUXNVVUZCU1N4UFFVRlBMRWxCUVVrc1QwRkJUeXhQUVVGUExFdEJRVXNzVVVGQlVTeEZRVUZGTzBGQlF6RkRMRlZCUVVrc1pVRkJVU3hQUVVGUExFTkJRVU1zUlVGQlJUdEJRVU53UWl4aFFVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU4yUXl4alFVRkpMRU5CUVVNc1NVRkJTU3hQUVVGUExFVkJRVVU3UVVGRGFFSXNlVUpCUVdFc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNTMEZCU3l4UFFVRlBMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzFkQlF5OURPMU5CUTBZN1QwRkRSaXhOUVVGTkxFbEJRVWtzVFVGQlRTeERRVUZETEUxQlFVMHNTVUZCU1N4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eFJRVUZSTEVOQlFVTXNSVUZCUlR0QlFVTXpSQ3haUVVGTkxGVkJRVlVzUjBGQlJ5eEZRVUZGTEVOQlFVTTdRVUZEZEVJc1dVRkJUU3hSUVVGUkxFZEJRVWNzVDBGQlR5eERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1VVRkJVU3hEUVVGRExFVkJRVVVzUTBGQlF6dEJRVU51UkN4aFFVRkxMRWxCUVVrc1JVRkJSU3hIUVVGSExGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJTeEhRVUZITEZGQlFWRXNRMEZCUXl4SlFVRkpMRVZCUVVVc1JVRkJSVHRCUVVNM1JDeHZRa0ZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdVMEZETTBJN1FVRkRSQ3hsUVVGUExFZEJRVWNzVlVGQlZTeERRVUZETzBGQlEzSkNMR0ZCUVVzc1NVRkJTU3hEUVVGRExFZEJRVWNzVDBGQlR5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTzBGQlEzWkRMSFZDUVVGaExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1QwRkJUeXhEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXp0VFFVTXZRenRQUVVOR0xFMUJRVTA3TzBGQlEwd3NZMEZCU1N4UlFVRlJMRmxCUVVFc1EwRkJRenM3UVVGRllpeG5Ra0ZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNWVUZCUVN4SFFVRkhMRVZCUVVrN096czdRVUZKYkVNc1owSkJRVWtzVVVGQlVTeExRVUZMTEZOQlFWTXNSVUZCUlR0QlFVTXhRaXd5UWtGQllTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03WVVGRGFFTTdRVUZEUkN4dlFrRkJVU3hIUVVGSExFZEJRVWNzUTBGQlF6dEJRVU5tTEdGQlFVTXNSVUZCUlN4RFFVRkRPMWRCUTB3c1EwRkJReXhEUVVGRE8wRkJRMGdzWTBGQlNTeFJRVUZSTEV0QlFVc3NVMEZCVXl4RlFVRkZPMEZCUXpGQ0xIbENRVUZoTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdWMEZEZEVNN08wOUJRMFk3UzBGRFJqczdRVUZGUkN4UlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVU3UVVGRFdDeFRRVUZITEVkQlFVY3NUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRM0pDT3p0QlFVVkVMRmRCUVU4c1IwRkJSeXhEUVVGRE8wZEJRMW9zUTBGQlF5eERRVUZETzBOQlEwb2lMQ0ptYVd4bElqb2laV0ZqYUM1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdYRzRnSUdGd2NHVnVaRU52Ym5SbGVIUlFZWFJvTEZ4dUlDQmliRzlqYTFCaGNtRnRjeXhjYmlBZ1kzSmxZWFJsUm5KaGJXVXNYRzRnSUdselFYSnlZWGtzWEc0Z0lHbHpSblZ1WTNScGIyNWNibjBnWm5KdmJTQW5MaTR2ZFhScGJITW5PMXh1YVcxd2IzSjBJRVY0WTJWd2RHbHZiaUJtY205dElDY3VMaTlsZUdObGNIUnBiMjRuTzF4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlocGJuTjBZVzVqWlNrZ2UxeHVJQ0JwYm5OMFlXNWpaUzV5WldkcGMzUmxja2hsYkhCbGNpZ25aV0ZqYUNjc0lHWjFibU4wYVc5dUtHTnZiblJsZUhRc0lHOXdkR2x2Ym5NcElIdGNiaUFnSUNCcFppQW9JVzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGZUdObGNIUnBiMjRvSjAxMWMzUWdjR0Z6Y3lCcGRHVnlZWFJ2Y2lCMGJ5QWpaV0ZqYUNjcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUd4bGRDQm1iaUE5SUc5d2RHbHZibk11Wm00c1hHNGdJQ0FnSUNCcGJuWmxjbk5sSUQwZ2IzQjBhVzl1Y3k1cGJuWmxjbk5sTEZ4dUlDQWdJQ0FnYVNBOUlEQXNYRzRnSUNBZ0lDQnlaWFFnUFNBbkp5eGNiaUFnSUNBZ0lHUmhkR0VzWEc0Z0lDQWdJQ0JqYjI1MFpYaDBVR0YwYUR0Y2JseHVJQ0FnSUdsbUlDaHZjSFJwYjI1ekxtUmhkR0VnSmlZZ2IzQjBhVzl1Y3k1cFpITXBJSHRjYmlBZ0lDQWdJR052Ym5SbGVIUlFZWFJvSUQxY2JpQWdJQ0FnSUNBZ1lYQndaVzVrUTI5dWRHVjRkRkJoZEdnb2IzQjBhVzl1Y3k1a1lYUmhMbU52Ym5SbGVIUlFZWFJvTENCdmNIUnBiMjV6TG1sa2Mxc3dYU2tnS3lBbkxpYzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR2x6Um5WdVkzUnBiMjRvWTI5dWRHVjRkQ2twSUh0Y2JpQWdJQ0FnSUdOdmJuUmxlSFFnUFNCamIyNTBaWGgwTG1OaGJHd29kR2hwY3lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHOXdkR2x2Ym5NdVpHRjBZU2tnZTF4dUlDQWdJQ0FnWkdGMFlTQTlJR055WldGMFpVWnlZVzFsS0c5d2RHbHZibk11WkdGMFlTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z1pYaGxZMGwwWlhKaGRHbHZiaWhtYVdWc1pDd2dhVzVrWlhnc0lHeGhjM1FwSUh0Y2JpQWdJQ0FnSUdsbUlDaGtZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lHUmhkR0V1YTJWNUlEMGdabWxsYkdRN1hHNGdJQ0FnSUNBZ0lHUmhkR0V1YVc1a1pYZ2dQU0JwYm1SbGVEdGNiaUFnSUNBZ0lDQWdaR0YwWVM1bWFYSnpkQ0E5SUdsdVpHVjRJRDA5UFNBd08xeHVJQ0FnSUNBZ0lDQmtZWFJoTG14aGMzUWdQU0FoSVd4aGMzUTdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnZiblJsZUhSUVlYUm9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ1pHRjBZUzVqYjI1MFpYaDBVR0YwYUNBOUlHTnZiblJsZUhSUVlYUm9JQ3NnWm1sbGJHUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMElEMWNiaUFnSUNBZ0lDQWdjbVYwSUN0Y2JpQWdJQ0FnSUNBZ1ptNG9ZMjl1ZEdWNGRGdG1hV1ZzWkYwc0lIdGNiaUFnSUNBZ0lDQWdJQ0JrWVhSaE9pQmtZWFJoTEZ4dUlDQWdJQ0FnSUNBZ0lHSnNiMk5yVUdGeVlXMXpPaUJpYkc5amExQmhjbUZ0Y3loY2JpQWdJQ0FnSUNBZ0lDQWdJRnRqYjI1MFpYaDBXMlpwWld4a1hTd2dabWxsYkdSZExGeHVJQ0FnSUNBZ0lDQWdJQ0FnVzJOdmJuUmxlSFJRWVhSb0lDc2dabWxsYkdRc0lHNTFiR3hkWEc0Z0lDQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTI5dWRHVjRkQ0FtSmlCMGVYQmxiMllnWTI5dWRHVjRkQ0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lHbG1JQ2hwYzBGeWNtRjVLR052Ym5SbGVIUXBLU0I3WEc0Z0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdvZ1BTQmpiMjUwWlhoMExteGxibWQwYURzZ2FTQThJR283SUdrckt5a2dlMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHBJR2x1SUdOdmJuUmxlSFFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1Y0WldOSmRHVnlZWFJwYjI0b2FTd2dhU3dnYVNBOVBUMGdZMjl1ZEdWNGRDNXNaVzVuZEdnZ0xTQXhLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMGdaV3h6WlNCcFppQW9aMnh2WW1Gc0xsTjViV0p2YkNBbUppQmpiMjUwWlhoMFcyZHNiMkpoYkM1VGVXMWliMnd1YVhSbGNtRjBiM0pkS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1bGQwTnZiblJsZUhRZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhWFJsY21GMGIzSWdQU0JqYjI1MFpYaDBXMmRzYjJKaGJDNVRlVzFpYjJ3dWFYUmxjbUYwYjNKZEtDazdYRzRnSUNBZ0lDQWdJR1p2Y2lBb2JHVjBJR2wwSUQwZ2FYUmxjbUYwYjNJdWJtVjRkQ2dwT3lBaGFYUXVaRzl1WlRzZ2FYUWdQU0JwZEdWeVlYUnZjaTV1WlhoMEtDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCdVpYZERiMjUwWlhoMExuQjFjMmdvYVhRdWRtRnNkV1VwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHTnZiblJsZUhRZ1BTQnVaWGREYjI1MFpYaDBPMXh1SUNBZ0lDQWdJQ0JtYjNJZ0tHeGxkQ0JxSUQwZ1kyOXVkR1Y0ZEM1c1pXNW5kR2c3SUdrZ1BDQnFPeUJwS3lzcElIdGNiaUFnSUNBZ0lDQWdJQ0JsZUdWalNYUmxjbUYwYVc5dUtHa3NJR2tzSUdrZ1BUMDlJR052Ym5SbGVIUXViR1Z1WjNSb0lDMGdNU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUd4bGRDQndjbWx2Y2t0bGVUdGNibHh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVhMlY1Y3loamIyNTBaWGgwS1M1bWIzSkZZV05vS0d0bGVTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0x5OGdWMlVuY21VZ2NuVnVibWx1WnlCMGFHVWdhWFJsY21GMGFXOXVjeUJ2Ym1VZ2MzUmxjQ0J2ZFhRZ2IyWWdjM2x1WXlCemJ5QjNaU0JqWVc0Z1pHVjBaV04wWEc0Z0lDQWdJQ0FnSUNBZ0x5OGdkR2hsSUd4aGMzUWdhWFJsY21GMGFXOXVJSGRwZEdodmRYUWdhR0YyWlNCMGJ5QnpZMkZ1SUhSb1pTQnZZbXBsWTNRZ2RIZHBZMlVnWVc1a0lHTnlaV0YwWlZ4dUlDQWdJQ0FnSUNBZ0lDOHZJR0Z1SUdsMFpYSnRaV1JwWVhSbElHdGxlWE1nWVhKeVlYa3VYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIQnlhVzl5UzJWNUlDRTlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1Y0WldOSmRHVnlZWFJwYjI0b2NISnBiM0pMWlhrc0lHa2dMU0F4S1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnY0hKcGIzSkxaWGtnUFNCclpYazdYRzRnSUNBZ0lDQWdJQ0FnYVNzck8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIQnlhVzl5UzJWNUlDRTlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmxlR1ZqU1hSbGNtRjBhVzl1S0hCeWFXOXlTMlY1TENCcElDMGdNU3dnZEhKMVpTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvYVNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnY21WMElEMGdhVzUyWlhKelpTaDBhR2x6S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdjbVYwTzF4dUlDQjlLVHRjYm4xY2JpSmRmUT09XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfZXhjZXB0aW9uID0gcmVxdWlyZSgnLi4vZXhjZXB0aW9uJyk7XG5cbnZhciBfZXhjZXB0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4Y2VwdGlvbik7XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignaGVscGVyTWlzc2luZycsIGZ1bmN0aW9uICgpIC8qIFthcmdzLCBdb3B0aW9ucyAqL3tcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJyk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJobGJIQmxjbk12YUdWc2NHVnlMVzFwYzNOcGJtY3Vhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN096dDVRa0ZCYzBJc1kwRkJZenM3T3p0eFFrRkZja0lzVlVGQlV5eFJRVUZSTEVWQlFVVTdRVUZEYUVNc1ZVRkJVU3hEUVVGRExHTkJRV01zUTBGQlF5eGxRVUZsTEVWQlFVVXNhVU5CUVdkRE8wRkJRM1pGTEZGQlFVa3NVMEZCVXl4RFFVRkRMRTFCUVUwc1MwRkJTeXhEUVVGRExFVkJRVVU3TzBGQlJURkNMR0ZCUVU4c1UwRkJVeXhEUVVGRE8wdEJRMnhDTEUxQlFVMDdPMEZCUlV3c1dVRkJUU3d5UWtGRFNpeHRRa0ZCYlVJc1IwRkJSeXhUUVVGVExFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFZEJRVWNzUjBGQlJ5eERRVU5xUlN4RFFVRkRPMHRCUTBnN1IwRkRSaXhEUVVGRExFTkJRVU03UTBGRFNpSXNJbVpwYkdVaU9pSm9aV3h3WlhJdGJXbHpjMmx1Wnk1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQkZlR05sY0hScGIyNGdabkp2YlNBbkxpNHZaWGhqWlhCMGFXOXVKenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRvYVc1emRHRnVZMlVwSUh0Y2JpQWdhVzV6ZEdGdVkyVXVjbVZuYVhOMFpYSklaV3h3WlhJb0oyaGxiSEJsY2sxcGMzTnBibWNuTENCbWRXNWpkR2x2YmlndktpQmJZWEpuY3l3Z1hXOXdkR2x2Ym5NZ0tpOHBJSHRjYmlBZ0lDQnBaaUFvWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0E5UFQwZ01Ta2dlMXh1SUNBZ0lDQWdMeThnUVNCdGFYTnphVzVuSUdacFpXeGtJR2x1SUdFZ2UzdG1iMjk5ZlNCamIyNXpkSEoxWTNRdVhHNGdJQ0FnSUNCeVpYUjFjbTRnZFc1a1pXWnBibVZrTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQXZMeUJUYjIxbGIyNWxJR2x6SUdGamRIVmhiR3g1SUhSeWVXbHVaeUIwYnlCallXeHNJSE52YldWMGFHbHVaeXdnWW14dmR5QjFjQzVjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGZUdObGNIUnBiMjRvWEc0Z0lDQWdJQ0FnSUNkTmFYTnphVzVuSUdobGJIQmxjam9nWENJbklDc2dZWEpuZFcxbGJuUnpXMkZ5WjNWdFpXNTBjeTVzWlc1bmRHZ2dMU0F4WFM1dVlXMWxJQ3NnSjF3aUoxeHVJQ0FnSUNBZ0tUdGNiaUFnSUNCOVhHNGdJSDBwTzF4dWZWeHVJbDE5XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG52YXIgX2V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4uL2V4Y2VwdGlvbicpO1xuXG52YXIgX2V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2lmJywgZnVuY3Rpb24gKGNvbmRpdGlvbmFsLCBvcHRpb25zKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggIT0gMikge1xuICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJyNpZiByZXF1aXJlcyBleGFjdGx5IG9uZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgICBpZiAoX3V0aWxzLmlzRnVuY3Rpb24oY29uZGl0aW9uYWwpKSB7XG4gICAgICBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBiZWhhdmlvciBpcyB0byByZW5kZXIgdGhlIHBvc2l0aXZlIHBhdGggaWYgdGhlIHZhbHVlIGlzIHRydXRoeSBhbmQgbm90IGVtcHR5LlxuICAgIC8vIFRoZSBgaW5jbHVkZVplcm9gIG9wdGlvbiBtYXkgYmUgc2V0IHRvIHRyZWF0IHRoZSBjb25kdGlvbmFsIGFzIHB1cmVseSBub3QgZW1wdHkgYmFzZWQgb24gdGhlXG4gICAgLy8gYmVoYXZpb3Igb2YgaXNFbXB0eS4gRWZmZWN0aXZlbHkgdGhpcyBkZXRlcm1pbmVzIGlmIDAgaXMgaGFuZGxlZCBieSB0aGUgcG9zaXRpdmUgcGF0aCBvciBuZWdhdGl2ZS5cbiAgICBpZiAoIW9wdGlvbnMuaGFzaC5pbmNsdWRlWmVybyAmJiAhY29uZGl0aW9uYWwgfHwgX3V0aWxzLmlzRW1wdHkoY29uZGl0aW9uYWwpKSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5mbih0aGlzKTtcbiAgICB9XG4gIH0pO1xuXG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd1bmxlc3MnLCBmdW5jdGlvbiAoY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnI3VubGVzcyByZXF1aXJlcyBleGFjdGx5IG9uZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgICByZXR1cm4gaW5zdGFuY2UuaGVscGVyc1snaWYnXS5jYWxsKHRoaXMsIGNvbmRpdGlvbmFsLCB7XG4gICAgICBmbjogb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgaW52ZXJzZTogb3B0aW9ucy5mbixcbiAgICAgIGhhc2g6IG9wdGlvbnMuaGFzaFxuICAgIH0pO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJobGJIQmxjbk12YVdZdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3p0eFFrRkJiME1zVlVGQlZUczdlVUpCUTNoQ0xHTkJRV003T3pzN2NVSkJSWEpDTEZWQlFWTXNVVUZCVVN4RlFVRkZPMEZCUTJoRExGVkJRVkVzUTBGQlF5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RlFVRkZMRlZCUVZNc1YwRkJWeXhGUVVGRkxFOUJRVThzUlVGQlJUdEJRVU16UkN4UlFVRkpMRk5CUVZNc1EwRkJReXhOUVVGTkxFbEJRVWtzUTBGQlF5eEZRVUZGTzBGQlEzcENMRmxCUVUwc01rSkJRV01zYlVOQlFXMURMRU5CUVVNc1EwRkJRenRMUVVNeFJEdEJRVU5FTEZGQlFVa3NhMEpCUVZjc1YwRkJWeXhEUVVGRExFVkJRVVU3UVVGRE0wSXNhVUpCUVZjc1IwRkJSeXhYUVVGWExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNSRE96czdPenRCUVV0RUxGRkJRVWtzUVVGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1YwRkJWeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEpRVUZMTEdWQlFWRXNWMEZCVnl4RFFVRkRMRVZCUVVVN1FVRkRka1VzWVVGQlR5eFBRVUZQTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRemxDTEUxQlFVMDdRVUZEVEN4aFFVRlBMRTlCUVU4c1EwRkJReXhGUVVGRkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTMEZEZWtJN1IwRkRSaXhEUVVGRExFTkJRVU03TzBGQlJVZ3NWVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhSUVVGUkxFVkJRVVVzVlVGQlV5eFhRVUZYTEVWQlFVVXNUMEZCVHl4RlFVRkZPMEZCUXk5RUxGRkJRVWtzVTBGQlV5eERRVUZETEUxQlFVMHNTVUZCU1N4RFFVRkRMRVZCUVVVN1FVRkRla0lzV1VGQlRTd3lRa0ZCWXl4MVEwRkJkVU1zUTBGQlF5eERRVUZETzB0QlF6bEVPMEZCUTBRc1YwRkJUeXhSUVVGUkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVVzVjBGQlZ5eEZRVUZGTzBGQlEzQkVMRkZCUVVVc1JVRkJSU3hQUVVGUExFTkJRVU1zVDBGQlR6dEJRVU51UWl4aFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFVkJRVVU3UVVGRGJrSXNWVUZCU1N4RlFVRkZMRTlCUVU4c1EwRkJReXhKUVVGSk8wdEJRMjVDTEVOQlFVTXNRMEZCUXp0SFFVTktMRU5CUVVNc1EwRkJRenREUVVOS0lpd2labWxzWlNJNkltbG1MbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhzZ2FYTkZiWEIwZVN3Z2FYTkdkVzVqZEdsdmJpQjlJR1p5YjIwZ0p5NHVMM1YwYVd4ekp6dGNibWx0Y0c5eWRDQkZlR05sY0hScGIyNGdabkp2YlNBbkxpNHZaWGhqWlhCMGFXOXVKenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRvYVc1emRHRnVZMlVwSUh0Y2JpQWdhVzV6ZEdGdVkyVXVjbVZuYVhOMFpYSklaV3h3WlhJb0oybG1KeXdnWm5WdVkzUnBiMjRvWTI5dVpHbDBhVzl1WVd3c0lHOXdkR2x2Ym5NcElIdGNiaUFnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQWhQU0F5S1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtDY2phV1lnY21WeGRXbHlaWE1nWlhoaFkzUnNlU0J2Ym1VZ1lYSm5kVzFsYm5RbktUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tHbHpSblZ1WTNScGIyNG9ZMjl1WkdsMGFXOXVZV3dwS1NCN1hHNGdJQ0FnSUNCamIyNWthWFJwYjI1aGJDQTlJR052Ym1ScGRHbHZibUZzTG1OaGJHd29kR2hwY3lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1JHVm1ZWFZzZENCaVpXaGhkbWx2Y2lCcGN5QjBieUJ5Wlc1a1pYSWdkR2hsSUhCdmMybDBhWFpsSUhCaGRHZ2dhV1lnZEdobElIWmhiSFZsSUdseklIUnlkWFJvZVNCaGJtUWdibTkwSUdWdGNIUjVMbHh1SUNBZ0lDOHZJRlJvWlNCZ2FXNWpiSFZrWlZwbGNtOWdJRzl3ZEdsdmJpQnRZWGtnWW1VZ2MyVjBJSFJ2SUhSeVpXRjBJSFJvWlNCamIyNWtkR2x2Ym1Gc0lHRnpJSEIxY21Wc2VTQnViM1FnWlcxd2RIa2dZbUZ6WldRZ2IyNGdkR2hsWEc0Z0lDQWdMeThnWW1Wb1lYWnBiM0lnYjJZZ2FYTkZiWEIwZVM0Z1JXWm1aV04wYVhabGJIa2dkR2hwY3lCa1pYUmxjbTFwYm1WeklHbG1JREFnYVhNZ2FHRnVaR3hsWkNCaWVTQjBhR1VnY0c5emFYUnBkbVVnY0dGMGFDQnZjaUJ1WldkaGRHbDJaUzVjYmlBZ0lDQnBaaUFvS0NGdmNIUnBiMjV6TG1oaGMyZ3VhVzVqYkhWa1pWcGxjbThnSmlZZ0lXTnZibVJwZEdsdmJtRnNLU0I4ZkNCcGMwVnRjSFI1S0dOdmJtUnBkR2x2Ym1Gc0tTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHOXdkR2x2Ym5NdWFXNTJaWEp6WlNoMGFHbHpLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUc5d2RHbHZibk11Wm00b2RHaHBjeWs3WEc0Z0lDQWdmVnh1SUNCOUtUdGNibHh1SUNCcGJuTjBZVzVqWlM1eVpXZHBjM1JsY2tobGJIQmxjaWduZFc1c1pYTnpKeXdnWm5WdVkzUnBiMjRvWTI5dVpHbDBhVzl1WVd3c0lHOXdkR2x2Ym5NcElIdGNiaUFnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQWhQU0F5S1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtDY2pkVzVzWlhOeklISmxjWFZwY21WeklHVjRZV04wYkhrZ2IyNWxJR0Z5WjNWdFpXNTBKeWs3WEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCcGJuTjBZVzVqWlM1b1pXeHdaWEp6V3lkcFppZGRMbU5oYkd3b2RHaHBjeXdnWTI5dVpHbDBhVzl1WVd3c0lIdGNiaUFnSUNBZ0lHWnVPaUJ2Y0hScGIyNXpMbWx1ZG1WeWMyVXNYRzRnSUNBZ0lDQnBiblpsY25ObE9pQnZjSFJwYjI1ekxtWnVMRnh1SUNBZ0lDQWdhR0Z6YURvZ2IzQjBhVzl1Y3k1b1lYTm9YRzRnSUNBZ2ZTazdYRzRnSUgwcE8xeHVmVnh1SWwxOVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uICgpIC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi97XG4gICAgdmFyIGFyZ3MgPSBbdW5kZWZpbmVkXSxcbiAgICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgICB9XG5cbiAgICB2YXIgbGV2ZWwgPSAxO1xuICAgIGlmIChvcHRpb25zLmhhc2gubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmhhc2gubGV2ZWw7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5kYXRhLmxldmVsICE9IG51bGwpIHtcbiAgICAgIGxldmVsID0gb3B0aW9ucy5kYXRhLmxldmVsO1xuICAgIH1cbiAgICBhcmdzWzBdID0gbGV2ZWw7XG5cbiAgICBpbnN0YW5jZS5sb2cuYXBwbHkoaW5zdGFuY2UsIGFyZ3MpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJobGJIQmxjbk12Ykc5bkxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPenM3Y1VKQlFXVXNWVUZCVXl4UlFVRlJMRVZCUVVVN1FVRkRhRU1zVlVGQlVTeERRVUZETEdOQlFXTXNRMEZCUXl4TFFVRkxMRVZCUVVVc2EwTkJRV2xETzBGQlF6bEVMRkZCUVVrc1NVRkJTU3hIUVVGSExFTkJRVU1zVTBGQlV5eERRVUZETzFGQlEzQkNMRTlCUVU4c1IwRkJSeXhUUVVGVExFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNMVF5eFRRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3UVVGRE4wTXNWVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTjZRanM3UVVGRlJDeFJRVUZKTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRaQ3hSUVVGSkxFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4SlFVRkpMRWxCUVVrc1JVRkJSVHRCUVVNNVFpeFhRVUZMTEVkQlFVY3NUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU03UzBGRE5VSXNUVUZCVFN4SlFVRkpMRTlCUVU4c1EwRkJReXhKUVVGSkxFbEJRVWtzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4TFFVRkxMRWxCUVVrc1NVRkJTU3hGUVVGRk8wRkJRM0pFTEZkQlFVc3NSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF6dExRVU0xUWp0QlFVTkVMRkZCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTTdPMEZCUldoQ0xGbEJRVkVzUTBGQlF5eEhRVUZITEUxQlFVRXNRMEZCV2l4UlFVRlJMRVZCUVZFc1NVRkJTU3hEUVVGRExFTkJRVU03UjBGRGRrSXNRMEZCUXl4RFFVRkRPME5CUTBvaUxDSm1hV3hsSWpvaWJHOW5MbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRvYVc1emRHRnVZMlVwSUh0Y2JpQWdhVzV6ZEdGdVkyVXVjbVZuYVhOMFpYSklaV3h3WlhJb0oyeHZaeWNzSUdaMWJtTjBhVzl1S0M4cUlHMWxjM05oWjJVc0lHOXdkR2x2Ym5NZ0tpOHBJSHRjYmlBZ0lDQnNaWFFnWVhKbmN5QTlJRnQxYm1SbFptbHVaV1JkTEZ4dUlDQWdJQ0FnYjNCMGFXOXVjeUE5SUdGeVozVnRaVzUwYzF0aGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUMwZ01WMDdYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREE3SUdrZ1BDQmhjbWQxYldWdWRITXViR1Z1WjNSb0lDMGdNVHNnYVNzcktTQjdYRzRnSUNBZ0lDQmhjbWR6TG5CMWMyZ29ZWEpuZFcxbGJuUnpXMmxkS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ2JHVjJaV3dnUFNBeE8xeHVJQ0FnSUdsbUlDaHZjSFJwYjI1ekxtaGhjMmd1YkdWMlpXd2dJVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdiR1YyWld3Z1BTQnZjSFJwYjI1ekxtaGhjMmd1YkdWMlpXdzdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDaHZjSFJwYjI1ekxtUmhkR0VnSmlZZ2IzQjBhVzl1Y3k1a1lYUmhMbXhsZG1Wc0lDRTlJRzUxYkd3cElIdGNiaUFnSUNBZ0lHeGxkbVZzSUQwZ2IzQjBhVzl1Y3k1a1lYUmhMbXhsZG1Wc08xeHVJQ0FnSUgxY2JpQWdJQ0JoY21keld6QmRJRDBnYkdWMlpXdzdYRzVjYmlBZ0lDQnBibk4wWVc1alpTNXNiMmNvTGk0dVlYSm5jeWs3WEc0Z0lIMHBPMXh1ZlZ4dUlsMTlcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbiAob2JqLCBmaWVsZCwgb3B0aW9ucykge1xuICAgIGlmICghb2JqKSB7XG4gICAgICAvLyBOb3RlIGZvciA1LjA6IENoYW5nZSB0byBcIm9iaiA9PSBudWxsXCIgaW4gNS4wXG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICByZXR1cm4gb3B0aW9ucy5sb29rdXBQcm9wZXJ0eShvYmosIGZpZWxkKTtcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyaGxiSEJsY25NdmJHOXZhM1Z3TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN096czdjVUpCUVdVc1ZVRkJVeXhSUVVGUkxFVkJRVVU3UVVGRGFFTXNWVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJReXhSUVVGUkxFVkJRVVVzVlVGQlV5eEhRVUZITEVWQlFVVXNTMEZCU3l4RlFVRkZMRTlCUVU4c1JVRkJSVHRCUVVNNVJDeFJRVUZKTEVOQlFVTXNSMEZCUnl4RlFVRkZPenRCUVVWU0xHRkJRVThzUjBGQlJ5eERRVUZETzB0QlExbzdRVUZEUkN4WFFVRlBMRTlCUVU4c1EwRkJReXhqUVVGakxFTkJRVU1zUjBGQlJ5eEZRVUZGTEV0QlFVc3NRMEZCUXl4RFFVRkRPMGRCUXpORExFTkJRVU1zUTBGQlF6dERRVU5LSWl3aVptbHNaU0k2SW14dmIydDFjQzVxY3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1S0dsdWMzUmhibU5sS1NCN1hHNGdJR2x1YzNSaGJtTmxMbkpsWjJsemRHVnlTR1ZzY0dWeUtDZHNiMjlyZFhBbkxDQm1kVzVqZEdsdmJpaHZZbW9zSUdacFpXeGtMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDQWdhV1lnS0NGdlltb3BJSHRjYmlBZ0lDQWdJQzh2SUU1dmRHVWdabTl5SURVdU1Eb2dRMmhoYm1kbElIUnZJRndpYjJKcUlEMDlJRzUxYkd4Y0lpQnBiaUExTGpCY2JpQWdJQ0FnSUhKbGRIVnliaUJ2WW1vN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQnZjSFJwYjI1ekxteHZiMnQxY0ZCeWIzQmxjblI1S0c5aWFpd2dabWxsYkdRcE8xeHVJQ0I5S1R0Y2JuMWNiaUpkZlE9PVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxudmFyIF9leGNlcHRpb24gPSByZXF1aXJlKCcuLi9leGNlcHRpb24nKTtcblxudmFyIF9leGNlcHRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhjZXB0aW9uKTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd3aXRoJywgZnVuY3Rpb24gKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnI3dpdGggcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKF91dGlscy5pc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIHZhciBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIV91dGlscy5pc0VtcHR5KGNvbnRleHQpKSB7XG4gICAgICB2YXIgZGF0YSA9IG9wdGlvbnMuZGF0YTtcbiAgICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgICAgZGF0YSA9IF91dGlscy5jcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBkYXRhLmNvbnRleHRQYXRoID0gX3V0aWxzLmFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCwgb3B0aW9ucy5pZHNbMF0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogX3V0aWxzLmJsb2NrUGFyYW1zKFtjb250ZXh0XSwgW2RhdGEgJiYgZGF0YS5jb250ZXh0UGF0aF0pXG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMmhsYkhCbGNuTXZkMmwwYUM1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU96czdPenM3TzNGQ1FVMVBMRlZCUVZVN08zbENRVU5MTEdOQlFXTTdPenM3Y1VKQlJYSkNMRlZCUVZNc1VVRkJVU3hGUVVGRk8wRkJRMmhETEZWQlFWRXNRMEZCUXl4alFVRmpMRU5CUVVNc1RVRkJUU3hGUVVGRkxGVkJRVk1zVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUlR0QlFVTjZSQ3hSUVVGSkxGTkJRVk1zUTBGQlF5eE5RVUZOTEVsQlFVa3NRMEZCUXl4RlFVRkZPMEZCUTNwQ0xGbEJRVTBzTWtKQlFXTXNjVU5CUVhGRExFTkJRVU1zUTBGQlF6dExRVU0xUkR0QlFVTkVMRkZCUVVrc2EwSkJRVmNzVDBGQlR5eERRVUZETEVWQlFVVTdRVUZEZGtJc1lVRkJUeXhIUVVGSExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1MwRkRPVUk3TzBGQlJVUXNVVUZCU1N4RlFVRkZMRWRCUVVjc1QwRkJUeXhEUVVGRExFVkJRVVVzUTBGQlF6czdRVUZGY0VJc1VVRkJTU3hEUVVGRExHVkJRVkVzVDBGQlR5eERRVUZETEVWQlFVVTdRVUZEY2tJc1ZVRkJTU3hKUVVGSkxFZEJRVWNzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTjRRaXhWUVVGSkxFOUJRVThzUTBGQlF5eEpRVUZKTEVsQlFVa3NUMEZCVHl4RFFVRkRMRWRCUVVjc1JVRkJSVHRCUVVNdlFpeFpRVUZKTEVkQlFVY3NiVUpCUVZrc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBGQlEycERMRmxCUVVrc1EwRkJReXhYUVVGWExFZEJRVWNzZVVKQlEycENMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEZRVU40UWl4UFFVRlBMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVU5tTEVOQlFVTTdUMEZEU0RzN1FVRkZSQ3hoUVVGUExFVkJRVVVzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZEYWtJc1dVRkJTU3hGUVVGRkxFbEJRVWs3UVVGRFZpeHRRa0ZCVnl4RlFVRkZMRzFDUVVGWkxFTkJRVU1zVDBGQlR5eERRVUZETEVWQlFVVXNRMEZCUXl4SlFVRkpMRWxCUVVrc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETzA5QlEyaEZMRU5CUVVNc1EwRkJRenRMUVVOS0xFMUJRVTA3UVVGRFRDeGhRVUZQTEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UzBGRE9VSTdSMEZEUml4RFFVRkRMRU5CUVVNN1EwRkRTaUlzSW1acGJHVWlPaUozYVhSb0xtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJSHRjYmlBZ1lYQndaVzVrUTI5dWRHVjRkRkJoZEdnc1hHNGdJR0pzYjJOclVHRnlZVzF6TEZ4dUlDQmpjbVZoZEdWR2NtRnRaU3hjYmlBZ2FYTkZiWEIwZVN4Y2JpQWdhWE5HZFc1amRHbHZibHh1ZlNCbWNtOXRJQ2N1TGk5MWRHbHNjeWM3WEc1cGJYQnZjblFnUlhoalpYQjBhVzl1SUdaeWIyMGdKeTR1TDJWNFkyVndkR2x2YmljN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUtHbHVjM1JoYm1ObEtTQjdYRzRnSUdsdWMzUmhibU5sTG5KbFoybHpkR1Z5U0dWc2NHVnlLQ2QzYVhSb0p5d2dablZ1WTNScGIyNG9ZMjl1ZEdWNGRDd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lHbG1JQ2hoY21kMWJXVnVkSE11YkdWdVozUm9JQ0U5SURJcElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZlR05sY0hScGIyNG9KeU4zYVhSb0lISmxjWFZwY21WeklHVjRZV04wYkhrZ2IyNWxJR0Z5WjNWdFpXNTBKeWs3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2hwYzBaMWJtTjBhVzl1S0dOdmJuUmxlSFFwS1NCN1hHNGdJQ0FnSUNCamIyNTBaWGgwSUQwZ1kyOXVkR1Y0ZEM1allXeHNLSFJvYVhNcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUd4bGRDQm1iaUE5SUc5d2RHbHZibk11Wm00N1hHNWNiaUFnSUNCcFppQW9JV2x6Ulcxd2RIa29ZMjl1ZEdWNGRDa3BJSHRjYmlBZ0lDQWdJR3hsZENCa1lYUmhJRDBnYjNCMGFXOXVjeTVrWVhSaE8xeHVJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTXVaR0YwWVNBbUppQnZjSFJwYjI1ekxtbGtjeWtnZTF4dUlDQWdJQ0FnSUNCa1lYUmhJRDBnWTNKbFlYUmxSbkpoYldVb2IzQjBhVzl1Y3k1a1lYUmhLVHRjYmlBZ0lDQWdJQ0FnWkdGMFlTNWpiMjUwWlhoMFVHRjBhQ0E5SUdGd2NHVnVaRU52Ym5SbGVIUlFZWFJvS0Z4dUlDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdVpHRjBZUzVqYjI1MFpYaDBVR0YwYUN4Y2JpQWdJQ0FnSUNBZ0lDQnZjSFJwYjI1ekxtbGtjMXN3WFZ4dUlDQWdJQ0FnSUNBcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z1ptNG9ZMjl1ZEdWNGRDd2dlMXh1SUNBZ0lDQWdJQ0JrWVhSaE9pQmtZWFJoTEZ4dUlDQWdJQ0FnSUNCaWJHOWphMUJoY21GdGN6b2dZbXh2WTJ0UVlYSmhiWE1vVzJOdmJuUmxlSFJkTENCYlpHRjBZU0FtSmlCa1lYUmhMbU52Ym5SbGVIUlFZWFJvWFNsY2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdiM0IwYVc5dWN5NXBiblpsY25ObEtIUm9hWE1wTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMucmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyA9IHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnM7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfZGVjb3JhdG9yc0lubGluZSA9IHJlcXVpcmUoJy4vZGVjb3JhdG9ycy9pbmxpbmUnKTtcblxudmFyIF9kZWNvcmF0b3JzSW5saW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlY29yYXRvcnNJbmxpbmUpO1xuXG5mdW5jdGlvbiByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKGluc3RhbmNlKSB7XG4gIF9kZWNvcmF0b3JzSW5saW5lMlsnZGVmYXVsdCddKGluc3RhbmNlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDJSbFkyOXlZWFJ2Y25NdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN1owTkJRVEpDTEhGQ1FVRnhRanM3T3p0QlFVVjZReXhUUVVGVExIbENRVUY1UWl4RFFVRkRMRkZCUVZFc1JVRkJSVHRCUVVOc1JDeG5RMEZCWlN4UlFVRlJMRU5CUVVNc1EwRkJRenREUVVNeFFpSXNJbVpwYkdVaU9pSmtaV052Y21GMGIzSnpMbXB6SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWFXMXdiM0owSUhKbFoybHpkR1Z5U1c1c2FXNWxJR1p5YjIwZ0p5NHZaR1ZqYjNKaGRHOXljeTlwYm14cGJtVW5PMXh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnY21WbmFYTjBaWEpFWldaaGRXeDBSR1ZqYjNKaGRHOXljeWhwYm5OMFlXNWpaU2tnZTF4dUlDQnlaV2RwYzNSbGNrbHViR2x1WlNocGJuTjBZVzVqWlNrN1hHNTlYRzRpWFgwPVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVyRGVjb3JhdG9yKCdpbmxpbmUnLCBmdW5jdGlvbiAoZm4sIHByb3BzLCBjb250YWluZXIsIG9wdGlvbnMpIHtcbiAgICB2YXIgcmV0ID0gZm47XG4gICAgaWYgKCFwcm9wcy5wYXJ0aWFscykge1xuICAgICAgcHJvcHMucGFydGlhbHMgPSB7fTtcbiAgICAgIHJldCA9IGZ1bmN0aW9uIChjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBwYXJ0aWFscyBzdGFjayBmcmFtZSBwcmlvciB0byBleGVjLlxuICAgICAgICB2YXIgb3JpZ2luYWwgPSBjb250YWluZXIucGFydGlhbHM7XG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IF91dGlscy5leHRlbmQoe30sIG9yaWdpbmFsLCBwcm9wcy5wYXJ0aWFscyk7XG4gICAgICAgIHZhciByZXQgPSBmbihjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgICAgY29udGFpbmVyLnBhcnRpYWxzID0gb3JpZ2luYWw7XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHByb3BzLnBhcnRpYWxzW29wdGlvbnMuYXJnc1swXV0gPSBvcHRpb25zLmZuO1xuXG4gICAgcmV0dXJuIHJldDtcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyUmxZMjl5WVhSdmNuTXZhVzVzYVc1bExtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPenM3Y1VKQlFYVkNMRlZCUVZVN08zRkNRVVZzUWl4VlFVRlRMRkZCUVZFc1JVRkJSVHRCUVVOb1F5eFZRVUZSTEVOQlFVTXNhVUpCUVdsQ0xFTkJRVU1zVVVGQlVTeEZRVUZGTEZWQlFWTXNSVUZCUlN4RlFVRkZMRXRCUVVzc1JVRkJSU3hUUVVGVExFVkJRVVVzVDBGQlR5eEZRVUZGTzBGQlF6TkZMRkZCUVVrc1IwRkJSeXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU5pTEZGQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1VVRkJVU3hGUVVGRk8wRkJRMjVDTEZkQlFVc3NRMEZCUXl4UlFVRlJMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRM0JDTEZOQlFVY3NSMEZCUnl4VlFVRlRMRTlCUVU4c1JVRkJSU3hQUVVGUExFVkJRVVU3TzBGQlJTOUNMRmxCUVVrc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlF5eFJRVUZSTEVOQlFVTTdRVUZEYkVNc2FVSkJRVk1zUTBGQlF5eFJRVUZSTEVkQlFVY3NZMEZCVHl4RlFVRkZMRVZCUVVVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0QlFVTXhSQ3haUVVGSkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJReTlDTEdsQ1FVRlRMRU5CUVVNc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF6dEJRVU01UWl4bFFVRlBMRWRCUVVjc1EwRkJRenRQUVVOYUxFTkJRVU03UzBGRFNEczdRVUZGUkN4VFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhQUVVGUExFTkJRVU1zUlVGQlJTeERRVUZET3p0QlFVVTNReXhYUVVGUExFZEJRVWNzUTBGQlF6dEhRVU5hTEVOQlFVTXNRMEZCUXp0RFFVTktJaXdpWm1sc1pTSTZJbWx1YkdsdVpTNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0I3SUdWNGRHVnVaQ0I5SUdaeWIyMGdKeTR1TDNWMGFXeHpKenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRvYVc1emRHRnVZMlVwSUh0Y2JpQWdhVzV6ZEdGdVkyVXVjbVZuYVhOMFpYSkVaV052Y21GMGIzSW9KMmx1YkdsdVpTY3NJR1oxYm1OMGFXOXVLR1p1TENCd2NtOXdjeXdnWTI5dWRHRnBibVZ5TENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnYkdWMElISmxkQ0E5SUdadU8xeHVJQ0FnSUdsbUlDZ2hjSEp2Y0hNdWNHRnlkR2xoYkhNcElIdGNiaUFnSUNBZ0lIQnliM0J6TG5CaGNuUnBZV3h6SUQwZ2UzMDdYRzRnSUNBZ0lDQnlaWFFnUFNCbWRXNWpkR2x2YmloamIyNTBaWGgwTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDOHZJRU55WldGMFpTQmhJRzVsZHlCd1lYSjBhV0ZzY3lCemRHRmpheUJtY21GdFpTQndjbWx2Y2lCMGJ5QmxlR1ZqTGx4dUlDQWdJQ0FnSUNCc1pYUWdiM0pwWjJsdVlXd2dQU0JqYjI1MFlXbHVaWEl1Y0dGeWRHbGhiSE03WEc0Z0lDQWdJQ0FnSUdOdmJuUmhhVzVsY2k1d1lYSjBhV0ZzY3lBOUlHVjRkR1Z1WkNoN2ZTd2diM0pwWjJsdVlXd3NJSEJ5YjNCekxuQmhjblJwWVd4ektUdGNiaUFnSUNBZ0lDQWdiR1YwSUhKbGRDQTlJR1p1S0dOdmJuUmxlSFFzSUc5d2RHbHZibk1wTzF4dUlDQWdJQ0FnSUNCamIyNTBZV2x1WlhJdWNHRnlkR2xoYkhNZ1BTQnZjbWxuYVc1aGJEdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxkRHRjYmlBZ0lDQWdJSDA3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSEp2Y0hNdWNHRnlkR2xoYkhOYmIzQjBhVzl1Y3k1aGNtZHpXekJkWFNBOUlHOXdkR2x2Ym5NdVptNDdYRzVjYmlBZ0lDQnlaWFIxY200Z2NtVjBPMXh1SUNCOUtUdGNibjFjYmlKZGZRPT1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuY3JlYXRlTmV3TG9va3VwT2JqZWN0ID0gY3JlYXRlTmV3TG9va3VwT2JqZWN0O1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgb2JqZWN0IHdpdGggXCJudWxsXCItcHJvdG90eXBlIHRvIGF2b2lkIHRydXRoeSByZXN1bHRzIG9uIHByb3RvdHlwZSBwcm9wZXJ0aWVzLlxuICogVGhlIHJlc3VsdGluZyBvYmplY3QgY2FuIGJlIHVzZWQgd2l0aCBcIm9iamVjdFtwcm9wZXJ0eV1cIiB0byBjaGVjayBpZiBhIHByb3BlcnR5IGV4aXN0c1xuICogQHBhcmFtIHsuLi5vYmplY3R9IHNvdXJjZXMgYSB2YXJhcmdzIHBhcmFtZXRlciBvZiBzb3VyY2Ugb2JqZWN0cyB0aGF0IHdpbGwgYmUgbWVyZ2VkXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZU5ld0xvb2t1cE9iamVjdCgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNvdXJjZXMgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBzb3VyY2VzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIF91dGlscy5leHRlbmQuYXBwbHkodW5kZWZpbmVkLCBbT2JqZWN0LmNyZWF0ZShudWxsKV0uY29uY2F0KHNvdXJjZXMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwybHVkR1Z5Ym1Gc0wyTnlaV0YwWlMxdVpYY3RiRzl2YTNWd0xXOWlhbVZqZEM1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU96czdPenR4UWtGQmRVSXNWVUZCVlRzN096czdPenM3TzBGQlVURkNMRk5CUVZNc2NVSkJRWEZDTEVkQlFXRTdiME5CUVZRc1QwRkJUenRCUVVGUUxGZEJRVTg3T3p0QlFVTTVReXhUUVVGUExHZERRVUZQTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExGTkJRVXNzVDBGQlR5eEZRVUZETEVOQlFVTTdRMEZEYUVRaUxDSm1hV3hsSWpvaVkzSmxZWFJsTFc1bGR5MXNiMjlyZFhBdGIySnFaV04wTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2daWGgwWlc1a0lIMGdabkp2YlNBbkxpNHZkWFJwYkhNbk8xeHVYRzR2S2lwY2JpQXFJRU55WldGMFpTQmhJRzVsZHlCdlltcGxZM1FnZDJsMGFDQmNJbTUxYkd4Y0lpMXdjbTkwYjNSNWNHVWdkRzhnWVhadmFXUWdkSEoxZEdoNUlISmxjM1ZzZEhNZ2IyNGdjSEp2ZEc5MGVYQmxJSEJ5YjNCbGNuUnBaWE11WEc0Z0tpQlVhR1VnY21WemRXeDBhVzVuSUc5aWFtVmpkQ0JqWVc0Z1ltVWdkWE5sWkNCM2FYUm9JRndpYjJKcVpXTjBXM0J5YjNCbGNuUjVYVndpSUhSdklHTm9aV05ySUdsbUlHRWdjSEp2Y0dWeWRIa2daWGhwYzNSelhHNGdLaUJBY0dGeVlXMGdleTR1TG05aWFtVmpkSDBnYzI5MWNtTmxjeUJoSUhaaGNtRnlaM01nY0dGeVlXMWxkR1Z5SUc5bUlITnZkWEpqWlNCdlltcGxZM1J6SUhSb1lYUWdkMmxzYkNCaVpTQnRaWEpuWldSY2JpQXFJRUJ5WlhSMWNtNXpJSHR2WW1wbFkzUjlYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZPWlhkTWIyOXJkWEJQWW1wbFkzUW9MaTR1YzI5MWNtTmxjeWtnZTF4dUlDQnlaWFIxY200Z1pYaDBaVzVrS0U5aWFtVmpkQzVqY21WaGRHVW9iblZzYkNrc0lDNHVMbk52ZFhKalpYTXBPMXh1ZlZ4dUlsMTlcbiIsIi8vIEJ1aWxkIG91dCBvdXIgYmFzaWMgU2FmZVN0cmluZyB0eXBlXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBTYWZlU3RyaW5nKHN0cmluZykge1xuICB0aGlzLnN0cmluZyA9IHN0cmluZztcbn1cblxuU2FmZVN0cmluZy5wcm90b3R5cGUudG9TdHJpbmcgPSBTYWZlU3RyaW5nLnByb3RvdHlwZS50b0hUTUwgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gU2FmZVN0cmluZztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMM05oWm1VdGMzUnlhVzVuTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN096czdRVUZEUVN4VFFVRlRMRlZCUVZVc1EwRkJReXhOUVVGTkxFVkJRVVU3UVVGRE1VSXNUVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhOUVVGTkxFTkJRVU03UTBGRGRFSTdPMEZCUlVRc1ZVRkJWU3hEUVVGRExGTkJRVk1zUTBGQlF5eFJRVUZSTEVkQlFVY3NWVUZCVlN4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFZEJRVWNzV1VGQlZ6dEJRVU4yUlN4VFFVRlBMRVZCUVVVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETzBOQlEzcENMRU5CUVVNN08zRkNRVVZoTEZWQlFWVWlMQ0ptYVd4bElqb2ljMkZtWlMxemRISnBibWN1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJDZFdsc1pDQnZkWFFnYjNWeUlHSmhjMmxqSUZOaFptVlRkSEpwYm1jZ2RIbHdaVnh1Wm5WdVkzUnBiMjRnVTJGbVpWTjBjbWx1WnloemRISnBibWNwSUh0Y2JpQWdkR2hwY3k1emRISnBibWNnUFNCemRISnBibWM3WEc1OVhHNWNibE5oWm1WVGRISnBibWN1Y0hKdmRHOTBlWEJsTG5SdlUzUnlhVzVuSUQwZ1UyRm1aVk4wY21sdVp5NXdjbTkwYjNSNWNHVXVkRzlJVkUxTUlEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lISmxkSFZ5YmlBbkp5QXJJSFJvYVhNdWMzUnlhVzVuTzF4dWZUdGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdVMkZtWlZOMGNtbHVaenRjYmlKZGZRPT1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuY2hlY2tSZXZpc2lvbiA9IGNoZWNrUmV2aXNpb247XG5leHBvcnRzLnRlbXBsYXRlID0gdGVtcGxhdGU7XG5leHBvcnRzLndyYXBQcm9ncmFtID0gd3JhcFByb2dyYW07XG5leHBvcnRzLnJlc29sdmVQYXJ0aWFsID0gcmVzb2x2ZVBhcnRpYWw7XG5leHBvcnRzLmludm9rZVBhcnRpYWwgPSBpbnZva2VQYXJ0aWFsO1xuZXhwb3J0cy5ub29wID0gbm9vcDtcbi8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7IGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBlbHNlIHsgdmFyIG5ld09iaiA9IHt9OyBpZiAob2JqICE9IG51bGwpIHsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IG5ld09ialsnZGVmYXVsdCddID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH1cblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIFV0aWxzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX3V0aWxzKTtcblxudmFyIF9leGNlcHRpb24gPSByZXF1aXJlKCcuL2V4Y2VwdGlvbicpO1xuXG52YXIgX2V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO1xuXG52YXIgX2Jhc2UgPSByZXF1aXJlKCcuL2Jhc2UnKTtcblxudmFyIF9oZWxwZXJzID0gcmVxdWlyZSgnLi9oZWxwZXJzJyk7XG5cbnZhciBfaW50ZXJuYWxXcmFwSGVscGVyID0gcmVxdWlyZSgnLi9pbnRlcm5hbC93cmFwSGVscGVyJyk7XG5cbnZhciBfaW50ZXJuYWxQcm90b0FjY2VzcyA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvcHJvdG8tYWNjZXNzJyk7XG5cbmZ1bmN0aW9uIGNoZWNrUmV2aXNpb24oY29tcGlsZXJJbmZvKSB7XG4gIHZhciBjb21waWxlclJldmlzaW9uID0gY29tcGlsZXJJbmZvICYmIGNvbXBpbGVySW5mb1swXSB8fCAxLFxuICAgICAgY3VycmVudFJldmlzaW9uID0gX2Jhc2UuQ09NUElMRVJfUkVWSVNJT047XG5cbiAgaWYgKGNvbXBpbGVyUmV2aXNpb24gPj0gX2Jhc2UuTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OICYmIGNvbXBpbGVyUmV2aXNpb24gPD0gX2Jhc2UuQ09NUElMRVJfUkVWSVNJT04pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoY29tcGlsZXJSZXZpc2lvbiA8IF9iYXNlLkxBU1RfQ09NUEFUSUJMRV9DT01QSUxFUl9SRVZJU0lPTikge1xuICAgIHZhciBydW50aW1lVmVyc2lvbnMgPSBfYmFzZS5SRVZJU0lPTl9DSEFOR0VTW2N1cnJlbnRSZXZpc2lvbl0sXG4gICAgICAgIGNvbXBpbGVyVmVyc2lvbnMgPSBfYmFzZS5SRVZJU0lPTl9DSEFOR0VTW2NvbXBpbGVyUmV2aXNpb25dO1xuICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdUZW1wbGF0ZSB3YXMgcHJlY29tcGlsZWQgd2l0aCBhbiBvbGRlciB2ZXJzaW9uIG9mIEhhbmRsZWJhcnMgdGhhbiB0aGUgY3VycmVudCBydW50aW1lLiAnICsgJ1BsZWFzZSB1cGRhdGUgeW91ciBwcmVjb21waWxlciB0byBhIG5ld2VyIHZlcnNpb24gKCcgKyBydW50aW1lVmVyc2lvbnMgKyAnKSBvciBkb3duZ3JhZGUgeW91ciBydW50aW1lIHRvIGFuIG9sZGVyIHZlcnNpb24gKCcgKyBjb21waWxlclZlcnNpb25zICsgJykuJyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVXNlIHRoZSBlbWJlZGRlZCB2ZXJzaW9uIGluZm8gc2luY2UgdGhlIHJ1bnRpbWUgZG9lc24ndCBrbm93IGFib3V0IHRoaXMgcmV2aXNpb24geWV0XG4gICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1RlbXBsYXRlIHdhcyBwcmVjb21waWxlZCB3aXRoIGEgbmV3ZXIgdmVyc2lvbiBvZiBIYW5kbGViYXJzIHRoYW4gdGhlIGN1cnJlbnQgcnVudGltZS4gJyArICdQbGVhc2UgdXBkYXRlIHlvdXIgcnVudGltZSB0byBhIG5ld2VyIHZlcnNpb24gKCcgKyBjb21waWxlckluZm9bMV0gKyAnKS4nKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0ZW1wbGF0ZSh0ZW1wbGF0ZVNwZWMsIGVudikge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoIWVudikge1xuICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdObyBlbnZpcm9ubWVudCBwYXNzZWQgdG8gdGVtcGxhdGUnKTtcbiAgfVxuICBpZiAoIXRlbXBsYXRlU3BlYyB8fCAhdGVtcGxhdGVTcGVjLm1haW4pIHtcbiAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnVW5rbm93biB0ZW1wbGF0ZSBvYmplY3Q6ICcgKyB0eXBlb2YgdGVtcGxhdGVTcGVjKTtcbiAgfVxuXG4gIHRlbXBsYXRlU3BlYy5tYWluLmRlY29yYXRvciA9IHRlbXBsYXRlU3BlYy5tYWluX2Q7XG5cbiAgLy8gTm90ZTogVXNpbmcgZW52LlZNIHJlZmVyZW5jZXMgcmF0aGVyIHRoYW4gbG9jYWwgdmFyIHJlZmVyZW5jZXMgdGhyb3VnaG91dCB0aGlzIHNlY3Rpb24gdG8gYWxsb3dcbiAgLy8gZm9yIGV4dGVybmFsIHVzZXJzIHRvIG92ZXJyaWRlIHRoZXNlIGFzIHBzZXVkby1zdXBwb3J0ZWQgQVBJcy5cbiAgZW52LlZNLmNoZWNrUmV2aXNpb24odGVtcGxhdGVTcGVjLmNvbXBpbGVyKTtcblxuICAvLyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3IgcHJlY29tcGlsZWQgdGVtcGxhdGVzIHdpdGggY29tcGlsZXItdmVyc2lvbiA3ICg8NC4zLjApXG4gIHZhciB0ZW1wbGF0ZVdhc1ByZWNvbXBpbGVkV2l0aENvbXBpbGVyVjcgPSB0ZW1wbGF0ZVNwZWMuY29tcGlsZXIgJiYgdGVtcGxhdGVTcGVjLmNvbXBpbGVyWzBdID09PSA3O1xuXG4gIGZ1bmN0aW9uIGludm9rZVBhcnRpYWxXcmFwcGVyKHBhcnRpYWwsIGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgICBjb250ZXh0ID0gVXRpbHMuZXh0ZW5kKHt9LCBjb250ZXh0LCBvcHRpb25zLmhhc2gpO1xuICAgICAgaWYgKG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIG9wdGlvbnMuaWRzWzBdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcGFydGlhbCA9IGVudi5WTS5yZXNvbHZlUGFydGlhbC5jYWxsKHRoaXMsIHBhcnRpYWwsIGNvbnRleHQsIG9wdGlvbnMpO1xuXG4gICAgdmFyIGV4dGVuZGVkT3B0aW9ucyA9IFV0aWxzLmV4dGVuZCh7fSwgb3B0aW9ucywge1xuICAgICAgaG9va3M6IHRoaXMuaG9va3MsXG4gICAgICBwcm90b0FjY2Vzc0NvbnRyb2w6IHRoaXMucHJvdG9BY2Nlc3NDb250cm9sXG4gICAgfSk7XG5cbiAgICB2YXIgcmVzdWx0ID0gZW52LlZNLmludm9rZVBhcnRpYWwuY2FsbCh0aGlzLCBwYXJ0aWFsLCBjb250ZXh0LCBleHRlbmRlZE9wdGlvbnMpO1xuXG4gICAgaWYgKHJlc3VsdCA9PSBudWxsICYmIGVudi5jb21waWxlKSB7XG4gICAgICBvcHRpb25zLnBhcnRpYWxzW29wdGlvbnMubmFtZV0gPSBlbnYuY29tcGlsZShwYXJ0aWFsLCB0ZW1wbGF0ZVNwZWMuY29tcGlsZXJPcHRpb25zLCBlbnYpO1xuICAgICAgcmVzdWx0ID0gb3B0aW9ucy5wYXJ0aWFsc1tvcHRpb25zLm5hbWVdKGNvbnRleHQsIGV4dGVuZGVkT3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgaWYgKG9wdGlvbnMuaW5kZW50KSB7XG4gICAgICAgIHZhciBsaW5lcyA9IHJlc3VsdC5zcGxpdCgnXFxuJyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gbGluZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgaWYgKCFsaW5lc1tpXSAmJiBpICsgMSA9PT0gbCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbGluZXNbaV0gPSBvcHRpb25zLmluZGVudCArIGxpbmVzW2ldO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGxpbmVzLmpvaW4oJ1xcbicpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1RoZSBwYXJ0aWFsICcgKyBvcHRpb25zLm5hbWUgKyAnIGNvdWxkIG5vdCBiZSBjb21waWxlZCB3aGVuIHJ1bm5pbmcgaW4gcnVudGltZS1vbmx5IG1vZGUnKTtcbiAgICB9XG4gIH1cblxuICAvLyBKdXN0IGFkZCB3YXRlclxuICB2YXIgY29udGFpbmVyID0ge1xuICAgIHN0cmljdDogZnVuY3Rpb24gc3RyaWN0KG9iaiwgbmFtZSwgbG9jKSB7XG4gICAgICBpZiAoIW9iaiB8fCAhKG5hbWUgaW4gb2JqKSkge1xuICAgICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnXCInICsgbmFtZSArICdcIiBub3QgZGVmaW5lZCBpbiAnICsgb2JqLCB7XG4gICAgICAgICAgbG9jOiBsb2NcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGFpbmVyLmxvb2t1cFByb3BlcnR5KG9iaiwgbmFtZSk7XG4gICAgfSxcbiAgICBsb29rdXBQcm9wZXJ0eTogZnVuY3Rpb24gbG9va3VwUHJvcGVydHkocGFyZW50LCBwcm9wZXJ0eU5hbWUpIHtcbiAgICAgIHZhciByZXN1bHQgPSBwYXJlbnRbcHJvcGVydHlOYW1lXTtcbiAgICAgIGlmIChyZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwYXJlbnQsIHByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgaWYgKF9pbnRlcm5hbFByb3RvQWNjZXNzLnJlc3VsdElzQWxsb3dlZChyZXN1bHQsIGNvbnRhaW5lci5wcm90b0FjY2Vzc0NvbnRyb2wsIHByb3BlcnR5TmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgICBsb29rdXA6IGZ1bmN0aW9uIGxvb2t1cChkZXB0aHMsIG5hbWUpIHtcbiAgICAgIHZhciBsZW4gPSBkZXB0aHMubGVuZ3RoO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gZGVwdGhzW2ldICYmIGNvbnRhaW5lci5sb29rdXBQcm9wZXJ0eShkZXB0aHNbaV0sIG5hbWUpO1xuICAgICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gZGVwdGhzW2ldW25hbWVdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBsYW1iZGE6IGZ1bmN0aW9uIGxhbWJkYShjdXJyZW50LCBjb250ZXh0KSB7XG4gICAgICByZXR1cm4gdHlwZW9mIGN1cnJlbnQgPT09ICdmdW5jdGlvbicgPyBjdXJyZW50LmNhbGwoY29udGV4dCkgOiBjdXJyZW50O1xuICAgIH0sXG5cbiAgICBlc2NhcGVFeHByZXNzaW9uOiBVdGlscy5lc2NhcGVFeHByZXNzaW9uLFxuICAgIGludm9rZVBhcnRpYWw6IGludm9rZVBhcnRpYWxXcmFwcGVyLFxuXG4gICAgZm46IGZ1bmN0aW9uIGZuKGkpIHtcbiAgICAgIHZhciByZXQgPSB0ZW1wbGF0ZVNwZWNbaV07XG4gICAgICByZXQuZGVjb3JhdG9yID0gdGVtcGxhdGVTcGVjW2kgKyAnX2QnXTtcbiAgICAgIHJldHVybiByZXQ7XG4gICAgfSxcblxuICAgIHByb2dyYW1zOiBbXSxcbiAgICBwcm9ncmFtOiBmdW5jdGlvbiBwcm9ncmFtKGksIGRhdGEsIGRlY2xhcmVkQmxvY2tQYXJhbXMsIGJsb2NrUGFyYW1zLCBkZXB0aHMpIHtcbiAgICAgIHZhciBwcm9ncmFtV3JhcHBlciA9IHRoaXMucHJvZ3JhbXNbaV0sXG4gICAgICAgICAgZm4gPSB0aGlzLmZuKGkpO1xuICAgICAgaWYgKGRhdGEgfHwgZGVwdGhzIHx8IGJsb2NrUGFyYW1zIHx8IGRlY2xhcmVkQmxvY2tQYXJhbXMpIHtcbiAgICAgICAgcHJvZ3JhbVdyYXBwZXIgPSB3cmFwUHJvZ3JhbSh0aGlzLCBpLCBmbiwgZGF0YSwgZGVjbGFyZWRCbG9ja1BhcmFtcywgYmxvY2tQYXJhbXMsIGRlcHRocyk7XG4gICAgICB9IGVsc2UgaWYgKCFwcm9ncmFtV3JhcHBlcikge1xuICAgICAgICBwcm9ncmFtV3JhcHBlciA9IHRoaXMucHJvZ3JhbXNbaV0gPSB3cmFwUHJvZ3JhbSh0aGlzLCBpLCBmbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvZ3JhbVdyYXBwZXI7XG4gICAgfSxcblxuICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEodmFsdWUsIGRlcHRoKSB7XG4gICAgICB3aGlsZSAodmFsdWUgJiYgZGVwdGgtLSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLl9wYXJlbnQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBtZXJnZUlmTmVlZGVkOiBmdW5jdGlvbiBtZXJnZUlmTmVlZGVkKHBhcmFtLCBjb21tb24pIHtcbiAgICAgIHZhciBvYmogPSBwYXJhbSB8fCBjb21tb247XG5cbiAgICAgIGlmIChwYXJhbSAmJiBjb21tb24gJiYgcGFyYW0gIT09IGNvbW1vbikge1xuICAgICAgICBvYmogPSBVdGlscy5leHRlbmQoe30sIGNvbW1vbiwgcGFyYW0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gb2JqO1xuICAgIH0sXG4gICAgLy8gQW4gZW1wdHkgb2JqZWN0IHRvIHVzZSBhcyByZXBsYWNlbWVudCBmb3IgbnVsbC1jb250ZXh0c1xuICAgIG51bGxDb250ZXh0OiBPYmplY3Quc2VhbCh7fSksXG5cbiAgICBub29wOiBlbnYuVk0ubm9vcCxcbiAgICBjb21waWxlckluZm86IHRlbXBsYXRlU3BlYy5jb21waWxlclxuICB9O1xuXG4gIGZ1bmN0aW9uIHJldChjb250ZXh0KSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDEgfHwgYXJndW1lbnRzWzFdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1sxXTtcblxuICAgIHZhciBkYXRhID0gb3B0aW9ucy5kYXRhO1xuXG4gICAgcmV0Ll9zZXR1cChvcHRpb25zKTtcbiAgICBpZiAoIW9wdGlvbnMucGFydGlhbCAmJiB0ZW1wbGF0ZVNwZWMudXNlRGF0YSkge1xuICAgICAgZGF0YSA9IGluaXREYXRhKGNvbnRleHQsIGRhdGEpO1xuICAgIH1cbiAgICB2YXIgZGVwdGhzID0gdW5kZWZpbmVkLFxuICAgICAgICBibG9ja1BhcmFtcyA9IHRlbXBsYXRlU3BlYy51c2VCbG9ja1BhcmFtcyA/IFtdIDogdW5kZWZpbmVkO1xuICAgIGlmICh0ZW1wbGF0ZVNwZWMudXNlRGVwdGhzKSB7XG4gICAgICBpZiAob3B0aW9ucy5kZXB0aHMpIHtcbiAgICAgICAgZGVwdGhzID0gY29udGV4dCAhPSBvcHRpb25zLmRlcHRoc1swXSA/IFtjb250ZXh0XS5jb25jYXQob3B0aW9ucy5kZXB0aHMpIDogb3B0aW9ucy5kZXB0aHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkZXB0aHMgPSBbY29udGV4dF07XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFpbihjb250ZXh0IC8qLCBvcHRpb25zKi8pIHtcbiAgICAgIHJldHVybiAnJyArIHRlbXBsYXRlU3BlYy5tYWluKGNvbnRhaW5lciwgY29udGV4dCwgY29udGFpbmVyLmhlbHBlcnMsIGNvbnRhaW5lci5wYXJ0aWFscywgZGF0YSwgYmxvY2tQYXJhbXMsIGRlcHRocyk7XG4gICAgfVxuXG4gICAgbWFpbiA9IGV4ZWN1dGVEZWNvcmF0b3JzKHRlbXBsYXRlU3BlYy5tYWluLCBtYWluLCBjb250YWluZXIsIG9wdGlvbnMuZGVwdGhzIHx8IFtdLCBkYXRhLCBibG9ja1BhcmFtcyk7XG4gICAgcmV0dXJuIG1haW4oY29udGV4dCwgb3B0aW9ucyk7XG4gIH1cblxuICByZXQuaXNUb3AgPSB0cnVlO1xuXG4gIHJldC5fc2V0dXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIGlmICghb3B0aW9ucy5wYXJ0aWFsKSB7XG4gICAgICB2YXIgbWVyZ2VkSGVscGVycyA9IFV0aWxzLmV4dGVuZCh7fSwgZW52LmhlbHBlcnMsIG9wdGlvbnMuaGVscGVycyk7XG4gICAgICB3cmFwSGVscGVyc1RvUGFzc0xvb2t1cFByb3BlcnR5KG1lcmdlZEhlbHBlcnMsIGNvbnRhaW5lcik7XG4gICAgICBjb250YWluZXIuaGVscGVycyA9IG1lcmdlZEhlbHBlcnM7XG5cbiAgICAgIGlmICh0ZW1wbGF0ZVNwZWMudXNlUGFydGlhbCkge1xuICAgICAgICAvLyBVc2UgbWVyZ2VJZk5lZWRlZCBoZXJlIHRvIHByZXZlbnQgY29tcGlsaW5nIGdsb2JhbCBwYXJ0aWFscyBtdWx0aXBsZSB0aW1lc1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBjb250YWluZXIubWVyZ2VJZk5lZWRlZChvcHRpb25zLnBhcnRpYWxzLCBlbnYucGFydGlhbHMpO1xuICAgICAgfVxuICAgICAgaWYgKHRlbXBsYXRlU3BlYy51c2VQYXJ0aWFsIHx8IHRlbXBsYXRlU3BlYy51c2VEZWNvcmF0b3JzKSB7XG4gICAgICAgIGNvbnRhaW5lci5kZWNvcmF0b3JzID0gVXRpbHMuZXh0ZW5kKHt9LCBlbnYuZGVjb3JhdG9ycywgb3B0aW9ucy5kZWNvcmF0b3JzKTtcbiAgICAgIH1cblxuICAgICAgY29udGFpbmVyLmhvb2tzID0ge307XG4gICAgICBjb250YWluZXIucHJvdG9BY2Nlc3NDb250cm9sID0gX2ludGVybmFsUHJvdG9BY2Nlc3MuY3JlYXRlUHJvdG9BY2Nlc3NDb250cm9sKG9wdGlvbnMpO1xuXG4gICAgICB2YXIga2VlcEhlbHBlckluSGVscGVycyA9IG9wdGlvbnMuYWxsb3dDYWxsc1RvSGVscGVyTWlzc2luZyB8fCB0ZW1wbGF0ZVdhc1ByZWNvbXBpbGVkV2l0aENvbXBpbGVyVjc7XG4gICAgICBfaGVscGVycy5tb3ZlSGVscGVyVG9Ib29rcyhjb250YWluZXIsICdoZWxwZXJNaXNzaW5nJywga2VlcEhlbHBlckluSGVscGVycyk7XG4gICAgICBfaGVscGVycy5tb3ZlSGVscGVyVG9Ib29rcyhjb250YWluZXIsICdibG9ja0hlbHBlck1pc3NpbmcnLCBrZWVwSGVscGVySW5IZWxwZXJzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGFpbmVyLnByb3RvQWNjZXNzQ29udHJvbCA9IG9wdGlvbnMucHJvdG9BY2Nlc3NDb250cm9sOyAvLyBpbnRlcm5hbCBvcHRpb25cbiAgICAgIGNvbnRhaW5lci5oZWxwZXJzID0gb3B0aW9ucy5oZWxwZXJzO1xuICAgICAgY29udGFpbmVyLnBhcnRpYWxzID0gb3B0aW9ucy5wYXJ0aWFscztcbiAgICAgIGNvbnRhaW5lci5kZWNvcmF0b3JzID0gb3B0aW9ucy5kZWNvcmF0b3JzO1xuICAgICAgY29udGFpbmVyLmhvb2tzID0gb3B0aW9ucy5ob29rcztcbiAgICB9XG4gIH07XG5cbiAgcmV0Ll9jaGlsZCA9IGZ1bmN0aW9uIChpLCBkYXRhLCBibG9ja1BhcmFtcywgZGVwdGhzKSB7XG4gICAgaWYgKHRlbXBsYXRlU3BlYy51c2VCbG9ja1BhcmFtcyAmJiAhYmxvY2tQYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdtdXN0IHBhc3MgYmxvY2sgcGFyYW1zJyk7XG4gICAgfVxuICAgIGlmICh0ZW1wbGF0ZVNwZWMudXNlRGVwdGhzICYmICFkZXB0aHMpIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdtdXN0IHBhc3MgcGFyZW50IGRlcHRocycpO1xuICAgIH1cblxuICAgIHJldHVybiB3cmFwUHJvZ3JhbShjb250YWluZXIsIGksIHRlbXBsYXRlU3BlY1tpXSwgZGF0YSwgMCwgYmxvY2tQYXJhbXMsIGRlcHRocyk7XG4gIH07XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIHdyYXBQcm9ncmFtKGNvbnRhaW5lciwgaSwgZm4sIGRhdGEsIGRlY2xhcmVkQmxvY2tQYXJhbXMsIGJsb2NrUGFyYW1zLCBkZXB0aHMpIHtcbiAgZnVuY3Rpb24gcHJvZyhjb250ZXh0KSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDEgfHwgYXJndW1lbnRzWzFdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1sxXTtcblxuICAgIHZhciBjdXJyZW50RGVwdGhzID0gZGVwdGhzO1xuICAgIGlmIChkZXB0aHMgJiYgY29udGV4dCAhPSBkZXB0aHNbMF0gJiYgIShjb250ZXh0ID09PSBjb250YWluZXIubnVsbENvbnRleHQgJiYgZGVwdGhzWzBdID09PSBudWxsKSkge1xuICAgICAgY3VycmVudERlcHRocyA9IFtjb250ZXh0XS5jb25jYXQoZGVwdGhzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm4oY29udGFpbmVyLCBjb250ZXh0LCBjb250YWluZXIuaGVscGVycywgY29udGFpbmVyLnBhcnRpYWxzLCBvcHRpb25zLmRhdGEgfHwgZGF0YSwgYmxvY2tQYXJhbXMgJiYgW29wdGlvbnMuYmxvY2tQYXJhbXNdLmNvbmNhdChibG9ja1BhcmFtcyksIGN1cnJlbnREZXB0aHMpO1xuICB9XG5cbiAgcHJvZyA9IGV4ZWN1dGVEZWNvcmF0b3JzKGZuLCBwcm9nLCBjb250YWluZXIsIGRlcHRocywgZGF0YSwgYmxvY2tQYXJhbXMpO1xuXG4gIHByb2cucHJvZ3JhbSA9IGk7XG4gIHByb2cuZGVwdGggPSBkZXB0aHMgPyBkZXB0aHMubGVuZ3RoIDogMDtcbiAgcHJvZy5ibG9ja1BhcmFtcyA9IGRlY2xhcmVkQmxvY2tQYXJhbXMgfHwgMDtcbiAgcmV0dXJuIHByb2c7XG59XG5cbi8qKlxuICogVGhpcyBpcyBjdXJyZW50bHkgcGFydCBvZiB0aGUgb2ZmaWNpYWwgQVBJLCB0aGVyZWZvcmUgaW1wbGVtZW50YXRpb24gZGV0YWlscyBzaG91bGQgbm90IGJlIGNoYW5nZWQuXG4gKi9cblxuZnVuY3Rpb24gcmVzb2x2ZVBhcnRpYWwocGFydGlhbCwgY29udGV4dCwgb3B0aW9ucykge1xuICBpZiAoIXBhcnRpYWwpIHtcbiAgICBpZiAob3B0aW9ucy5uYW1lID09PSAnQHBhcnRpYWwtYmxvY2snKSB7XG4gICAgICBwYXJ0aWFsID0gb3B0aW9ucy5kYXRhWydwYXJ0aWFsLWJsb2NrJ107XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcnRpYWwgPSBvcHRpb25zLnBhcnRpYWxzW29wdGlvbnMubmFtZV07XG4gICAgfVxuICB9IGVsc2UgaWYgKCFwYXJ0aWFsLmNhbGwgJiYgIW9wdGlvbnMubmFtZSkge1xuICAgIC8vIFRoaXMgaXMgYSBkeW5hbWljIHBhcnRpYWwgdGhhdCByZXR1cm5lZCBhIHN0cmluZ1xuICAgIG9wdGlvbnMubmFtZSA9IHBhcnRpYWw7XG4gICAgcGFydGlhbCA9IG9wdGlvbnMucGFydGlhbHNbcGFydGlhbF07XG4gIH1cbiAgcmV0dXJuIHBhcnRpYWw7XG59XG5cbmZ1bmN0aW9uIGludm9rZVBhcnRpYWwocGFydGlhbCwgY29udGV4dCwgb3B0aW9ucykge1xuICAvLyBVc2UgdGhlIGN1cnJlbnQgY2xvc3VyZSBjb250ZXh0IHRvIHNhdmUgdGhlIHBhcnRpYWwtYmxvY2sgaWYgdGhpcyBwYXJ0aWFsXG4gIHZhciBjdXJyZW50UGFydGlhbEJsb2NrID0gb3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuZGF0YVsncGFydGlhbC1ibG9jayddO1xuICBvcHRpb25zLnBhcnRpYWwgPSB0cnVlO1xuICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICBvcHRpb25zLmRhdGEuY29udGV4dFBhdGggPSBvcHRpb25zLmlkc1swXSB8fCBvcHRpb25zLmRhdGEuY29udGV4dFBhdGg7XG4gIH1cblxuICB2YXIgcGFydGlhbEJsb2NrID0gdW5kZWZpbmVkO1xuICBpZiAob3B0aW9ucy5mbiAmJiBvcHRpb25zLmZuICE9PSBub29wKSB7XG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgIG9wdGlvbnMuZGF0YSA9IF9iYXNlLmNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgICAvLyBXcmFwcGVyIGZ1bmN0aW9uIHRvIGdldCBhY2Nlc3MgdG8gY3VycmVudFBhcnRpYWxCbG9jayBmcm9tIHRoZSBjbG9zdXJlXG4gICAgICB2YXIgZm4gPSBvcHRpb25zLmZuO1xuICAgICAgcGFydGlhbEJsb2NrID0gb3B0aW9ucy5kYXRhWydwYXJ0aWFsLWJsb2NrJ10gPSBmdW5jdGlvbiBwYXJ0aWFsQmxvY2tXcmFwcGVyKGNvbnRleHQpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDEgfHwgYXJndW1lbnRzWzFdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1sxXTtcblxuICAgICAgICAvLyBSZXN0b3JlIHRoZSBwYXJ0aWFsLWJsb2NrIGZyb20gdGhlIGNsb3N1cmUgZm9yIHRoZSBleGVjdXRpb24gb2YgdGhlIGJsb2NrXG4gICAgICAgIC8vIGkuZS4gdGhlIHBhcnQgaW5zaWRlIHRoZSBibG9jayBvZiB0aGUgcGFydGlhbCBjYWxsLlxuICAgICAgICBvcHRpb25zLmRhdGEgPSBfYmFzZS5jcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO1xuICAgICAgICBvcHRpb25zLmRhdGFbJ3BhcnRpYWwtYmxvY2snXSA9IGN1cnJlbnRQYXJ0aWFsQmxvY2s7XG4gICAgICAgIHJldHVybiBmbihjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH07XG4gICAgICBpZiAoZm4ucGFydGlhbHMpIHtcbiAgICAgICAgb3B0aW9ucy5wYXJ0aWFscyA9IFV0aWxzLmV4dGVuZCh7fSwgb3B0aW9ucy5wYXJ0aWFscywgZm4ucGFydGlhbHMpO1xuICAgICAgfVxuICAgIH0pKCk7XG4gIH1cblxuICBpZiAocGFydGlhbCA9PT0gdW5kZWZpbmVkICYmIHBhcnRpYWxCbG9jaykge1xuICAgIHBhcnRpYWwgPSBwYXJ0aWFsQmxvY2s7XG4gIH1cblxuICBpZiAocGFydGlhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1RoZSBwYXJ0aWFsICcgKyBvcHRpb25zLm5hbWUgKyAnIGNvdWxkIG5vdCBiZSBmb3VuZCcpO1xuICB9IGVsc2UgaWYgKHBhcnRpYWwgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgIHJldHVybiBwYXJ0aWFsKGNvbnRleHQsIG9wdGlvbnMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7XG4gIHJldHVybiAnJztcbn1cblxuZnVuY3Rpb24gaW5pdERhdGEoY29udGV4dCwgZGF0YSkge1xuICBpZiAoIWRhdGEgfHwgISgncm9vdCcgaW4gZGF0YSkpIHtcbiAgICBkYXRhID0gZGF0YSA/IF9iYXNlLmNyZWF0ZUZyYW1lKGRhdGEpIDoge307XG4gICAgZGF0YS5yb290ID0gY29udGV4dDtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gZXhlY3V0ZURlY29yYXRvcnMoZm4sIHByb2csIGNvbnRhaW5lciwgZGVwdGhzLCBkYXRhLCBibG9ja1BhcmFtcykge1xuICBpZiAoZm4uZGVjb3JhdG9yKSB7XG4gICAgdmFyIHByb3BzID0ge307XG4gICAgcHJvZyA9IGZuLmRlY29yYXRvcihwcm9nLCBwcm9wcywgY29udGFpbmVyLCBkZXB0aHMgJiYgZGVwdGhzWzBdLCBkYXRhLCBibG9ja1BhcmFtcywgZGVwdGhzKTtcbiAgICBVdGlscy5leHRlbmQocHJvZywgcHJvcHMpO1xuICB9XG4gIHJldHVybiBwcm9nO1xufVxuXG5mdW5jdGlvbiB3cmFwSGVscGVyc1RvUGFzc0xvb2t1cFByb3BlcnR5KG1lcmdlZEhlbHBlcnMsIGNvbnRhaW5lcikge1xuICBPYmplY3Qua2V5cyhtZXJnZWRIZWxwZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChoZWxwZXJOYW1lKSB7XG4gICAgdmFyIGhlbHBlciA9IG1lcmdlZEhlbHBlcnNbaGVscGVyTmFtZV07XG4gICAgbWVyZ2VkSGVscGVyc1toZWxwZXJOYW1lXSA9IHBhc3NMb29rdXBQcm9wZXJ0eU9wdGlvbihoZWxwZXIsIGNvbnRhaW5lcik7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBwYXNzTG9va3VwUHJvcGVydHlPcHRpb24oaGVscGVyLCBjb250YWluZXIpIHtcbiAgdmFyIGxvb2t1cFByb3BlcnR5ID0gY29udGFpbmVyLmxvb2t1cFByb3BlcnR5O1xuICByZXR1cm4gX2ludGVybmFsV3JhcEhlbHBlci53cmFwSGVscGVyKGhlbHBlciwgZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gVXRpbHMuZXh0ZW5kKHsgbG9va3VwUHJvcGVydHk6IGxvb2t1cFByb3BlcnR5IH0sIG9wdGlvbnMpO1xuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUwyeHBZaTlvWVc1a2JHVmlZWEp6TDNKMWJuUnBiV1V1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdPenM3T3pzN096czdPenM3Y1VKQlFYVkNMRk5CUVZNN08wbEJRWEJDTEV0QlFVczdPM2xDUVVOTExHRkJRV0U3T3pzN2IwSkJUVFZDTEZGQlFWRTdPM1ZDUVVOdFFpeFhRVUZYT3p0clEwRkRiRUlzZFVKQlFYVkNPenR0UTBGSk0wTXNlVUpCUVhsQ096dEJRVVY2UWl4VFFVRlRMR0ZCUVdFc1EwRkJReXhaUVVGWkxFVkJRVVU3UVVGRE1VTXNUVUZCVFN4blFrRkJaMElzUjBGQlJ5eEJRVUZETEZsQlFWa3NTVUZCU1N4WlFVRlpMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVXNzUTBGQlF6dE5RVU0zUkN4bFFVRmxMREJDUVVGdlFpeERRVUZET3p0QlFVVjBReXhOUVVORkxHZENRVUZuUWl3eVEwRkJjVU1zU1VGRGNrUXNaMEpCUVdkQ0xESkNRVUZ4UWl4RlFVTnlRenRCUVVOQkxGZEJRVTg3UjBGRFVqczdRVUZGUkN4TlFVRkpMR2RDUVVGblFpd3dRMEZCYjBNc1JVRkJSVHRCUVVONFJDeFJRVUZOTEdWQlFXVXNSMEZCUnl4MVFrRkJhVUlzWlVGQlpTeERRVUZETzFGQlEzWkVMR2RDUVVGblFpeEhRVUZITEhWQ1FVRnBRaXhuUWtGQlowSXNRMEZCUXl4RFFVRkRPMEZCUTNoRUxGVkJRVTBzTWtKQlEwb3NlVVpCUVhsR0xFZEJRM1pHTEhGRVFVRnhSQ3hIUVVOeVJDeGxRVUZsTEVkQlEyWXNiVVJCUVcxRUxFZEJRMjVFTEdkQ1FVRm5RaXhIUVVOb1FpeEpRVUZKTEVOQlExQXNRMEZCUXp0SFFVTklMRTFCUVUwN08wRkJSVXdzVlVGQlRTd3lRa0ZEU2l4M1JrRkJkMFlzUjBGRGRFWXNhVVJCUVdsRUxFZEJRMnBFTEZsQlFWa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkRaaXhKUVVGSkxFTkJRMUFzUTBGQlF6dEhRVU5JTzBOQlEwWTdPMEZCUlUwc1UwRkJVeXhSUVVGUkxFTkJRVU1zV1VGQldTeEZRVUZGTEVkQlFVY3NSVUZCUlRzN1FVRkZNVU1zVFVGQlNTeERRVUZETEVkQlFVY3NSVUZCUlR0QlFVTlNMRlZCUVUwc01rSkJRV01zYlVOQlFXMURMRU5CUVVNc1EwRkJRenRIUVVNeFJEdEJRVU5FTEUxQlFVa3NRMEZCUXl4WlFVRlpMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeEZRVUZGTzBGQlEzWkRMRlZCUVUwc01rSkJRV01zTWtKQlFUSkNMRWRCUVVjc1QwRkJUeXhaUVVGWkxFTkJRVU1zUTBGQlF6dEhRVU40UlRzN1FVRkZSQ3hqUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVGRE96czdPMEZCU1d4RUxFdEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNZVUZCWVN4RFFVRkRMRmxCUVZrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6czdPMEZCUnpWRExFMUJRVTBzYjBOQlFXOURMRWRCUTNoRExGbEJRVmtzUTBGQlF5eFJRVUZSTEVsQlFVa3NXVUZCV1N4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdPMEZCUlRGRUxGZEJRVk1zYjBKQlFXOUNMRU5CUVVNc1QwRkJUeXhGUVVGRkxFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlFVVTdRVUZEZGtRc1VVRkJTU3hQUVVGUExFTkJRVU1zU1VGQlNTeEZRVUZGTzBGQlEyaENMR0ZCUVU4c1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBGQlEyeEVMRlZCUVVrc1QwRkJUeXhEUVVGRExFZEJRVWNzUlVGQlJUdEJRVU5tTEdWQlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETzA5QlEzWkNPMHRCUTBZN1FVRkRSQ3hYUVVGUExFZEJRVWNzUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJTeFBRVUZQTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE96dEJRVVYwUlN4UlFVRkpMR1ZCUVdVc1IwRkJSeXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNSVUZCUlN4UFFVRlBMRVZCUVVVN1FVRkRPVU1zVjBGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXl4TFFVRkxPMEZCUTJwQ0xIZENRVUZyUWl4RlFVRkZMRWxCUVVrc1EwRkJReXhyUWtGQmEwSTdTMEZETlVNc1EwRkJReXhEUVVGRE96dEJRVVZJTEZGQlFVa3NUVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZEY0VNc1NVRkJTU3hGUVVOS0xFOUJRVThzUlVGRFVDeFBRVUZQTEVWQlExQXNaVUZCWlN4RFFVTm9RaXhEUVVGRE96dEJRVVZHTEZGQlFVa3NUVUZCVFN4SlFVRkpMRWxCUVVrc1NVRkJTU3hIUVVGSExFTkJRVU1zVDBGQlR5eEZRVUZGTzBGQlEycERMR0ZCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1EwRkJReXhQUVVGUExFTkJRekZETEU5QlFVOHNSVUZEVUN4WlFVRlpMRU5CUVVNc1pVRkJaU3hGUVVNMVFpeEhRVUZITEVOQlEwb3NRMEZCUXp0QlFVTkdMRmxCUVUwc1IwRkJSeXhQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhQUVVGUExFVkJRVVVzWlVGQlpTeERRVUZETEVOQlFVTTdTMEZEYmtVN1FVRkRSQ3hSUVVGSkxFMUJRVTBzU1VGQlNTeEpRVUZKTEVWQlFVVTdRVUZEYkVJc1ZVRkJTU3hQUVVGUExFTkJRVU1zVFVGQlRTeEZRVUZGTzBGQlEyeENMRmxCUVVrc1MwRkJTeXhIUVVGSExFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkRMMElzWVVGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU0xUXl4alFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRk8wRkJRelZDTEd0Q1FVRk5PMWRCUTFBN08wRkJSVVFzWlVGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRTlCUVU4c1EwRkJReXhOUVVGTkxFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMU5CUTNSRE8wRkJRMFFzWTBGQlRTeEhRVUZITEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03VDBGRE0wSTdRVUZEUkN4aFFVRlBMRTFCUVUwc1EwRkJRenRMUVVObUxFMUJRVTA3UVVGRFRDeFpRVUZOTERKQ1FVTktMR05CUVdNc1IwRkRXaXhQUVVGUExFTkJRVU1zU1VGQlNTeEhRVU5hTERCRVFVRXdSQ3hEUVVNM1JDeERRVUZETzB0QlEwZzdSMEZEUmpzN08wRkJSMFFzVFVGQlNTeFRRVUZUTEVkQlFVYzdRVUZEWkN4VlFVRk5MRVZCUVVVc1owSkJRVk1zUjBGQlJ5eEZRVUZGTEVsQlFVa3NSVUZCUlN4SFFVRkhMRVZCUVVVN1FVRkRMMElzVlVGQlNTeERRVUZETEVkQlFVY3NTVUZCU1N4RlFVRkZMRWxCUVVrc1NVRkJTU3hIUVVGSExFTkJRVUVzUVVGQlF5eEZRVUZGTzBGQlF6RkNMR05CUVUwc01rSkJRV01zUjBGQlJ5eEhRVUZITEVsQlFVa3NSMEZCUnl4dFFrRkJiVUlzUjBGQlJ5eEhRVUZITEVWQlFVVTdRVUZETVVRc1lVRkJSeXhGUVVGRkxFZEJRVWM3VTBGRFZDeERRVUZETEVOQlFVTTdUMEZEU2p0QlFVTkVMR0ZCUVU4c1UwRkJVeXhEUVVGRExHTkJRV01zUTBGQlF5eEhRVUZITEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1MwRkROVU03UVVGRFJDeHJRa0ZCWXl4RlFVRkZMSGRDUVVGVExFMUJRVTBzUlVGQlJTeFpRVUZaTEVWQlFVVTdRVUZETjBNc1ZVRkJTU3hOUVVGTkxFZEJRVWNzVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRPMEZCUTJ4RExGVkJRVWtzVFVGQlRTeEpRVUZKTEVsQlFVa3NSVUZCUlR0QlFVTnNRaXhsUVVGUExFMUJRVTBzUTBGQlF6dFBRVU5tTzBGQlEwUXNWVUZCU1N4TlFVRk5MRU5CUVVNc1UwRkJVeXhEUVVGRExHTkJRV01zUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRmxCUVZrc1EwRkJReXhGUVVGRk8wRkJRemxFTEdWQlFVOHNUVUZCVFN4RFFVRkRPMDlCUTJZN08wRkJSVVFzVlVGQlNTeHhRMEZCWjBJc1RVRkJUU3hGUVVGRkxGTkJRVk1zUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3haUVVGWkxFTkJRVU1zUlVGQlJUdEJRVU4yUlN4bFFVRlBMRTFCUVUwc1EwRkJRenRQUVVObU8wRkJRMFFzWVVGQlR5eFRRVUZUTEVOQlFVTTdTMEZEYkVJN1FVRkRSQ3hWUVVGTkxFVkJRVVVzWjBKQlFWTXNUVUZCVFN4RlFVRkZMRWxCUVVrc1JVRkJSVHRCUVVNM1FpeFZRVUZOTEVkQlFVY3NSMEZCUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRE8wRkJRekZDTEZkQlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1FVRkROVUlzV1VGQlNTeE5RVUZOTEVkQlFVY3NUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxGTkJRVk1zUTBGQlF5eGpRVUZqTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETzBGQlEzQkZMRmxCUVVrc1RVRkJUU3hKUVVGSkxFbEJRVWtzUlVGQlJUdEJRVU5zUWl4cFFrRkJUeXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1UwRkRlRUk3VDBGRFJqdExRVU5HTzBGQlEwUXNWVUZCVFN4RlFVRkZMR2RDUVVGVExFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlFVVTdRVUZEYWtNc1lVRkJUeXhQUVVGUExFOUJRVThzUzBGQlN5eFZRVUZWTEVkQlFVY3NUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zUjBGQlJ5eFBRVUZQTEVOQlFVTTdTMEZEZUVVN08wRkJSVVFzYjBKQlFXZENMRVZCUVVVc1MwRkJTeXhEUVVGRExHZENRVUZuUWp0QlFVTjRReXhwUWtGQllTeEZRVUZGTEc5Q1FVRnZRanM3UVVGRmJrTXNUVUZCUlN4RlFVRkZMRmxCUVZNc1EwRkJReXhGUVVGRk8wRkJRMlFzVlVGQlNTeEhRVUZITEVkQlFVY3NXVUZCV1N4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRekZDTEZOQlFVY3NRMEZCUXl4VFFVRlRMRWRCUVVjc1dVRkJXU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVTjJReXhoUVVGUExFZEJRVWNzUTBGQlF6dExRVU5hT3p0QlFVVkVMRmxCUVZFc1JVRkJSU3hGUVVGRk8wRkJRMW9zVjBGQlR5eEZRVUZGTEdsQ1FVRlRMRU5CUVVNc1JVRkJSU3hKUVVGSkxFVkJRVVVzYlVKQlFXMUNMRVZCUVVVc1YwRkJWeXhGUVVGRkxFMUJRVTBzUlVGQlJUdEJRVU51UlN4VlFVRkpMR05CUVdNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXp0VlFVTnVReXhGUVVGRkxFZEJRVWNzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOc1FpeFZRVUZKTEVsQlFVa3NTVUZCU1N4TlFVRk5MRWxCUVVrc1YwRkJWeXhKUVVGSkxHMUNRVUZ0UWl4RlFVRkZPMEZCUTNoRUxITkNRVUZqTEVkQlFVY3NWMEZCVnl4RFFVTXhRaXhKUVVGSkxFVkJRMG9zUTBGQlF5eEZRVU5FTEVWQlFVVXNSVUZEUml4SlFVRkpMRVZCUTBvc2JVSkJRVzFDTEVWQlEyNUNMRmRCUVZjc1JVRkRXQ3hOUVVGTkxFTkJRMUFzUTBGQlF6dFBRVU5JTEUxQlFVMHNTVUZCU1N4RFFVRkRMR05CUVdNc1JVRkJSVHRCUVVNeFFpeHpRa0ZCWXl4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETEVkQlFVY3NWMEZCVnl4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTTdUMEZET1VRN1FVRkRSQ3hoUVVGUExHTkJRV01zUTBGQlF6dExRVU4yUWpzN1FVRkZSQ3hSUVVGSkxFVkJRVVVzWTBGQlV5eExRVUZMTEVWQlFVVXNTMEZCU3l4RlFVRkZPMEZCUXpOQ0xHRkJRVThzUzBGQlN5eEpRVUZKTEV0QlFVc3NSVUZCUlN4RlFVRkZPMEZCUTNaQ0xHRkJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRPMDlCUTNaQ08wRkJRMFFzWVVGQlR5eExRVUZMTEVOQlFVTTdTMEZEWkR0QlFVTkVMR2xDUVVGaExFVkJRVVVzZFVKQlFWTXNTMEZCU3l4RlFVRkZMRTFCUVUwc1JVRkJSVHRCUVVOeVF5eFZRVUZKTEVkQlFVY3NSMEZCUnl4TFFVRkxMRWxCUVVrc1RVRkJUU3hEUVVGRE96dEJRVVV4UWl4VlFVRkpMRXRCUVVzc1NVRkJTU3hOUVVGTkxFbEJRVWtzUzBGQlN5eExRVUZMTEUxQlFVMHNSVUZCUlR0QlFVTjJReXhYUVVGSExFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4RlFVRkZMRVZCUVVVc1RVRkJUU3hGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETzA5QlEzWkRPenRCUVVWRUxHRkJRVThzUjBGQlJ5eERRVUZETzB0QlExbzdPMEZCUlVRc1pVRkJWeXhGUVVGRkxFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRPenRCUVVVMVFpeFJRVUZKTEVWQlFVVXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhKUVVGSk8wRkJRMnBDTEdkQ1FVRlpMRVZCUVVVc1dVRkJXU3hEUVVGRExGRkJRVkU3UjBGRGNFTXNRMEZCUXpzN1FVRkZSaXhYUVVGVExFZEJRVWNzUTBGQlF5eFBRVUZQTEVWQlFXZENPMUZCUVdRc1QwRkJUeXg1UkVGQlJ5eEZRVUZGT3p0QlFVTm9ReXhSUVVGSkxFbEJRVWtzUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRPenRCUVVWNFFpeFBRVUZITEVOQlFVTXNUVUZCVFN4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJRM0JDTEZGQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1QwRkJUeXhKUVVGSkxGbEJRVmtzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZETlVNc1ZVRkJTU3hIUVVGSExGRkJRVkVzUTBGQlF5eFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1MwRkRhRU03UVVGRFJDeFJRVUZKTEUxQlFVMHNXVUZCUVR0UlFVTlNMRmRCUVZjc1IwRkJSeXhaUVVGWkxFTkJRVU1zWTBGQll5eEhRVUZITEVWQlFVVXNSMEZCUnl4VFFVRlRMRU5CUVVNN1FVRkROMFFzVVVGQlNTeFpRVUZaTEVOQlFVTXNVMEZCVXl4RlFVRkZPMEZCUXpGQ0xGVkJRVWtzVDBGQlR5eERRVUZETEUxQlFVMHNSVUZCUlR0QlFVTnNRaXhqUVVGTkxFZEJRMG9zVDBGQlR5eEpRVUZKTEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRM2hDTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVOQlFVTXNSMEZEYUVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF6dFBRVU4wUWl4TlFVRk5PMEZCUTB3c1kwRkJUU3hIUVVGSExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdUMEZEY0VJN1MwRkRSanM3UVVGRlJDeGhRVUZUTEVsQlFVa3NRMEZCUXl4UFFVRlBMR2RDUVVGblFqdEJRVU51UXl4aFFVTkZMRVZCUVVVc1IwRkRSaXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVU5tTEZOQlFWTXNSVUZEVkN4UFFVRlBMRVZCUTFBc1UwRkJVeXhEUVVGRExFOUJRVThzUlVGRGFrSXNVMEZCVXl4RFFVRkRMRkZCUVZFc1JVRkRiRUlzU1VGQlNTeEZRVU5LTEZkQlFWY3NSVUZEV0N4TlFVRk5MRU5CUTFBc1EwRkRSRHRMUVVOSU96dEJRVVZFTEZGQlFVa3NSMEZCUnl4cFFrRkJhVUlzUTBGRGRFSXNXVUZCV1N4RFFVRkRMRWxCUVVrc1JVRkRha0lzU1VGQlNTeEZRVU5LTEZOQlFWTXNSVUZEVkN4UFFVRlBMRU5CUVVNc1RVRkJUU3hKUVVGSkxFVkJRVVVzUlVGRGNFSXNTVUZCU1N4RlFVTktMRmRCUVZjc1EwRkRXaXhEUVVGRE8wRkJRMFlzVjBGQlR5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RlFVRkZMRTlCUVU4c1EwRkJReXhEUVVGRE8wZEJReTlDT3p0QlFVVkVMRXRCUVVjc1EwRkJReXhMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZET3p0QlFVVnFRaXhMUVVGSExFTkJRVU1zVFVGQlRTeEhRVUZITEZWQlFWTXNUMEZCVHl4RlFVRkZPMEZCUXpkQ0xGRkJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUMEZCVHl4RlFVRkZPMEZCUTNCQ0xGVkJRVWtzWVVGQllTeEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hGUVVGRkxFZEJRVWNzUTBGQlF5eFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJRMjVGTEhGRFFVRXJRaXhEUVVGRExHRkJRV0VzUlVGQlJTeFRRVUZUTEVOQlFVTXNRMEZCUXp0QlFVTXhSQ3hsUVVGVExFTkJRVU1zVDBGQlR5eEhRVUZITEdGQlFXRXNRMEZCUXpzN1FVRkZiRU1zVlVGQlNTeFpRVUZaTEVOQlFVTXNWVUZCVlN4RlFVRkZPenRCUVVVelFpeHBRa0ZCVXl4RFFVRkRMRkZCUVZFc1IwRkJSeXhUUVVGVExFTkJRVU1zWVVGQllTeERRVU14UXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hGUVVOb1FpeEhRVUZITEVOQlFVTXNVVUZCVVN4RFFVTmlMRU5CUVVNN1QwRkRTRHRCUVVORUxGVkJRVWtzV1VGQldTeERRVUZETEZWQlFWVXNTVUZCU1N4WlFVRlpMRU5CUVVNc1lVRkJZU3hGUVVGRk8wRkJRM3BFTEdsQ1FVRlRMRU5CUVVNc1ZVRkJWU3hIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlEycERMRVZCUVVVc1JVRkRSaXhIUVVGSExFTkJRVU1zVlVGQlZTeEZRVU5rTEU5QlFVOHNRMEZCUXl4VlFVRlZMRU5CUTI1Q0xFTkJRVU03VDBGRFNEczdRVUZGUkN4bFFVRlRMRU5CUVVNc1MwRkJTeXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU55UWl4bFFVRlRMRU5CUVVNc2EwSkJRV3RDTEVkQlFVY3NPRU5CUVhsQ0xFOUJRVThzUTBGQlF5eERRVUZET3p0QlFVVnFSU3hWUVVGSkxHMUNRVUZ0UWl4SFFVTnlRaXhQUVVGUExFTkJRVU1zZVVKQlFYbENMRWxCUTJwRExHOURRVUZ2UXl4RFFVRkRPMEZCUTNaRExHbERRVUZyUWl4VFFVRlRMRVZCUVVVc1pVRkJaU3hGUVVGRkxHMUNRVUZ0UWl4RFFVRkRMRU5CUVVNN1FVRkRia1VzYVVOQlFXdENMRk5CUVZNc1JVRkJSU3h2UWtGQmIwSXNSVUZCUlN4dFFrRkJiVUlzUTBGQlF5eERRVUZETzB0QlEzcEZMRTFCUVUwN1FVRkRUQ3hsUVVGVExFTkJRVU1zYTBKQlFXdENMRWRCUVVjc1QwRkJUeXhEUVVGRExHdENRVUZyUWl4RFFVRkRPMEZCUXpGRUxHVkJRVk1zUTBGQlF5eFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJRenRCUVVOd1F5eGxRVUZUTEVOQlFVTXNVVUZCVVN4SFFVRkhMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU03UVVGRGRFTXNaVUZCVXl4RFFVRkRMRlZCUVZVc1IwRkJSeXhQUVVGUExFTkJRVU1zVlVGQlZTeERRVUZETzBGQlF6RkRMR1ZCUVZNc1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXp0TFFVTnFRenRIUVVOR0xFTkJRVU03TzBGQlJVWXNTMEZCUnl4RFFVRkRMRTFCUVUwc1IwRkJSeXhWUVVGVExFTkJRVU1zUlVGQlJTeEpRVUZKTEVWQlFVVXNWMEZCVnl4RlFVRkZMRTFCUVUwc1JVRkJSVHRCUVVOc1JDeFJRVUZKTEZsQlFWa3NRMEZCUXl4alFVRmpMRWxCUVVrc1EwRkJReXhYUVVGWExFVkJRVVU3UVVGREwwTXNXVUZCVFN3eVFrRkJZeXgzUWtGQmQwSXNRMEZCUXl4RFFVRkRPMHRCUXk5RE8wRkJRMFFzVVVGQlNTeFpRVUZaTEVOQlFVTXNVMEZCVXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRM0pETEZsQlFVMHNNa0pCUVdNc2VVSkJRWGxDTEVOQlFVTXNRMEZCUXp0TFFVTm9SRHM3UVVGRlJDeFhRVUZQTEZkQlFWY3NRMEZEYUVJc1UwRkJVeXhGUVVOVUxFTkJRVU1zUlVGRFJDeFpRVUZaTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUTJZc1NVRkJTU3hGUVVOS0xFTkJRVU1zUlVGRFJDeFhRVUZYTEVWQlExZ3NUVUZCVFN4RFFVTlFMRU5CUVVNN1IwRkRTQ3hEUVVGRE8wRkJRMFlzVTBGQlR5eEhRVUZITEVOQlFVTTdRMEZEV2pzN1FVRkZUU3hUUVVGVExGZEJRVmNzUTBGRGVrSXNVMEZCVXl4RlFVTlVMRU5CUVVNc1JVRkRSQ3hGUVVGRkxFVkJRMFlzU1VGQlNTeEZRVU5LTEcxQ1FVRnRRaXhGUVVOdVFpeFhRVUZYTEVWQlExZ3NUVUZCVFN4RlFVTk9PMEZCUTBFc1YwRkJVeXhKUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZuUWp0UlFVRmtMRTlCUVU4c2VVUkJRVWNzUlVGQlJUczdRVUZEYWtNc1VVRkJTU3hoUVVGaExFZEJRVWNzVFVGQlRTeERRVUZETzBGQlF6TkNMRkZCUTBVc1RVRkJUU3hKUVVOT0xFOUJRVThzU1VGQlNTeE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUTNCQ0xFVkJRVVVzVDBGQlR5eExRVUZMTEZOQlFWTXNRMEZCUXl4WFFVRlhMRWxCUVVrc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eExRVUZMTEVsQlFVa3NRMEZCUVN4QlFVRkRMRVZCUXpGRU8wRkJRMEVzYlVKQlFXRXNSMEZCUnl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTXhRenM3UVVGRlJDeFhRVUZQTEVWQlFVVXNRMEZEVUN4VFFVRlRMRVZCUTFRc1QwRkJUeXhGUVVOUUxGTkJRVk1zUTBGQlF5eFBRVUZQTEVWQlEycENMRk5CUVZNc1EwRkJReXhSUVVGUkxFVkJRMnhDTEU5QlFVOHNRMEZCUXl4SlFVRkpMRWxCUVVrc1NVRkJTU3hGUVVOd1FpeFhRVUZYTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4RlFVTjRSQ3hoUVVGaExFTkJRMlFzUTBGQlF6dEhRVU5JT3p0QlFVVkVMRTFCUVVrc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXl4RlFVRkZMRVZCUVVVc1NVRkJTU3hGUVVGRkxGTkJRVk1zUlVGQlJTeE5RVUZOTEVWQlFVVXNTVUZCU1N4RlFVRkZMRmRCUVZjc1EwRkJReXhEUVVGRE96dEJRVVY2UlN4TlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFTkJRVU1zUTBGQlF6dEJRVU5xUWl4TlFVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFMUJRVTBzUjBGQlJ5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVONFF5eE5RVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRzFDUVVGdFFpeEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVTTFReXhUUVVGUExFbEJRVWtzUTBGQlF6dERRVU5pT3pzN096czdRVUZMVFN4VFFVRlRMR05CUVdNc1EwRkJReXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUlR0QlFVTjRSQ3hOUVVGSkxFTkJRVU1zVDBGQlR5eEZRVUZGTzBGQlExb3NVVUZCU1N4UFFVRlBMRU5CUVVNc1NVRkJTU3hMUVVGTExHZENRVUZuUWl4RlFVRkZPMEZCUTNKRExHRkJRVThzUjBGQlJ5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMR1ZCUVdVc1EwRkJReXhEUVVGRE8wdEJRM3BETEUxQlFVMDdRVUZEVEN4aFFVRlBMRWRCUVVjc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1MwRkRNVU03UjBGRFJpeE5RVUZOTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NSVUZCUlRzN1FVRkZla01zVjBGQlR5eERRVUZETEVsQlFVa3NSMEZCUnl4UFFVRlBMRU5CUVVNN1FVRkRka0lzVjBGQlR5eEhRVUZITEU5QlFVOHNRMEZCUXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU03UjBGRGNrTTdRVUZEUkN4VFFVRlBMRTlCUVU4c1EwRkJRenREUVVOb1FqczdRVUZGVFN4VFFVRlRMR0ZCUVdFc1EwRkJReXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTEU5QlFVOHNSVUZCUlRzN1FVRkZka1FzVFVGQlRTeHRRa0ZCYlVJc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeEpRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVU03UVVGRE1VVXNVMEZCVHl4RFFVRkRMRTlCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRGRrSXNUVUZCU1N4UFFVRlBMRU5CUVVNc1IwRkJSeXhGUVVGRk8wRkJRMllzVjBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRWRCUVVjc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF6dEhRVU4yUlRzN1FVRkZSQ3hOUVVGSkxGbEJRVmtzV1VGQlFTeERRVUZETzBGQlEycENMRTFCUVVrc1QwRkJUeXhEUVVGRExFVkJRVVVzU1VGQlNTeFBRVUZQTEVOQlFVTXNSVUZCUlN4TFFVRkxMRWxCUVVrc1JVRkJSVHM3UVVGRGNrTXNZVUZCVHl4RFFVRkRMRWxCUVVrc1IwRkJSeXhyUWtGQldTeFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN08wRkJSWHBETEZWQlFVa3NSVUZCUlN4SFFVRkhMRTlCUVU4c1EwRkJReXhGUVVGRkxFTkJRVU03UVVGRGNFSXNhMEpCUVZrc1IwRkJSeXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEdWQlFXVXNRMEZCUXl4SFFVRkhMRk5CUVZNc2JVSkJRVzFDTEVOQlEzcEZMRTlCUVU4c1JVRkZVRHRaUVVSQkxFOUJRVThzZVVSQlFVY3NSVUZCUlRzN096dEJRVWxhTEdWQlFVOHNRMEZCUXl4SlFVRkpMRWRCUVVjc2EwSkJRVmtzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUTNwRExHVkJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNaVUZCWlN4RFFVRkRMRWRCUVVjc2JVSkJRVzFDTEVOQlFVTTdRVUZEY0VRc1pVRkJUeXhGUVVGRkxFTkJRVU1zVDBGQlR5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPMDlCUXpkQ0xFTkJRVU03UVVGRFJpeFZRVUZKTEVWQlFVVXNRMEZCUXl4UlFVRlJMRVZCUVVVN1FVRkRaaXhsUVVGUExFTkJRVU1zVVVGQlVTeEhRVUZITEV0QlFVc3NRMEZCUXl4TlFVRk5MRU5CUVVNc1JVRkJSU3hGUVVGRkxFOUJRVThzUTBGQlF5eFJRVUZSTEVWQlFVVXNSVUZCUlN4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8wOUJRM0JGT3p0SFFVTkdPenRCUVVWRUxFMUJRVWtzVDBGQlR5eExRVUZMTEZOQlFWTXNTVUZCU1N4WlFVRlpMRVZCUVVVN1FVRkRla01zVjBGQlR5eEhRVUZITEZsQlFWa3NRMEZCUXp0SFFVTjRRanM3UVVGRlJDeE5RVUZKTEU5QlFVOHNTMEZCU3l4VFFVRlRMRVZCUVVVN1FVRkRla0lzVlVGQlRTd3lRa0ZCWXl4alFVRmpMRWRCUVVjc1QwRkJUeXhEUVVGRExFbEJRVWtzUjBGQlJ5eHhRa0ZCY1VJc1EwRkJReXhEUVVGRE8wZEJRelZGTEUxQlFVMHNTVUZCU1N4UFFVRlBMRmxCUVZrc1VVRkJVU3hGUVVGRk8wRkJRM1JETEZkQlFVOHNUMEZCVHl4RFFVRkRMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dEhRVU5zUXp0RFFVTkdPenRCUVVWTkxGTkJRVk1zU1VGQlNTeEhRVUZITzBGQlEzSkNMRk5CUVU4c1JVRkJSU3hEUVVGRE8wTkJRMWc3TzBGQlJVUXNVMEZCVXl4UlFVRlJMRU5CUVVNc1QwRkJUeXhGUVVGRkxFbEJRVWtzUlVGQlJUdEJRVU12UWl4TlFVRkpMRU5CUVVNc1NVRkJTU3hKUVVGSkxFVkJRVVVzVFVGQlRTeEpRVUZKTEVsQlFVa3NRMEZCUVN4QlFVRkRMRVZCUVVVN1FVRkRPVUlzVVVGQlNTeEhRVUZITEVsQlFVa3NSMEZCUnl4clFrRkJXU3hKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdRVUZEY2tNc1VVRkJTU3hEUVVGRExFbEJRVWtzUjBGQlJ5eFBRVUZQTEVOQlFVTTdSMEZEY2tJN1FVRkRSQ3hUUVVGUExFbEJRVWtzUTBGQlF6dERRVU5pT3p0QlFVVkVMRk5CUVZNc2FVSkJRV2xDTEVOQlFVTXNSVUZCUlN4RlFVRkZMRWxCUVVrc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEVsQlFVa3NSVUZCUlN4WFFVRlhMRVZCUVVVN1FVRkRla1VzVFVGQlNTeEZRVUZGTEVOQlFVTXNVMEZCVXl4RlFVRkZPMEZCUTJoQ0xGRkJRVWtzUzBGQlN5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTm1MRkZCUVVrc1IwRkJSeXhGUVVGRkxFTkJRVU1zVTBGQlV5eERRVU5xUWl4SlFVRkpMRVZCUTBvc1MwRkJTeXhGUVVOTUxGTkJRVk1zUlVGRFZDeE5RVUZOTEVsQlFVa3NUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVOdVFpeEpRVUZKTEVWQlEwb3NWMEZCVnl4RlFVTllMRTFCUVUwc1EwRkRVQ3hEUVVGRE8wRkJRMFlzVTBGQlN5eERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRVZCUVVVc1MwRkJTeXhEUVVGRExFTkJRVU03UjBGRE0wSTdRVUZEUkN4VFFVRlBMRWxCUVVrc1EwRkJRenREUVVOaU96dEJRVVZFTEZOQlFWTXNLMEpCUVN0Q0xFTkJRVU1zWVVGQllTeEZRVUZGTEZOQlFWTXNSVUZCUlR0QlFVTnFSU3hSUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEdGQlFXRXNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGQkxGVkJRVlVzUlVGQlNUdEJRVU12UXl4UlFVRkpMRTFCUVUwc1IwRkJSeXhoUVVGaExFTkJRVU1zVlVGQlZTeERRVUZETEVOQlFVTTdRVUZEZGtNc2FVSkJRV0VzUTBGQlF5eFZRVUZWTEVOQlFVTXNSMEZCUnl4M1FrRkJkMElzUTBGQlF5eE5RVUZOTEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN1IwRkRla1VzUTBGQlF5eERRVUZETzBOQlEwbzdPMEZCUlVRc1UwRkJVeXgzUWtGQmQwSXNRMEZCUXl4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRk8wRkJRMjVFTEUxQlFVMHNZMEZCWXl4SFFVRkhMRk5CUVZNc1EwRkJReXhqUVVGakxFTkJRVU03UVVGRGFFUXNVMEZCVHl3clFrRkJWeXhOUVVGTkxFVkJRVVVzVlVGQlFTeFBRVUZQTEVWQlFVazdRVUZEYmtNc1YwRkJUeXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETEVWQlFVVXNZMEZCWXl4RlFVRmtMR05CUVdNc1JVRkJSU3hGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzBkQlEyeEVMRU5CUVVNc1EwRkJRenREUVVOS0lpd2labWxzWlNJNkluSjFiblJwYldVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdLaUJoY3lCVmRHbHNjeUJtY205dElDY3VMM1YwYVd4ekp6dGNibWx0Y0c5eWRDQkZlR05sY0hScGIyNGdabkp2YlNBbkxpOWxlR05sY0hScGIyNG5PMXh1YVcxd2IzSjBJSHRjYmlBZ1EwOU5VRWxNUlZKZlVrVldTVk5KVDA0c1hHNGdJR055WldGMFpVWnlZVzFsTEZ4dUlDQk1RVk5VWDBOUFRWQkJWRWxDVEVWZlEwOU5VRWxNUlZKZlVrVldTVk5KVDA0c1hHNGdJRkpGVmtsVFNVOU9YME5JUVU1SFJWTmNibjBnWm5KdmJTQW5MaTlpWVhObEp6dGNibWx0Y0c5eWRDQjdJRzF2ZG1WSVpXeHdaWEpVYjBodmIydHpJSDBnWm5KdmJTQW5MaTlvWld4d1pYSnpKenRjYm1sdGNHOXlkQ0I3SUhkeVlYQklaV3h3WlhJZ2ZTQm1jbTl0SUNjdUwybHVkR1Z5Ym1Gc0wzZHlZWEJJWld4d1pYSW5PMXh1YVcxd2IzSjBJSHRjYmlBZ1kzSmxZWFJsVUhKdmRHOUJZMk5sYzNORGIyNTBjbTlzTEZ4dUlDQnlaWE4xYkhSSmMwRnNiRzkzWldSY2JuMGdabkp2YlNBbkxpOXBiblJsY201aGJDOXdjbTkwYnkxaFkyTmxjM01uTzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kyaGxZMnRTWlhacGMybHZiaWhqYjIxd2FXeGxja2x1Wm04cElIdGNiaUFnWTI5dWMzUWdZMjl0Y0dsc1pYSlNaWFpwYzJsdmJpQTlJQ2hqYjIxd2FXeGxja2x1Wm04Z0ppWWdZMjl0Y0dsc1pYSkpibVp2V3pCZEtTQjhmQ0F4TEZ4dUlDQWdJR04xY25KbGJuUlNaWFpwYzJsdmJpQTlJRU5QVFZCSlRFVlNYMUpGVmtsVFNVOU9PMXh1WEc0Z0lHbG1JQ2hjYmlBZ0lDQmpiMjF3YVd4bGNsSmxkbWx6YVc5dUlENDlJRXhCVTFSZlEwOU5VRUZVU1VKTVJWOURUMDFRU1V4RlVsOVNSVlpKVTBsUFRpQW1KbHh1SUNBZ0lHTnZiWEJwYkdWeVVtVjJhWE5wYjI0Z1BEMGdRMDlOVUVsTVJWSmZVa1ZXU1ZOSlQwNWNiaUFnS1NCN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNWNiaUFnYVdZZ0tHTnZiWEJwYkdWeVVtVjJhWE5wYjI0Z1BDQk1RVk5VWDBOUFRWQkJWRWxDVEVWZlEwOU5VRWxNUlZKZlVrVldTVk5KVDA0cElIdGNiaUFnSUNCamIyNXpkQ0J5ZFc1MGFXMWxWbVZ5YzJsdmJuTWdQU0JTUlZaSlUwbFBUbDlEU0VGT1IwVlRXMk4xY25KbGJuUlNaWFpwYzJsdmJsMHNYRzRnSUNBZ0lDQmpiMjF3YVd4bGNsWmxjbk5wYjI1eklEMGdVa1ZXU1ZOSlQwNWZRMGhCVGtkRlUxdGpiMjF3YVd4bGNsSmxkbWx6YVc5dVhUdGNiaUFnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtGeHVJQ0FnSUNBZ0oxUmxiWEJzWVhSbElIZGhjeUJ3Y21WamIyMXdhV3hsWkNCM2FYUm9JR0Z1SUc5c1pHVnlJSFpsY25OcGIyNGdiMllnU0dGdVpHeGxZbUZ5Y3lCMGFHRnVJSFJvWlNCamRYSnlaVzUwSUhKMWJuUnBiV1V1SUNjZ0sxeHVJQ0FnSUNBZ0lDQW5VR3hsWVhObElIVndaR0YwWlNCNWIzVnlJSEJ5WldOdmJYQnBiR1Z5SUhSdklHRWdibVYzWlhJZ2RtVnljMmx2YmlBb0p5QXJYRzRnSUNBZ0lDQWdJSEoxYm5ScGJXVldaWEp6YVc5dWN5QXJYRzRnSUNBZ0lDQWdJQ2NwSUc5eUlHUnZkMjVuY21Ga1pTQjViM1Z5SUhKMWJuUnBiV1VnZEc4Z1lXNGdiMnhrWlhJZ2RtVnljMmx2YmlBb0p5QXJYRzRnSUNBZ0lDQWdJR052YlhCcGJHVnlWbVZ5YzJsdmJuTWdLMXh1SUNBZ0lDQWdJQ0FuS1M0blhHNGdJQ0FnS1R0Y2JpQWdmU0JsYkhObElIdGNiaUFnSUNBdkx5QlZjMlVnZEdobElHVnRZbVZrWkdWa0lIWmxjbk5wYjI0Z2FXNW1ieUJ6YVc1alpTQjBhR1VnY25WdWRHbHRaU0JrYjJWemJpZDBJR3R1YjNjZ1lXSnZkWFFnZEdocGN5QnlaWFpwYzJsdmJpQjVaWFJjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLRnh1SUNBZ0lDQWdKMVJsYlhCc1lYUmxJSGRoY3lCd2NtVmpiMjF3YVd4bFpDQjNhWFJvSUdFZ2JtVjNaWElnZG1WeWMybHZiaUJ2WmlCSVlXNWtiR1ZpWVhKeklIUm9ZVzRnZEdobElHTjFjbkpsYm5RZ2NuVnVkR2x0WlM0Z0p5QXJYRzRnSUNBZ0lDQWdJQ2RRYkdWaGMyVWdkWEJrWVhSbElIbHZkWElnY25WdWRHbHRaU0IwYnlCaElHNWxkMlZ5SUhabGNuTnBiMjRnS0NjZ0sxeHVJQ0FnSUNBZ0lDQmpiMjF3YVd4bGNrbHVabTliTVYwZ0sxeHVJQ0FnSUNBZ0lDQW5LUzRuWEc0Z0lDQWdLVHRjYmlBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnZEdWdGNHeGhkR1VvZEdWdGNHeGhkR1ZUY0dWakxDQmxibllwSUh0Y2JpQWdMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJRzVsZUhRZ0tpOWNiaUFnYVdZZ0tDRmxibllwSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhoalpYQjBhVzl1S0NkT2J5QmxiblpwY205dWJXVnVkQ0J3WVhOelpXUWdkRzhnZEdWdGNHeGhkR1VuS1R0Y2JpQWdmVnh1SUNCcFppQW9JWFJsYlhCc1lYUmxVM0JsWXlCOGZDQWhkR1Z0Y0d4aGRHVlRjR1ZqTG0xaGFXNHBJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLQ2RWYm10dWIzZHVJSFJsYlhCc1lYUmxJRzlpYW1WamREb2dKeUFySUhSNWNHVnZaaUIwWlcxd2JHRjBaVk53WldNcE8xeHVJQ0I5WEc1Y2JpQWdkR1Z0Y0d4aGRHVlRjR1ZqTG0xaGFXNHVaR1ZqYjNKaGRHOXlJRDBnZEdWdGNHeGhkR1ZUY0dWakxtMWhhVzVmWkR0Y2JseHVJQ0F2THlCT2IzUmxPaUJWYzJsdVp5Qmxibll1VmswZ2NtVm1aWEpsYm1ObGN5QnlZWFJvWlhJZ2RHaGhiaUJzYjJOaGJDQjJZWElnY21WbVpYSmxibU5sY3lCMGFISnZkV2RvYjNWMElIUm9hWE1nYzJWamRHbHZiaUIwYnlCaGJHeHZkMXh1SUNBdkx5Qm1iM0lnWlhoMFpYSnVZV3dnZFhObGNuTWdkRzhnYjNabGNuSnBaR1VnZEdobGMyVWdZWE1nY0hObGRXUnZMWE4xY0hCdmNuUmxaQ0JCVUVsekxseHVJQ0JsYm5ZdVZrMHVZMmhsWTJ0U1pYWnBjMmx2YmloMFpXMXdiR0YwWlZOd1pXTXVZMjl0Y0dsc1pYSXBPMXh1WEc0Z0lDOHZJR0poWTJ0M1lYSmtjeUJqYjIxd1lYUnBZbWxzYVhSNUlHWnZjaUJ3Y21WamIyMXdhV3hsWkNCMFpXMXdiR0YwWlhNZ2QybDBhQ0JqYjIxd2FXeGxjaTEyWlhKemFXOXVJRGNnS0R3MExqTXVNQ2xjYmlBZ1kyOXVjM1FnZEdWdGNHeGhkR1ZYWVhOUWNtVmpiMjF3YVd4bFpGZHBkR2hEYjIxd2FXeGxjbFkzSUQxY2JpQWdJQ0IwWlcxd2JHRjBaVk53WldNdVkyOXRjR2xzWlhJZ0ppWWdkR1Z0Y0d4aGRHVlRjR1ZqTG1OdmJYQnBiR1Z5V3pCZElEMDlQU0EzTzF4dVhHNGdJR1oxYm1OMGFXOXVJR2x1ZG05clpWQmhjblJwWVd4WGNtRndjR1Z5S0hCaGNuUnBZV3dzSUdOdmJuUmxlSFFzSUc5d2RHbHZibk1wSUh0Y2JpQWdJQ0JwWmlBb2IzQjBhVzl1Y3k1b1lYTm9LU0I3WEc0Z0lDQWdJQ0JqYjI1MFpYaDBJRDBnVlhScGJITXVaWGgwWlc1a0tIdDlMQ0JqYjI1MFpYaDBMQ0J2Y0hScGIyNXpMbWhoYzJncE8xeHVJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTXVhV1J6S1NCN1hHNGdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdWFXUnpXekJkSUQwZ2RISjFaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2NHRnlkR2xoYkNBOUlHVnVkaTVXVFM1eVpYTnZiSFpsVUdGeWRHbGhiQzVqWVd4c0tIUm9hWE1zSUhCaGNuUnBZV3dzSUdOdmJuUmxlSFFzSUc5d2RHbHZibk1wTzF4dVhHNGdJQ0FnYkdWMElHVjRkR1Z1WkdWa1QzQjBhVzl1Y3lBOUlGVjBhV3h6TG1WNGRHVnVaQ2g3ZlN3Z2IzQjBhVzl1Y3l3Z2UxeHVJQ0FnSUNBZ2FHOXZhM002SUhSb2FYTXVhRzl2YTNNc1hHNGdJQ0FnSUNCd2NtOTBiMEZqWTJWemMwTnZiblJ5YjJ3NklIUm9hWE11Y0hKdmRHOUJZMk5sYzNORGIyNTBjbTlzWEc0Z0lDQWdmU2s3WEc1Y2JpQWdJQ0JzWlhRZ2NtVnpkV3gwSUQwZ1pXNTJMbFpOTG1sdWRtOXJaVkJoY25ScFlXd3VZMkZzYkNoY2JpQWdJQ0FnSUhSb2FYTXNYRzRnSUNBZ0lDQndZWEowYVdGc0xGeHVJQ0FnSUNBZ1kyOXVkR1Y0ZEN4Y2JpQWdJQ0FnSUdWNGRHVnVaR1ZrVDNCMGFXOXVjMXh1SUNBZ0lDazdYRzVjYmlBZ0lDQnBaaUFvY21WemRXeDBJRDA5SUc1MWJHd2dKaVlnWlc1MkxtTnZiWEJwYkdVcElIdGNiaUFnSUNBZ0lHOXdkR2x2Ym5NdWNHRnlkR2xoYkhOYmIzQjBhVzl1Y3k1dVlXMWxYU0E5SUdWdWRpNWpiMjF3YVd4bEtGeHVJQ0FnSUNBZ0lDQndZWEowYVdGc0xGeHVJQ0FnSUNBZ0lDQjBaVzF3YkdGMFpWTndaV011WTI5dGNHbHNaWEpQY0hScGIyNXpMRnh1SUNBZ0lDQWdJQ0JsYm5aY2JpQWdJQ0FnSUNrN1hHNGdJQ0FnSUNCeVpYTjFiSFFnUFNCdmNIUnBiMjV6TG5CaGNuUnBZV3h6VzI5d2RHbHZibk11Ym1GdFpWMG9ZMjl1ZEdWNGRDd2daWGgwWlc1a1pXUlBjSFJwYjI1ektUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tISmxjM1ZzZENBaFBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNCcFppQW9iM0IwYVc5dWN5NXBibVJsYm5RcElIdGNiaUFnSUNBZ0lDQWdiR1YwSUd4cGJtVnpJRDBnY21WemRXeDBMbk53YkdsMEtDZGNYRzRuS1R0Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREFzSUd3Z1BTQnNhVzVsY3k1c1pXNW5kR2c3SUdrZ1BDQnNPeUJwS3lzcElIdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb0lXeHBibVZ6VzJsZElDWW1JR2tnS3lBeElEMDlQU0JzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQnNhVzVsYzF0cFhTQTlJRzl3ZEdsdmJuTXVhVzVrWlc1MElDc2diR2x1WlhOYmFWMDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WemRXeDBJRDBnYkdsdVpYTXVhbTlwYmlnblhGeHVKeWs3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J5WlhSMWNtNGdjbVZ6ZFd4ME8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhoalpYQjBhVzl1S0Z4dUlDQWdJQ0FnSUNBblZHaGxJSEJoY25ScFlXd2dKeUFyWEc0Z0lDQWdJQ0FnSUNBZ2IzQjBhVzl1Y3k1dVlXMWxJQ3RjYmlBZ0lDQWdJQ0FnSUNBbklHTnZkV3hrSUc1dmRDQmlaU0JqYjIxd2FXeGxaQ0IzYUdWdUlISjFibTVwYm1jZ2FXNGdjblZ1ZEdsdFpTMXZibXg1SUcxdlpHVW5YRzRnSUNBZ0lDQXBPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzh2SUVwMWMzUWdZV1JrSUhkaGRHVnlYRzRnSUd4bGRDQmpiMjUwWVdsdVpYSWdQU0I3WEc0Z0lDQWdjM1J5YVdOME9pQm1kVzVqZEdsdmJpaHZZbW9zSUc1aGJXVXNJR3h2WXlrZ2UxeHVJQ0FnSUNBZ2FXWWdLQ0Z2WW1vZ2ZId2dJU2h1WVcxbElHbHVJRzlpYWlrcElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVY0WTJWd2RHbHZiaWduWENJbklDc2dibUZ0WlNBcklDZGNJaUJ1YjNRZ1pHVm1hVzVsWkNCcGJpQW5JQ3NnYjJKcUxDQjdYRzRnSUNBZ0lDQWdJQ0FnYkc5ak9pQnNiMk5jYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCeVpYUjFjbTRnWTI5dWRHRnBibVZ5TG14dmIydDFjRkJ5YjNCbGNuUjVLRzlpYWl3Z2JtRnRaU2s3WEc0Z0lDQWdmU3hjYmlBZ0lDQnNiMjlyZFhCUWNtOXdaWEowZVRvZ1puVnVZM1JwYjI0b2NHRnlaVzUwTENCd2NtOXdaWEowZVU1aGJXVXBJSHRjYmlBZ0lDQWdJR3hsZENCeVpYTjFiSFFnUFNCd1lYSmxiblJiY0hKdmNHVnlkSGxPWVcxbFhUdGNiaUFnSUNBZ0lHbG1JQ2h5WlhOMWJIUWdQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6ZFd4ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2FXWWdLRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrdVkyRnNiQ2h3WVhKbGJuUXNJSEJ5YjNCbGNuUjVUbUZ0WlNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2FXWWdLSEpsYzNWc2RFbHpRV3hzYjNkbFpDaHlaWE4xYkhRc0lHTnZiblJoYVc1bGNpNXdjbTkwYjBGalkyVnpjME52Ym5SeWIyd3NJSEJ5YjNCbGNuUjVUbUZ0WlNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUhKbGRIVnliaUIxYm1SbFptbHVaV1E3WEc0Z0lDQWdmU3hjYmlBZ0lDQnNiMjlyZFhBNklHWjFibU4wYVc5dUtHUmxjSFJvY3l3Z2JtRnRaU2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdiR1Z1SUQwZ1pHVndkR2h6TG14bGJtZDBhRHRjYmlBZ0lDQWdJR1p2Y2lBb2JHVjBJR2tnUFNBd095QnBJRHdnYkdWdU95QnBLeXNwSUh0Y2JpQWdJQ0FnSUNBZ2JHVjBJSEpsYzNWc2RDQTlJR1JsY0hSb2MxdHBYU0FtSmlCamIyNTBZV2x1WlhJdWJHOXZhM1Z3VUhKdmNHVnlkSGtvWkdWd2RHaHpXMmxkTENCdVlXMWxLVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tISmxjM1ZzZENBaFBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUmxjSFJvYzF0cFhWdHVZVzFsWFR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc1hHNGdJQ0FnYkdGdFltUmhPaUJtZFc1amRHbHZiaWhqZFhKeVpXNTBMQ0JqYjI1MFpYaDBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkSGx3Wlc5bUlHTjFjbkpsYm5RZ1BUMDlJQ2RtZFc1amRHbHZiaWNnUHlCamRYSnlaVzUwTG1OaGJHd29ZMjl1ZEdWNGRDa2dPaUJqZFhKeVpXNTBPMXh1SUNBZ0lIMHNYRzVjYmlBZ0lDQmxjMk5oY0dWRmVIQnlaWE56YVc5dU9pQlZkR2xzY3k1bGMyTmhjR1ZGZUhCeVpYTnphVzl1TEZ4dUlDQWdJR2x1ZG05clpWQmhjblJwWVd3NklHbHVkbTlyWlZCaGNuUnBZV3hYY21Gd2NHVnlMRnh1WEc0Z0lDQWdabTQ2SUdaMWJtTjBhVzl1S0drcElIdGNiaUFnSUNBZ0lHeGxkQ0J5WlhRZ1BTQjBaVzF3YkdGMFpWTndaV05iYVYwN1hHNGdJQ0FnSUNCeVpYUXVaR1ZqYjNKaGRHOXlJRDBnZEdWdGNHeGhkR1ZUY0dWalcya2dLeUFuWDJRblhUdGNiaUFnSUNBZ0lISmxkSFZ5YmlCeVpYUTdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lIQnliMmR5WVcxek9pQmJYU3hjYmlBZ0lDQndjbTluY21GdE9pQm1kVzVqZEdsdmJpaHBMQ0JrWVhSaExDQmtaV05zWVhKbFpFSnNiMk5yVUdGeVlXMXpMQ0JpYkc5amExQmhjbUZ0Y3l3Z1pHVndkR2h6S1NCN1hHNGdJQ0FnSUNCc1pYUWdjSEp2WjNKaGJWZHlZWEJ3WlhJZ1BTQjBhR2x6TG5CeWIyZHlZVzF6VzJsZExGeHVJQ0FnSUNBZ0lDQm1iaUE5SUhSb2FYTXVabTRvYVNrN1hHNGdJQ0FnSUNCcFppQW9aR0YwWVNCOGZDQmtaWEIwYUhNZ2ZId2dZbXh2WTJ0UVlYSmhiWE1nZkh3Z1pHVmpiR0Z5WldSQ2JHOWphMUJoY21GdGN5a2dlMXh1SUNBZ0lDQWdJQ0J3Y205bmNtRnRWM0poY0hCbGNpQTlJSGR5WVhCUWNtOW5jbUZ0S0Z4dUlDQWdJQ0FnSUNBZ0lIUm9hWE1zWEc0Z0lDQWdJQ0FnSUNBZ2FTeGNiaUFnSUNBZ0lDQWdJQ0JtYml4Y2JpQWdJQ0FnSUNBZ0lDQmtZWFJoTEZ4dUlDQWdJQ0FnSUNBZ0lHUmxZMnhoY21Wa1FteHZZMnRRWVhKaGJYTXNYRzRnSUNBZ0lDQWdJQ0FnWW14dlkydFFZWEpoYlhNc1hHNGdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoelhHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLQ0Z3Y205bmNtRnRWM0poY0hCbGNpa2dlMXh1SUNBZ0lDQWdJQ0J3Y205bmNtRnRWM0poY0hCbGNpQTlJSFJvYVhNdWNISnZaM0poYlhOYmFWMGdQU0IzY21Gd1VISnZaM0poYlNoMGFHbHpMQ0JwTENCbWJpazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnlaWFIxY200Z2NISnZaM0poYlZkeVlYQndaWEk3WEc0Z0lDQWdmU3hjYmx4dUlDQWdJR1JoZEdFNklHWjFibU4wYVc5dUtIWmhiSFZsTENCa1pYQjBhQ2tnZTF4dUlDQWdJQ0FnZDJocGJHVWdLSFpoYkhWbElDWW1JR1JsY0hSb0xTMHBJSHRjYmlBZ0lDQWdJQ0FnZG1Gc2RXVWdQU0IyWVd4MVpTNWZjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2NtVjBkWEp1SUhaaGJIVmxPMXh1SUNBZ0lIMHNYRzRnSUNBZ2JXVnlaMlZKWms1bFpXUmxaRG9nWm5WdVkzUnBiMjRvY0dGeVlXMHNJR052YlcxdmJpa2dlMXh1SUNBZ0lDQWdiR1YwSUc5aWFpQTlJSEJoY21GdElIeDhJR052YlcxdmJqdGNibHh1SUNBZ0lDQWdhV1lnS0hCaGNtRnRJQ1ltSUdOdmJXMXZiaUFtSmlCd1lYSmhiU0FoUFQwZ1kyOXRiVzl1S1NCN1hHNGdJQ0FnSUNBZ0lHOWlhaUE5SUZWMGFXeHpMbVY0ZEdWdVpDaDdmU3dnWTI5dGJXOXVMQ0J3WVhKaGJTazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQnZZbW83WEc0Z0lDQWdmU3hjYmlBZ0lDQXZMeUJCYmlCbGJYQjBlU0J2WW1wbFkzUWdkRzhnZFhObElHRnpJSEpsY0d4aFkyVnRaVzUwSUdadmNpQnVkV3hzTFdOdmJuUmxlSFJ6WEc0Z0lDQWdiblZzYkVOdmJuUmxlSFE2SUU5aWFtVmpkQzV6WldGc0tIdDlLU3hjYmx4dUlDQWdJRzV2YjNBNklHVnVkaTVXVFM1dWIyOXdMRnh1SUNBZ0lHTnZiWEJwYkdWeVNXNW1iem9nZEdWdGNHeGhkR1ZUY0dWakxtTnZiWEJwYkdWeVhHNGdJSDA3WEc1Y2JpQWdablZ1WTNScGIyNGdjbVYwS0dOdmJuUmxlSFFzSUc5d2RHbHZibk1nUFNCN2ZTa2dlMXh1SUNBZ0lHeGxkQ0JrWVhSaElEMGdiM0IwYVc5dWN5NWtZWFJoTzF4dVhHNGdJQ0FnY21WMExsOXpaWFIxY0NodmNIUnBiMjV6S1R0Y2JpQWdJQ0JwWmlBb0lXOXdkR2x2Ym5NdWNHRnlkR2xoYkNBbUppQjBaVzF3YkdGMFpWTndaV011ZFhObFJHRjBZU2tnZTF4dUlDQWdJQ0FnWkdGMFlTQTlJR2x1YVhSRVlYUmhLR052Ym5SbGVIUXNJR1JoZEdFcE8xeHVJQ0FnSUgxY2JpQWdJQ0JzWlhRZ1pHVndkR2h6TEZ4dUlDQWdJQ0FnWW14dlkydFFZWEpoYlhNZ1BTQjBaVzF3YkdGMFpWTndaV011ZFhObFFteHZZMnRRWVhKaGJYTWdQeUJiWFNBNklIVnVaR1ZtYVc1bFpEdGNiaUFnSUNCcFppQW9kR1Z0Y0d4aGRHVlRjR1ZqTG5WelpVUmxjSFJvY3lrZ2UxeHVJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTXVaR1Z3ZEdoektTQjdYRzRnSUNBZ0lDQWdJR1JsY0hSb2N5QTlYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQ0FoUFNCdmNIUnBiMjV6TG1SbGNIUm9jMXN3WFZ4dUlDQWdJQ0FnSUNBZ0lDQWdQeUJiWTI5dWRHVjRkRjB1WTI5dVkyRjBLRzl3ZEdsdmJuTXVaR1Z3ZEdoektWeHVJQ0FnSUNBZ0lDQWdJQ0FnT2lCdmNIUnBiMjV6TG1SbGNIUm9jenRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJR1JsY0hSb2N5QTlJRnRqYjI1MFpYaDBYVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQnRZV2x1S0dOdmJuUmxlSFFnTHlvc0lHOXdkR2x2Ym5NcUx5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlDaGNiaUFnSUNBZ0lDQWdKeWNnSzF4dUlDQWdJQ0FnSUNCMFpXMXdiR0YwWlZOd1pXTXViV0ZwYmloY2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWVdsdVpYSXNYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQ3hjYmlBZ0lDQWdJQ0FnSUNCamIyNTBZV2x1WlhJdWFHVnNjR1Z5Y3l4Y2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWVdsdVpYSXVjR0Z5ZEdsaGJITXNYRzRnSUNBZ0lDQWdJQ0FnWkdGMFlTeGNiaUFnSUNBZ0lDQWdJQ0JpYkc5amExQmhjbUZ0Y3l4Y2JpQWdJQ0FnSUNBZ0lDQmtaWEIwYUhOY2JpQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCdFlXbHVJRDBnWlhobFkzVjBaVVJsWTI5eVlYUnZjbk1vWEc0Z0lDQWdJQ0IwWlcxd2JHRjBaVk53WldNdWJXRnBiaXhjYmlBZ0lDQWdJRzFoYVc0c1hHNGdJQ0FnSUNCamIyNTBZV2x1WlhJc1hHNGdJQ0FnSUNCdmNIUnBiMjV6TG1SbGNIUm9jeUI4ZkNCYlhTeGNiaUFnSUNBZ0lHUmhkR0VzWEc0Z0lDQWdJQ0JpYkc5amExQmhjbUZ0YzF4dUlDQWdJQ2s3WEc0Z0lDQWdjbVYwZFhKdUlHMWhhVzRvWTI5dWRHVjRkQ3dnYjNCMGFXOXVjeWs3WEc0Z0lIMWNibHh1SUNCeVpYUXVhWE5VYjNBZ1BTQjBjblZsTzF4dVhHNGdJSEpsZEM1ZmMyVjBkWEFnUFNCbWRXNWpkR2x2YmlodmNIUnBiMjV6S1NCN1hHNGdJQ0FnYVdZZ0tDRnZjSFJwYjI1ekxuQmhjblJwWVd3cElIdGNiaUFnSUNBZ0lHeGxkQ0J0WlhKblpXUklaV3h3WlhKeklEMGdWWFJwYkhNdVpYaDBaVzVrS0h0OUxDQmxibll1YUdWc2NHVnljeXdnYjNCMGFXOXVjeTVvWld4d1pYSnpLVHRjYmlBZ0lDQWdJSGR5WVhCSVpXeHdaWEp6Vkc5UVlYTnpURzl2YTNWd1VISnZjR1Z5ZEhrb2JXVnlaMlZrU0dWc2NHVnljeXdnWTI5dWRHRnBibVZ5S1R0Y2JpQWdJQ0FnSUdOdmJuUmhhVzVsY2k1b1pXeHdaWEp6SUQwZ2JXVnlaMlZrU0dWc2NHVnljenRjYmx4dUlDQWdJQ0FnYVdZZ0tIUmxiWEJzWVhSbFUzQmxZeTUxYzJWUVlYSjBhV0ZzS1NCN1hHNGdJQ0FnSUNBZ0lDOHZJRlZ6WlNCdFpYSm5aVWxtVG1WbFpHVmtJR2hsY21VZ2RHOGdjSEpsZG1WdWRDQmpiMjF3YVd4cGJtY2daMnh2WW1Gc0lIQmhjblJwWVd4eklHMTFiSFJwY0d4bElIUnBiV1Z6WEc0Z0lDQWdJQ0FnSUdOdmJuUmhhVzVsY2k1d1lYSjBhV0ZzY3lBOUlHTnZiblJoYVc1bGNpNXRaWEpuWlVsbVRtVmxaR1ZrS0Z4dUlDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NdWNHRnlkR2xoYkhNc1hHNGdJQ0FnSUNBZ0lDQWdaVzUyTG5CaGNuUnBZV3h6WEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCcFppQW9kR1Z0Y0d4aGRHVlRjR1ZqTG5WelpWQmhjblJwWVd3Z2ZId2dkR1Z0Y0d4aGRHVlRjR1ZqTG5WelpVUmxZMjl5WVhSdmNuTXBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHRnBibVZ5TG1SbFkyOXlZWFJ2Y25NZ1BTQlZkR2xzY3k1bGVIUmxibVFvWEc0Z0lDQWdJQ0FnSUNBZ2UzMHNYRzRnSUNBZ0lDQWdJQ0FnWlc1MkxtUmxZMjl5WVhSdmNuTXNYRzRnSUNBZ0lDQWdJQ0FnYjNCMGFXOXVjeTVrWldOdmNtRjBiM0p6WEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHTnZiblJoYVc1bGNpNW9iMjlyY3lBOUlIdDlPMXh1SUNBZ0lDQWdZMjl1ZEdGcGJtVnlMbkJ5YjNSdlFXTmpaWE56UTI5dWRISnZiQ0E5SUdOeVpXRjBaVkJ5YjNSdlFXTmpaWE56UTI5dWRISnZiQ2h2Y0hScGIyNXpLVHRjYmx4dUlDQWdJQ0FnYkdWMElHdGxaWEJJWld4d1pYSkpia2hsYkhCbGNuTWdQVnh1SUNBZ0lDQWdJQ0J2Y0hScGIyNXpMbUZzYkc5M1EyRnNiSE5VYjBobGJIQmxjazFwYzNOcGJtY2dmSHhjYmlBZ0lDQWdJQ0FnZEdWdGNHeGhkR1ZYWVhOUWNtVmpiMjF3YVd4bFpGZHBkR2hEYjIxd2FXeGxjbFkzTzF4dUlDQWdJQ0FnYlc5MlpVaGxiSEJsY2xSdlNHOXZhM01vWTI5dWRHRnBibVZ5TENBbmFHVnNjR1Z5VFdsemMybHVaeWNzSUd0bFpYQklaV3h3WlhKSmJraGxiSEJsY25NcE8xeHVJQ0FnSUNBZ2JXOTJaVWhsYkhCbGNsUnZTRzl2YTNNb1kyOXVkR0ZwYm1WeUxDQW5ZbXh2WTJ0SVpXeHdaWEpOYVhOemFXNW5KeXdnYTJWbGNFaGxiSEJsY2tsdVNHVnNjR1Z5Y3lrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJR052Ym5SaGFXNWxjaTV3Y205MGIwRmpZMlZ6YzBOdmJuUnliMndnUFNCdmNIUnBiMjV6TG5CeWIzUnZRV05qWlhOelEyOXVkSEp2YkRzZ0x5OGdhVzUwWlhKdVlXd2diM0IwYVc5dVhHNGdJQ0FnSUNCamIyNTBZV2x1WlhJdWFHVnNjR1Z5Y3lBOUlHOXdkR2x2Ym5NdWFHVnNjR1Z5Y3p0Y2JpQWdJQ0FnSUdOdmJuUmhhVzVsY2k1d1lYSjBhV0ZzY3lBOUlHOXdkR2x2Ym5NdWNHRnlkR2xoYkhNN1hHNGdJQ0FnSUNCamIyNTBZV2x1WlhJdVpHVmpiM0poZEc5eWN5QTlJRzl3ZEdsdmJuTXVaR1ZqYjNKaGRHOXljenRjYmlBZ0lDQWdJR052Ym5SaGFXNWxjaTVvYjI5cmN5QTlJRzl3ZEdsdmJuTXVhRzl2YTNNN1hHNGdJQ0FnZlZ4dUlDQjlPMXh1WEc0Z0lISmxkQzVmWTJocGJHUWdQU0JtZFc1amRHbHZiaWhwTENCa1lYUmhMQ0JpYkc5amExQmhjbUZ0Y3l3Z1pHVndkR2h6S1NCN1hHNGdJQ0FnYVdZZ0tIUmxiWEJzWVhSbFUzQmxZeTUxYzJWQ2JHOWphMUJoY21GdGN5QW1KaUFoWW14dlkydFFZWEpoYlhNcElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZlR05sY0hScGIyNG9KMjExYzNRZ2NHRnpjeUJpYkc5amF5QndZWEpoYlhNbktUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIUmxiWEJzWVhSbFUzQmxZeTUxYzJWRVpYQjBhSE1nSmlZZ0lXUmxjSFJvY3lrZ2UxeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVjRZMlZ3ZEdsdmJpZ25iWFZ6ZENCd1lYTnpJSEJoY21WdWRDQmtaWEIwYUhNbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnZDNKaGNGQnliMmR5WVcwb1hHNGdJQ0FnSUNCamIyNTBZV2x1WlhJc1hHNGdJQ0FnSUNCcExGeHVJQ0FnSUNBZ2RHVnRjR3hoZEdWVGNHVmpXMmxkTEZ4dUlDQWdJQ0FnWkdGMFlTeGNiaUFnSUNBZ0lEQXNYRzRnSUNBZ0lDQmliRzlqYTFCaGNtRnRjeXhjYmlBZ0lDQWdJR1JsY0hSb2MxeHVJQ0FnSUNrN1hHNGdJSDA3WEc0Z0lISmxkSFZ5YmlCeVpYUTdYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCM2NtRndVSEp2WjNKaGJTaGNiaUFnWTI5dWRHRnBibVZ5TEZ4dUlDQnBMRnh1SUNCbWJpeGNiaUFnWkdGMFlTeGNiaUFnWkdWamJHRnlaV1JDYkc5amExQmhjbUZ0Y3l4Y2JpQWdZbXh2WTJ0UVlYSmhiWE1zWEc0Z0lHUmxjSFJvYzF4dUtTQjdYRzRnSUdaMWJtTjBhVzl1SUhCeWIyY29ZMjl1ZEdWNGRDd2diM0IwYVc5dWN5QTlJSHQ5S1NCN1hHNGdJQ0FnYkdWMElHTjFjbkpsYm5SRVpYQjBhSE1nUFNCa1pYQjBhSE03WEc0Z0lDQWdhV1lnS0Z4dUlDQWdJQ0FnWkdWd2RHaHpJQ1ltWEc0Z0lDQWdJQ0JqYjI1MFpYaDBJQ0U5SUdSbGNIUm9jMXN3WFNBbUpseHVJQ0FnSUNBZ0lTaGpiMjUwWlhoMElEMDlQU0JqYjI1MFlXbHVaWEl1Ym5Wc2JFTnZiblJsZUhRZ0ppWWdaR1Z3ZEdoeld6QmRJRDA5UFNCdWRXeHNLVnh1SUNBZ0lDa2dlMXh1SUNBZ0lDQWdZM1Z5Y21WdWRFUmxjSFJvY3lBOUlGdGpiMjUwWlhoMFhTNWpiMjVqWVhRb1pHVndkR2h6S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdabTRvWEc0Z0lDQWdJQ0JqYjI1MFlXbHVaWElzWEc0Z0lDQWdJQ0JqYjI1MFpYaDBMRnh1SUNBZ0lDQWdZMjl1ZEdGcGJtVnlMbWhsYkhCbGNuTXNYRzRnSUNBZ0lDQmpiMjUwWVdsdVpYSXVjR0Z5ZEdsaGJITXNYRzRnSUNBZ0lDQnZjSFJwYjI1ekxtUmhkR0VnZkh3Z1pHRjBZU3hjYmlBZ0lDQWdJR0pzYjJOclVHRnlZVzF6SUNZbUlGdHZjSFJwYjI1ekxtSnNiMk5yVUdGeVlXMXpYUzVqYjI1allYUW9ZbXh2WTJ0UVlYSmhiWE1wTEZ4dUlDQWdJQ0FnWTNWeWNtVnVkRVJsY0hSb2MxeHVJQ0FnSUNrN1hHNGdJSDFjYmx4dUlDQndjbTluSUQwZ1pYaGxZM1YwWlVSbFkyOXlZWFJ2Y25Nb1ptNHNJSEJ5YjJjc0lHTnZiblJoYVc1bGNpd2daR1Z3ZEdoekxDQmtZWFJoTENCaWJHOWphMUJoY21GdGN5azdYRzVjYmlBZ2NISnZaeTV3Y205bmNtRnRJRDBnYVR0Y2JpQWdjSEp2Wnk1a1pYQjBhQ0E5SUdSbGNIUm9jeUEvSUdSbGNIUm9jeTVzWlc1bmRHZ2dPaUF3TzF4dUlDQndjbTluTG1Kc2IyTnJVR0Z5WVcxeklEMGdaR1ZqYkdGeVpXUkNiRzlqYTFCaGNtRnRjeUI4ZkNBd08xeHVJQ0J5WlhSMWNtNGdjSEp2Wnp0Y2JuMWNibHh1THlvcVhHNGdLaUJVYUdseklHbHpJR04xY25KbGJuUnNlU0J3WVhKMElHOW1JSFJvWlNCdlptWnBZMmxoYkNCQlVFa3NJSFJvWlhKbFptOXlaU0JwYlhCc1pXMWxiblJoZEdsdmJpQmtaWFJoYVd4eklITm9iM1ZzWkNCdWIzUWdZbVVnWTJoaGJtZGxaQzVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlISmxjMjlzZG1WUVlYSjBhV0ZzS0hCaGNuUnBZV3dzSUdOdmJuUmxlSFFzSUc5d2RHbHZibk1wSUh0Y2JpQWdhV1lnS0NGd1lYSjBhV0ZzS1NCN1hHNGdJQ0FnYVdZZ0tHOXdkR2x2Ym5NdWJtRnRaU0E5UFQwZ0owQndZWEowYVdGc0xXSnNiMk5ySnlrZ2UxeHVJQ0FnSUNBZ2NHRnlkR2xoYkNBOUlHOXdkR2x2Ym5NdVpHRjBZVnNuY0dGeWRHbGhiQzFpYkc5amF5ZGRPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCd1lYSjBhV0ZzSUQwZ2IzQjBhVzl1Y3k1d1lYSjBhV0ZzYzF0dmNIUnBiMjV6TG01aGJXVmRPMXh1SUNBZ0lIMWNiaUFnZlNCbGJITmxJR2xtSUNnaGNHRnlkR2xoYkM1allXeHNJQ1ltSUNGdmNIUnBiMjV6TG01aGJXVXBJSHRjYmlBZ0lDQXZMeUJVYUdseklHbHpJR0VnWkhsdVlXMXBZeUJ3WVhKMGFXRnNJSFJvWVhRZ2NtVjBkWEp1WldRZ1lTQnpkSEpwYm1kY2JpQWdJQ0J2Y0hScGIyNXpMbTVoYldVZ1BTQndZWEowYVdGc08xeHVJQ0FnSUhCaGNuUnBZV3dnUFNCdmNIUnBiMjV6TG5CaGNuUnBZV3h6VzNCaGNuUnBZV3hkTzF4dUlDQjlYRzRnSUhKbGRIVnliaUJ3WVhKMGFXRnNPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2FXNTJiMnRsVUdGeWRHbGhiQ2h3WVhKMGFXRnNMQ0JqYjI1MFpYaDBMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDOHZJRlZ6WlNCMGFHVWdZM1Z5Y21WdWRDQmpiRzl6ZFhKbElHTnZiblJsZUhRZ2RHOGdjMkYyWlNCMGFHVWdjR0Z5ZEdsaGJDMWliRzlqYXlCcFppQjBhR2x6SUhCaGNuUnBZV3hjYmlBZ1kyOXVjM1FnWTNWeWNtVnVkRkJoY25ScFlXeENiRzlqYXlBOUlHOXdkR2x2Ym5NdVpHRjBZU0FtSmlCdmNIUnBiMjV6TG1SaGRHRmJKM0JoY25ScFlXd3RZbXh2WTJzblhUdGNiaUFnYjNCMGFXOXVjeTV3WVhKMGFXRnNJRDBnZEhKMVpUdGNiaUFnYVdZZ0tHOXdkR2x2Ym5NdWFXUnpLU0I3WEc0Z0lDQWdiM0IwYVc5dWN5NWtZWFJoTG1OdmJuUmxlSFJRWVhSb0lEMGdiM0IwYVc5dWN5NXBaSE5iTUYwZ2ZId2diM0IwYVc5dWN5NWtZWFJoTG1OdmJuUmxlSFJRWVhSb08xeHVJQ0I5WEc1Y2JpQWdiR1YwSUhCaGNuUnBZV3hDYkc5amF6dGNiaUFnYVdZZ0tHOXdkR2x2Ym5NdVptNGdKaVlnYjNCMGFXOXVjeTVtYmlBaFBUMGdibTl2Y0NrZ2UxeHVJQ0FnSUc5d2RHbHZibk11WkdGMFlTQTlJR055WldGMFpVWnlZVzFsS0c5d2RHbHZibk11WkdGMFlTazdYRzRnSUNBZ0x5OGdWM0poY0hCbGNpQm1kVzVqZEdsdmJpQjBieUJuWlhRZ1lXTmpaWE56SUhSdklHTjFjbkpsYm5SUVlYSjBhV0ZzUW14dlkyc2dabkp2YlNCMGFHVWdZMnh2YzNWeVpWeHVJQ0FnSUd4bGRDQm1iaUE5SUc5d2RHbHZibk11Wm00N1hHNGdJQ0FnY0dGeWRHbGhiRUpzYjJOcklEMGdiM0IwYVc5dWN5NWtZWFJoV3lkd1lYSjBhV0ZzTFdKc2IyTnJKMTBnUFNCbWRXNWpkR2x2YmlCd1lYSjBhV0ZzUW14dlkydFhjbUZ3Y0dWeUtGeHVJQ0FnSUNBZ1kyOXVkR1Y0ZEN4Y2JpQWdJQ0FnSUc5d2RHbHZibk1nUFNCN2ZWeHVJQ0FnSUNrZ2UxeHVJQ0FnSUNBZ0x5OGdVbVZ6ZEc5eVpTQjBhR1VnY0dGeWRHbGhiQzFpYkc5amF5Qm1jbTl0SUhSb1pTQmpiRzl6ZFhKbElHWnZjaUIwYUdVZ1pYaGxZM1YwYVc5dUlHOW1JSFJvWlNCaWJHOWphMXh1SUNBZ0lDQWdMeThnYVM1bExpQjBhR1VnY0dGeWRDQnBibk5wWkdVZ2RHaGxJR0pzYjJOcklHOW1JSFJvWlNCd1lYSjBhV0ZzSUdOaGJHd3VYRzRnSUNBZ0lDQnZjSFJwYjI1ekxtUmhkR0VnUFNCamNtVmhkR1ZHY21GdFpTaHZjSFJwYjI1ekxtUmhkR0VwTzF4dUlDQWdJQ0FnYjNCMGFXOXVjeTVrWVhSaFd5ZHdZWEowYVdGc0xXSnNiMk5ySjEwZ1BTQmpkWEp5Wlc1MFVHRnlkR2xoYkVKc2IyTnJPMXh1SUNBZ0lDQWdjbVYwZFhKdUlHWnVLR052Ym5SbGVIUXNJRzl3ZEdsdmJuTXBPMXh1SUNBZ0lIMDdYRzRnSUNBZ2FXWWdLR1p1TG5CaGNuUnBZV3h6S1NCN1hHNGdJQ0FnSUNCdmNIUnBiMjV6TG5CaGNuUnBZV3h6SUQwZ1ZYUnBiSE11WlhoMFpXNWtLSHQ5TENCdmNIUnBiMjV6TG5CaGNuUnBZV3h6TENCbWJpNXdZWEowYVdGc2N5azdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdhV1lnS0hCaGNuUnBZV3dnUFQwOUlIVnVaR1ZtYVc1bFpDQW1KaUJ3WVhKMGFXRnNRbXh2WTJzcElIdGNiaUFnSUNCd1lYSjBhV0ZzSUQwZ2NHRnlkR2xoYkVKc2IyTnJPMXh1SUNCOVhHNWNiaUFnYVdZZ0tIQmhjblJwWVd3Z1BUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJSFJvY205M0lHNWxkeUJGZUdObGNIUnBiMjRvSjFSb1pTQndZWEowYVdGc0lDY2dLeUJ2Y0hScGIyNXpMbTVoYldVZ0t5QW5JR052ZFd4a0lHNXZkQ0JpWlNCbWIzVnVaQ2NwTzF4dUlDQjlJR1ZzYzJVZ2FXWWdLSEJoY25ScFlXd2dhVzV6ZEdGdVkyVnZaaUJHZFc1amRHbHZiaWtnZTF4dUlDQWdJSEpsZEhWeWJpQndZWEowYVdGc0tHTnZiblJsZUhRc0lHOXdkR2x2Ym5NcE8xeHVJQ0I5WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnViMjl3S0NrZ2UxeHVJQ0J5WlhSMWNtNGdKeWM3WEc1OVhHNWNibVoxYm1OMGFXOXVJR2x1YVhSRVlYUmhLR052Ym5SbGVIUXNJR1JoZEdFcElIdGNiaUFnYVdZZ0tDRmtZWFJoSUh4OElDRW9KM0p2YjNRbklHbHVJR1JoZEdFcEtTQjdYRzRnSUNBZ1pHRjBZU0E5SUdSaGRHRWdQeUJqY21WaGRHVkdjbUZ0WlNoa1lYUmhLU0E2SUh0OU8xeHVJQ0FnSUdSaGRHRXVjbTl2ZENBOUlHTnZiblJsZUhRN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUdSaGRHRTdYRzU5WEc1Y2JtWjFibU4wYVc5dUlHVjRaV04xZEdWRVpXTnZjbUYwYjNKektHWnVMQ0J3Y205bkxDQmpiMjUwWVdsdVpYSXNJR1JsY0hSb2N5d2daR0YwWVN3Z1lteHZZMnRRWVhKaGJYTXBJSHRjYmlBZ2FXWWdLR1p1TG1SbFkyOXlZWFJ2Y2lrZ2UxeHVJQ0FnSUd4bGRDQndjbTl3Y3lBOUlIdDlPMXh1SUNBZ0lIQnliMmNnUFNCbWJpNWtaV052Y21GMGIzSW9YRzRnSUNBZ0lDQndjbTluTEZ4dUlDQWdJQ0FnY0hKdmNITXNYRzRnSUNBZ0lDQmpiMjUwWVdsdVpYSXNYRzRnSUNBZ0lDQmtaWEIwYUhNZ0ppWWdaR1Z3ZEdoeld6QmRMRnh1SUNBZ0lDQWdaR0YwWVN4Y2JpQWdJQ0FnSUdKc2IyTnJVR0Z5WVcxekxGeHVJQ0FnSUNBZ1pHVndkR2h6WEc0Z0lDQWdLVHRjYmlBZ0lDQlZkR2xzY3k1bGVIUmxibVFvY0hKdlp5d2djSEp2Y0hNcE8xeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCd2NtOW5PMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQjNjbUZ3U0dWc2NHVnljMVJ2VUdGemMweHZiMnQxY0ZCeWIzQmxjblI1S0cxbGNtZGxaRWhsYkhCbGNuTXNJR052Ym5SaGFXNWxjaWtnZTF4dUlDQlBZbXBsWTNRdWEyVjVjeWh0WlhKblpXUklaV3h3WlhKektTNW1iM0pGWVdOb0tHaGxiSEJsY2s1aGJXVWdQVDRnZTF4dUlDQWdJR3hsZENCb1pXeHdaWElnUFNCdFpYSm5aV1JJWld4d1pYSnpXMmhsYkhCbGNrNWhiV1ZkTzF4dUlDQWdJRzFsY21kbFpFaGxiSEJsY25OYmFHVnNjR1Z5VG1GdFpWMGdQU0J3WVhOelRHOXZhM1Z3VUhKdmNHVnlkSGxQY0hScGIyNG9hR1ZzY0dWeUxDQmpiMjUwWVdsdVpYSXBPMXh1SUNCOUtUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z2NHRnpjMHh2YjJ0MWNGQnliM0JsY25SNVQzQjBhVzl1S0dobGJIQmxjaXdnWTI5dWRHRnBibVZ5S1NCN1hHNGdJR052Ym5OMElHeHZiMnQxY0ZCeWIzQmxjblI1SUQwZ1kyOXVkR0ZwYm1WeUxteHZiMnQxY0ZCeWIzQmxjblI1TzF4dUlDQnlaWFIxY200Z2QzSmhjRWhsYkhCbGNpaG9aV3h3WlhJc0lHOXdkR2x2Ym5NZ1BUNGdlMXh1SUNBZ0lISmxkSFZ5YmlCVmRHbHNjeTVsZUhSbGJtUW9leUJzYjI5cmRYQlFjbTl3WlhKMGVTQjlMQ0J2Y0hScGIyNXpLVHRjYmlBZ2ZTazdYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMud3JhcEhlbHBlciA9IHdyYXBIZWxwZXI7XG5cbmZ1bmN0aW9uIHdyYXBIZWxwZXIoaGVscGVyLCB0cmFuc2Zvcm1PcHRpb25zRm4pIHtcbiAgaWYgKHR5cGVvZiBoZWxwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCBidXQgYXBwYXJlbnRseSBpdCBkb2VzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS93eWNhdHMvaGFuZGxlYmFycy5qcy9pc3N1ZXMvMTYzOVxuICAgIC8vIFdlIHRyeSB0byBtYWtlIHRoZSB3cmFwcGVyIGxlYXN0LWludmFzaXZlIGJ5IG5vdCB3cmFwcGluZyBpdCwgaWYgdGhlIGhlbHBlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAgICByZXR1cm4gaGVscGVyO1xuICB9XG4gIHZhciB3cmFwcGVyID0gZnVuY3Rpb24gd3JhcHBlcigpIC8qIGR5bmFtaWMgYXJndW1lbnRzICove1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID0gdHJhbnNmb3JtT3B0aW9uc0ZuKG9wdGlvbnMpO1xuICAgIHJldHVybiBoZWxwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMmx1ZEdWeWJtRnNMM2R5WVhCSVpXeHdaWEl1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdRVUZCVHl4VFFVRlRMRlZCUVZVc1EwRkJReXhOUVVGTkxFVkJRVVVzYTBKQlFXdENMRVZCUVVVN1FVRkRja1FzVFVGQlNTeFBRVUZQTEUxQlFVMHNTMEZCU3l4VlFVRlZMRVZCUVVVN096dEJRVWRvUXl4WFFVRlBMRTFCUVUwc1EwRkJRenRIUVVObU8wRkJRMFFzVFVGQlNTeFBRVUZQTEVkQlFVY3NVMEZCVml4UFFVRlBMREJDUVVGeFF6dEJRVU01UXl4UlFVRk5MRTlCUVU4c1IwRkJSeXhUUVVGVExFTkJRVU1zVTBGQlV5eERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOb1JDeGhRVUZUTEVOQlFVTXNVMEZCVXl4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFTkJRVU1zUjBGQlJ5eHJRa0ZCYTBJc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU01UkN4WFFVRlBMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTEZOQlFWTXNRMEZCUXl4RFFVRkRPMGRCUTNSRExFTkJRVU03UVVGRFJpeFRRVUZQTEU5QlFVOHNRMEZCUXp0RFFVTm9RaUlzSW1acGJHVWlPaUozY21Gd1NHVnNjR1Z5TG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2laWGh3YjNKMElHWjFibU4wYVc5dUlIZHlZWEJJWld4d1pYSW9hR1ZzY0dWeUxDQjBjbUZ1YzJadmNtMVBjSFJwYjI1elJtNHBJSHRjYmlBZ2FXWWdLSFI1Y0dWdlppQm9aV3h3WlhJZ0lUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0F2THlCVWFHbHpJSE5vYjNWc1pDQnViM1FnYUdGd2NHVnVMQ0JpZFhRZ1lYQndZWEpsYm5Sc2VTQnBkQ0JrYjJWeklHbHVJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkzZVdOaGRITXZhR0Z1Wkd4bFltRnljeTVxY3k5cGMzTjFaWE12TVRZek9WeHVJQ0FnSUM4dklGZGxJSFJ5ZVNCMGJ5QnRZV3RsSUhSb1pTQjNjbUZ3Y0dWeUlHeGxZWE4wTFdsdWRtRnphWFpsSUdKNUlHNXZkQ0IzY21Gd2NHbHVaeUJwZEN3Z2FXWWdkR2hsSUdobGJIQmxjaUJwY3lCdWIzUWdZU0JtZFc1amRHbHZiaTVjYmlBZ0lDQnlaWFIxY200Z2FHVnNjR1Z5TzF4dUlDQjlYRzRnSUd4bGRDQjNjbUZ3Y0dWeUlEMGdablZ1WTNScGIyNG9MeW9nWkhsdVlXMXBZeUJoY21kMWJXVnVkSE1nS2k4cElIdGNiaUFnSUNCamIyNXpkQ0J2Y0hScGIyNXpJRDBnWVhKbmRXMWxiblJ6VzJGeVozVnRaVzUwY3k1c1pXNW5kR2dnTFNBeFhUdGNiaUFnSUNCaGNtZDFiV1Z1ZEhOYllYSm5kVzFsYm5SekxteGxibWQwYUNBdElERmRJRDBnZEhKaGJuTm1iM0p0VDNCMGFXOXVjMFp1S0c5d2RHbHZibk1wTzF4dUlDQWdJSEpsZEhWeWJpQm9aV3h3WlhJdVlYQndiSGtvZEdocGN5d2dZWEpuZFcxbGJuUnpLVHRjYmlBZ2ZUdGNiaUFnY21WMGRYSnVJSGR5WVhCd1pYSTdYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMucGFyc2VXaXRob3V0UHJvY2Vzc2luZyA9IHBhcnNlV2l0aG91dFByb2Nlc3Npbmc7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gbmV3T2JqWydkZWZhdWx0J10gPSBvYmo7IHJldHVybiBuZXdPYmo7IH0gfVxuXG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfcGFyc2VyID0gcmVxdWlyZSgnLi9wYXJzZXInKTtcblxudmFyIF9wYXJzZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VyKTtcblxudmFyIF93aGl0ZXNwYWNlQ29udHJvbCA9IHJlcXVpcmUoJy4vd2hpdGVzcGFjZS1jb250cm9sJyk7XG5cbnZhciBfd2hpdGVzcGFjZUNvbnRyb2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2hpdGVzcGFjZUNvbnRyb2wpO1xuXG52YXIgX2hlbHBlcnMgPSByZXF1aXJlKCcuL2hlbHBlcnMnKTtcblxudmFyIEhlbHBlcnMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaGVscGVycyk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5leHBvcnRzLnBhcnNlciA9IF9wYXJzZXIyWydkZWZhdWx0J107XG5cbnZhciB5eSA9IHt9O1xuX3V0aWxzLmV4dGVuZCh5eSwgSGVscGVycyk7XG5cbmZ1bmN0aW9uIHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpIHtcbiAgLy8gSnVzdCByZXR1cm4gaWYgYW4gYWxyZWFkeS1jb21waWxlZCBBU1Qgd2FzIHBhc3NlZCBpbi5cbiAgaWYgKGlucHV0LnR5cGUgPT09ICdQcm9ncmFtJykge1xuICAgIHJldHVybiBpbnB1dDtcbiAgfVxuXG4gIF9wYXJzZXIyWydkZWZhdWx0J10ueXkgPSB5eTtcblxuICAvLyBBbHRlcmluZyB0aGUgc2hhcmVkIG9iamVjdCBoZXJlLCBidXQgdGhpcyBpcyBvayBhcyBwYXJzZXIgaXMgYSBzeW5jIG9wZXJhdGlvblxuICB5eS5sb2NJbmZvID0gZnVuY3Rpb24gKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICB2YXIgYXN0ID0gX3BhcnNlcjJbJ2RlZmF1bHQnXS5wYXJzZShpbnB1dCk7XG5cbiAgcmV0dXJuIGFzdDtcbn1cblxuZnVuY3Rpb24gcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgdmFyIGFzdCA9IHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpO1xuICB2YXIgc3RyaXAgPSBuZXcgX3doaXRlc3BhY2VDb250cm9sMlsnZGVmYXVsdCddKG9wdGlvbnMpO1xuXG4gIHJldHVybiBzdHJpcC5hY2NlcHQoYXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwySmhjMlV1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdPenM3T3pzN096dHpRa0ZCYlVJc1ZVRkJWVHM3T3p0cFEwRkRReXh6UWtGQmMwSTdPenM3ZFVKQlF6TkNMRmRCUVZjN08wbEJRWGhDTEU5QlFVODdPM0ZDUVVOSkxGVkJRVlU3TzFGQlJYaENMRTFCUVUwN08wRkJSV1lzU1VGQlNTeEZRVUZGTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTFvc1kwRkJUeXhGUVVGRkxFVkJRVVVzVDBGQlR5eERRVUZETEVOQlFVTTdPMEZCUldJc1UwRkJVeXh6UWtGQmMwSXNRMEZCUXl4TFFVRkxMRVZCUVVVc1QwRkJUeXhGUVVGRk96dEJRVVZ5UkN4TlFVRkpMRXRCUVVzc1EwRkJReXhKUVVGSkxFdEJRVXNzVTBGQlV5eEZRVUZGTzBGQlF6VkNMRmRCUVU4c1MwRkJTeXhEUVVGRE8wZEJRMlE3TzBGQlJVUXNjMEpCUVU4c1JVRkJSU3hIUVVGSExFVkJRVVVzUTBGQlF6czdPMEZCUjJZc1NVRkJSU3hEUVVGRExFOUJRVThzUjBGQlJ5eFZRVUZUTEU5QlFVOHNSVUZCUlR0QlFVTTNRaXhYUVVGUExFbEJRVWtzUlVGQlJTeERRVUZETEdOQlFXTXNRMEZCUXl4UFFVRlBMRWxCUVVrc1QwRkJUeXhEUVVGRExFOUJRVThzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0SFFVTnVSU3hEUVVGRE96dEJRVVZHTEUxQlFVa3NSMEZCUnl4SFFVRkhMRzlDUVVGUExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXpzN1FVRkZPVUlzVTBGQlR5eEhRVUZITEVOQlFVTTdRMEZEV2pzN1FVRkZUU3hUUVVGVExFdEJRVXNzUTBGQlF5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZPMEZCUTNCRExFMUJRVWtzUjBGQlJ5eEhRVUZITEhOQ1FVRnpRaXhEUVVGRExFdEJRVXNzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0QlFVTnFSQ3hOUVVGSkxFdEJRVXNzUjBGQlJ5eHRRMEZCYzBJc1QwRkJUeXhEUVVGRExFTkJRVU03TzBGQlJUTkRMRk5CUVU4c1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0RFFVTXhRaUlzSW1acGJHVWlPaUppWVhObExtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpYVcxd2IzSjBJSEJoY25ObGNpQm1jbTl0SUNjdUwzQmhjbk5sY2ljN1hHNXBiWEJ2Y25RZ1YyaHBkR1Z6Y0dGalpVTnZiblJ5YjJ3Z1puSnZiU0FuTGk5M2FHbDBaWE53WVdObExXTnZiblJ5YjJ3bk8xeHVhVzF3YjNKMElDb2dZWE1nU0dWc2NHVnljeUJtY205dElDY3VMMmhsYkhCbGNuTW5PMXh1YVcxd2IzSjBJSHNnWlhoMFpXNWtJSDBnWm5KdmJTQW5MaTR2ZFhScGJITW5PMXh1WEc1bGVIQnZjblFnZXlCd1lYSnpaWElnZlR0Y2JseHViR1YwSUhsNUlEMGdlMzA3WEc1bGVIUmxibVFvZVhrc0lFaGxiSEJsY25NcE8xeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjR0Z5YzJWWGFYUm9iM1YwVUhKdlkyVnpjMmx1WnlocGJuQjFkQ3dnYjNCMGFXOXVjeWtnZTF4dUlDQXZMeUJLZFhOMElISmxkSFZ5YmlCcFppQmhiaUJoYkhKbFlXUjVMV052YlhCcGJHVmtJRUZUVkNCM1lYTWdjR0Z6YzJWa0lHbHVMbHh1SUNCcFppQW9hVzV3ZFhRdWRIbHdaU0E5UFQwZ0oxQnliMmR5WVcwbktTQjdYRzRnSUNBZ2NtVjBkWEp1SUdsdWNIVjBPMXh1SUNCOVhHNWNiaUFnY0dGeWMyVnlMbmw1SUQwZ2VYazdYRzVjYmlBZ0x5OGdRV3gwWlhKcGJtY2dkR2hsSUhOb1lYSmxaQ0J2WW1wbFkzUWdhR1Z5WlN3Z1luVjBJSFJvYVhNZ2FYTWdiMnNnWVhNZ2NHRnljMlZ5SUdseklHRWdjM2x1WXlCdmNHVnlZWFJwYjI1Y2JpQWdlWGt1Ykc5alNXNW1ieUE5SUdaMWJtTjBhVzl1S0d4dlkwbHVabThwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdibVYzSUhsNUxsTnZkWEpqWlV4dlkyRjBhVzl1S0c5d2RHbHZibk1nSmlZZ2IzQjBhVzl1Y3k1emNtTk9ZVzFsTENCc2IyTkpibVp2S1R0Y2JpQWdmVHRjYmx4dUlDQnNaWFFnWVhOMElEMGdjR0Z5YzJWeUxuQmhjbk5sS0dsdWNIVjBLVHRjYmx4dUlDQnlaWFIxY200Z1lYTjBPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2NHRnljMlVvYVc1d2RYUXNJRzl3ZEdsdmJuTXBJSHRjYmlBZ2JHVjBJR0Z6ZENBOUlIQmhjbk5sVjJsMGFHOTFkRkJ5YjJObGMzTnBibWNvYVc1d2RYUXNJRzl3ZEdsdmJuTXBPMXh1SUNCc1pYUWdjM1J5YVhBZ1BTQnVaWGNnVjJocGRHVnpjR0ZqWlVOdmJuUnliMndvYjNCMGFXOXVjeWs3WEc1Y2JpQWdjbVYwZFhKdUlITjBjbWx3TG1GalkyVndkQ2hoYzNRcE8xeHVmVnh1SWwxOVxuIiwiLy8gRmlsZSBpZ25vcmVkIGluIGNvdmVyYWdlIHRlc3RzIHZpYSBzZXR0aW5nIGluIC5pc3RhbmJ1bC55bWxcbi8qIEppc29uIGdlbmVyYXRlZCBwYXJzZXIgKi9cblwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIGhhbmRsZWJhcnMgPSAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXJzZXIgPSB7IHRyYWNlOiBmdW5jdGlvbiB0cmFjZSgpIHt9LFxuICAgICAgICB5eToge30sXG4gICAgICAgIHN5bWJvbHNfOiB7IFwiZXJyb3JcIjogMiwgXCJyb290XCI6IDMsIFwicHJvZ3JhbVwiOiA0LCBcIkVPRlwiOiA1LCBcInByb2dyYW1fcmVwZXRpdGlvbjBcIjogNiwgXCJzdGF0ZW1lbnRcIjogNywgXCJtdXN0YWNoZVwiOiA4LCBcImJsb2NrXCI6IDksIFwicmF3QmxvY2tcIjogMTAsIFwicGFydGlhbFwiOiAxMSwgXCJwYXJ0aWFsQmxvY2tcIjogMTIsIFwiY29udGVudFwiOiAxMywgXCJDT01NRU5UXCI6IDE0LCBcIkNPTlRFTlRcIjogMTUsIFwib3BlblJhd0Jsb2NrXCI6IDE2LCBcInJhd0Jsb2NrX3JlcGV0aXRpb24wXCI6IDE3LCBcIkVORF9SQVdfQkxPQ0tcIjogMTgsIFwiT1BFTl9SQVdfQkxPQ0tcIjogMTksIFwiaGVscGVyTmFtZVwiOiAyMCwgXCJvcGVuUmF3QmxvY2tfcmVwZXRpdGlvbjBcIjogMjEsIFwib3BlblJhd0Jsb2NrX29wdGlvbjBcIjogMjIsIFwiQ0xPU0VfUkFXX0JMT0NLXCI6IDIzLCBcIm9wZW5CbG9ja1wiOiAyNCwgXCJibG9ja19vcHRpb24wXCI6IDI1LCBcImNsb3NlQmxvY2tcIjogMjYsIFwib3BlbkludmVyc2VcIjogMjcsIFwiYmxvY2tfb3B0aW9uMVwiOiAyOCwgXCJPUEVOX0JMT0NLXCI6IDI5LCBcIm9wZW5CbG9ja19yZXBldGl0aW9uMFwiOiAzMCwgXCJvcGVuQmxvY2tfb3B0aW9uMFwiOiAzMSwgXCJvcGVuQmxvY2tfb3B0aW9uMVwiOiAzMiwgXCJDTE9TRVwiOiAzMywgXCJPUEVOX0lOVkVSU0VcIjogMzQsIFwib3BlbkludmVyc2VfcmVwZXRpdGlvbjBcIjogMzUsIFwib3BlbkludmVyc2Vfb3B0aW9uMFwiOiAzNiwgXCJvcGVuSW52ZXJzZV9vcHRpb24xXCI6IDM3LCBcIm9wZW5JbnZlcnNlQ2hhaW5cIjogMzgsIFwiT1BFTl9JTlZFUlNFX0NIQUlOXCI6IDM5LCBcIm9wZW5JbnZlcnNlQ2hhaW5fcmVwZXRpdGlvbjBcIjogNDAsIFwib3BlbkludmVyc2VDaGFpbl9vcHRpb24wXCI6IDQxLCBcIm9wZW5JbnZlcnNlQ2hhaW5fb3B0aW9uMVwiOiA0MiwgXCJpbnZlcnNlQW5kUHJvZ3JhbVwiOiA0MywgXCJJTlZFUlNFXCI6IDQ0LCBcImludmVyc2VDaGFpblwiOiA0NSwgXCJpbnZlcnNlQ2hhaW5fb3B0aW9uMFwiOiA0NiwgXCJPUEVOX0VOREJMT0NLXCI6IDQ3LCBcIk9QRU5cIjogNDgsIFwibXVzdGFjaGVfcmVwZXRpdGlvbjBcIjogNDksIFwibXVzdGFjaGVfb3B0aW9uMFwiOiA1MCwgXCJPUEVOX1VORVNDQVBFRFwiOiA1MSwgXCJtdXN0YWNoZV9yZXBldGl0aW9uMVwiOiA1MiwgXCJtdXN0YWNoZV9vcHRpb24xXCI6IDUzLCBcIkNMT1NFX1VORVNDQVBFRFwiOiA1NCwgXCJPUEVOX1BBUlRJQUxcIjogNTUsIFwicGFydGlhbE5hbWVcIjogNTYsIFwicGFydGlhbF9yZXBldGl0aW9uMFwiOiA1NywgXCJwYXJ0aWFsX29wdGlvbjBcIjogNTgsIFwib3BlblBhcnRpYWxCbG9ja1wiOiA1OSwgXCJPUEVOX1BBUlRJQUxfQkxPQ0tcIjogNjAsIFwib3BlblBhcnRpYWxCbG9ja19yZXBldGl0aW9uMFwiOiA2MSwgXCJvcGVuUGFydGlhbEJsb2NrX29wdGlvbjBcIjogNjIsIFwicGFyYW1cIjogNjMsIFwic2V4cHJcIjogNjQsIFwiT1BFTl9TRVhQUlwiOiA2NSwgXCJzZXhwcl9yZXBldGl0aW9uMFwiOiA2NiwgXCJzZXhwcl9vcHRpb24wXCI6IDY3LCBcIkNMT1NFX1NFWFBSXCI6IDY4LCBcImhhc2hcIjogNjksIFwiaGFzaF9yZXBldGl0aW9uX3BsdXMwXCI6IDcwLCBcImhhc2hTZWdtZW50XCI6IDcxLCBcIklEXCI6IDcyLCBcIkVRVUFMU1wiOiA3MywgXCJibG9ja1BhcmFtc1wiOiA3NCwgXCJPUEVOX0JMT0NLX1BBUkFNU1wiOiA3NSwgXCJibG9ja1BhcmFtc19yZXBldGl0aW9uX3BsdXMwXCI6IDc2LCBcIkNMT1NFX0JMT0NLX1BBUkFNU1wiOiA3NywgXCJwYXRoXCI6IDc4LCBcImRhdGFOYW1lXCI6IDc5LCBcIlNUUklOR1wiOiA4MCwgXCJOVU1CRVJcIjogODEsIFwiQk9PTEVBTlwiOiA4MiwgXCJVTkRFRklORURcIjogODMsIFwiTlVMTFwiOiA4NCwgXCJEQVRBXCI6IDg1LCBcInBhdGhTZWdtZW50c1wiOiA4NiwgXCJTRVBcIjogODcsIFwiJGFjY2VwdFwiOiAwLCBcIiRlbmRcIjogMSB9LFxuICAgICAgICB0ZXJtaW5hbHNfOiB7IDI6IFwiZXJyb3JcIiwgNTogXCJFT0ZcIiwgMTQ6IFwiQ09NTUVOVFwiLCAxNTogXCJDT05URU5UXCIsIDE4OiBcIkVORF9SQVdfQkxPQ0tcIiwgMTk6IFwiT1BFTl9SQVdfQkxPQ0tcIiwgMjM6IFwiQ0xPU0VfUkFXX0JMT0NLXCIsIDI5OiBcIk9QRU5fQkxPQ0tcIiwgMzM6IFwiQ0xPU0VcIiwgMzQ6IFwiT1BFTl9JTlZFUlNFXCIsIDM5OiBcIk9QRU5fSU5WRVJTRV9DSEFJTlwiLCA0NDogXCJJTlZFUlNFXCIsIDQ3OiBcIk9QRU5fRU5EQkxPQ0tcIiwgNDg6IFwiT1BFTlwiLCA1MTogXCJPUEVOX1VORVNDQVBFRFwiLCA1NDogXCJDTE9TRV9VTkVTQ0FQRURcIiwgNTU6IFwiT1BFTl9QQVJUSUFMXCIsIDYwOiBcIk9QRU5fUEFSVElBTF9CTE9DS1wiLCA2NTogXCJPUEVOX1NFWFBSXCIsIDY4OiBcIkNMT1NFX1NFWFBSXCIsIDcyOiBcIklEXCIsIDczOiBcIkVRVUFMU1wiLCA3NTogXCJPUEVOX0JMT0NLX1BBUkFNU1wiLCA3NzogXCJDTE9TRV9CTE9DS19QQVJBTVNcIiwgODA6IFwiU1RSSU5HXCIsIDgxOiBcIk5VTUJFUlwiLCA4MjogXCJCT09MRUFOXCIsIDgzOiBcIlVOREVGSU5FRFwiLCA4NDogXCJOVUxMXCIsIDg1OiBcIkRBVEFcIiwgODc6IFwiU0VQXCIgfSxcbiAgICAgICAgcHJvZHVjdGlvbnNfOiBbMCwgWzMsIDJdLCBbNCwgMV0sIFs3LCAxXSwgWzcsIDFdLCBbNywgMV0sIFs3LCAxXSwgWzcsIDFdLCBbNywgMV0sIFs3LCAxXSwgWzEzLCAxXSwgWzEwLCAzXSwgWzE2LCA1XSwgWzksIDRdLCBbOSwgNF0sIFsyNCwgNl0sIFsyNywgNl0sIFszOCwgNl0sIFs0MywgMl0sIFs0NSwgM10sIFs0NSwgMV0sIFsyNiwgM10sIFs4LCA1XSwgWzgsIDVdLCBbMTEsIDVdLCBbMTIsIDNdLCBbNTksIDVdLCBbNjMsIDFdLCBbNjMsIDFdLCBbNjQsIDVdLCBbNjksIDFdLCBbNzEsIDNdLCBbNzQsIDNdLCBbMjAsIDFdLCBbMjAsIDFdLCBbMjAsIDFdLCBbMjAsIDFdLCBbMjAsIDFdLCBbMjAsIDFdLCBbMjAsIDFdLCBbNTYsIDFdLCBbNTYsIDFdLCBbNzksIDJdLCBbNzgsIDFdLCBbODYsIDNdLCBbODYsIDFdLCBbNiwgMF0sIFs2LCAyXSwgWzE3LCAwXSwgWzE3LCAyXSwgWzIxLCAwXSwgWzIxLCAyXSwgWzIyLCAwXSwgWzIyLCAxXSwgWzI1LCAwXSwgWzI1LCAxXSwgWzI4LCAwXSwgWzI4LCAxXSwgWzMwLCAwXSwgWzMwLCAyXSwgWzMxLCAwXSwgWzMxLCAxXSwgWzMyLCAwXSwgWzMyLCAxXSwgWzM1LCAwXSwgWzM1LCAyXSwgWzM2LCAwXSwgWzM2LCAxXSwgWzM3LCAwXSwgWzM3LCAxXSwgWzQwLCAwXSwgWzQwLCAyXSwgWzQxLCAwXSwgWzQxLCAxXSwgWzQyLCAwXSwgWzQyLCAxXSwgWzQ2LCAwXSwgWzQ2LCAxXSwgWzQ5LCAwXSwgWzQ5LCAyXSwgWzUwLCAwXSwgWzUwLCAxXSwgWzUyLCAwXSwgWzUyLCAyXSwgWzUzLCAwXSwgWzUzLCAxXSwgWzU3LCAwXSwgWzU3LCAyXSwgWzU4LCAwXSwgWzU4LCAxXSwgWzYxLCAwXSwgWzYxLCAyXSwgWzYyLCAwXSwgWzYyLCAxXSwgWzY2LCAwXSwgWzY2LCAyXSwgWzY3LCAwXSwgWzY3LCAxXSwgWzcwLCAxXSwgWzcwLCAyXSwgWzc2LCAxXSwgWzc2LCAyXV0sXG4gICAgICAgIHBlcmZvcm1BY3Rpb246IGZ1bmN0aW9uIGFub255bW91cyh5eXRleHQsIHl5bGVuZywgeXlsaW5lbm8sIHl5LCB5eXN0YXRlLCAkJCwgXyQpIHtcblxuICAgICAgICAgICAgdmFyICQwID0gJCQubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIHN3aXRjaCAoeXlzdGF0ZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQkWyQwIC0gMV07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geXkucHJlcGFyZVByb2dyYW0oJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSAkJFskMF07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gJCRbJDBdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSAkJFskMF07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gJCRbJDBdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnQ29tbWVudFN0YXRlbWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogeXkuc3RyaXBDb21tZW50KCQkWyQwXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJpcDogeXkuc3RyaXBGbGFncygkJFskMF0sICQkWyQwXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2M6IHl5LmxvY0luZm8odGhpcy5fJClcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnQ29udGVudFN0YXRlbWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbDogJCRbJDBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICQkWyQwXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYzogeXkubG9jSW5mbyh0aGlzLl8kKVxuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHl5LnByZXBhcmVSYXdCbG9jaygkJFskMCAtIDJdLCAkJFskMCAtIDFdLCAkJFskMF0sIHRoaXMuXyQpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7IHBhdGg6ICQkWyQwIC0gM10sIHBhcmFtczogJCRbJDAgLSAyXSwgaGFzaDogJCRbJDAgLSAxXSB9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB5eS5wcmVwYXJlQmxvY2soJCRbJDAgLSAzXSwgJCRbJDAgLSAyXSwgJCRbJDAgLSAxXSwgJCRbJDBdLCBmYWxzZSwgdGhpcy5fJCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHl5LnByZXBhcmVCbG9jaygkJFskMCAtIDNdLCAkJFskMCAtIDJdLCAkJFskMCAtIDFdLCAkJFskMF0sIHRydWUsIHRoaXMuXyQpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE1OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7IG9wZW46ICQkWyQwIC0gNV0sIHBhdGg6ICQkWyQwIC0gNF0sIHBhcmFtczogJCRbJDAgLSAzXSwgaGFzaDogJCRbJDAgLSAyXSwgYmxvY2tQYXJhbXM6ICQkWyQwIC0gMV0sIHN0cmlwOiB5eS5zdHJpcEZsYWdzKCQkWyQwIC0gNV0sICQkWyQwXSkgfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxNjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyBwYXRoOiAkJFskMCAtIDRdLCBwYXJhbXM6ICQkWyQwIC0gM10sIGhhc2g6ICQkWyQwIC0gMl0sIGJsb2NrUGFyYW1zOiAkJFskMCAtIDFdLCBzdHJpcDogeXkuc3RyaXBGbGFncygkJFskMCAtIDVdLCAkJFskMF0pIH07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTc6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHsgcGF0aDogJCRbJDAgLSA0XSwgcGFyYW1zOiAkJFskMCAtIDNdLCBoYXNoOiAkJFskMCAtIDJdLCBibG9ja1BhcmFtczogJCRbJDAgLSAxXSwgc3RyaXA6IHl5LnN0cmlwRmxhZ3MoJCRbJDAgLSA1XSwgJCRbJDBdKSB9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE4OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7IHN0cmlwOiB5eS5zdHJpcEZsYWdzKCQkWyQwIC0gMV0sICQkWyQwIC0gMV0pLCBwcm9ncmFtOiAkJFskMF0gfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOTpcbiAgICAgICAgICAgICAgICAgICAgdmFyIGludmVyc2UgPSB5eS5wcmVwYXJlQmxvY2soJCRbJDAgLSAyXSwgJCRbJDAgLSAxXSwgJCRbJDBdLCAkJFskMF0sIGZhbHNlLCB0aGlzLl8kKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyYW0gPSB5eS5wcmVwYXJlUHJvZ3JhbShbaW52ZXJzZV0sICQkWyQwIC0gMV0ubG9jKTtcbiAgICAgICAgICAgICAgICAgICAgcHJvZ3JhbS5jaGFpbmVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7IHN0cmlwOiAkJFskMCAtIDJdLnN0cmlwLCBwcm9ncmFtOiBwcm9ncmFtLCBjaGFpbjogdHJ1ZSB9O1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjA6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyMTpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyBwYXRoOiAkJFskMCAtIDFdLCBzdHJpcDogeXkuc3RyaXBGbGFncygkJFskMCAtIDJdLCAkJFskMF0pIH07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHl5LnByZXBhcmVNdXN0YWNoZSgkJFskMCAtIDNdLCAkJFskMCAtIDJdLCAkJFskMCAtIDFdLCAkJFskMCAtIDRdLCB5eS5zdHJpcEZsYWdzKCQkWyQwIC0gNF0sICQkWyQwXSksIHRoaXMuXyQpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDIzOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB5eS5wcmVwYXJlTXVzdGFjaGUoJCRbJDAgLSAzXSwgJCRbJDAgLSAyXSwgJCRbJDAgLSAxXSwgJCRbJDAgLSA0XSwgeXkuc3RyaXBGbGFncygkJFskMCAtIDRdLCAkJFskMF0pLCB0aGlzLl8kKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ1BhcnRpYWxTdGF0ZW1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJCRbJDAgLSAzXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogJCRbJDAgLSAyXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2g6ICQkWyQwIC0gMV0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRlbnQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RyaXA6IHl5LnN0cmlwRmxhZ3MoJCRbJDAgLSA0XSwgJCRbJDBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYzogeXkubG9jSW5mbyh0aGlzLl8kKVxuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjU6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHl5LnByZXBhcmVQYXJ0aWFsQmxvY2soJCRbJDAgLSAyXSwgJCRbJDAgLSAxXSwgJCRbJDBdLCB0aGlzLl8kKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyBwYXRoOiAkJFskMCAtIDNdLCBwYXJhbXM6ICQkWyQwIC0gMl0sIGhhc2g6ICQkWyQwIC0gMV0sIHN0cmlwOiB5eS5zdHJpcEZsYWdzKCQkWyQwIC0gNF0sICQkWyQwXSkgfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gJCRbJDBdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI4OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSAkJFskMF07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjk6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdTdWJFeHByZXNzaW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6ICQkWyQwIC0gM10sXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6ICQkWyQwIC0gMl0sXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNoOiAkJFskMCAtIDFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jOiB5eS5sb2NJbmZvKHRoaXMuXyQpXG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzMDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyB0eXBlOiAnSGFzaCcsIHBhaXJzOiAkJFskMF0sIGxvYzogeXkubG9jSW5mbyh0aGlzLl8kKSB9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDMxOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB7IHR5cGU6ICdIYXNoUGFpcicsIGtleTogeXkuaWQoJCRbJDAgLSAyXSksIHZhbHVlOiAkJFskMF0sIGxvYzogeXkubG9jSW5mbyh0aGlzLl8kKSB9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSB5eS5pZCgkJFskMCAtIDFdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzMzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gJCRbJDBdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSAkJFskMF07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzU6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogJ1N0cmluZ0xpdGVyYWwnLCB2YWx1ZTogJCRbJDBdLCBvcmlnaW5hbDogJCRbJDBdLCBsb2M6IHl5LmxvY0luZm8odGhpcy5fJCkgfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyB0eXBlOiAnTnVtYmVyTGl0ZXJhbCcsIHZhbHVlOiBOdW1iZXIoJCRbJDBdKSwgb3JpZ2luYWw6IE51bWJlcigkJFskMF0pLCBsb2M6IHl5LmxvY0luZm8odGhpcy5fJCkgfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyB0eXBlOiAnQm9vbGVhbkxpdGVyYWwnLCB2YWx1ZTogJCRbJDBdID09PSAndHJ1ZScsIG9yaWdpbmFsOiAkJFskMF0gPT09ICd0cnVlJywgbG9jOiB5eS5sb2NJbmZvKHRoaXMuXyQpIH07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IHsgdHlwZTogJ1VuZGVmaW5lZExpdGVyYWwnLCBvcmlnaW5hbDogdW5kZWZpbmVkLCB2YWx1ZTogdW5kZWZpbmVkLCBsb2M6IHl5LmxvY0luZm8odGhpcy5fJCkgfTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geyB0eXBlOiAnTnVsbExpdGVyYWwnLCBvcmlnaW5hbDogbnVsbCwgdmFsdWU6IG51bGwsIGxvYzogeXkubG9jSW5mbyh0aGlzLl8kKSB9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSAkJFskMF07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9ICQkWyQwXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geXkucHJlcGFyZVBhdGgodHJ1ZSwgJCRbJDBdLCB0aGlzLl8kKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0MzpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0geXkucHJlcGFyZVBhdGgoZmFsc2UsICQkWyQwXSwgdGhpcy5fJCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgICAgICAgICQkWyQwIC0gMl0ucHVzaCh7IHBhcnQ6IHl5LmlkKCQkWyQwXSksIG9yaWdpbmFsOiAkJFskMF0sIHNlcGFyYXRvcjogJCRbJDAgLSAxXSB9KTt0aGlzLiQgPSAkJFskMCAtIDJdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSBbeyBwYXJ0OiB5eS5pZCgkJFskMF0pLCBvcmlnaW5hbDogJCRbJDBdIH1dO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ2OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgJCRbJDAgLSAxXS5wdXNoKCQkWyQwXSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDg6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ5OlxuICAgICAgICAgICAgICAgICAgICAkJFskMCAtIDFdLnB1c2goJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA1MDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gW107XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNTE6XG4gICAgICAgICAgICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCgkJFskMF0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgICAgICAgICAgJCRbJDAgLSAxXS5wdXNoKCQkWyQwXSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDY1OlxuICAgICAgICAgICAgICAgICAgICAkJFskMCAtIDFdLnB1c2goJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA3MDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gW107XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNzE6XG4gICAgICAgICAgICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCgkJFskMF0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDc4OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA3OTpcbiAgICAgICAgICAgICAgICAgICAgJCRbJDAgLSAxXS5wdXNoKCQkWyQwXSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgODI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDgzOlxuICAgICAgICAgICAgICAgICAgICAkJFskMCAtIDFdLnB1c2goJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA4NjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gW107XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgODc6XG4gICAgICAgICAgICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCgkJFskMF0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDkwOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLiQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgICAgICAgJCRbJDAgLSAxXS5wdXNoKCQkWyQwXSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDk1OlxuICAgICAgICAgICAgICAgICAgICAkJFskMCAtIDFdLnB1c2goJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gWyQkWyQwXV07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTk6XG4gICAgICAgICAgICAgICAgICAgICQkWyQwIC0gMV0ucHVzaCgkJFskMF0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kID0gWyQkWyQwXV07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTAxOlxuICAgICAgICAgICAgICAgICAgICAkJFskMCAtIDFdLnB1c2goJCRbJDBdKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRhYmxlOiBbeyAzOiAxLCA0OiAyLCA1OiBbMiwgNDZdLCA2OiAzLCAxNDogWzIsIDQ2XSwgMTU6IFsyLCA0Nl0sIDE5OiBbMiwgNDZdLCAyOTogWzIsIDQ2XSwgMzQ6IFsyLCA0Nl0sIDQ4OiBbMiwgNDZdLCA1MTogWzIsIDQ2XSwgNTU6IFsyLCA0Nl0sIDYwOiBbMiwgNDZdIH0sIHsgMTogWzNdIH0sIHsgNTogWzEsIDRdIH0sIHsgNTogWzIsIDJdLCA3OiA1LCA4OiA2LCA5OiA3LCAxMDogOCwgMTE6IDksIDEyOiAxMCwgMTM6IDExLCAxNDogWzEsIDEyXSwgMTU6IFsxLCAyMF0sIDE2OiAxNywgMTk6IFsxLCAyM10sIDI0OiAxNSwgMjc6IDE2LCAyOTogWzEsIDIxXSwgMzQ6IFsxLCAyMl0sIDM5OiBbMiwgMl0sIDQ0OiBbMiwgMl0sIDQ3OiBbMiwgMl0sIDQ4OiBbMSwgMTNdLCA1MTogWzEsIDE0XSwgNTU6IFsxLCAxOF0sIDU5OiAxOSwgNjA6IFsxLCAyNF0gfSwgeyAxOiBbMiwgMV0gfSwgeyA1OiBbMiwgNDddLCAxNDogWzIsIDQ3XSwgMTU6IFsyLCA0N10sIDE5OiBbMiwgNDddLCAyOTogWzIsIDQ3XSwgMzQ6IFsyLCA0N10sIDM5OiBbMiwgNDddLCA0NDogWzIsIDQ3XSwgNDc6IFsyLCA0N10sIDQ4OiBbMiwgNDddLCA1MTogWzIsIDQ3XSwgNTU6IFsyLCA0N10sIDYwOiBbMiwgNDddIH0sIHsgNTogWzIsIDNdLCAxNDogWzIsIDNdLCAxNTogWzIsIDNdLCAxOTogWzIsIDNdLCAyOTogWzIsIDNdLCAzNDogWzIsIDNdLCAzOTogWzIsIDNdLCA0NDogWzIsIDNdLCA0NzogWzIsIDNdLCA0ODogWzIsIDNdLCA1MTogWzIsIDNdLCA1NTogWzIsIDNdLCA2MDogWzIsIDNdIH0sIHsgNTogWzIsIDRdLCAxNDogWzIsIDRdLCAxNTogWzIsIDRdLCAxOTogWzIsIDRdLCAyOTogWzIsIDRdLCAzNDogWzIsIDRdLCAzOTogWzIsIDRdLCA0NDogWzIsIDRdLCA0NzogWzIsIDRdLCA0ODogWzIsIDRdLCA1MTogWzIsIDRdLCA1NTogWzIsIDRdLCA2MDogWzIsIDRdIH0sIHsgNTogWzIsIDVdLCAxNDogWzIsIDVdLCAxNTogWzIsIDVdLCAxOTogWzIsIDVdLCAyOTogWzIsIDVdLCAzNDogWzIsIDVdLCAzOTogWzIsIDVdLCA0NDogWzIsIDVdLCA0NzogWzIsIDVdLCA0ODogWzIsIDVdLCA1MTogWzIsIDVdLCA1NTogWzIsIDVdLCA2MDogWzIsIDVdIH0sIHsgNTogWzIsIDZdLCAxNDogWzIsIDZdLCAxNTogWzIsIDZdLCAxOTogWzIsIDZdLCAyOTogWzIsIDZdLCAzNDogWzIsIDZdLCAzOTogWzIsIDZdLCA0NDogWzIsIDZdLCA0NzogWzIsIDZdLCA0ODogWzIsIDZdLCA1MTogWzIsIDZdLCA1NTogWzIsIDZdLCA2MDogWzIsIDZdIH0sIHsgNTogWzIsIDddLCAxNDogWzIsIDddLCAxNTogWzIsIDddLCAxOTogWzIsIDddLCAyOTogWzIsIDddLCAzNDogWzIsIDddLCAzOTogWzIsIDddLCA0NDogWzIsIDddLCA0NzogWzIsIDddLCA0ODogWzIsIDddLCA1MTogWzIsIDddLCA1NTogWzIsIDddLCA2MDogWzIsIDddIH0sIHsgNTogWzIsIDhdLCAxNDogWzIsIDhdLCAxNTogWzIsIDhdLCAxOTogWzIsIDhdLCAyOTogWzIsIDhdLCAzNDogWzIsIDhdLCAzOTogWzIsIDhdLCA0NDogWzIsIDhdLCA0NzogWzIsIDhdLCA0ODogWzIsIDhdLCA1MTogWzIsIDhdLCA1NTogWzIsIDhdLCA2MDogWzIsIDhdIH0sIHsgNTogWzIsIDldLCAxNDogWzIsIDldLCAxNTogWzIsIDldLCAxOTogWzIsIDldLCAyOTogWzIsIDldLCAzNDogWzIsIDldLCAzOTogWzIsIDldLCA0NDogWzIsIDldLCA0NzogWzIsIDldLCA0ODogWzIsIDldLCA1MTogWzIsIDldLCA1NTogWzIsIDldLCA2MDogWzIsIDldIH0sIHsgMjA6IDI1LCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDIwOiAzNiwgNzI6IFsxLCAzNV0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyA0OiAzNywgNjogMywgMTQ6IFsyLCA0Nl0sIDE1OiBbMiwgNDZdLCAxOTogWzIsIDQ2XSwgMjk6IFsyLCA0Nl0sIDM0OiBbMiwgNDZdLCAzOTogWzIsIDQ2XSwgNDQ6IFsyLCA0Nl0sIDQ3OiBbMiwgNDZdLCA0ODogWzIsIDQ2XSwgNTE6IFsyLCA0Nl0sIDU1OiBbMiwgNDZdLCA2MDogWzIsIDQ2XSB9LCB7IDQ6IDM4LCA2OiAzLCAxNDogWzIsIDQ2XSwgMTU6IFsyLCA0Nl0sIDE5OiBbMiwgNDZdLCAyOTogWzIsIDQ2XSwgMzQ6IFsyLCA0Nl0sIDQ0OiBbMiwgNDZdLCA0NzogWzIsIDQ2XSwgNDg6IFsyLCA0Nl0sIDUxOiBbMiwgNDZdLCA1NTogWzIsIDQ2XSwgNjA6IFsyLCA0Nl0gfSwgeyAxNTogWzIsIDQ4XSwgMTc6IDM5LCAxODogWzIsIDQ4XSB9LCB7IDIwOiA0MSwgNTY6IDQwLCA2NDogNDIsIDY1OiBbMSwgNDNdLCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDQ6IDQ0LCA2OiAzLCAxNDogWzIsIDQ2XSwgMTU6IFsyLCA0Nl0sIDE5OiBbMiwgNDZdLCAyOTogWzIsIDQ2XSwgMzQ6IFsyLCA0Nl0sIDQ3OiBbMiwgNDZdLCA0ODogWzIsIDQ2XSwgNTE6IFsyLCA0Nl0sIDU1OiBbMiwgNDZdLCA2MDogWzIsIDQ2XSB9LCB7IDU6IFsyLCAxMF0sIDE0OiBbMiwgMTBdLCAxNTogWzIsIDEwXSwgMTg6IFsyLCAxMF0sIDE5OiBbMiwgMTBdLCAyOTogWzIsIDEwXSwgMzQ6IFsyLCAxMF0sIDM5OiBbMiwgMTBdLCA0NDogWzIsIDEwXSwgNDc6IFsyLCAxMF0sIDQ4OiBbMiwgMTBdLCA1MTogWzIsIDEwXSwgNTU6IFsyLCAxMF0sIDYwOiBbMiwgMTBdIH0sIHsgMjA6IDQ1LCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDIwOiA0NiwgNzI6IFsxLCAzNV0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyAyMDogNDcsIDcyOiBbMSwgMzVdLCA3ODogMjYsIDc5OiAyNywgODA6IFsxLCAyOF0sIDgxOiBbMSwgMjldLCA4MjogWzEsIDMwXSwgODM6IFsxLCAzMV0sIDg0OiBbMSwgMzJdLCA4NTogWzEsIDM0XSwgODY6IDMzIH0sIHsgMjA6IDQxLCA1NjogNDgsIDY0OiA0MiwgNjU6IFsxLCA0M10sIDcyOiBbMSwgMzVdLCA3ODogMjYsIDc5OiAyNywgODA6IFsxLCAyOF0sIDgxOiBbMSwgMjldLCA4MjogWzEsIDMwXSwgODM6IFsxLCAzMV0sIDg0OiBbMSwgMzJdLCA4NTogWzEsIDM0XSwgODY6IDMzIH0sIHsgMzM6IFsyLCA3OF0sIDQ5OiA0OSwgNjU6IFsyLCA3OF0sIDcyOiBbMiwgNzhdLCA4MDogWzIsIDc4XSwgODE6IFsyLCA3OF0sIDgyOiBbMiwgNzhdLCA4MzogWzIsIDc4XSwgODQ6IFsyLCA3OF0sIDg1OiBbMiwgNzhdIH0sIHsgMjM6IFsyLCAzM10sIDMzOiBbMiwgMzNdLCA1NDogWzIsIDMzXSwgNjU6IFsyLCAzM10sIDY4OiBbMiwgMzNdLCA3MjogWzIsIDMzXSwgNzU6IFsyLCAzM10sIDgwOiBbMiwgMzNdLCA4MTogWzIsIDMzXSwgODI6IFsyLCAzM10sIDgzOiBbMiwgMzNdLCA4NDogWzIsIDMzXSwgODU6IFsyLCAzM10gfSwgeyAyMzogWzIsIDM0XSwgMzM6IFsyLCAzNF0sIDU0OiBbMiwgMzRdLCA2NTogWzIsIDM0XSwgNjg6IFsyLCAzNF0sIDcyOiBbMiwgMzRdLCA3NTogWzIsIDM0XSwgODA6IFsyLCAzNF0sIDgxOiBbMiwgMzRdLCA4MjogWzIsIDM0XSwgODM6IFsyLCAzNF0sIDg0OiBbMiwgMzRdLCA4NTogWzIsIDM0XSB9LCB7IDIzOiBbMiwgMzVdLCAzMzogWzIsIDM1XSwgNTQ6IFsyLCAzNV0sIDY1OiBbMiwgMzVdLCA2ODogWzIsIDM1XSwgNzI6IFsyLCAzNV0sIDc1OiBbMiwgMzVdLCA4MDogWzIsIDM1XSwgODE6IFsyLCAzNV0sIDgyOiBbMiwgMzVdLCA4MzogWzIsIDM1XSwgODQ6IFsyLCAzNV0sIDg1OiBbMiwgMzVdIH0sIHsgMjM6IFsyLCAzNl0sIDMzOiBbMiwgMzZdLCA1NDogWzIsIDM2XSwgNjU6IFsyLCAzNl0sIDY4OiBbMiwgMzZdLCA3MjogWzIsIDM2XSwgNzU6IFsyLCAzNl0sIDgwOiBbMiwgMzZdLCA4MTogWzIsIDM2XSwgODI6IFsyLCAzNl0sIDgzOiBbMiwgMzZdLCA4NDogWzIsIDM2XSwgODU6IFsyLCAzNl0gfSwgeyAyMzogWzIsIDM3XSwgMzM6IFsyLCAzN10sIDU0OiBbMiwgMzddLCA2NTogWzIsIDM3XSwgNjg6IFsyLCAzN10sIDcyOiBbMiwgMzddLCA3NTogWzIsIDM3XSwgODA6IFsyLCAzN10sIDgxOiBbMiwgMzddLCA4MjogWzIsIDM3XSwgODM6IFsyLCAzN10sIDg0OiBbMiwgMzddLCA4NTogWzIsIDM3XSB9LCB7IDIzOiBbMiwgMzhdLCAzMzogWzIsIDM4XSwgNTQ6IFsyLCAzOF0sIDY1OiBbMiwgMzhdLCA2ODogWzIsIDM4XSwgNzI6IFsyLCAzOF0sIDc1OiBbMiwgMzhdLCA4MDogWzIsIDM4XSwgODE6IFsyLCAzOF0sIDgyOiBbMiwgMzhdLCA4MzogWzIsIDM4XSwgODQ6IFsyLCAzOF0sIDg1OiBbMiwgMzhdIH0sIHsgMjM6IFsyLCAzOV0sIDMzOiBbMiwgMzldLCA1NDogWzIsIDM5XSwgNjU6IFsyLCAzOV0sIDY4OiBbMiwgMzldLCA3MjogWzIsIDM5XSwgNzU6IFsyLCAzOV0sIDgwOiBbMiwgMzldLCA4MTogWzIsIDM5XSwgODI6IFsyLCAzOV0sIDgzOiBbMiwgMzldLCA4NDogWzIsIDM5XSwgODU6IFsyLCAzOV0gfSwgeyAyMzogWzIsIDQzXSwgMzM6IFsyLCA0M10sIDU0OiBbMiwgNDNdLCA2NTogWzIsIDQzXSwgNjg6IFsyLCA0M10sIDcyOiBbMiwgNDNdLCA3NTogWzIsIDQzXSwgODA6IFsyLCA0M10sIDgxOiBbMiwgNDNdLCA4MjogWzIsIDQzXSwgODM6IFsyLCA0M10sIDg0OiBbMiwgNDNdLCA4NTogWzIsIDQzXSwgODc6IFsxLCA1MF0gfSwgeyA3MjogWzEsIDM1XSwgODY6IDUxIH0sIHsgMjM6IFsyLCA0NV0sIDMzOiBbMiwgNDVdLCA1NDogWzIsIDQ1XSwgNjU6IFsyLCA0NV0sIDY4OiBbMiwgNDVdLCA3MjogWzIsIDQ1XSwgNzU6IFsyLCA0NV0sIDgwOiBbMiwgNDVdLCA4MTogWzIsIDQ1XSwgODI6IFsyLCA0NV0sIDgzOiBbMiwgNDVdLCA4NDogWzIsIDQ1XSwgODU6IFsyLCA0NV0sIDg3OiBbMiwgNDVdIH0sIHsgNTI6IDUyLCA1NDogWzIsIDgyXSwgNjU6IFsyLCA4Ml0sIDcyOiBbMiwgODJdLCA4MDogWzIsIDgyXSwgODE6IFsyLCA4Ml0sIDgyOiBbMiwgODJdLCA4MzogWzIsIDgyXSwgODQ6IFsyLCA4Ml0sIDg1OiBbMiwgODJdIH0sIHsgMjU6IDUzLCAzODogNTUsIDM5OiBbMSwgNTddLCA0MzogNTYsIDQ0OiBbMSwgNThdLCA0NTogNTQsIDQ3OiBbMiwgNTRdIH0sIHsgMjg6IDU5LCA0MzogNjAsIDQ0OiBbMSwgNThdLCA0NzogWzIsIDU2XSB9LCB7IDEzOiA2MiwgMTU6IFsxLCAyMF0sIDE4OiBbMSwgNjFdIH0sIHsgMzM6IFsyLCA4Nl0sIDU3OiA2MywgNjU6IFsyLCA4Nl0sIDcyOiBbMiwgODZdLCA4MDogWzIsIDg2XSwgODE6IFsyLCA4Nl0sIDgyOiBbMiwgODZdLCA4MzogWzIsIDg2XSwgODQ6IFsyLCA4Nl0sIDg1OiBbMiwgODZdIH0sIHsgMzM6IFsyLCA0MF0sIDY1OiBbMiwgNDBdLCA3MjogWzIsIDQwXSwgODA6IFsyLCA0MF0sIDgxOiBbMiwgNDBdLCA4MjogWzIsIDQwXSwgODM6IFsyLCA0MF0sIDg0OiBbMiwgNDBdLCA4NTogWzIsIDQwXSB9LCB7IDMzOiBbMiwgNDFdLCA2NTogWzIsIDQxXSwgNzI6IFsyLCA0MV0sIDgwOiBbMiwgNDFdLCA4MTogWzIsIDQxXSwgODI6IFsyLCA0MV0sIDgzOiBbMiwgNDFdLCA4NDogWzIsIDQxXSwgODU6IFsyLCA0MV0gfSwgeyAyMDogNjQsIDcyOiBbMSwgMzVdLCA3ODogMjYsIDc5OiAyNywgODA6IFsxLCAyOF0sIDgxOiBbMSwgMjldLCA4MjogWzEsIDMwXSwgODM6IFsxLCAzMV0sIDg0OiBbMSwgMzJdLCA4NTogWzEsIDM0XSwgODY6IDMzIH0sIHsgMjY6IDY1LCA0NzogWzEsIDY2XSB9LCB7IDMwOiA2NywgMzM6IFsyLCA1OF0sIDY1OiBbMiwgNThdLCA3MjogWzIsIDU4XSwgNzU6IFsyLCA1OF0sIDgwOiBbMiwgNThdLCA4MTogWzIsIDU4XSwgODI6IFsyLCA1OF0sIDgzOiBbMiwgNThdLCA4NDogWzIsIDU4XSwgODU6IFsyLCA1OF0gfSwgeyAzMzogWzIsIDY0XSwgMzU6IDY4LCA2NTogWzIsIDY0XSwgNzI6IFsyLCA2NF0sIDc1OiBbMiwgNjRdLCA4MDogWzIsIDY0XSwgODE6IFsyLCA2NF0sIDgyOiBbMiwgNjRdLCA4MzogWzIsIDY0XSwgODQ6IFsyLCA2NF0sIDg1OiBbMiwgNjRdIH0sIHsgMjE6IDY5LCAyMzogWzIsIDUwXSwgNjU6IFsyLCA1MF0sIDcyOiBbMiwgNTBdLCA4MDogWzIsIDUwXSwgODE6IFsyLCA1MF0sIDgyOiBbMiwgNTBdLCA4MzogWzIsIDUwXSwgODQ6IFsyLCA1MF0sIDg1OiBbMiwgNTBdIH0sIHsgMzM6IFsyLCA5MF0sIDYxOiA3MCwgNjU6IFsyLCA5MF0sIDcyOiBbMiwgOTBdLCA4MDogWzIsIDkwXSwgODE6IFsyLCA5MF0sIDgyOiBbMiwgOTBdLCA4MzogWzIsIDkwXSwgODQ6IFsyLCA5MF0sIDg1OiBbMiwgOTBdIH0sIHsgMjA6IDc0LCAzMzogWzIsIDgwXSwgNTA6IDcxLCA2MzogNzIsIDY0OiA3NSwgNjU6IFsxLCA0M10sIDY5OiA3MywgNzA6IDc2LCA3MTogNzcsIDcyOiBbMSwgNzhdLCA3ODogMjYsIDc5OiAyNywgODA6IFsxLCAyOF0sIDgxOiBbMSwgMjldLCA4MjogWzEsIDMwXSwgODM6IFsxLCAzMV0sIDg0OiBbMSwgMzJdLCA4NTogWzEsIDM0XSwgODY6IDMzIH0sIHsgNzI6IFsxLCA3OV0gfSwgeyAyMzogWzIsIDQyXSwgMzM6IFsyLCA0Ml0sIDU0OiBbMiwgNDJdLCA2NTogWzIsIDQyXSwgNjg6IFsyLCA0Ml0sIDcyOiBbMiwgNDJdLCA3NTogWzIsIDQyXSwgODA6IFsyLCA0Ml0sIDgxOiBbMiwgNDJdLCA4MjogWzIsIDQyXSwgODM6IFsyLCA0Ml0sIDg0OiBbMiwgNDJdLCA4NTogWzIsIDQyXSwgODc6IFsxLCA1MF0gfSwgeyAyMDogNzQsIDUzOiA4MCwgNTQ6IFsyLCA4NF0sIDYzOiA4MSwgNjQ6IDc1LCA2NTogWzEsIDQzXSwgNjk6IDgyLCA3MDogNzYsIDcxOiA3NywgNzI6IFsxLCA3OF0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyAyNjogODMsIDQ3OiBbMSwgNjZdIH0sIHsgNDc6IFsyLCA1NV0gfSwgeyA0OiA4NCwgNjogMywgMTQ6IFsyLCA0Nl0sIDE1OiBbMiwgNDZdLCAxOTogWzIsIDQ2XSwgMjk6IFsyLCA0Nl0sIDM0OiBbMiwgNDZdLCAzOTogWzIsIDQ2XSwgNDQ6IFsyLCA0Nl0sIDQ3OiBbMiwgNDZdLCA0ODogWzIsIDQ2XSwgNTE6IFsyLCA0Nl0sIDU1OiBbMiwgNDZdLCA2MDogWzIsIDQ2XSB9LCB7IDQ3OiBbMiwgMjBdIH0sIHsgMjA6IDg1LCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDQ6IDg2LCA2OiAzLCAxNDogWzIsIDQ2XSwgMTU6IFsyLCA0Nl0sIDE5OiBbMiwgNDZdLCAyOTogWzIsIDQ2XSwgMzQ6IFsyLCA0Nl0sIDQ3OiBbMiwgNDZdLCA0ODogWzIsIDQ2XSwgNTE6IFsyLCA0Nl0sIDU1OiBbMiwgNDZdLCA2MDogWzIsIDQ2XSB9LCB7IDI2OiA4NywgNDc6IFsxLCA2Nl0gfSwgeyA0NzogWzIsIDU3XSB9LCB7IDU6IFsyLCAxMV0sIDE0OiBbMiwgMTFdLCAxNTogWzIsIDExXSwgMTk6IFsyLCAxMV0sIDI5OiBbMiwgMTFdLCAzNDogWzIsIDExXSwgMzk6IFsyLCAxMV0sIDQ0OiBbMiwgMTFdLCA0NzogWzIsIDExXSwgNDg6IFsyLCAxMV0sIDUxOiBbMiwgMTFdLCA1NTogWzIsIDExXSwgNjA6IFsyLCAxMV0gfSwgeyAxNTogWzIsIDQ5XSwgMTg6IFsyLCA0OV0gfSwgeyAyMDogNzQsIDMzOiBbMiwgODhdLCA1ODogODgsIDYzOiA4OSwgNjQ6IDc1LCA2NTogWzEsIDQzXSwgNjk6IDkwLCA3MDogNzYsIDcxOiA3NywgNzI6IFsxLCA3OF0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyA2NTogWzIsIDk0XSwgNjY6IDkxLCA2ODogWzIsIDk0XSwgNzI6IFsyLCA5NF0sIDgwOiBbMiwgOTRdLCA4MTogWzIsIDk0XSwgODI6IFsyLCA5NF0sIDgzOiBbMiwgOTRdLCA4NDogWzIsIDk0XSwgODU6IFsyLCA5NF0gfSwgeyA1OiBbMiwgMjVdLCAxNDogWzIsIDI1XSwgMTU6IFsyLCAyNV0sIDE5OiBbMiwgMjVdLCAyOTogWzIsIDI1XSwgMzQ6IFsyLCAyNV0sIDM5OiBbMiwgMjVdLCA0NDogWzIsIDI1XSwgNDc6IFsyLCAyNV0sIDQ4OiBbMiwgMjVdLCA1MTogWzIsIDI1XSwgNTU6IFsyLCAyNV0sIDYwOiBbMiwgMjVdIH0sIHsgMjA6IDkyLCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDIwOiA3NCwgMzE6IDkzLCAzMzogWzIsIDYwXSwgNjM6IDk0LCA2NDogNzUsIDY1OiBbMSwgNDNdLCA2OTogOTUsIDcwOiA3NiwgNzE6IDc3LCA3MjogWzEsIDc4XSwgNzU6IFsyLCA2MF0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyAyMDogNzQsIDMzOiBbMiwgNjZdLCAzNjogOTYsIDYzOiA5NywgNjQ6IDc1LCA2NTogWzEsIDQzXSwgNjk6IDk4LCA3MDogNzYsIDcxOiA3NywgNzI6IFsxLCA3OF0sIDc1OiBbMiwgNjZdLCA3ODogMjYsIDc5OiAyNywgODA6IFsxLCAyOF0sIDgxOiBbMSwgMjldLCA4MjogWzEsIDMwXSwgODM6IFsxLCAzMV0sIDg0OiBbMSwgMzJdLCA4NTogWzEsIDM0XSwgODY6IDMzIH0sIHsgMjA6IDc0LCAyMjogOTksIDIzOiBbMiwgNTJdLCA2MzogMTAwLCA2NDogNzUsIDY1OiBbMSwgNDNdLCA2OTogMTAxLCA3MDogNzYsIDcxOiA3NywgNzI6IFsxLCA3OF0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyAyMDogNzQsIDMzOiBbMiwgOTJdLCA2MjogMTAyLCA2MzogMTAzLCA2NDogNzUsIDY1OiBbMSwgNDNdLCA2OTogMTA0LCA3MDogNzYsIDcxOiA3NywgNzI6IFsxLCA3OF0sIDc4OiAyNiwgNzk6IDI3LCA4MDogWzEsIDI4XSwgODE6IFsxLCAyOV0sIDgyOiBbMSwgMzBdLCA4MzogWzEsIDMxXSwgODQ6IFsxLCAzMl0sIDg1OiBbMSwgMzRdLCA4NjogMzMgfSwgeyAzMzogWzEsIDEwNV0gfSwgeyAzMzogWzIsIDc5XSwgNjU6IFsyLCA3OV0sIDcyOiBbMiwgNzldLCA4MDogWzIsIDc5XSwgODE6IFsyLCA3OV0sIDgyOiBbMiwgNzldLCA4MzogWzIsIDc5XSwgODQ6IFsyLCA3OV0sIDg1OiBbMiwgNzldIH0sIHsgMzM6IFsyLCA4MV0gfSwgeyAyMzogWzIsIDI3XSwgMzM6IFsyLCAyN10sIDU0OiBbMiwgMjddLCA2NTogWzIsIDI3XSwgNjg6IFsyLCAyN10sIDcyOiBbMiwgMjddLCA3NTogWzIsIDI3XSwgODA6IFsyLCAyN10sIDgxOiBbMiwgMjddLCA4MjogWzIsIDI3XSwgODM6IFsyLCAyN10sIDg0OiBbMiwgMjddLCA4NTogWzIsIDI3XSB9LCB7IDIzOiBbMiwgMjhdLCAzMzogWzIsIDI4XSwgNTQ6IFsyLCAyOF0sIDY1OiBbMiwgMjhdLCA2ODogWzIsIDI4XSwgNzI6IFsyLCAyOF0sIDc1OiBbMiwgMjhdLCA4MDogWzIsIDI4XSwgODE6IFsyLCAyOF0sIDgyOiBbMiwgMjhdLCA4MzogWzIsIDI4XSwgODQ6IFsyLCAyOF0sIDg1OiBbMiwgMjhdIH0sIHsgMjM6IFsyLCAzMF0sIDMzOiBbMiwgMzBdLCA1NDogWzIsIDMwXSwgNjg6IFsyLCAzMF0sIDcxOiAxMDYsIDcyOiBbMSwgMTA3XSwgNzU6IFsyLCAzMF0gfSwgeyAyMzogWzIsIDk4XSwgMzM6IFsyLCA5OF0sIDU0OiBbMiwgOThdLCA2ODogWzIsIDk4XSwgNzI6IFsyLCA5OF0sIDc1OiBbMiwgOThdIH0sIHsgMjM6IFsyLCA0NV0sIDMzOiBbMiwgNDVdLCA1NDogWzIsIDQ1XSwgNjU6IFsyLCA0NV0sIDY4OiBbMiwgNDVdLCA3MjogWzIsIDQ1XSwgNzM6IFsxLCAxMDhdLCA3NTogWzIsIDQ1XSwgODA6IFsyLCA0NV0sIDgxOiBbMiwgNDVdLCA4MjogWzIsIDQ1XSwgODM6IFsyLCA0NV0sIDg0OiBbMiwgNDVdLCA4NTogWzIsIDQ1XSwgODc6IFsyLCA0NV0gfSwgeyAyMzogWzIsIDQ0XSwgMzM6IFsyLCA0NF0sIDU0OiBbMiwgNDRdLCA2NTogWzIsIDQ0XSwgNjg6IFsyLCA0NF0sIDcyOiBbMiwgNDRdLCA3NTogWzIsIDQ0XSwgODA6IFsyLCA0NF0sIDgxOiBbMiwgNDRdLCA4MjogWzIsIDQ0XSwgODM6IFsyLCA0NF0sIDg0OiBbMiwgNDRdLCA4NTogWzIsIDQ0XSwgODc6IFsyLCA0NF0gfSwgeyA1NDogWzEsIDEwOV0gfSwgeyA1NDogWzIsIDgzXSwgNjU6IFsyLCA4M10sIDcyOiBbMiwgODNdLCA4MDogWzIsIDgzXSwgODE6IFsyLCA4M10sIDgyOiBbMiwgODNdLCA4MzogWzIsIDgzXSwgODQ6IFsyLCA4M10sIDg1OiBbMiwgODNdIH0sIHsgNTQ6IFsyLCA4NV0gfSwgeyA1OiBbMiwgMTNdLCAxNDogWzIsIDEzXSwgMTU6IFsyLCAxM10sIDE5OiBbMiwgMTNdLCAyOTogWzIsIDEzXSwgMzQ6IFsyLCAxM10sIDM5OiBbMiwgMTNdLCA0NDogWzIsIDEzXSwgNDc6IFsyLCAxM10sIDQ4OiBbMiwgMTNdLCA1MTogWzIsIDEzXSwgNTU6IFsyLCAxM10sIDYwOiBbMiwgMTNdIH0sIHsgMzg6IDU1LCAzOTogWzEsIDU3XSwgNDM6IDU2LCA0NDogWzEsIDU4XSwgNDU6IDExMSwgNDY6IDExMCwgNDc6IFsyLCA3Nl0gfSwgeyAzMzogWzIsIDcwXSwgNDA6IDExMiwgNjU6IFsyLCA3MF0sIDcyOiBbMiwgNzBdLCA3NTogWzIsIDcwXSwgODA6IFsyLCA3MF0sIDgxOiBbMiwgNzBdLCA4MjogWzIsIDcwXSwgODM6IFsyLCA3MF0sIDg0OiBbMiwgNzBdLCA4NTogWzIsIDcwXSB9LCB7IDQ3OiBbMiwgMThdIH0sIHsgNTogWzIsIDE0XSwgMTQ6IFsyLCAxNF0sIDE1OiBbMiwgMTRdLCAxOTogWzIsIDE0XSwgMjk6IFsyLCAxNF0sIDM0OiBbMiwgMTRdLCAzOTogWzIsIDE0XSwgNDQ6IFsyLCAxNF0sIDQ3OiBbMiwgMTRdLCA0ODogWzIsIDE0XSwgNTE6IFsyLCAxNF0sIDU1OiBbMiwgMTRdLCA2MDogWzIsIDE0XSB9LCB7IDMzOiBbMSwgMTEzXSB9LCB7IDMzOiBbMiwgODddLCA2NTogWzIsIDg3XSwgNzI6IFsyLCA4N10sIDgwOiBbMiwgODddLCA4MTogWzIsIDg3XSwgODI6IFsyLCA4N10sIDgzOiBbMiwgODddLCA4NDogWzIsIDg3XSwgODU6IFsyLCA4N10gfSwgeyAzMzogWzIsIDg5XSB9LCB7IDIwOiA3NCwgNjM6IDExNSwgNjQ6IDc1LCA2NTogWzEsIDQzXSwgNjc6IDExNCwgNjg6IFsyLCA5Nl0sIDY5OiAxMTYsIDcwOiA3NiwgNzE6IDc3LCA3MjogWzEsIDc4XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDMzOiBbMSwgMTE3XSB9LCB7IDMyOiAxMTgsIDMzOiBbMiwgNjJdLCA3NDogMTE5LCA3NTogWzEsIDEyMF0gfSwgeyAzMzogWzIsIDU5XSwgNjU6IFsyLCA1OV0sIDcyOiBbMiwgNTldLCA3NTogWzIsIDU5XSwgODA6IFsyLCA1OV0sIDgxOiBbMiwgNTldLCA4MjogWzIsIDU5XSwgODM6IFsyLCA1OV0sIDg0OiBbMiwgNTldLCA4NTogWzIsIDU5XSB9LCB7IDMzOiBbMiwgNjFdLCA3NTogWzIsIDYxXSB9LCB7IDMzOiBbMiwgNjhdLCAzNzogMTIxLCA3NDogMTIyLCA3NTogWzEsIDEyMF0gfSwgeyAzMzogWzIsIDY1XSwgNjU6IFsyLCA2NV0sIDcyOiBbMiwgNjVdLCA3NTogWzIsIDY1XSwgODA6IFsyLCA2NV0sIDgxOiBbMiwgNjVdLCA4MjogWzIsIDY1XSwgODM6IFsyLCA2NV0sIDg0OiBbMiwgNjVdLCA4NTogWzIsIDY1XSB9LCB7IDMzOiBbMiwgNjddLCA3NTogWzIsIDY3XSB9LCB7IDIzOiBbMSwgMTIzXSB9LCB7IDIzOiBbMiwgNTFdLCA2NTogWzIsIDUxXSwgNzI6IFsyLCA1MV0sIDgwOiBbMiwgNTFdLCA4MTogWzIsIDUxXSwgODI6IFsyLCA1MV0sIDgzOiBbMiwgNTFdLCA4NDogWzIsIDUxXSwgODU6IFsyLCA1MV0gfSwgeyAyMzogWzIsIDUzXSB9LCB7IDMzOiBbMSwgMTI0XSB9LCB7IDMzOiBbMiwgOTFdLCA2NTogWzIsIDkxXSwgNzI6IFsyLCA5MV0sIDgwOiBbMiwgOTFdLCA4MTogWzIsIDkxXSwgODI6IFsyLCA5MV0sIDgzOiBbMiwgOTFdLCA4NDogWzIsIDkxXSwgODU6IFsyLCA5MV0gfSwgeyAzMzogWzIsIDkzXSB9LCB7IDU6IFsyLCAyMl0sIDE0OiBbMiwgMjJdLCAxNTogWzIsIDIyXSwgMTk6IFsyLCAyMl0sIDI5OiBbMiwgMjJdLCAzNDogWzIsIDIyXSwgMzk6IFsyLCAyMl0sIDQ0OiBbMiwgMjJdLCA0NzogWzIsIDIyXSwgNDg6IFsyLCAyMl0sIDUxOiBbMiwgMjJdLCA1NTogWzIsIDIyXSwgNjA6IFsyLCAyMl0gfSwgeyAyMzogWzIsIDk5XSwgMzM6IFsyLCA5OV0sIDU0OiBbMiwgOTldLCA2ODogWzIsIDk5XSwgNzI6IFsyLCA5OV0sIDc1OiBbMiwgOTldIH0sIHsgNzM6IFsxLCAxMDhdIH0sIHsgMjA6IDc0LCA2MzogMTI1LCA2NDogNzUsIDY1OiBbMSwgNDNdLCA3MjogWzEsIDM1XSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDU6IFsyLCAyM10sIDE0OiBbMiwgMjNdLCAxNTogWzIsIDIzXSwgMTk6IFsyLCAyM10sIDI5OiBbMiwgMjNdLCAzNDogWzIsIDIzXSwgMzk6IFsyLCAyM10sIDQ0OiBbMiwgMjNdLCA0NzogWzIsIDIzXSwgNDg6IFsyLCAyM10sIDUxOiBbMiwgMjNdLCA1NTogWzIsIDIzXSwgNjA6IFsyLCAyM10gfSwgeyA0NzogWzIsIDE5XSB9LCB7IDQ3OiBbMiwgNzddIH0sIHsgMjA6IDc0LCAzMzogWzIsIDcyXSwgNDE6IDEyNiwgNjM6IDEyNywgNjQ6IDc1LCA2NTogWzEsIDQzXSwgNjk6IDEyOCwgNzA6IDc2LCA3MTogNzcsIDcyOiBbMSwgNzhdLCA3NTogWzIsIDcyXSwgNzg6IDI2LCA3OTogMjcsIDgwOiBbMSwgMjhdLCA4MTogWzEsIDI5XSwgODI6IFsxLCAzMF0sIDgzOiBbMSwgMzFdLCA4NDogWzEsIDMyXSwgODU6IFsxLCAzNF0sIDg2OiAzMyB9LCB7IDU6IFsyLCAyNF0sIDE0OiBbMiwgMjRdLCAxNTogWzIsIDI0XSwgMTk6IFsyLCAyNF0sIDI5OiBbMiwgMjRdLCAzNDogWzIsIDI0XSwgMzk6IFsyLCAyNF0sIDQ0OiBbMiwgMjRdLCA0NzogWzIsIDI0XSwgNDg6IFsyLCAyNF0sIDUxOiBbMiwgMjRdLCA1NTogWzIsIDI0XSwgNjA6IFsyLCAyNF0gfSwgeyA2ODogWzEsIDEyOV0gfSwgeyA2NTogWzIsIDk1XSwgNjg6IFsyLCA5NV0sIDcyOiBbMiwgOTVdLCA4MDogWzIsIDk1XSwgODE6IFsyLCA5NV0sIDgyOiBbMiwgOTVdLCA4MzogWzIsIDk1XSwgODQ6IFsyLCA5NV0sIDg1OiBbMiwgOTVdIH0sIHsgNjg6IFsyLCA5N10gfSwgeyA1OiBbMiwgMjFdLCAxNDogWzIsIDIxXSwgMTU6IFsyLCAyMV0sIDE5OiBbMiwgMjFdLCAyOTogWzIsIDIxXSwgMzQ6IFsyLCAyMV0sIDM5OiBbMiwgMjFdLCA0NDogWzIsIDIxXSwgNDc6IFsyLCAyMV0sIDQ4OiBbMiwgMjFdLCA1MTogWzIsIDIxXSwgNTU6IFsyLCAyMV0sIDYwOiBbMiwgMjFdIH0sIHsgMzM6IFsxLCAxMzBdIH0sIHsgMzM6IFsyLCA2M10gfSwgeyA3MjogWzEsIDEzMl0sIDc2OiAxMzEgfSwgeyAzMzogWzEsIDEzM10gfSwgeyAzMzogWzIsIDY5XSB9LCB7IDE1OiBbMiwgMTJdLCAxODogWzIsIDEyXSB9LCB7IDE0OiBbMiwgMjZdLCAxNTogWzIsIDI2XSwgMTk6IFsyLCAyNl0sIDI5OiBbMiwgMjZdLCAzNDogWzIsIDI2XSwgNDc6IFsyLCAyNl0sIDQ4OiBbMiwgMjZdLCA1MTogWzIsIDI2XSwgNTU6IFsyLCAyNl0sIDYwOiBbMiwgMjZdIH0sIHsgMjM6IFsyLCAzMV0sIDMzOiBbMiwgMzFdLCA1NDogWzIsIDMxXSwgNjg6IFsyLCAzMV0sIDcyOiBbMiwgMzFdLCA3NTogWzIsIDMxXSB9LCB7IDMzOiBbMiwgNzRdLCA0MjogMTM0LCA3NDogMTM1LCA3NTogWzEsIDEyMF0gfSwgeyAzMzogWzIsIDcxXSwgNjU6IFsyLCA3MV0sIDcyOiBbMiwgNzFdLCA3NTogWzIsIDcxXSwgODA6IFsyLCA3MV0sIDgxOiBbMiwgNzFdLCA4MjogWzIsIDcxXSwgODM6IFsyLCA3MV0sIDg0OiBbMiwgNzFdLCA4NTogWzIsIDcxXSB9LCB7IDMzOiBbMiwgNzNdLCA3NTogWzIsIDczXSB9LCB7IDIzOiBbMiwgMjldLCAzMzogWzIsIDI5XSwgNTQ6IFsyLCAyOV0sIDY1OiBbMiwgMjldLCA2ODogWzIsIDI5XSwgNzI6IFsyLCAyOV0sIDc1OiBbMiwgMjldLCA4MDogWzIsIDI5XSwgODE6IFsyLCAyOV0sIDgyOiBbMiwgMjldLCA4MzogWzIsIDI5XSwgODQ6IFsyLCAyOV0sIDg1OiBbMiwgMjldIH0sIHsgMTQ6IFsyLCAxNV0sIDE1OiBbMiwgMTVdLCAxOTogWzIsIDE1XSwgMjk6IFsyLCAxNV0sIDM0OiBbMiwgMTVdLCAzOTogWzIsIDE1XSwgNDQ6IFsyLCAxNV0sIDQ3OiBbMiwgMTVdLCA0ODogWzIsIDE1XSwgNTE6IFsyLCAxNV0sIDU1OiBbMiwgMTVdLCA2MDogWzIsIDE1XSB9LCB7IDcyOiBbMSwgMTM3XSwgNzc6IFsxLCAxMzZdIH0sIHsgNzI6IFsyLCAxMDBdLCA3NzogWzIsIDEwMF0gfSwgeyAxNDogWzIsIDE2XSwgMTU6IFsyLCAxNl0sIDE5OiBbMiwgMTZdLCAyOTogWzIsIDE2XSwgMzQ6IFsyLCAxNl0sIDQ0OiBbMiwgMTZdLCA0NzogWzIsIDE2XSwgNDg6IFsyLCAxNl0sIDUxOiBbMiwgMTZdLCA1NTogWzIsIDE2XSwgNjA6IFsyLCAxNl0gfSwgeyAzMzogWzEsIDEzOF0gfSwgeyAzMzogWzIsIDc1XSB9LCB7IDMzOiBbMiwgMzJdIH0sIHsgNzI6IFsyLCAxMDFdLCA3NzogWzIsIDEwMV0gfSwgeyAxNDogWzIsIDE3XSwgMTU6IFsyLCAxN10sIDE5OiBbMiwgMTddLCAyOTogWzIsIDE3XSwgMzQ6IFsyLCAxN10sIDM5OiBbMiwgMTddLCA0NDogWzIsIDE3XSwgNDc6IFsyLCAxN10sIDQ4OiBbMiwgMTddLCA1MTogWzIsIDE3XSwgNTU6IFsyLCAxN10sIDYwOiBbMiwgMTddIH1dLFxuICAgICAgICBkZWZhdWx0QWN0aW9uczogeyA0OiBbMiwgMV0sIDU0OiBbMiwgNTVdLCA1NjogWzIsIDIwXSwgNjA6IFsyLCA1N10sIDczOiBbMiwgODFdLCA4MjogWzIsIDg1XSwgODY6IFsyLCAxOF0sIDkwOiBbMiwgODldLCAxMDE6IFsyLCA1M10sIDEwNDogWzIsIDkzXSwgMTEwOiBbMiwgMTldLCAxMTE6IFsyLCA3N10sIDExNjogWzIsIDk3XSwgMTE5OiBbMiwgNjNdLCAxMjI6IFsyLCA2OV0sIDEzNTogWzIsIDc1XSwgMTM2OiBbMiwgMzJdIH0sXG4gICAgICAgIHBhcnNlRXJyb3I6IGZ1bmN0aW9uIHBhcnNlRXJyb3Ioc3RyLCBoYXNoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3Ioc3RyKTtcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2U6IGZ1bmN0aW9uIHBhcnNlKGlucHV0KSB7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgICAgICAgc3RhY2sgPSBbMF0sXG4gICAgICAgICAgICAgICAgdnN0YWNrID0gW251bGxdLFxuICAgICAgICAgICAgICAgIGxzdGFjayA9IFtdLFxuICAgICAgICAgICAgICAgIHRhYmxlID0gdGhpcy50YWJsZSxcbiAgICAgICAgICAgICAgICB5eXRleHQgPSBcIlwiLFxuICAgICAgICAgICAgICAgIHl5bGluZW5vID0gMCxcbiAgICAgICAgICAgICAgICB5eWxlbmcgPSAwLFxuICAgICAgICAgICAgICAgIHJlY292ZXJpbmcgPSAwLFxuICAgICAgICAgICAgICAgIFRFUlJPUiA9IDIsXG4gICAgICAgICAgICAgICAgRU9GID0gMTtcbiAgICAgICAgICAgIHRoaXMubGV4ZXIuc2V0SW5wdXQoaW5wdXQpO1xuICAgICAgICAgICAgdGhpcy5sZXhlci55eSA9IHRoaXMueXk7XG4gICAgICAgICAgICB0aGlzLnl5LmxleGVyID0gdGhpcy5sZXhlcjtcbiAgICAgICAgICAgIHRoaXMueXkucGFyc2VyID0gdGhpcztcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5sZXhlci55eWxsb2MgPT0gXCJ1bmRlZmluZWRcIikgdGhpcy5sZXhlci55eWxsb2MgPSB7fTtcbiAgICAgICAgICAgIHZhciB5eWxvYyA9IHRoaXMubGV4ZXIueXlsbG9jO1xuICAgICAgICAgICAgbHN0YWNrLnB1c2goeXlsb2MpO1xuICAgICAgICAgICAgdmFyIHJhbmdlcyA9IHRoaXMubGV4ZXIub3B0aW9ucyAmJiB0aGlzLmxleGVyLm9wdGlvbnMucmFuZ2VzO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnl5LnBhcnNlRXJyb3IgPT09IFwiZnVuY3Rpb25cIikgdGhpcy5wYXJzZUVycm9yID0gdGhpcy55eS5wYXJzZUVycm9yO1xuICAgICAgICAgICAgZnVuY3Rpb24gcG9wU3RhY2sobikge1xuICAgICAgICAgICAgICAgIHN0YWNrLmxlbmd0aCA9IHN0YWNrLmxlbmd0aCAtIDIgKiBuO1xuICAgICAgICAgICAgICAgIHZzdGFjay5sZW5ndGggPSB2c3RhY2subGVuZ3RoIC0gbjtcbiAgICAgICAgICAgICAgICBsc3RhY2subGVuZ3RoID0gbHN0YWNrLmxlbmd0aCAtIG47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBsZXgoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRva2VuO1xuICAgICAgICAgICAgICAgIHRva2VuID0gc2VsZi5sZXhlci5sZXgoKSB8fCAxO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdG9rZW4gIT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9rZW4gPSBzZWxmLnN5bWJvbHNfW3Rva2VuXSB8fCB0b2tlbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHN5bWJvbCxcbiAgICAgICAgICAgICAgICBwcmVFcnJvclN5bWJvbCxcbiAgICAgICAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICAgICAgICBhY3Rpb24sXG4gICAgICAgICAgICAgICAgYSxcbiAgICAgICAgICAgICAgICByLFxuICAgICAgICAgICAgICAgIHl5dmFsID0ge30sXG4gICAgICAgICAgICAgICAgcCxcbiAgICAgICAgICAgICAgICBsZW4sXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUsXG4gICAgICAgICAgICAgICAgZXhwZWN0ZWQ7XG4gICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgICAgIHN0YXRlID0gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZGVmYXVsdEFjdGlvbnNbc3RhdGVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbiA9IHRoaXMuZGVmYXVsdEFjdGlvbnNbc3RhdGVdO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzeW1ib2wgPT09IG51bGwgfHwgdHlwZW9mIHN5bWJvbCA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzeW1ib2wgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhY3Rpb24gPSB0YWJsZVtzdGF0ZV0gJiYgdGFibGVbc3RhdGVdW3N5bWJvbF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSBcInVuZGVmaW5lZFwiIHx8ICFhY3Rpb24ubGVuZ3RoIHx8ICFhY3Rpb25bMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVyclN0ciA9IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVjb3ZlcmluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocCBpbiB0YWJsZVtzdGF0ZV0pIGlmICh0aGlzLnRlcm1pbmFsc19bcF0gJiYgcCA+IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZC5wdXNoKFwiJ1wiICsgdGhpcy50ZXJtaW5hbHNfW3BdICsgXCInXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGV4ZXIuc2hvd1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyU3RyID0gXCJQYXJzZSBlcnJvciBvbiBsaW5lIFwiICsgKHl5bGluZW5vICsgMSkgKyBcIjpcXG5cIiArIHRoaXMubGV4ZXIuc2hvd1Bvc2l0aW9uKCkgKyBcIlxcbkV4cGVjdGluZyBcIiArIGV4cGVjdGVkLmpvaW4oXCIsIFwiKSArIFwiLCBnb3QgJ1wiICsgKHRoaXMudGVybWluYWxzX1tzeW1ib2xdIHx8IHN5bWJvbCkgKyBcIidcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyU3RyID0gXCJQYXJzZSBlcnJvciBvbiBsaW5lIFwiICsgKHl5bGluZW5vICsgMSkgKyBcIjogVW5leHBlY3RlZCBcIiArIChzeW1ib2wgPT0gMSA/IFwiZW5kIG9mIGlucHV0XCIgOiBcIidcIiArICh0aGlzLnRlcm1pbmFsc19bc3ltYm9sXSB8fCBzeW1ib2wpICsgXCInXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJzZUVycm9yKGVyclN0ciwgeyB0ZXh0OiB0aGlzLmxleGVyLm1hdGNoLCB0b2tlbjogdGhpcy50ZXJtaW5hbHNfW3N5bWJvbF0gfHwgc3ltYm9sLCBsaW5lOiB0aGlzLmxleGVyLnl5bGluZW5vLCBsb2M6IHl5bG9jLCBleHBlY3RlZDogZXhwZWN0ZWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFjdGlvblswXSBpbnN0YW5jZW9mIEFycmF5ICYmIGFjdGlvbi5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlBhcnNlIEVycm9yOiBtdWx0aXBsZSBhY3Rpb25zIHBvc3NpYmxlIGF0IHN0YXRlOiBcIiArIHN0YXRlICsgXCIsIHRva2VuOiBcIiArIHN5bWJvbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN3aXRjaCAoYWN0aW9uWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goc3ltYm9sKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZzdGFjay5wdXNoKHRoaXMubGV4ZXIueXl0ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxzdGFjay5wdXNoKHRoaXMubGV4ZXIueXlsbG9jKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goYWN0aW9uWzFdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN5bWJvbCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXByZUVycm9yU3ltYm9sKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeXlsZW5nID0gdGhpcy5sZXhlci55eWxlbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeXl0ZXh0ID0gdGhpcy5sZXhlci55eXRleHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeXlsaW5lbm8gPSB0aGlzLmxleGVyLnl5bGluZW5vO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHl5bG9jID0gdGhpcy5sZXhlci55eWxsb2M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlY292ZXJpbmcgPiAwKSByZWNvdmVyaW5nLS07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN5bWJvbCA9IHByZUVycm9yU3ltYm9sO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZUVycm9yU3ltYm9sID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAgICAgICBsZW4gPSB0aGlzLnByb2R1Y3Rpb25zX1thY3Rpb25bMV1dWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgeXl2YWwuJCA9IHZzdGFja1t2c3RhY2subGVuZ3RoIC0gbGVuXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHl5dmFsLl8kID0geyBmaXJzdF9saW5lOiBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIChsZW4gfHwgMSldLmZpcnN0X2xpbmUsIGxhc3RfbGluZTogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAxXS5sYXN0X2xpbmUsIGZpcnN0X2NvbHVtbjogbHN0YWNrW2xzdGFjay5sZW5ndGggLSAobGVuIHx8IDEpXS5maXJzdF9jb2x1bW4sIGxhc3RfY29sdW1uOiBsc3RhY2tbbHN0YWNrLmxlbmd0aCAtIDFdLmxhc3RfY29sdW1uIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeXl2YWwuXyQucmFuZ2UgPSBbbHN0YWNrW2xzdGFjay5sZW5ndGggLSAobGVuIHx8IDEpXS5yYW5nZVswXSwgbHN0YWNrW2xzdGFjay5sZW5ndGggLSAxXS5yYW5nZVsxXV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByID0gdGhpcy5wZXJmb3JtQWN0aW9uLmNhbGwoeXl2YWwsIHl5dGV4dCwgeXlsZW5nLCB5eWxpbmVubywgdGhpcy55eSwgYWN0aW9uWzFdLCB2c3RhY2ssIGxzdGFjayk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFjayA9IHN0YWNrLnNsaWNlKDAsIC0xICogbGVuICogMik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdnN0YWNrID0gdnN0YWNrLnNsaWNlKDAsIC0xICogbGVuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsc3RhY2sgPSBsc3RhY2suc2xpY2UoMCwgLTEgKiBsZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2sucHVzaCh0aGlzLnByb2R1Y3Rpb25zX1thY3Rpb25bMV1dWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZzdGFjay5wdXNoKHl5dmFsLiQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbHN0YWNrLnB1c2goeXl2YWwuXyQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3U3RhdGUgPSB0YWJsZVtzdGFja1tzdGFjay5sZW5ndGggLSAyXV1bc3RhY2tbc3RhY2subGVuZ3RoIC0gMV1dO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2sucHVzaChuZXdTdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qIEppc29uIGdlbmVyYXRlZCBsZXhlciAqL1xuICAgIHZhciBsZXhlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsZXhlciA9IHsgRU9GOiAxLFxuICAgICAgICAgICAgcGFyc2VFcnJvcjogZnVuY3Rpb24gcGFyc2VFcnJvcihzdHIsIGhhc2gpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy55eS5wYXJzZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55eS5wYXJzZXIucGFyc2VFcnJvcihzdHIsIGhhc2gpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihzdHIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRJbnB1dDogZnVuY3Rpb24gc2V0SW5wdXQoaW5wdXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9pbnB1dCA9IGlucHV0O1xuICAgICAgICAgICAgICAgIHRoaXMuX21vcmUgPSB0aGlzLl9sZXNzID0gdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy55eWxpbmVubyA9IHRoaXMueXlsZW5nID0gMDtcbiAgICAgICAgICAgICAgICB0aGlzLnl5dGV4dCA9IHRoaXMubWF0Y2hlZCA9IHRoaXMubWF0Y2ggPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmRpdGlvblN0YWNrID0gWydJTklUSUFMJ107XG4gICAgICAgICAgICAgICAgdGhpcy55eWxsb2MgPSB7IGZpcnN0X2xpbmU6IDEsIGZpcnN0X2NvbHVtbjogMCwgbGFzdF9saW5lOiAxLCBsYXN0X2NvbHVtbjogMCB9O1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB0aGlzLnl5bGxvYy5yYW5nZSA9IFswLCAwXTtcbiAgICAgICAgICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uIGlucHV0KCkge1xuICAgICAgICAgICAgICAgIHZhciBjaCA9IHRoaXMuX2lucHV0WzBdO1xuICAgICAgICAgICAgICAgIHRoaXMueXl0ZXh0ICs9IGNoO1xuICAgICAgICAgICAgICAgIHRoaXMueXlsZW5nKys7XG4gICAgICAgICAgICAgICAgdGhpcy5vZmZzZXQrKztcbiAgICAgICAgICAgICAgICB0aGlzLm1hdGNoICs9IGNoO1xuICAgICAgICAgICAgICAgIHRoaXMubWF0Y2hlZCArPSBjaDtcbiAgICAgICAgICAgICAgICB2YXIgbGluZXMgPSBjaC5tYXRjaCgvKD86XFxyXFxuP3xcXG4pLiovZyk7XG4gICAgICAgICAgICAgICAgaWYgKGxpbmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueXlsaW5lbm8rKztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55eWxsb2MubGFzdF9saW5lKys7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55eWxsb2MubGFzdF9jb2x1bW4rKztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5yYW5nZXMpIHRoaXMueXlsbG9jLnJhbmdlWzFdKys7XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9pbnB1dCA9IHRoaXMuX2lucHV0LnNsaWNlKDEpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjaDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1bnB1dDogZnVuY3Rpb24gdW5wdXQoY2gpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGVuID0gY2gubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHZhciBsaW5lcyA9IGNoLnNwbGl0KC8oPzpcXHJcXG4/fFxcbikvZyk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9pbnB1dCA9IGNoICsgdGhpcy5faW5wdXQ7XG4gICAgICAgICAgICAgICAgdGhpcy55eXRleHQgPSB0aGlzLnl5dGV4dC5zdWJzdHIoMCwgdGhpcy55eXRleHQubGVuZ3RoIC0gbGVuIC0gMSk7XG4gICAgICAgICAgICAgICAgLy90aGlzLnl5bGVuZyAtPSBsZW47XG4gICAgICAgICAgICAgICAgdGhpcy5vZmZzZXQgLT0gbGVuO1xuICAgICAgICAgICAgICAgIHZhciBvbGRMaW5lcyA9IHRoaXMubWF0Y2guc3BsaXQoLyg/Olxcclxcbj98XFxuKS9nKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1hdGNoID0gdGhpcy5tYXRjaC5zdWJzdHIoMCwgdGhpcy5tYXRjaC5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZWQgPSB0aGlzLm1hdGNoZWQuc3Vic3RyKDAsIHRoaXMubWF0Y2hlZC5sZW5ndGggLSAxKTtcblxuICAgICAgICAgICAgICAgIGlmIChsaW5lcy5sZW5ndGggLSAxKSB0aGlzLnl5bGluZW5vIC09IGxpbmVzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgdmFyIHIgPSB0aGlzLnl5bGxvYy5yYW5nZTtcblxuICAgICAgICAgICAgICAgIHRoaXMueXlsbG9jID0geyBmaXJzdF9saW5lOiB0aGlzLnl5bGxvYy5maXJzdF9saW5lLFxuICAgICAgICAgICAgICAgICAgICBsYXN0X2xpbmU6IHRoaXMueXlsaW5lbm8gKyAxLFxuICAgICAgICAgICAgICAgICAgICBmaXJzdF9jb2x1bW46IHRoaXMueXlsbG9jLmZpcnN0X2NvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgbGFzdF9jb2x1bW46IGxpbmVzID8gKGxpbmVzLmxlbmd0aCA9PT0gb2xkTGluZXMubGVuZ3RoID8gdGhpcy55eWxsb2MuZmlyc3RfY29sdW1uIDogMCkgKyBvbGRMaW5lc1tvbGRMaW5lcy5sZW5ndGggLSBsaW5lcy5sZW5ndGhdLmxlbmd0aCAtIGxpbmVzWzBdLmxlbmd0aCA6IHRoaXMueXlsbG9jLmZpcnN0X2NvbHVtbiAtIGxlblxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLnJhbmdlcykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnl5bGxvYy5yYW5nZSA9IFtyWzBdLCByWzBdICsgdGhpcy55eWxlbmcgLSBsZW5dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtb3JlOiBmdW5jdGlvbiBtb3JlKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vcmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxlc3M6IGZ1bmN0aW9uIGxlc3Mobikge1xuICAgICAgICAgICAgICAgIHRoaXMudW5wdXQodGhpcy5tYXRjaC5zbGljZShuKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGFzdElucHV0OiBmdW5jdGlvbiBwYXN0SW5wdXQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhc3QgPSB0aGlzLm1hdGNoZWQuc3Vic3RyKDAsIHRoaXMubWF0Y2hlZC5sZW5ndGggLSB0aGlzLm1hdGNoLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChwYXN0Lmxlbmd0aCA+IDIwID8gJy4uLicgOiAnJykgKyBwYXN0LnN1YnN0cigtMjApLnJlcGxhY2UoL1xcbi9nLCBcIlwiKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1cGNvbWluZ0lucHV0OiBmdW5jdGlvbiB1cGNvbWluZ0lucHV0KCkge1xuICAgICAgICAgICAgICAgIHZhciBuZXh0ID0gdGhpcy5tYXRjaDtcbiAgICAgICAgICAgICAgICBpZiAobmV4dC5sZW5ndGggPCAyMCkge1xuICAgICAgICAgICAgICAgICAgICBuZXh0ICs9IHRoaXMuX2lucHV0LnN1YnN0cigwLCAyMCAtIG5leHQubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIChuZXh0LnN1YnN0cigwLCAyMCkgKyAobmV4dC5sZW5ndGggPiAyMCA/ICcuLi4nIDogJycpKS5yZXBsYWNlKC9cXG4vZywgXCJcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvd1Bvc2l0aW9uOiBmdW5jdGlvbiBzaG93UG9zaXRpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByZSA9IHRoaXMucGFzdElucHV0KCk7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBuZXcgQXJyYXkocHJlLmxlbmd0aCArIDEpLmpvaW4oXCItXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmUgKyB0aGlzLnVwY29taW5nSW5wdXQoKSArIFwiXFxuXCIgKyBjICsgXCJeXCI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmV4dDogZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLkVPRjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9pbnB1dCkgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgIHZhciB0b2tlbiwgbWF0Y2gsIHRlbXBNYXRjaCwgaW5kZXgsIGNvbCwgbGluZXM7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9tb3JlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueXl0ZXh0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWF0Y2ggPSAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHJ1bGVzID0gdGhpcy5fY3VycmVudFJ1bGVzKCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBydWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB0ZW1wTWF0Y2ggPSB0aGlzLl9pbnB1dC5tYXRjaCh0aGlzLnJ1bGVzW3J1bGVzW2ldXSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZW1wTWF0Y2ggJiYgKCFtYXRjaCB8fCB0ZW1wTWF0Y2hbMF0ubGVuZ3RoID4gbWF0Y2hbMF0ubGVuZ3RoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2ggPSB0ZW1wTWF0Y2g7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5mbGV4KSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZXMgPSBtYXRjaFswXS5tYXRjaCgvKD86XFxyXFxuP3xcXG4pLiovZyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsaW5lcykgdGhpcy55eWxpbmVubyArPSBsaW5lcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueXlsbG9jID0geyBmaXJzdF9saW5lOiB0aGlzLnl5bGxvYy5sYXN0X2xpbmUsXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0X2xpbmU6IHRoaXMueXlsaW5lbm8gKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RfY29sdW1uOiB0aGlzLnl5bGxvYy5sYXN0X2NvbHVtbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RfY29sdW1uOiBsaW5lcyA/IGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLmxlbmd0aCAtIGxpbmVzW2xpbmVzLmxlbmd0aCAtIDFdLm1hdGNoKC9cXHI/XFxuPy8pWzBdLmxlbmd0aCA6IHRoaXMueXlsbG9jLmxhc3RfY29sdW1uICsgbWF0Y2hbMF0ubGVuZ3RoIH07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMueXl0ZXh0ICs9IG1hdGNoWzBdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hdGNoICs9IG1hdGNoWzBdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZXMgPSBtYXRjaDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy55eWxlbmcgPSB0aGlzLnl5dGV4dC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnl5bGxvYy5yYW5nZSA9IFt0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKz0gdGhpcy55eWxlbmddO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21vcmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faW5wdXQgPSB0aGlzLl9pbnB1dC5zbGljZShtYXRjaFswXS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZWQgKz0gbWF0Y2hbMF07XG4gICAgICAgICAgICAgICAgICAgIHRva2VuID0gdGhpcy5wZXJmb3JtQWN0aW9uLmNhbGwodGhpcywgdGhpcy55eSwgdGhpcywgcnVsZXNbaW5kZXhdLCB0aGlzLmNvbmRpdGlvblN0YWNrW3RoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMV0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kb25lICYmIHRoaXMuX2lucHV0KSB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuKSByZXR1cm4gdG9rZW47ZWxzZSByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9pbnB1dCA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5FT0Y7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VFcnJvcignTGV4aWNhbCBlcnJvciBvbiBsaW5lICcgKyAodGhpcy55eWxpbmVubyArIDEpICsgJy4gVW5yZWNvZ25pemVkIHRleHQuXFxuJyArIHRoaXMuc2hvd1Bvc2l0aW9uKCksIHsgdGV4dDogXCJcIiwgdG9rZW46IG51bGwsIGxpbmU6IHRoaXMueXlsaW5lbm8gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxleDogZnVuY3Rpb24gbGV4KCkge1xuICAgICAgICAgICAgICAgIHZhciByID0gdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5sZXgoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYmVnaW46IGZ1bmN0aW9uIGJlZ2luKGNvbmRpdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuY29uZGl0aW9uU3RhY2sucHVzaChjb25kaXRpb24pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBvcFN0YXRlOiBmdW5jdGlvbiBwb3BTdGF0ZSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb25kaXRpb25TdGFjay5wb3AoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfY3VycmVudFJ1bGVzOiBmdW5jdGlvbiBfY3VycmVudFJ1bGVzKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbmRpdGlvbnNbdGhpcy5jb25kaXRpb25TdGFja1t0aGlzLmNvbmRpdGlvblN0YWNrLmxlbmd0aCAtIDFdXS5ydWxlcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0b3BTdGF0ZTogZnVuY3Rpb24gdG9wU3RhdGUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGggLSAyXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdXNoU3RhdGU6IGZ1bmN0aW9uIGJlZ2luKGNvbmRpdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuYmVnaW4oY29uZGl0aW9uKTtcbiAgICAgICAgICAgIH0gfTtcbiAgICAgICAgbGV4ZXIub3B0aW9ucyA9IHt9O1xuICAgICAgICBsZXhlci5wZXJmb3JtQWN0aW9uID0gZnVuY3Rpb24gYW5vbnltb3VzKHl5LCB5eV8sICRhdm9pZGluZ19uYW1lX2NvbGxpc2lvbnMsIFlZX1NUQVJUKSB7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHN0cmlwKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geXlfLnl5dGV4dCA9IHl5Xy55eXRleHQuc3Vic3RyaW5nKHN0YXJ0LCB5eV8ueXlsZW5nIC0gZW5kICsgc3RhcnQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgWVlTVEFURSA9IFlZX1NUQVJUO1xuICAgICAgICAgICAgc3dpdGNoICgkYXZvaWRpbmdfbmFtZV9jb2xsaXNpb25zKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICBpZiAoeXlfLnl5dGV4dC5zbGljZSgtMikgPT09IFwiXFxcXFxcXFxcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyaXAoMCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJlZ2luKFwibXVcIik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoeXlfLnl5dGV4dC5zbGljZSgtMSkgPT09IFwiXFxcXFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJpcCgwLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmVnaW4oXCJlbXVcIik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJlZ2luKFwibXVcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHl5Xy55eXRleHQpIHJldHVybiAxNTtcblxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxNTtcblxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmVnaW4oJ3JhdycpO3JldHVybiAxNTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNob3VsZCBiZSB1c2luZyBgdGhpcy50b3BTdGF0ZSgpYCBiZWxvdywgYnV0IGl0IGN1cnJlbnRseVxuICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm5zIHRoZSBzZWNvbmQgdG9wIGluc3RlYWQgb2YgdGhlIGZpcnN0IHRvcC4gT3BlbmVkIGFuXG4gICAgICAgICAgICAgICAgICAgIC8vIGlzc3VlIGFib3V0IGl0IGF0IGh0dHBzOi8vZ2l0aHViLmNvbS96YWFjaC9qaXNvbi9pc3N1ZXMvMjkxXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbmRpdGlvblN0YWNrW3RoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoIC0gMV0gPT09ICdyYXcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTU7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJpcCg1LCA5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnRU5EX1JBV19CTE9DSyc7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxNTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxNDtcblxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA2NTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gNjg7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDE5O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmVnaW4oJ3JhdycpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMjM7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxMTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDU1O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gNjA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAyOTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxNDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDQ3O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE1OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7cmV0dXJuIDQ0O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE2OlxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcFN0YXRlKCk7cmV0dXJuIDQ0O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE3OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMzQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMTg6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAzOTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDUxO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDIwOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gNDg7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjE6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5wdXQoeXlfLnl5dGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5iZWdpbignY29tJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyMjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3BTdGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTQ7XG5cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyMzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDQ4O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gNzM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA3MjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyNjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDcyO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDI3OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gODc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjg6XG4gICAgICAgICAgICAgICAgICAgIC8vIGlnbm9yZSB3aGl0ZXNwYWNlXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjk6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtyZXR1cm4gNTQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzA6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9wU3RhdGUoKTtyZXR1cm4gMzM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzE6XG4gICAgICAgICAgICAgICAgICAgIHl5Xy55eXRleHQgPSBzdHJpcCgxLCAyKS5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJyk7cmV0dXJuIDgwO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgICB5eV8ueXl0ZXh0ID0gc3RyaXAoMSwgMikucmVwbGFjZSgvXFxcXCcvZywgXCInXCIpO3JldHVybiA4MDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzMzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDg1O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gODI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzU6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA4MjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzNjpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDgzO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDM3OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gODQ7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA4MTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDc1O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gNzc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA3MjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgICAgeXlfLnl5dGV4dCA9IHl5Xy55eXRleHQucmVwbGFjZSgvXFxcXChbXFxcXFxcXV0pL2csICckMScpO3JldHVybiA3MjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0MzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdJTlZBTElEJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBsZXhlci5ydWxlcyA9IFsvXig/OlteXFx4MDBdKj8oPz0oXFx7XFx7KSkpLywgL14oPzpbXlxceDAwXSspLywgL14oPzpbXlxceDAwXXsyLH0/KD89KFxce1xce3xcXFxcXFx7XFx7fFxcXFxcXFxcXFx7XFx7fCQpKSkvLCAvXig/Olxce1xce1xce1xceyg/PVteXFwvXSkpLywgL14oPzpcXHtcXHtcXHtcXHtcXC9bXlxccyFcIiMlLSxcXC5cXC87LT5AXFxbLVxcXmBcXHstfl0rKD89Wz19XFxzXFwvLl0pXFx9XFx9XFx9XFx9KS8sIC9eKD86W15cXHgwMF0rPyg/PShcXHtcXHtcXHtcXHspKSkvLCAvXig/OltcXHNcXFNdKj8tLSh+KT9cXH1cXH0pLywgL14oPzpcXCgpLywgL14oPzpcXCkpLywgL14oPzpcXHtcXHtcXHtcXHspLywgL14oPzpcXH1cXH1cXH1cXH0pLywgL14oPzpcXHtcXHsofik/PikvLCAvXig/Olxce1xceyh+KT8jPikvLCAvXig/Olxce1xceyh+KT8jXFwqPykvLCAvXig/Olxce1xceyh+KT9cXC8pLywgL14oPzpcXHtcXHsofik/XFxeXFxzKih+KT9cXH1cXH0pLywgL14oPzpcXHtcXHsofik/XFxzKmVsc2VcXHMqKH4pP1xcfVxcfSkvLCAvXig/Olxce1xceyh+KT9cXF4pLywgL14oPzpcXHtcXHsofik/XFxzKmVsc2VcXGIpLywgL14oPzpcXHtcXHsofik/XFx7KS8sIC9eKD86XFx7XFx7KH4pPyYpLywgL14oPzpcXHtcXHsofik/IS0tKS8sIC9eKD86XFx7XFx7KH4pPyFbXFxzXFxTXSo/XFx9XFx9KS8sIC9eKD86XFx7XFx7KH4pP1xcKj8pLywgL14oPzo9KS8sIC9eKD86XFwuXFwuKS8sIC9eKD86XFwuKD89KFs9fn1cXHNcXC8uKXxdKSkpLywgL14oPzpbXFwvLl0pLywgL14oPzpcXHMrKS8sIC9eKD86XFx9KH4pP1xcfVxcfSkvLCAvXig/Oih+KT9cXH1cXH0pLywgL14oPzpcIihcXFxcW1wiXXxbXlwiXSkqXCIpLywgL14oPzonKFxcXFxbJ118W14nXSkqJykvLCAvXig/OkApLywgL14oPzp0cnVlKD89KFt+fVxccyldKSkpLywgL14oPzpmYWxzZSg/PShbfn1cXHMpXSkpKS8sIC9eKD86dW5kZWZpbmVkKD89KFt+fVxccyldKSkpLywgL14oPzpudWxsKD89KFt+fVxccyldKSkpLywgL14oPzotP1swLTldKyg/OlxcLlswLTldKyk/KD89KFt+fVxccyldKSkpLywgL14oPzphc1xccytcXHwpLywgL14oPzpcXHwpLywgL14oPzooW15cXHMhXCIjJS0sXFwuXFwvOy0+QFxcWy1cXF5gXFx7LX5dKyg/PShbPX59XFxzXFwvLil8XSkpKSkvLCAvXig/OlxcWyhcXFxcXFxdfFteXFxdXSkqXFxdKS8sIC9eKD86LikvLCAvXig/OiQpL107XG4gICAgICAgIGxleGVyLmNvbmRpdGlvbnMgPSB7IFwibXVcIjogeyBcInJ1bGVzXCI6IFs3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTcsIDE4LCAxOSwgMjAsIDIxLCAyMiwgMjMsIDI0LCAyNSwgMjYsIDI3LCAyOCwgMjksIDMwLCAzMSwgMzIsIDMzLCAzNCwgMzUsIDM2LCAzNywgMzgsIDM5LCA0MCwgNDEsIDQyLCA0MywgNDRdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcImVtdVwiOiB7IFwicnVsZXNcIjogWzJdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcImNvbVwiOiB7IFwicnVsZXNcIjogWzZdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcInJhd1wiOiB7IFwicnVsZXNcIjogWzMsIDQsIDVdLCBcImluY2x1c2l2ZVwiOiBmYWxzZSB9LCBcIklOSVRJQUxcIjogeyBcInJ1bGVzXCI6IFswLCAxLCA0NF0sIFwiaW5jbHVzaXZlXCI6IHRydWUgfSB9O1xuICAgICAgICByZXR1cm4gbGV4ZXI7XG4gICAgfSkoKTtcbiAgICBwYXJzZXIubGV4ZXIgPSBsZXhlcjtcbiAgICBmdW5jdGlvbiBQYXJzZXIoKSB7XG4gICAgICAgIHRoaXMueXkgPSB7fTtcbiAgICB9UGFyc2VyLnByb3RvdHlwZSA9IHBhcnNlcjtwYXJzZXIuUGFyc2VyID0gUGFyc2VyO1xuICAgIHJldHVybiBuZXcgUGFyc2VyKCk7XG59KSgpO2V4cG9ydHNbXCJkZWZhdWx0XCJdID0gaGFuZGxlYmFycztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMk52YlhCcGJHVnlMM0JoY25ObGNpNXFjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lPenM3T3p0QlFVVkJMRWxCUVVrc1ZVRkJWU3hIUVVGSExFTkJRVU1zV1VGQlZUdEJRVU0xUWl4UlFVRkpMRTFCUVUwc1IwRkJSeXhGUVVGRExFdEJRVXNzUlVGQlJTeFRRVUZUTEV0QlFVc3NSMEZCU1N4RlFVRkhPMEZCUXpGRExGVkJRVVVzUlVGQlJTeEZRVUZGTzBGQlEwNHNaMEpCUVZFc1JVRkJSU3hGUVVGRExFOUJRVThzUlVGQlF5eERRVUZETEVWQlFVTXNUVUZCVFN4RlFVRkRMRU5CUVVNc1JVRkJReXhUUVVGVExFVkJRVU1zUTBGQlF5eEZRVUZETEV0QlFVc3NSVUZCUXl4RFFVRkRMRVZCUVVNc2NVSkJRWEZDTEVWQlFVTXNRMEZCUXl4RlFVRkRMRmRCUVZjc1JVRkJReXhEUVVGRExFVkJRVU1zVlVGQlZTeEZRVUZETEVOQlFVTXNSVUZCUXl4UFFVRlBMRVZCUVVNc1EwRkJReXhGUVVGRExGVkJRVlVzUlVGQlF5eEZRVUZGTEVWQlFVTXNVMEZCVXl4RlFVRkRMRVZCUVVVc1JVRkJReXhqUVVGakxFVkJRVU1zUlVGQlJTeEZRVUZETEZOQlFWTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1UwRkJVeXhGUVVGRExFVkJRVVVzUlVGQlF5eFRRVUZUTEVWQlFVTXNSVUZCUlN4RlFVRkRMR05CUVdNc1JVRkJReXhGUVVGRkxFVkJRVU1zYzBKQlFYTkNMRVZCUVVNc1JVRkJSU3hGUVVGRExHVkJRV1VzUlVGQlF5eEZRVUZGTEVWQlFVTXNaMEpCUVdkQ0xFVkJRVU1zUlVGQlJTeEZRVUZETEZsQlFWa3NSVUZCUXl4RlFVRkZMRVZCUVVNc01FSkJRVEJDTEVWQlFVTXNSVUZCUlN4RlFVRkRMSE5DUVVGelFpeEZRVUZETEVWQlFVVXNSVUZCUXl4cFFrRkJhVUlzUlVGQlF5eEZRVUZGTEVWQlFVTXNWMEZCVnl4RlFVRkRMRVZCUVVVc1JVRkJReXhsUVVGbExFVkJRVU1zUlVGQlJTeEZRVUZETEZsQlFWa3NSVUZCUXl4RlFVRkZMRVZCUVVNc1lVRkJZU3hGUVVGRExFVkJRVVVzUlVGQlF5eGxRVUZsTEVWQlFVTXNSVUZCUlN4RlFVRkRMRmxCUVZrc1JVRkJReXhGUVVGRkxFVkJRVU1zZFVKQlFYVkNMRVZCUVVNc1JVRkJSU3hGUVVGRExHMUNRVUZ0UWl4RlFVRkRMRVZCUVVVc1JVRkJReXh0UWtGQmJVSXNSVUZCUXl4RlFVRkZMRVZCUVVNc1QwRkJUeXhGUVVGRExFVkJRVVVzUlVGQlF5eGpRVUZqTEVWQlFVTXNSVUZCUlN4RlFVRkRMSGxDUVVGNVFpeEZRVUZETEVWQlFVVXNSVUZCUXl4eFFrRkJjVUlzUlVGQlF5eEZRVUZGTEVWQlFVTXNjVUpCUVhGQ0xFVkJRVU1zUlVGQlJTeEZRVUZETEd0Q1FVRnJRaXhGUVVGRExFVkJRVVVzUlVGQlF5eHZRa0ZCYjBJc1JVRkJReXhGUVVGRkxFVkJRVU1zT0VKQlFUaENMRVZCUVVNc1JVRkJSU3hGUVVGRExEQkNRVUV3UWl4RlFVRkRMRVZCUVVVc1JVRkJReXd3UWtGQk1FSXNSVUZCUXl4RlFVRkZMRVZCUVVNc2JVSkJRVzFDTEVWQlFVTXNSVUZCUlN4RlFVRkRMRk5CUVZNc1JVRkJReXhGUVVGRkxFVkJRVU1zWTBGQll5eEZRVUZETEVWQlFVVXNSVUZCUXl4elFrRkJjMElzUlVGQlF5eEZRVUZGTEVWQlFVTXNaVUZCWlN4RlFVRkRMRVZCUVVVc1JVRkJReXhOUVVGTkxFVkJRVU1zUlVGQlJTeEZRVUZETEhOQ1FVRnpRaXhGUVVGRExFVkJRVVVzUlVGQlF5eHJRa0ZCYTBJc1JVRkJReXhGUVVGRkxFVkJRVU1zWjBKQlFXZENMRVZCUVVNc1JVRkJSU3hGUVVGRExITkNRVUZ6UWl4RlFVRkRMRVZCUVVVc1JVRkJReXhyUWtGQmEwSXNSVUZCUXl4RlFVRkZMRVZCUVVNc2FVSkJRV2xDTEVWQlFVTXNSVUZCUlN4RlFVRkRMR05CUVdNc1JVRkJReXhGUVVGRkxFVkJRVU1zWVVGQllTeEZRVUZETEVWQlFVVXNSVUZCUXl4eFFrRkJjVUlzUlVGQlF5eEZRVUZGTEVWQlFVTXNhVUpCUVdsQ0xFVkJRVU1zUlVGQlJTeEZRVUZETEd0Q1FVRnJRaXhGUVVGRExFVkJRVVVzUlVGQlF5eHZRa0ZCYjBJc1JVRkJReXhGUVVGRkxFVkJRVU1zT0VKQlFUaENMRVZCUVVNc1JVRkJSU3hGUVVGRExEQkNRVUV3UWl4RlFVRkRMRVZCUVVVc1JVRkJReXhQUVVGUExFVkJRVU1zUlVGQlJTeEZRVUZETEU5QlFVOHNSVUZCUXl4RlFVRkZMRVZCUVVNc1dVRkJXU3hGUVVGRExFVkJRVVVzUlVGQlF5eHRRa0ZCYlVJc1JVRkJReXhGUVVGRkxFVkJRVU1zWlVGQlpTeEZRVUZETEVWQlFVVXNSVUZCUXl4aFFVRmhMRVZCUVVNc1JVRkJSU3hGUVVGRExFMUJRVTBzUlVGQlF5eEZRVUZGTEVWQlFVTXNkVUpCUVhWQ0xFVkJRVU1zUlVGQlJTeEZRVUZETEdGQlFXRXNSVUZCUXl4RlFVRkZMRVZCUVVNc1NVRkJTU3hGUVVGRExFVkJRVVVzUlVGQlF5eFJRVUZSTEVWQlFVTXNSVUZCUlN4RlFVRkRMR0ZCUVdFc1JVRkJReXhGUVVGRkxFVkJRVU1zYlVKQlFXMUNMRVZCUVVNc1JVRkJSU3hGUVVGRExEaENRVUU0UWl4RlFVRkRMRVZCUVVVc1JVRkJReXh2UWtGQmIwSXNSVUZCUXl4RlFVRkZMRVZCUVVNc1RVRkJUU3hGUVVGRExFVkJRVVVzUlVGQlF5eFZRVUZWTEVWQlFVTXNSVUZCUlN4RlFVRkRMRkZCUVZFc1JVRkJReXhGUVVGRkxFVkJRVU1zVVVGQlVTeEZRVUZETEVWQlFVVXNSVUZCUXl4VFFVRlRMRVZCUVVNc1JVRkJSU3hGUVVGRExGZEJRVmNzUlVGQlF5eEZRVUZGTEVWQlFVTXNUVUZCVFN4RlFVRkRMRVZCUVVVc1JVRkJReXhOUVVGTkxFVkJRVU1zUlVGQlJTeEZRVUZETEdOQlFXTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1MwRkJTeXhGUVVGRExFVkJRVVVzUlVGQlF5eFRRVUZUTEVWQlFVTXNRMEZCUXl4RlFVRkRMRTFCUVUwc1JVRkJReXhEUVVGRExFVkJRVU03UVVGRE5XMUVMR3RDUVVGVkxFVkJRVVVzUlVGQlF5eERRVUZETEVWQlFVTXNUMEZCVHl4RlFVRkRMRU5CUVVNc1JVRkJReXhMUVVGTExFVkJRVU1zUlVGQlJTeEZRVUZETEZOQlFWTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1UwRkJVeXhGUVVGRExFVkJRVVVzUlVGQlF5eGxRVUZsTEVWQlFVTXNSVUZCUlN4RlFVRkRMR2RDUVVGblFpeEZRVUZETEVWQlFVVXNSVUZCUXl4cFFrRkJhVUlzUlVGQlF5eEZRVUZGTEVWQlFVTXNXVUZCV1N4RlFVRkRMRVZCUVVVc1JVRkJReXhQUVVGUExFVkJRVU1zUlVGQlJTeEZRVUZETEdOQlFXTXNSVUZCUXl4RlFVRkZMRVZCUVVNc2IwSkJRVzlDTEVWQlFVTXNSVUZCUlN4RlFVRkRMRk5CUVZNc1JVRkJReXhGUVVGRkxFVkJRVU1zWlVGQlpTeEZRVUZETEVWQlFVVXNSVUZCUXl4TlFVRk5MRVZCUVVNc1JVRkJSU3hGUVVGRExHZENRVUZuUWl4RlFVRkRMRVZCUVVVc1JVRkJReXhwUWtGQmFVSXNSVUZCUXl4RlFVRkZMRVZCUVVNc1kwRkJZeXhGUVVGRExFVkJRVVVzUlVGQlF5eHZRa0ZCYjBJc1JVRkJReXhGUVVGRkxFVkJRVU1zV1VGQldTeEZRVUZETEVWQlFVVXNSVUZCUXl4aFFVRmhMRVZCUVVNc1JVRkJSU3hGUVVGRExFbEJRVWtzUlVGQlF5eEZRVUZGTEVWQlFVTXNVVUZCVVN4RlFVRkRMRVZCUVVVc1JVRkJReXh0UWtGQmJVSXNSVUZCUXl4RlFVRkZMRVZCUVVNc2IwSkJRVzlDTEVWQlFVTXNSVUZCUlN4RlFVRkRMRkZCUVZFc1JVRkJReXhGUVVGRkxFVkJRVU1zVVVGQlVTeEZRVUZETEVWQlFVVXNSVUZCUXl4VFFVRlRMRVZCUVVNc1JVRkJSU3hGUVVGRExGZEJRVmNzUlVGQlF5eEZRVUZGTEVWQlFVTXNUVUZCVFN4RlFVRkRMRVZCUVVVc1JVRkJReXhOUVVGTkxFVkJRVU1zUlVGQlJTeEZRVUZETEV0QlFVc3NSVUZCUXp0QlFVTTFaU3h2UWtGQldTeEZRVUZGTEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRM0p6UWl4eFFrRkJZU3hGUVVGRkxGTkJRVk1zVTBGQlV5eERRVUZETEUxQlFVMHNSVUZCUXl4TlFVRk5MRVZCUVVNc1VVRkJVU3hGUVVGRExFVkJRVVVzUlVGQlF5eFBRVUZQTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkRka1U3TzBGQlJVWXNaMEpCUVVrc1JVRkJSU3hIUVVGSExFVkJRVVVzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRPMEZCUTNaQ0xHOUNRVUZSTEU5QlFVODdRVUZEWml4eFFrRkJTeXhEUVVGRE8wRkJRVVVzTWtKQlFVOHNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU40UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NRMEZCUXp0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4alFVRmpMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZETVVNc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRU5CUVVNN1FVRkJReXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRGRrSXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVOQlFVTTdRVUZCUXl4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRka0lzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFTkJRVU03UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdRVUZEZGtJc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRU5CUVVNN1FVRkJReXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRGRrSXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVOQlFVTTdRVUZCUXl4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRka0lzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFTkJRVU03UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdRVUZEZGtJc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRU5CUVVNN1FVRkRSaXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnp0QlFVTlFMRFJDUVVGSkxFVkJRVVVzYTBKQlFXdENPMEZCUTNoQ0xEWkNRVUZMTEVWQlFVVXNSVUZCUlN4RFFVRkRMRmxCUVZrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdRVUZET1VJc05rSkJRVXNzUlVGQlJTeEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRjRU1zTWtKQlFVY3NSVUZCUlN4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTTdjVUpCUTNwQ0xFTkJRVU03TzBGQlJVNHNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZEU0N4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ6dEJRVU5RTERSQ1FVRkpMRVZCUVVVc2EwSkJRV3RDTzBGQlEzaENMR2REUVVGUkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXp0QlFVTm9RaXcyUWtGQlN5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNN1FVRkRZaXd5UWtGQlJ5eEZRVUZGTEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF6dHhRa0ZEZWtJc1EwRkJRenM3UVVGRlRpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eGxRVUZsTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRGVrVXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZCUXl4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZGTEVsQlFVa3NSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMHNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVsQlFVa3NSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTTdRVUZEZEVVc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1dVRkJXU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hMUVVGTExFVkJRVVVzU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTNaR0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zZDBKQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExGbEJRVmtzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVOMFJpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzVjBGQlZ5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETzBGQlEzSktMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc2QwSkJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4SlFVRkpMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4WFFVRlhMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4TFFVRkxMRVZCUVVVc1JVRkJSU3hEUVVGRExGVkJRVlVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNN1FVRkRja2tzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFbEJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFMUJRVTBzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxGZEJRVmNzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFdEJRVXNzUlVGQlJTeEZRVUZGTEVOQlFVTXNWVUZCVlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFZEJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRExFVkJRVVVzUTBGQlF6dEJRVU55U1N3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNTMEZCU3l4RlFVRkZMRVZCUVVVc1EwRkJReXhWUVVGVkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1QwRkJUeXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRPMEZCUXk5RkxEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRMGdzZDBKQlFVa3NUMEZCVHl4SFFVRkhMRVZCUVVVc1EwRkJReXhaUVVGWkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTTdkMEpCUXpkRkxFOUJRVThzUjBGQlJ5eEZRVUZGTEVOQlFVTXNZMEZCWXl4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF6dEJRVU42UkN3eVFrRkJUeXhEUVVGRExFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTTdPMEZCUlhaQ0xIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFOUJRVThzUlVGQlJTeFBRVUZQTEVWQlFVVXNTMEZCU3l4RlFVRkZMRWxCUVVrc1JVRkJSU3hEUVVGRE96dEJRVVYwUlN3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVONFFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVU1zU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETzBGQlF6RkZMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc2QwSkJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMR1ZCUVdVc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRkxFZEJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eFZRVUZWTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdRVUZEZEVnc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RlFVRkZMRU5CUVVNc1pVRkJaU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTjBTQ3d3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVOSUxIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhPMEZCUTFBc05FSkJRVWtzUlVGQlJTeHJRa0ZCYTBJN1FVRkRlRUlzTkVKQlFVa3NSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5rTERoQ1FVRk5MRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTTdRVUZEYUVJc05FSkJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOa0xEaENRVUZOTEVWQlFVVXNSVUZCUlR0QlFVTldMRFpDUVVGTExFVkJRVVVzUlVGQlJTeERRVUZETEZWQlFWVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVOMFF5d3lRa0ZCUnl4RlFVRkZMRVZCUVVVc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXp0eFFrRkRla0lzUTBGQlF6czdRVUZGVGl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4dFFrRkJiVUlzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVkQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVNM1JTd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzVFVGQlRTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzU1VGQlNTeEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETzBGQlF6bEhMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc2QwSkJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRM2hDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNkMEpCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTNoQ0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRMGdzZDBKQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjN1FVRkRVQ3cwUWtGQlNTeEZRVUZGTEdWQlFXVTdRVUZEY2tJc05FSkJRVWtzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOa0xEaENRVUZOTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJReXhEUVVGRExFTkJRVU03UVVGRGFFSXNORUpCUVVrc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXp0QlFVTmtMREpDUVVGSExFVkJRVVVzUlVGQlJTeERRVUZETEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRE8zRkNRVU42UWl4RFFVRkRPenRCUVVWT0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zZDBKQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1JVRkJReXhKUVVGSkxFVkJRVVVzVFVGQlRTeEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlJ5eEZRVUZGTEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVOQlFVTTdRVUZEZWtVc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXgzUWtGQlNTeERRVUZETEVOQlFVTXNSMEZCUnl4RlFVRkRMRWxCUVVrc1JVRkJSU3hWUVVGVkxFVkJRVVVzUjBGQlJ5eEZRVUZGTEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRXRCUVVzc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNSMEZCUnl4RlFVRkZMRVZCUVVVc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRU5CUVVNN1FVRkRia2NzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5xUXl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJRenRCUVVONFFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0QlFVTjRRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVNc1NVRkJTU3hGUVVGRkxHVkJRV1VzUlVGQlJTeExRVUZMTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxGRkJRVkVzUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFTkJRVU03UVVGRGNFY3NNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZCUXl4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZETEVsQlFVa3NSVUZCUlN4bFFVRmxMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1JVRkJSU3hSUVVGUkxFVkJRVVVzVFVGQlRTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeEZRVUZGTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eERRVUZETzBGQlEzQklMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc2QwSkJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUXl4SlFVRkpMRVZCUVVVc1owSkJRV2RDTEVWQlFVVXNTMEZCU3l4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eE5RVUZOTEVWQlFVVXNVVUZCVVN4RlFVRkZMRVZCUVVVc1EwRkJReXhGUVVGRkxFTkJRVU1zUzBGQlN5eE5RVUZOTEVWQlFVVXNSMEZCUnl4RlFVRkZMRVZCUVVVc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRU5CUVVNN1FVRkRNMGdzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhGUVVGRExFbEJRVWtzUlVGQlJTeHJRa0ZCYTBJc1JVRkJSU3hSUVVGUkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4VFFVRlRMRVZCUVVVc1IwRkJSeXhGUVVGRkxFVkJRVVVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFTkJRVU03UVVGRE4wY3NNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZCUXl4M1FrRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEZRVUZETEVsQlFVa3NSVUZCUlN4aFFVRmhMRVZCUVVVc1VVRkJVU3hGUVVGRkxFbEJRVWtzUlVGQlJTeExRVUZMTEVWQlFVVXNTVUZCU1N4RlFVRkZMRWRCUVVjc1JVRkJSU3hGUVVGRkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhEUVVGRE8wRkJRemxHTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNkMEpCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRPMEZCUTNoQ0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zZDBKQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzBGQlEzaENMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc2QwSkJRVWtzUTBGQlF5eERRVUZETEVkQlFVY3NSVUZCUlN4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU4yUkN3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXl4WFFVRlhMRU5CUVVNc1MwRkJTeXhGUVVGRkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03UVVGRGVFUXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZCUlN4elFrRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUlVGQlJTeFJRVUZSTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxGTkJRVk1zUlVGQlJTeEZRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEJRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1JVRkJSU3hEUVVGRExFVkJRVVVzUjBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTjRSeXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJReXhKUVVGSkxFVkJRVVVzUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUlVGQlJTeFJRVUZSTEVWQlFVVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF6dEJRVU16UkN3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExITkNRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNNVFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU53UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSE5DUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTTVRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOd1Fpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhOQ1FVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU01UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExITkNRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNNVFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU53UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSE5DUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTTVRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOd1Fpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhOQ1FVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU01UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExITkNRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNNVFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU53UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSE5DUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTTVRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRVZCUVVVc1EwRkJRenRCUVVOd1Fpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhOQ1FVRkZMRU5CUVVNc1JVRkJSU3hIUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU01UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSGRDUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTndRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExITkNRVUZGTEVOQlFVTXNSVUZCUlN4SFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNNVFpd3dRa0ZCVFR0QlFVRkJMRUZCUTA0c2NVSkJRVXNzUlVGQlJUdEJRVUZETEhkQ1FVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU53UWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NSVUZCUlR0QlFVRkRMSE5DUVVGRkxFTkJRVU1zUlVGQlJTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTTVRaXd3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIZENRVUZKTEVOQlFVTXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZETVVJc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXh6UWtGQlJTeERRVUZETEVWQlFVVXNSMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRPVUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFZEJRVWM3UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUXpOQ0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhIUVVGSE8wRkJRVU1zYzBKQlFVVXNRMEZCUXl4RlFVRkZMRWRCUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJReTlDTERCQ1FVRk5PMEZCUVVFc1lVRkRURHRUUVVOQk8wRkJRMFFzWVVGQlN5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkRMRVZCUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRWRCUVVjc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSMEZCUnl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhIUVVGSExFVkJRVU1zUlVGQlJTeEZRVUZETEVkQlFVY3NSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUjBGQlJ5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4SFFVRkhMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1IwRkJSeXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4SFFVRkhMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhIUVVGSExFVkJRVU1zUlVGQlJTeEZRVUZETEVkQlFVY3NSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1IwRkJSeXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEhRVUZITEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFZEJRVWNzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVkQlFVY3NSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1IwRkJSeXhEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4SFFVRkhMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhIUVVGSExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSMEZCUnl4RlFVRkRMRVZCUVVVc1JVRkJReXhIUVVGSExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhIUVVGSExFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVkQlFVY3NSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUXl4RlFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eEhRVUZITEVWQlFVTXNSVUZCUlN4RlFVRkRMRWRCUVVjc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNSMEZCUnl4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVU1zUlVGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4SFFVRkhMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1IwRkJSeXhEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4SFFVRkhMRVZCUVVNc1JVRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4SFFVRkhMRU5CUVVNc1JVRkJReXhGUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFZEJRVWNzUlVGQlF5eEZRVUZGTEVWQlFVTXNSMEZCUnl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEhRVUZITEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkRMRVZCUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhGUVVGRkxFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1JVRkJSU3hGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RFFVRkRPMEZCUXk4dlZpeHpRa0ZCWXl4RlFVRkZMRVZCUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4RlFVRkZMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSVUZCUlN4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVWQlFVVXNSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEZRVUZGTEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFVkJRVVVzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJReXhIUVVGSExFVkJRVU1zUTBGQlF5eERRVUZETEVWQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVNc1IwRkJSeXhGUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZETEVWQlFVVXNRMEZCUXl4RlFVRkRMRWRCUVVjc1JVRkJReXhEUVVGRExFTkJRVU1zUlVGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUXl4SFFVRkhMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeERRVUZETEVWQlFVTXNSMEZCUnl4RlFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZETEVkQlFVY3NSVUZCUXl4RFFVRkRMRU5CUVVNc1JVRkJReXhGUVVGRkxFTkJRVU1zUlVGQlF5eEhRVUZITEVWQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zUjBGQlJ5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExFZEJRVWNzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RlFVRkZMRU5CUVVNc1JVRkJRenRCUVVOc1RTeHJRa0ZCVlN4RlFVRkZMRk5CUVZNc1ZVRkJWU3hEUVVGRkxFZEJRVWNzUlVGQlJTeEpRVUZKTEVWQlFVVTdRVUZEZUVNc2EwSkJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1UwRkRlRUk3UVVGRFJDeGhRVUZMTEVWQlFVVXNVMEZCVXl4TFFVRkxMRU5CUVVNc1MwRkJTeXhGUVVGRk8wRkJRM3BDTEdkQ1FVRkpMRWxCUVVrc1IwRkJSeXhKUVVGSk8yZENRVUZGTEV0QlFVc3NSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRuUWtGQlJTeE5RVUZOTEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNN1owSkJRVVVzVFVGQlRTeEhRVUZITEVWQlFVVTdaMEpCUVVVc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTzJkQ1FVRkZMRTFCUVUwc1IwRkJSeXhGUVVGRk8yZENRVUZGTEZGQlFWRXNSMEZCUnl4RFFVRkRPMmRDUVVGRkxFMUJRVTBzUjBGQlJ5eERRVUZETzJkQ1FVRkZMRlZCUVZVc1IwRkJSeXhEUVVGRE8yZENRVUZGTEUxQlFVMHNSMEZCUnl4RFFVRkRPMmRDUVVGRkxFZEJRVWNzUjBGQlJ5eERRVUZETEVOQlFVTTdRVUZETTBvc1owSkJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wRkJRek5DTEdkQ1FVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRPMEZCUTNoQ0xHZENRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzBGQlF6TkNMR2RDUVVGSkxFTkJRVU1zUlVGQlJTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNN1FVRkRkRUlzWjBKQlFVa3NUMEZCVHl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzU1VGQlNTeFhRVUZYTEVWQlEzWkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTXpRaXhuUWtGQlNTeExRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU03UVVGRE9VSXNhMEpCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdRVUZEYmtJc1owSkJRVWtzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhKUVVGSkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRTFCUVUwc1EwRkJRenRCUVVNM1JDeG5Ra0ZCU1N4UFFVRlBMRWxCUVVrc1EwRkJReXhGUVVGRkxFTkJRVU1zVlVGQlZTeExRVUZMTEZWQlFWVXNSVUZEZUVNc1NVRkJTU3hEUVVGRExGVkJRVlVzUjBGQlJ5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRlZCUVZVc1EwRkJRenRCUVVONlF5eHhRa0ZCVXl4UlFVRlJMRU5CUVVNc1EwRkJReXhGUVVGRk8wRkJRMnBDTEhGQ1FVRkxMRU5CUVVNc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOd1F5eHpRa0ZCVFN4RFFVRkRMRTFCUVUwc1IwRkJSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTnNReXh6UWtGQlRTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF6dGhRVU55UXp0QlFVTkVMSEZDUVVGVExFZEJRVWNzUjBGQlJ6dEJRVU5ZTEc5Q1FVRkpMRXRCUVVzc1EwRkJRenRCUVVOV0xIRkNRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhIUVVGSExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdRVUZET1VJc2IwSkJRVWtzVDBGQlR5eExRVUZMTEV0QlFVc3NVVUZCVVN4RlFVRkZPMEZCUXpOQ0xIbENRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeExRVUZMTEVOQlFVTTdhVUpCUTNwRE8wRkJRMFFzZFVKQlFVOHNTMEZCU3l4RFFVRkRPMkZCUTJoQ08wRkJRMFFzWjBKQlFVa3NUVUZCVFR0blFrRkJSU3hqUVVGak8yZENRVUZGTEV0QlFVczdaMEpCUVVVc1RVRkJUVHRuUWtGQlJTeERRVUZETzJkQ1FVRkZMRU5CUVVNN1owSkJRVVVzUzBGQlN5eEhRVUZITEVWQlFVVTdaMEpCUVVVc1EwRkJRenRuUWtGQlJTeEhRVUZITzJkQ1FVRkZMRkZCUVZFN1owSkJRVVVzVVVGQlVTeERRVUZETzBGQlEzaEdMRzFDUVVGUExFbEJRVWtzUlVGQlJUdEJRVU5VTEhGQ1FVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRhRU1zYjBKQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhMUVVGTExFTkJRVU1zUlVGQlJUdEJRVU0xUWl3d1FrRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN2FVSkJRM1pETEUxQlFVMDdRVUZEU0N4M1FrRkJTU3hOUVVGTkxFdEJRVXNzU1VGQlNTeEpRVUZKTEU5QlFVOHNUVUZCVFN4SlFVRkpMRmRCUVZjc1JVRkJSVHRCUVVOcVJDdzRRa0ZCVFN4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRE8zRkNRVU5zUWp0QlFVTkVMREJDUVVGTkxFZEJRVWNzUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0cFFrRkRha1E3UVVGRFJDeHZRa0ZCU1N4UFFVRlBMRTFCUVUwc1MwRkJTeXhYUVVGWExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eEZRVUZGTzBGQlF5OUVMSGRDUVVGSkxFMUJRVTBzUjBGQlJ5eEZRVUZGTEVOQlFVTTdRVUZEYUVJc2QwSkJRVWtzUTBGQlF5eFZRVUZWTEVWQlFVVTdRVUZEWWl4blEwRkJVU3hIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU5rTERaQ1FVRkxMRU5CUVVNc1NVRkJTU3hMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEVWQlEyeENMRWxCUVVrc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRk8wRkJRemRDTEc5RFFVRlJMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFZEJRVWNzUTBGQlF5eERRVUZETzNsQ1FVTnFSRHRCUVVOTUxEUkNRVUZKTEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXU3hGUVVGRk8wRkJRM3BDTEd0RFFVRk5MRWRCUVVjc2MwSkJRWE5DTEVsQlFVa3NVVUZCVVN4SFFVRkhMRU5CUVVNc1EwRkJRU3hCUVVGRExFZEJRVWNzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRU5CUVVNc1dVRkJXU3hGUVVGRkxFZEJRVWNzWTBGQll5eEhRVUZITEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzVTBGQlV5eEpRVUZKTEVsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzVFVGQlRTeERRVUZCTEVGQlFVTXNSMEZCUnl4SFFVRkhMRU5CUVVNN2VVSkJRM1pNTEUxQlFVMDdRVUZEU0N4clEwRkJUU3hIUVVGSExITkNRVUZ6UWl4SlFVRkpMRkZCUVZFc1IwRkJSeXhEUVVGRExFTkJRVUVzUVVGQlF5eEhRVUZITEdWQlFXVXNTVUZCU1N4TlFVRk5MRWxCUVVrc1EwRkJReXhIUVVGRExHTkJRV01zUjBGQlF5eEhRVUZITEVsQlFVa3NTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeE5RVUZOTEVOQlFVRXNRVUZCUXl4SFFVRkhMRWRCUVVjc1EwRkJRU3hCUVVGRExFTkJRVU03ZVVKQlEzSktPMEZCUTBRc05FSkJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNUVUZCVFN4RlFVRkZMRVZCUVVNc1NVRkJTU3hGUVVGRkxFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNTMEZCU3l4RlFVRkZMRXRCUVVzc1JVRkJSU3hKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRTFCUVUwc1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRVZCUVVVc1IwRkJSeXhGUVVGRkxFdEJRVXNzUlVGQlJTeFJRVUZSTEVWQlFVVXNVVUZCVVN4RlFVRkRMRU5CUVVNc1EwRkJRenR4UWtGRE1VbzdhVUpCUTBvN1FVRkRSQ3h2UWtGQlNTeE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRmxCUVZrc1MwRkJTeXhKUVVGSkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVkQlFVY3NRMEZCUXl4RlFVRkZPMEZCUTJwRUxEQkNRVUZOTEVsQlFVa3NTMEZCU3l4RFFVRkRMRzFFUVVGdFJDeEhRVUZITEV0QlFVc3NSMEZCUnl4WFFVRlhMRWRCUVVjc1RVRkJUU3hEUVVGRExFTkJRVU03YVVKQlEzWkhPMEZCUTBRc2QwSkJRVkVzVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTnFRaXg1UWtGQlN5eERRVUZETzBGQlEwWXNOa0pCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdRVUZEYmtJc09FSkJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dEJRVU12UWl3NFFrRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8wRkJReTlDTERaQ1FVRkxMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTNSQ0xEaENRVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRPMEZCUTJRc05FSkJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVTdRVUZEYWtJc2EwTkJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJRenRCUVVNelFpeHJRMEZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeERRVUZETzBGQlF6TkNMRzlEUVVGUkxFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4UlFVRlJMRU5CUVVNN1FVRkRMMElzYVVOQlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF6dEJRVU14UWl4blEwRkJTU3hWUVVGVkxFZEJRVWNzUTBGQlF5eEZRVU5rTEZWQlFWVXNSVUZCUlN4RFFVRkRPM2xDUVVOd1FpeE5RVUZOTzBGQlEwZ3NhME5CUVUwc1IwRkJSeXhqUVVGakxFTkJRVU03UVVGRGVFSXNNRU5CUVdNc1IwRkJSeXhKUVVGSkxFTkJRVU03ZVVKQlEzcENPMEZCUTBRc09FSkJRVTA3UVVGQlFTeEJRVU5XTEhsQ1FVRkxMRU5CUVVNN1FVRkRSaXd5UWtGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRkRU1zTmtKQlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVkQlFVY3NSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRkRU1zTmtKQlFVc3NRMEZCUXl4RlFVRkZMRWRCUVVjc1JVRkJReXhWUVVGVkxFVkJRVVVzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4TlFVRk5MRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlFTeEJRVUZETEVOQlFVTXNRMEZCUXl4VlFVRlZMRVZCUVVVc1UwRkJVeXhGUVVGRkxFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExGTkJRVk1zUlVGQlJTeFpRVUZaTEVWQlFVVXNUVUZCVFN4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNRMEZCUVN4QlFVRkRMRU5CUVVNc1EwRkJReXhaUVVGWkxFVkJRVVVzVjBGQlZ5eEZRVUZGTEUxQlFVMHNRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEZkQlFWY3NSVUZCUXl4RFFVRkRPMEZCUXpGUExEUkNRVUZKTEUxQlFVMHNSVUZCUlR0QlFVTlNMR2xEUVVGTExFTkJRVU1zUlVGQlJTeERRVUZETEV0QlFVc3NSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVFc1FVRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzNsQ1FVTjBSenRCUVVORUxIbENRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTEUxQlFVMHNSVUZCUlN4TlFVRk5MRVZCUVVVc1VVRkJVU3hGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVUZGTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRkxFMUJRVTBzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXp0QlFVTnFSeXcwUWtGQlNTeFBRVUZQTEVOQlFVTXNTMEZCU3l4WFFVRlhMRVZCUVVVN1FVRkRNVUlzYlVOQlFVOHNRMEZCUXl4RFFVRkRPM2xDUVVOYU8wRkJRMFFzTkVKQlFVa3NSMEZCUnl4RlFVRkZPMEZCUTB3c2FVTkJRVXNzUjBGQlJ5eExRVUZMTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zUjBGQlJ5eEhRVUZITEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRja01zYTBOQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNSMEZCUnl4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOdVF5eHJRMEZCVFN4SFFVRkhMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXl4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRE8zbENRVU4wUXp0QlFVTkVMRFpDUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4WlFVRlpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNMVF5dzRRa0ZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEY2tJc09FSkJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRM1JDTEdkRFFVRlJMRWRCUVVjc1MwRkJTeXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU51UlN3MlFrRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0QlFVTnlRaXc0UWtGQlRUdEJRVUZCTEVGQlExWXNlVUpCUVVzc1EwRkJRenRCUVVOR0xDdENRVUZQTEVsQlFVa3NRMEZCUXp0QlFVRkJMR2xDUVVObU8yRkJRMG83UVVGRFJDeHRRa0ZCVHl4SlFVRkpMRU5CUVVNN1UwRkRaanRMUVVOQkxFTkJRVU03TzBGQlJVWXNVVUZCU1N4TFFVRkxMRWRCUVVjc1EwRkJReXhaUVVGVk8wRkJRM1pDTEZsQlFVa3NTMEZCU3l4SFFVRkpMRVZCUVVNc1IwRkJSeXhGUVVGRExFTkJRVU03UVVGRGJrSXNjMEpCUVZVc1JVRkJReXhUUVVGVExGVkJRVlVzUTBGQlF5eEhRVUZITEVWQlFVVXNTVUZCU1N4RlFVRkZPMEZCUTJ4RExHOUNRVUZKTEVsQlFVa3NRMEZCUXl4RlFVRkZMRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRMmhDTEhkQ1FVRkpMRU5CUVVNc1JVRkJSU3hEUVVGRExFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTXNSMEZCUnl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8ybENRVU40UXl4TlFVRk5PMEZCUTBnc01FSkJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN2FVSkJRM2hDTzJGQlEwbzdRVUZEVEN4dlFrRkJVU3hGUVVGRExHdENRVUZWTEV0QlFVc3NSVUZCUlR0QlFVTnNRaXh2UWtGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4TFFVRkxMRU5CUVVNN1FVRkRjRUlzYjBKQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJRenRCUVVNMVF5eHZRa0ZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXp0QlFVTm9ReXh2UWtGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUXpkRExHOUNRVUZKTEVOQlFVTXNZMEZCWXl4SFFVRkhMRU5CUVVNc1UwRkJVeXhEUVVGRExFTkJRVU03UVVGRGJFTXNiMEpCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzUlVGQlF5eFZRVUZWTEVWQlFVTXNRMEZCUXl4RlFVRkRMRmxCUVZrc1JVRkJReXhEUVVGRExFVkJRVU1zVTBGQlV5eEZRVUZETEVOQlFVTXNSVUZCUXl4WFFVRlhMRVZCUVVNc1EwRkJReXhGUVVGRExFTkJRVU03UVVGRGRFVXNiMEpCUVVrc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRia1FzYjBKQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRMmhDTEhWQ1FVRlBMRWxCUVVrc1EwRkJRenRoUVVObU8wRkJRMHdzYVVKQlFVc3NSVUZCUXl4cFFrRkJXVHRCUVVOV0xHOUNRVUZKTEVWQlFVVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEzaENMRzlDUVVGSkxFTkJRVU1zVFVGQlRTeEpRVUZKTEVWQlFVVXNRMEZCUXp0QlFVTnNRaXh2UWtGQlNTeERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUTJRc2IwSkJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXp0QlFVTmtMRzlDUVVGSkxFTkJRVU1zUzBGQlN5eEpRVUZKTEVWQlFVVXNRMEZCUXp0QlFVTnFRaXh2UWtGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4RlFVRkZMRU5CUVVNN1FVRkRia0lzYjBKQlFVa3NTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zYVVKQlFXbENMRU5CUVVNc1EwRkJRenRCUVVONFF5eHZRa0ZCU1N4TFFVRkxMRVZCUVVVN1FVRkRVQ3gzUWtGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRPMEZCUTJoQ0xIZENRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNc1JVRkJSU3hEUVVGRE8ybENRVU16UWl4TlFVRk5PMEZCUTBnc2QwSkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNN2FVSkJRemRDTzBGQlEwUXNiMEpCUVVrc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXpzN1FVRkZhRVFzYjBKQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRia01zZFVKQlFVOHNSVUZCUlN4RFFVRkRPMkZCUTJJN1FVRkRUQ3hwUWtGQlN5eEZRVUZETEdWQlFWVXNSVUZCUlN4RlFVRkZPMEZCUTFvc2IwSkJRVWtzUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXl4TlFVRk5MRU5CUVVNN1FVRkRjRUlzYjBKQlFVa3NTMEZCU3l4SFFVRkhMRVZCUVVVc1EwRkJReXhMUVVGTExFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTTdPMEZCUlhSRExHOUNRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRVZCUVVVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETzBGQlF5OUNMRzlDUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUlVGQlJTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1IwRkJReXhIUVVGSExFZEJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdPMEZCUlRsRUxHOUNRVUZKTEVOQlFVTXNUVUZCVFN4SlFVRkpMRWRCUVVjc1EwRkJRenRCUVVOdVFpeHZRa0ZCU1N4UlFVRlJMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNaVUZCWlN4RFFVRkRMRU5CUVVNN1FVRkRha1FzYjBKQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTNaRUxHOUNRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUjBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXpzN1FVRkZOMFFzYjBKQlFVa3NTMEZCU3l4RFFVRkRMRTFCUVUwc1IwRkJReXhEUVVGRExFVkJRVVVzU1VGQlNTeERRVUZETEZGQlFWRXNTVUZCU1N4TFFVRkxMRU5CUVVNc1RVRkJUU3hIUVVGRExFTkJRVU1zUTBGQlF6dEJRVU53UkN4dlFrRkJTU3hEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNN08wRkJSVEZDTEc5Q1FVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFVkJRVU1zVlVGQlZTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1ZVRkJWVHRCUVVNdlF5dzJRa0ZCVXl4RlFVRkZMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVU1zUTBGQlF6dEJRVU14UWl4blEwRkJXU3hGUVVGRkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1R0QlFVTjBReXdyUWtGQlZ5eEZRVUZGTEV0QlFVc3NSMEZEWkN4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFdEJRVXNzVVVGQlVTeERRVUZETEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExGbEJRVmtzUjBGQlJ5eERRVUZETEVOQlFVRXNSMEZCU1N4UlFVRlJMRU5CUVVNc1VVRkJVU3hEUVVGRExFMUJRVTBzUjBGQlJ5eExRVUZMTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TlFVRk5MRWRCUTNKSkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4SFFVRkhMRWRCUVVjN2FVSkJRMnBETEVOQlFVTTdPMEZCUlVvc2IwSkJRVWtzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVVN1FVRkRja0lzZDBKQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1MwRkJTeXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWRCUVVjc1EwRkJReXhEUVVGRE8ybENRVU40UkR0QlFVTkVMSFZDUVVGUExFbEJRVWtzUTBGQlF6dGhRVU5tTzBGQlEwd3NaMEpCUVVrc1JVRkJReXhuUWtGQldUdEJRVU5VTEc5Q1FVRkpMRU5CUVVNc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF6dEJRVU5zUWl4MVFrRkJUeXhKUVVGSkxFTkJRVU03WVVGRFpqdEJRVU5NTEdkQ1FVRkpMRVZCUVVNc1kwRkJWU3hEUVVGRExFVkJRVVU3UVVGRFZpeHZRa0ZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8yRkJRMjVETzBGQlEwd3NjVUpCUVZNc1JVRkJReXh4UWtGQldUdEJRVU5rTEc5Q1FVRkpMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dEJRVU16UlN4MVFrRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVkQlFVY3NSVUZCUlN4SFFVRkhMRXRCUVVzc1IwRkJReXhGUVVGRkxFTkJRVUVzUjBGQlNTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEV0QlFVc3NSVUZCUlN4RlFVRkZMRU5CUVVNc1EwRkJRenRoUVVNNVJUdEJRVU5NTEhsQ1FVRmhMRVZCUVVNc2VVSkJRVms3UVVGRGJFSXNiMEpCUVVrc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTTdRVUZEZEVJc2IwSkJRVWtzU1VGQlNTeERRVUZETEUxQlFVMHNSMEZCUnl4RlFVRkZMRVZCUVVVN1FVRkRiRUlzZDBKQlFVa3NTVUZCU1N4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETEVWQlFVVXNSVUZCUlN4SFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dHBRa0ZEYWtRN1FVRkRSQ3gxUWtGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRExFVkJRVVVzUTBGQlF5eEpRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRWRCUVVjc1JVRkJSU3hIUVVGSExFdEJRVXNzUjBGQlF5eEZRVUZGTEVOQlFVRXNRMEZCUXl4RFFVRkZMRTlCUVU4c1EwRkJReXhMUVVGTExFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTTdZVUZETDBVN1FVRkRUQ3gzUWtGQldTeEZRVUZETEhkQ1FVRlpPMEZCUTJwQ0xHOUNRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU03UVVGRE0wSXNiMEpCUVVrc1EwRkJReXhIUVVGSExFbEJRVWtzUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMEZCUXpWRExIVkNRVUZQTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1lVRkJZU3hGUVVGRkxFZEJRVWNzU1VGQlNTeEhRVUZITEVOQlFVTXNSMEZCUXl4SFFVRkhMRU5CUVVNN1lVRkRjRVE3UVVGRFRDeG5Ra0ZCU1N4RlFVRkRMR2RDUVVGWk8wRkJRMVFzYjBKQlFVa3NTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSVHRCUVVOWUxESkNRVUZQTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNN2FVSkJRMjVDTzBGQlEwUXNiMEpCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVsQlFVa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hEUVVGRE96dEJRVVZ1UXl4dlFrRkJTU3hMUVVGTExFVkJRMHdzUzBGQlN5eEZRVU5NTEZOQlFWTXNSVUZEVkN4TFFVRkxMRVZCUTB3c1IwRkJSeXhGUVVOSUxFdEJRVXNzUTBGQlF6dEJRVU5XTEc5Q1FVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU5pTEhkQ1FVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU5xUWl4M1FrRkJTU3hEUVVGRExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdhVUpCUTI1Q08wRkJRMFFzYjBKQlFVa3NTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhoUVVGaExFVkJRVVVzUTBGQlF6dEJRVU5xUXl4eFFrRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZEYUVNc05rSkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGNFUXNkMEpCUVVrc1UwRkJVeXhMUVVGTExFTkJRVU1zUzBGQlN5eEpRVUZKTEZOQlFWTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFZEJRVWNzUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRTFCUVUwc1EwRkJRU3hCUVVGRExFVkJRVVU3UVVGRGFFVXNOa0pCUVVzc1IwRkJSeXhUUVVGVExFTkJRVU03UVVGRGJFSXNOa0pCUVVzc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRFZpdzBRa0ZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeEZRVUZGTEUxQlFVMDdjVUpCUTJwRE8ybENRVU5LTzBGQlEwUXNiMEpCUVVrc1MwRkJTeXhGUVVGRk8wRkJRMUFzZVVKQlFVc3NSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eERRVUZETEdsQ1FVRnBRaXhEUVVGRExFTkJRVU03UVVGRE1VTXNkMEpCUVVrc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVsQlFVa3NTMEZCU3l4RFFVRkRMRTFCUVUwc1EwRkJRenRCUVVONlF5eDNRa0ZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhGUVVGRExGVkJRVlVzUlVGQlJTeEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRk5CUVZNN1FVRkRha01zYVVOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGRExFTkJRVU03UVVGRE1VSXNiME5CUVZrc1JVRkJSU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWYzdRVUZEY2tNc2JVTkJRVmNzUlVGQlJTeExRVUZMTEVkQlFVY3NTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhOUVVGTkxFZEJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNUVUZCVFN4SFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEhRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFhRVUZYTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFMUJRVTBzUlVGQlF5eERRVUZETzBGQlF6bEtMSGRDUVVGSkxFTkJRVU1zVFVGQlRTeEpRVUZKTEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVONFFpeDNRa0ZCU1N4RFFVRkRMRXRCUVVzc1NVRkJTU3hMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEZGtJc2QwSkJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NTMEZCU3l4RFFVRkRPMEZCUTNKQ0xIZENRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETzBGQlEycERMSGRDUVVGSkxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RlFVRkZPMEZCUTNKQ0xEUkNRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRTFCUVUwc1NVRkJTU3hKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdjVUpCUTJwRk8wRkJRMFFzZDBKQlFVa3NRMEZCUXl4TFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRE8wRkJRMjVDTEhkQ1FVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0QlFVTnFSQ3gzUWtGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGVrSXNlVUpCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExFVkJRVVVzUlVGQlJTeEpRVUZKTEVWQlFVVXNTMEZCU3l4RFFVRkRMRXRCUVVzc1EwRkJReXhGUVVGRExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhOUVVGTkxFZEJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTnlTQ3gzUWtGQlNTeEpRVUZKTEVOQlFVTXNTVUZCU1N4SlFVRkpMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzU1VGQlNTeERRVUZETEVsQlFVa3NSMEZCUnl4TFFVRkxMRU5CUVVNN1FVRkRhRVFzZDBKQlFVa3NTMEZCU3l4RlFVRkZMRTlCUVU4c1MwRkJTeXhEUVVGRExFdEJRMjVDTEU5QlFVODdhVUpCUTJZN1FVRkRSQ3h2UWtGQlNTeEpRVUZKTEVOQlFVTXNUVUZCVFN4TFFVRkxMRVZCUVVVc1JVRkJSVHRCUVVOd1Fpd3lRa0ZCVHl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRE8ybENRVU51UWl4TlFVRk5PMEZCUTBnc01rSkJRVThzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4M1FrRkJkMElzU1VGQlJTeEpRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkRMRU5CUVVNc1EwRkJRU3hCUVVGRExFZEJRVU1zZDBKQlFYZENMRWRCUVVNc1NVRkJTU3hEUVVGRExGbEJRVmtzUlVGQlJTeEZRVU4wUnl4RlFVRkRMRWxCUVVrc1JVRkJSU3hGUVVGRkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVsQlFVa3NSVUZCUlN4SlFVRkpMRVZCUVVVc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlF5eERRVUZETEVOQlFVTTdhVUpCUTNwRU8yRkJRMG83UVVGRFRDeGxRVUZITEVWQlFVTXNVMEZCVXl4SFFVRkhMRWRCUVVrN1FVRkRXaXh2UWtGQlNTeERRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hEUVVGRE8wRkJRM0JDTEc5Q1FVRkpMRTlCUVU4c1EwRkJReXhMUVVGTExGZEJRVmNzUlVGQlJUdEJRVU14UWl3eVFrRkJUeXhEUVVGRExFTkJRVU03YVVKQlExb3NUVUZCVFR0QlFVTklMREpDUVVGUExFbEJRVWtzUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0cFFrRkRja0k3WVVGRFNqdEJRVU5NTEdsQ1FVRkxMRVZCUVVNc1UwRkJVeXhMUVVGTExFTkJRVVVzVTBGQlV5eEZRVUZGTzBGQlEzcENMRzlDUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRenRoUVVOMlF6dEJRVU5NTEc5Q1FVRlJMRVZCUVVNc1UwRkJVeXhSUVVGUkxFZEJRVWs3UVVGRGRFSXNkVUpCUVU4c1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eEhRVUZITEVWQlFVVXNRMEZCUXp0aFFVTndRenRCUVVOTUxIbENRVUZoTEVWQlFVTXNVMEZCVXl4aFFVRmhMRWRCUVVrN1FVRkRhRU1zZFVKQlFVOHNTVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1RVRkJUU3hIUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNTMEZCU3l4RFFVRkRPMkZCUTI1R08wRkJRMHdzYjBKQlFWRXNSVUZCUXl4dlFrRkJXVHRCUVVOaUxIVkNRVUZQTEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hEUVVGRExHTkJRV01zUTBGQlF5eE5RVUZOTEVkQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1lVRkROVVE3UVVGRFRDeHhRa0ZCVXl4RlFVRkRMRk5CUVZNc1MwRkJTeXhEUVVGRkxGTkJRVk1zUlVGQlJUdEJRVU0zUWl4dlFrRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0aFFVTjZRaXhGUVVGRExFRkJRVU1zUTBGQlF6dEJRVU5TTEdGQlFVc3NRMEZCUXl4UFFVRlBMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRMjVDTEdGQlFVc3NRMEZCUXl4aFFVRmhMRWRCUVVjc1UwRkJVeXhUUVVGVExFTkJRVU1zUlVGQlJTeEZRVUZETEVkQlFVY3NSVUZCUXl4NVFrRkJlVUlzUlVGQlF5eFJRVUZSTEVWQlEyaEdPenRCUVVkR0xIRkNRVUZUTEV0QlFVc3NRMEZCUXl4TFFVRkxMRVZCUVVVc1IwRkJSeXhGUVVGRk8wRkJRM3BDTEhWQ1FVRlBMRWRCUVVjc1EwRkJReXhOUVVGTkxFZEJRVWNzUjBGQlJ5eERRVUZETEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNc1MwRkJTeXhGUVVGRkxFZEJRVWNzUTBGQlF5eE5RVUZOTEVkQlFVY3NSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRE8yRkJRek5GT3p0QlFVZEVMR2RDUVVGSkxFOUJRVThzUjBGQlF5eFJRVUZSTEVOQlFVRTdRVUZEY0VJc2IwSkJRVThzZVVKQlFYbENPMEZCUTJoRExIRkNRVUZMTEVOQlFVTTdRVUZETmtJc2QwSkJRVWNzUjBGQlJ5eERRVUZETEUxQlFVMHNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUzBGQlN5eE5RVUZOTEVWQlFVVTdRVUZEYkVNc05rSkJRVXNzUTBGQlF5eERRVUZETEVWQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRXQ3cwUWtGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenR4UWtGRGJFSXNUVUZCVFN4SlFVRkhMRWRCUVVjc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRXRCUVVzc1NVRkJTU3hGUVVGRk8wRkJRM1pETERaQ1FVRkxMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlExZ3NORUpCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdjVUpCUTI1Q0xFMUJRVTA3UVVGRFRDdzBRa0ZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dHhRa0ZEYkVJN1FVRkRSQ3gzUWtGQlJ5eEhRVUZITEVOQlFVTXNUVUZCVFN4RlFVRkZMRTlCUVU4c1JVRkJSU3hEUVVGRE96dEJRVVUxUkN3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NRMEZCUXp0QlFVRkRMREpDUVVGUExFVkJRVVVzUTBGQlF6dEJRVU5xUWl3d1FrRkJUVHRCUVVGQkxFRkJRMDRzY1VKQlFVc3NRMEZCUXp0QlFVTTJRaXgzUWtGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRPMEZCUTJoQ0xESkNRVUZQTEVWQlFVVXNRMEZCUXpzN1FVRkZOME1zTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFTkJRVU03UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eEJRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMEZCUTNCRExEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhEUVVGRE8wRkJRelJDTEhkQ1FVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03T3pzN1FVRkphRUlzZDBKQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhKUVVGSkxFTkJRVU1zWTBGQll5eERRVUZETEUxQlFVMHNSMEZCUXl4RFFVRkRMRU5CUVVNc1MwRkJTeXhMUVVGTExFVkJRVVU3UVVGREwwUXNLMEpCUVU4c1JVRkJSU3hEUVVGRE8zRkNRVU5ZTEUxQlFVMDdRVUZEVEN3MlFrRkJTeXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTmFMQ3RDUVVGUExHVkJRV1VzUTBGQlF6dHhRa0ZEZUVJN08wRkJSVzVETERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eERRVUZETzBGQlFVVXNNa0pCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMnhDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eERRVUZETzBGQlEwb3NkMEpCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dEJRVU5vUWl3eVFrRkJUeXhGUVVGRkxFTkJRVU03TzBGQlJWb3NNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVOQlFVTTdRVUZCUXl3eVFrRkJUeXhGUVVGRkxFTkJRVU03UVVGRGFrSXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVOQlFVTTdRVUZCUXl3eVFrRkJUeXhGUVVGRkxFTkJRVU03UVVGRGFrSXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVOQlFVTTdRVUZCUlN3eVFrRkJUeXhGUVVGRkxFTkJRVU03UVVGRGJFSXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZETWtJc2QwSkJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0QlFVTm9RaXgzUWtGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRCUVVOc1Fpd3lRa0ZCVHl4RlFVRkZMRU5CUVVNN08wRkJSVFZETERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNNa0pCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMnhDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNNa0pCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMnhDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNNa0pCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMnhDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNNa0pCUVU4c1JVRkJSU3hEUVVGRE8wRkJRMnhDTERCQ1FVRk5PMEZCUVVFc1FVRkRUaXh4UWtGQlN5eEZRVUZGTzBGQlFVTXNkMEpCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF5eEJRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMEZCUTI1RExEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zZDBKQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJReXhCUVVGRExFOUJRVThzUlVGQlJTeERRVUZETzBGQlEyNURMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc01rSkJRVThzUlVGQlJTeERRVUZETzBGQlEyeENMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc01rSkJRVThzUlVGQlJTeERRVUZETzBGQlEyeENMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc01rSkJRVThzUlVGQlJTeERRVUZETzBGQlEyeENMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUVVNc01rSkJRVThzUlVGQlJTeERRVUZETzBGQlEyeENMREJDUVVGTk8wRkJRVUVzUVVGRFRpeHhRa0ZCU3l4RlFVRkZPMEZCUTB3c2QwSkJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNSMEZCUnl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8wRkJRM1pDTEhkQ1FVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03UVVGRGFFSXNkMEpCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdPMEZCUlhCQ0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRMHdzZDBKQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRCUVVOb1Fpd3lRa0ZCVHl4RlFVRkZMRU5CUVVNN08wRkJSVm9zTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5d3lRa0ZCVHl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5d3lRa0ZCVHl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5d3lRa0ZCVHl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5d3lRa0ZCVHl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5d3lRa0ZCVHl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3TzBGQlExQXNNRUpCUVUwN1FVRkJRU3hCUVVOT0xIRkNRVUZMTEVWQlFVVTdRVUZCUXl4M1FrRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETEVGQlFVTXNUMEZCVHl4RlFVRkZMRU5CUVVNN1FVRkRia01zTUVKQlFVMDdRVUZCUVN4QlFVTk9MSEZDUVVGTExFVkJRVVU3UVVGQlF5eDNRa0ZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRExFRkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTTdRVUZEYmtNc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXgxUWtGQlJ5eERRVUZETEUxQlFVMHNSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhGUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVNc1IwRkJSeXhEUVVGRExFTkJRVU1zUVVGQlF5eFBRVUZQTEVWQlFVVXNRMEZCUXp0QlFVTXZSQ3d3UWtGQlRUdEJRVUZCTEVGQlEwNHNjVUpCUVVzc1JVRkJSVHRCUVVGRExIVkNRVUZITEVOQlFVTXNUVUZCVFN4SFFVRkhMRXRCUVVzc1EwRkJReXhEUVVGRExFVkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRTFCUVUwc1JVRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eEJRVUZETEU5QlFVOHNSVUZCUlN4RFFVRkRPMEZCUXk5RUxEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zTWtKQlFVOHNSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xEQkNRVUZOTzBGQlFVRXNRVUZEVGl4eFFrRkJTeXhGUVVGRk8wRkJRVU1zZFVKQlFVY3NRMEZCUXl4TlFVRk5MRWRCUVVjc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlFVTXNZVUZCWVN4RlFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFRkJRVU1zVDBGQlR5eEZRVUZGTEVOQlFVTTdRVUZEZGtVc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXd5UWtGQlR5eFRRVUZUTEVOQlFVTTdRVUZEZWtJc01FSkJRVTA3UVVGQlFTeEJRVU5PTEhGQ1FVRkxMRVZCUVVVN1FVRkJReXd5UWtGQlR5eERRVUZETEVOQlFVTTdRVUZEYWtJc01FSkJRVTA3UVVGQlFTeGhRVU5NTzFOQlEwRXNRMEZCUXp0QlFVTkdMR0ZCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzUTBGQlF5d3dRa0ZCTUVJc1JVRkJReXhsUVVGbExFVkJRVU1zSzBOQlFTdERMRVZCUVVNc2QwSkJRWGRDTEVWQlFVTXNiMFZCUVc5RkxFVkJRVU1zT0VKQlFUaENMRVZCUVVNc2VVSkJRWGxDTEVWQlFVTXNVMEZCVXl4RlFVRkRMRk5CUVZNc1JVRkJReXhsUVVGbExFVkJRVU1zWlVGQlpTeEZRVUZETEdkQ1FVRm5RaXhGUVVGRExHbENRVUZwUWl4RlFVRkRMRzFDUVVGdFFpeEZRVUZETEdsQ1FVRnBRaXhGUVVGRExEUkNRVUUwUWl4RlFVRkRMR2xEUVVGcFF5eEZRVUZETEdsQ1FVRnBRaXhGUVVGRExIZENRVUYzUWl4RlFVRkRMR2xDUVVGcFFpeEZRVUZETEdkQ1FVRm5RaXhGUVVGRExHdENRVUZyUWl4RlFVRkRMRFJDUVVFMFFpeEZRVUZETEd0Q1FVRnJRaXhGUVVGRExGRkJRVkVzUlVGQlF5eFhRVUZYTEVWQlFVTXNNa0pCUVRKQ0xFVkJRVU1zV1VGQldTeEZRVUZETEZWQlFWVXNSVUZCUXl4cFFrRkJhVUlzUlVGQlF5eGxRVUZsTEVWQlFVTXNjMEpCUVhOQ0xFVkJRVU1zYzBKQlFYTkNMRVZCUVVNc1VVRkJVU3hGUVVGRExIZENRVUYzUWl4RlFVRkRMSGxDUVVGNVFpeEZRVUZETERaQ1FVRTJRaXhGUVVGRExIZENRVUYzUWl4RlFVRkRMSGxEUVVGNVF5eEZRVUZETEdOQlFXTXNSVUZCUXl4VFFVRlRMRVZCUVVNc2VVUkJRWGxFTEVWQlFVTXNkMEpCUVhkQ0xFVkJRVU1zVVVGQlVTeEZRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMEZCUTI1blF5eGhRVUZMTEVOQlFVTXNWVUZCVlN4SFFVRkhMRVZCUVVNc1NVRkJTU3hGUVVGRExFVkJRVU1zVDBGQlR5eEZRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkRMRU5CUVVNc1JVRkJReXhEUVVGRExFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1JVRkJReXhGUVVGRkxFVkJRVU1zUlVGQlJTeEZRVUZETEVWQlFVVXNSVUZCUXl4RlFVRkZMRVZCUVVNc1JVRkJSU3hGUVVGRExFVkJRVVVzUlVGQlF5eEZRVUZGTEVWQlFVTXNSVUZCUlN4RlFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRExGZEJRVmNzUlVGQlF5eExRVUZMTEVWQlFVTXNSVUZCUXl4TFFVRkxMRVZCUVVNc1JVRkJReXhQUVVGUExFVkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4WFFVRlhMRVZCUVVNc1MwRkJTeXhGUVVGRExFVkJRVU1zUzBGQlN5eEZRVUZETEVWQlFVTXNUMEZCVHl4RlFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zVjBGQlZ5eEZRVUZETEV0QlFVc3NSVUZCUXl4RlFVRkRMRXRCUVVzc1JVRkJReXhGUVVGRExFOUJRVThzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1EwRkJReXhEUVVGRExFVkJRVU1zVjBGQlZ5eEZRVUZETEV0QlFVc3NSVUZCUXl4RlFVRkRMRk5CUVZNc1JVRkJReXhGUVVGRExFOUJRVThzUlVGQlF5eERRVUZETEVOQlFVTXNSVUZCUXl4RFFVRkRMRVZCUVVNc1JVRkJSU3hEUVVGRExFVkJRVU1zVjBGQlZ5eEZRVUZETEVsQlFVa3NSVUZCUXl4RlFVRkRMRU5CUVVNN1FVRkRNMVVzWlVGQlR5eExRVUZMTEVOQlFVTTdTMEZCUXl4RFFVRkJMRVZCUVVjc1EwRkJRVHRCUVVOcVFpeFZRVUZOTEVOQlFVTXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJRenRCUVVOeVFpeGhRVUZUTEUxQlFVMHNSMEZCU1R0QlFVRkZMRmxCUVVrc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeERRVUZETzB0QlFVVXNUVUZCVFN4RFFVRkRMRk5CUVZNc1IwRkJSeXhOUVVGTkxFTkJRVU1zVFVGQlRTeERRVUZETEUxQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNN1FVRkRja1lzVjBGQlR5eEpRVUZKTEUxQlFVMHNSVUZCUVN4RFFVRkRPME5CUTJwQ0xFTkJRVUVzUlVGQlJ5eERRVUZETEhGQ1FVRmxMRlZCUVZVaUxDSm1hV3hsSWpvaWNHRnljMlZ5TG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeThnUm1sc1pTQnBaMjV2Y21Wa0lHbHVJR052ZG1WeVlXZGxJSFJsYzNSeklIWnBZU0J6WlhSMGFXNW5JR2x1SUM1cGMzUmhibUoxYkM1NWJXeGNiaThxSUVwcGMyOXVJR2RsYm1WeVlYUmxaQ0J3WVhKelpYSWdLaTljYm5aaGNpQm9ZVzVrYkdWaVlYSnpJRDBnS0daMWJtTjBhVzl1S0NsN1hHNTJZWElnY0dGeWMyVnlJRDBnZTNSeVlXTmxPaUJtZFc1amRHbHZiaUIwY21GalpTQW9LU0I3SUgwc1hHNTVlVG9nZTMwc1hHNXplVzFpYjJ4elh6b2dlMXdpWlhKeWIzSmNJam95TEZ3aWNtOXZkRndpT2pNc1hDSndjbTluY21GdFhDSTZOQ3hjSWtWUFJsd2lPalVzWENKd2NtOW5jbUZ0WDNKbGNHVjBhWFJwYjI0d1hDSTZOaXhjSW5OMFlYUmxiV1Z1ZEZ3aU9qY3NYQ0p0ZFhOMFlXTm9aVndpT2pnc1hDSmliRzlqYTF3aU9qa3NYQ0p5WVhkQ2JHOWphMXdpT2pFd0xGd2ljR0Z5ZEdsaGJGd2lPakV4TEZ3aWNHRnlkR2xoYkVKc2IyTnJYQ0k2TVRJc1hDSmpiMjUwWlc1MFhDSTZNVE1zWENKRFQwMU5SVTVVWENJNk1UUXNYQ0pEVDA1VVJVNVVYQ0k2TVRVc1hDSnZjR1Z1VW1GM1FteHZZMnRjSWpveE5peGNJbkpoZDBKc2IyTnJYM0psY0dWMGFYUnBiMjR3WENJNk1UY3NYQ0pGVGtSZlVrRlhYMEpNVDBOTFhDSTZNVGdzWENKUFVFVk9YMUpCVjE5Q1RFOURTMXdpT2pFNUxGd2lhR1ZzY0dWeVRtRnRaVndpT2pJd0xGd2liM0JsYmxKaGQwSnNiMk5yWDNKbGNHVjBhWFJwYjI0d1hDSTZNakVzWENKdmNHVnVVbUYzUW14dlkydGZiM0IwYVc5dU1Gd2lPakl5TEZ3aVEweFBVMFZmVWtGWFgwSk1UME5MWENJNk1qTXNYQ0p2Y0dWdVFteHZZMnRjSWpveU5DeGNJbUpzYjJOclgyOXdkR2x2YmpCY0lqb3lOU3hjSW1Oc2IzTmxRbXh2WTJ0Y0lqb3lOaXhjSW05d1pXNUpiblpsY25ObFhDSTZNamNzWENKaWJHOWphMTl2Y0hScGIyNHhYQ0k2TWpnc1hDSlBVRVZPWDBKTVQwTkxYQ0k2TWprc1hDSnZjR1Z1UW14dlkydGZjbVZ3WlhScGRHbHZiakJjSWpvek1DeGNJbTl3Wlc1Q2JHOWphMTl2Y0hScGIyNHdYQ0k2TXpFc1hDSnZjR1Z1UW14dlkydGZiM0IwYVc5dU1Wd2lPak15TEZ3aVEweFBVMFZjSWpvek15eGNJazlRUlU1ZlNVNVdSVkpUUlZ3aU9qTTBMRndpYjNCbGJrbHVkbVZ5YzJWZmNtVndaWFJwZEdsdmJqQmNJam96TlN4Y0ltOXdaVzVKYm5abGNuTmxYMjl3ZEdsdmJqQmNJam96Tml4Y0ltOXdaVzVKYm5abGNuTmxYMjl3ZEdsdmJqRmNJam96Tnl4Y0ltOXdaVzVKYm5abGNuTmxRMmhoYVc1Y0lqb3pPQ3hjSWs5UVJVNWZTVTVXUlZKVFJWOURTRUZKVGx3aU9qTTVMRndpYjNCbGJrbHVkbVZ5YzJWRGFHRnBibDl5WlhCbGRHbDBhVzl1TUZ3aU9qUXdMRndpYjNCbGJrbHVkbVZ5YzJWRGFHRnBibDl2Y0hScGIyNHdYQ0k2TkRFc1hDSnZjR1Z1U1c1MlpYSnpaVU5vWVdsdVgyOXdkR2x2YmpGY0lqbzBNaXhjSW1sdWRtVnljMlZCYm1SUWNtOW5jbUZ0WENJNk5ETXNYQ0pKVGxaRlVsTkZYQ0k2TkRRc1hDSnBiblpsY25ObFEyaGhhVzVjSWpvME5TeGNJbWx1ZG1WeWMyVkRhR0ZwYmw5dmNIUnBiMjR3WENJNk5EWXNYQ0pQVUVWT1gwVk9SRUpNVDBOTFhDSTZORGNzWENKUFVFVk9YQ0k2TkRnc1hDSnRkWE4wWVdOb1pWOXlaWEJsZEdsMGFXOXVNRndpT2pRNUxGd2liWFZ6ZEdGamFHVmZiM0IwYVc5dU1Gd2lPalV3TEZ3aVQxQkZUbDlWVGtWVFEwRlFSVVJjSWpvMU1TeGNJbTExYzNSaFkyaGxYM0psY0dWMGFYUnBiMjR4WENJNk5USXNYQ0p0ZFhOMFlXTm9aVjl2Y0hScGIyNHhYQ0k2TlRNc1hDSkRURTlUUlY5VlRrVlRRMEZRUlVSY0lqbzFOQ3hjSWs5UVJVNWZVRUZTVkVsQlRGd2lPalUxTEZ3aWNHRnlkR2xoYkU1aGJXVmNJam8xTml4Y0luQmhjblJwWVd4ZmNtVndaWFJwZEdsdmJqQmNJam8xTnl4Y0luQmhjblJwWVd4ZmIzQjBhVzl1TUZ3aU9qVTRMRndpYjNCbGJsQmhjblJwWVd4Q2JHOWphMXdpT2pVNUxGd2lUMUJGVGw5UVFWSlVTVUZNWDBKTVQwTkxYQ0k2TmpBc1hDSnZjR1Z1VUdGeWRHbGhiRUpzYjJOclgzSmxjR1YwYVhScGIyNHdYQ0k2TmpFc1hDSnZjR1Z1VUdGeWRHbGhiRUpzYjJOclgyOXdkR2x2YmpCY0lqbzJNaXhjSW5CaGNtRnRYQ0k2TmpNc1hDSnpaWGh3Y2x3aU9qWTBMRndpVDFCRlRsOVRSVmhRVWx3aU9qWTFMRndpYzJWNGNISmZjbVZ3WlhScGRHbHZiakJjSWpvMk5peGNJbk5sZUhCeVgyOXdkR2x2YmpCY0lqbzJOeXhjSWtOTVQxTkZYMU5GV0ZCU1hDSTZOamdzWENKb1lYTm9YQ0k2Tmprc1hDSm9ZWE5vWDNKbGNHVjBhWFJwYjI1ZmNHeDFjekJjSWpvM01DeGNJbWhoYzJoVFpXZHRaVzUwWENJNk56RXNYQ0pKUkZ3aU9qY3lMRndpUlZGVlFVeFRYQ0k2TnpNc1hDSmliRzlqYTFCaGNtRnRjMXdpT2pjMExGd2lUMUJGVGw5Q1RFOURTMTlRUVZKQlRWTmNJam8zTlN4Y0ltSnNiMk5yVUdGeVlXMXpYM0psY0dWMGFYUnBiMjVmY0d4MWN6QmNJam8zTml4Y0lrTk1UMU5GWDBKTVQwTkxYMUJCVWtGTlUxd2lPamMzTEZ3aWNHRjBhRndpT2pjNExGd2laR0YwWVU1aGJXVmNJam8zT1N4Y0lsTlVVa2xPUjF3aU9qZ3dMRndpVGxWTlFrVlNYQ0k2T0RFc1hDSkNUMDlNUlVGT1hDSTZPRElzWENKVlRrUkZSa2xPUlVSY0lqbzRNeXhjSWs1VlRFeGNJam80TkN4Y0lrUkJWRUZjSWpvNE5TeGNJbkJoZEdoVFpXZHRaVzUwYzF3aU9qZzJMRndpVTBWUVhDSTZPRGNzWENJa1lXTmpaWEIwWENJNk1DeGNJaVJsYm1SY0lqb3hmU3hjYm5SbGNtMXBibUZzYzE4NklIc3lPbHdpWlhKeWIzSmNJaXcxT2x3aVJVOUdYQ0lzTVRRNlhDSkRUMDFOUlU1VVhDSXNNVFU2WENKRFQwNVVSVTVVWENJc01UZzZYQ0pGVGtSZlVrRlhYMEpNVDBOTFhDSXNNVGs2WENKUFVFVk9YMUpCVjE5Q1RFOURTMXdpTERJek9sd2lRMHhQVTBWZlVrRlhYMEpNVDBOTFhDSXNNams2WENKUFVFVk9YMEpNVDBOTFhDSXNNek02WENKRFRFOVRSVndpTERNME9sd2lUMUJGVGw5SlRsWkZVbE5GWENJc016azZYQ0pQVUVWT1gwbE9Wa1ZTVTBWZlEwaEJTVTVjSWl3ME5EcGNJa2xPVmtWU1UwVmNJaXcwTnpwY0lrOVFSVTVmUlU1RVFreFBRMHRjSWl3ME9EcGNJazlRUlU1Y0lpdzFNVHBjSWs5UVJVNWZWVTVGVTBOQlVFVkVYQ0lzTlRRNlhDSkRURTlUUlY5VlRrVlRRMEZRUlVSY0lpdzFOVHBjSWs5UVJVNWZVRUZTVkVsQlRGd2lMRFl3T2x3aVQxQkZUbDlRUVZKVVNVRk1YMEpNVDBOTFhDSXNOalU2WENKUFVFVk9YMU5GV0ZCU1hDSXNOamc2WENKRFRFOVRSVjlUUlZoUVVsd2lMRGN5T2x3aVNVUmNJaXczTXpwY0lrVlJWVUZNVTF3aUxEYzFPbHdpVDFCRlRsOUNURTlEUzE5UVFWSkJUVk5jSWl3M056cGNJa05NVDFORlgwSk1UME5MWDFCQlVrRk5VMXdpTERnd09sd2lVMVJTU1U1SFhDSXNPREU2WENKT1ZVMUNSVkpjSWl3NE1qcGNJa0pQVDB4RlFVNWNJaXc0TXpwY0lsVk9SRVZHU1U1RlJGd2lMRGcwT2x3aVRsVk1URndpTERnMU9sd2lSRUZVUVZ3aUxEZzNPbHdpVTBWUVhDSjlMRnh1Y0hKdlpIVmpkR2x2Ym5OZk9pQmJNQ3hiTXl3eVhTeGJOQ3d4WFN4Yk55d3hYU3hiTnl3eFhTeGJOeXd4WFN4Yk55d3hYU3hiTnl3eFhTeGJOeXd4WFN4Yk55d3hYU3hiTVRNc01WMHNXekV3TEROZExGc3hOaXcxWFN4Yk9TdzBYU3hiT1N3MFhTeGJNalFzTmwwc1d6STNMRFpkTEZzek9DdzJYU3hiTkRNc01sMHNXelExTEROZExGczBOU3d4WFN4Yk1qWXNNMTBzV3pnc05WMHNXemdzTlYwc1d6RXhMRFZkTEZzeE1pd3pYU3hiTlRrc05WMHNXell6TERGZExGczJNeXd4WFN4Yk5qUXNOVjBzV3pZNUxERmRMRnMzTVN3elhTeGJOelFzTTEwc1d6SXdMREZkTEZzeU1Dd3hYU3hiTWpBc01WMHNXekl3TERGZExGc3lNQ3d4WFN4Yk1qQXNNVjBzV3pJd0xERmRMRnMxTml3eFhTeGJOVFlzTVYwc1d6YzVMREpkTEZzM09Dd3hYU3hiT0RZc00xMHNXemcyTERGZExGczJMREJkTEZzMkxESmRMRnN4Tnl3d1hTeGJNVGNzTWwwc1d6SXhMREJkTEZzeU1Td3lYU3hiTWpJc01GMHNXekl5TERGZExGc3lOU3d3WFN4Yk1qVXNNVjBzV3pJNExEQmRMRnN5T0N3eFhTeGJNekFzTUYwc1d6TXdMREpkTEZzek1Td3dYU3hiTXpFc01WMHNXek15TERCZExGc3pNaXd4WFN4Yk16VXNNRjBzV3pNMUxESmRMRnN6Tml3d1hTeGJNellzTVYwc1d6TTNMREJkTEZzek55d3hYU3hiTkRBc01GMHNXelF3TERKZExGczBNU3d3WFN4Yk5ERXNNVjBzV3pReUxEQmRMRnMwTWl3eFhTeGJORFlzTUYwc1d6UTJMREZkTEZzME9Td3dYU3hiTkRrc01sMHNXelV3TERCZExGczFNQ3d4WFN4Yk5USXNNRjBzV3pVeUxESmRMRnMxTXl3d1hTeGJOVE1zTVYwc1d6VTNMREJkTEZzMU55d3lYU3hiTlRnc01GMHNXelU0TERGZExGczJNU3d3WFN4Yk5qRXNNbDBzV3pZeUxEQmRMRnMyTWl3eFhTeGJOallzTUYwc1d6WTJMREpkTEZzMk55d3dYU3hiTmpjc01WMHNXemN3TERGZExGczNNQ3d5WFN4Yk56WXNNVjBzV3pjMkxESmRYU3hjYm5CbGNtWnZjbTFCWTNScGIyNDZJR1oxYm1OMGFXOXVJR0Z1YjI1NWJXOTFjeWg1ZVhSbGVIUXNlWGxzWlc1bkxIbDViR2x1Wlc1dkxIbDVMSGw1YzNSaGRHVXNKQ1FzWHlSY2Jpa2dlMXh1WEc1MllYSWdKREFnUFNBa0pDNXNaVzVuZEdnZ0xTQXhPMXh1YzNkcGRHTm9JQ2g1ZVhOMFlYUmxLU0I3WEc1allYTmxJREU2SUhKbGRIVnliaUFrSkZza01DMHhYVHNnWEc1aWNtVmhhenRjYm1OaGMyVWdNanAwYUdsekxpUWdQU0I1ZVM1d2NtVndZWEpsVUhKdlozSmhiU2drSkZza01GMHBPMXh1WW5KbFlXczdYRzVqWVhObElETTZkR2hwY3k0a0lEMGdKQ1JiSkRCZE8xeHVZbkpsWVdzN1hHNWpZWE5sSURRNmRHaHBjeTRrSUQwZ0pDUmJKREJkTzF4dVluSmxZV3M3WEc1allYTmxJRFU2ZEdocGN5NGtJRDBnSkNSYkpEQmRPMXh1WW5KbFlXczdYRzVqWVhObElEWTZkR2hwY3k0a0lEMGdKQ1JiSkRCZE8xeHVZbkpsWVdzN1hHNWpZWE5sSURjNmRHaHBjeTRrSUQwZ0pDUmJKREJkTzF4dVluSmxZV3M3WEc1allYTmxJRGc2ZEdocGN5NGtJRDBnSkNSYkpEQmRPMXh1WW5KbFlXczdYRzVqWVhObElEazZYRzRnSUNBZ2RHaHBjeTRrSUQwZ2UxeHVJQ0FnSUNBZ2RIbHdaVG9nSjBOdmJXMWxiblJUZEdGMFpXMWxiblFuTEZ4dUlDQWdJQ0FnZG1Gc2RXVTZJSGw1TG5OMGNtbHdRMjl0YldWdWRDZ2tKRnNrTUYwcExGeHVJQ0FnSUNBZ2MzUnlhWEE2SUhsNUxuTjBjbWx3Um14aFozTW9KQ1JiSkRCZExDQWtKRnNrTUYwcExGeHVJQ0FnSUNBZ2JHOWpPaUI1ZVM1c2IyTkpibVp2S0hSb2FYTXVYeVFwWEc0Z0lDQWdmVHRjYmlBZ1hHNWljbVZoYXp0Y2JtTmhjMlVnTVRBNlhHNGdJQ0FnZEdocGN5NGtJRDBnZTF4dUlDQWdJQ0FnZEhsd1pUb2dKME52Ym5SbGJuUlRkR0YwWlcxbGJuUW5MRnh1SUNBZ0lDQWdiM0pwWjJsdVlXdzZJQ1FrV3lRd1hTeGNiaUFnSUNBZ0lIWmhiSFZsT2lBa0pGc2tNRjBzWEc0Z0lDQWdJQ0JzYjJNNklIbDVMbXh2WTBsdVptOG9kR2hwY3k1ZkpDbGNiaUFnSUNCOU8xeHVJQ0JjYm1KeVpXRnJPMXh1WTJGelpTQXhNVHAwYUdsekxpUWdQU0I1ZVM1d2NtVndZWEpsVW1GM1FteHZZMnNvSkNSYkpEQXRNbDBzSUNRa1d5UXdMVEZkTENBa0pGc2tNRjBzSUhSb2FYTXVYeVFwTzF4dVluSmxZV3M3WEc1allYTmxJREV5T25Sb2FYTXVKQ0E5SUhzZ2NHRjBhRG9nSkNSYkpEQXRNMTBzSUhCaGNtRnRjem9nSkNSYkpEQXRNbDBzSUdoaGMyZzZJQ1FrV3lRd0xURmRJSDA3WEc1aWNtVmhhenRjYm1OaGMyVWdNVE02ZEdocGN5NGtJRDBnZVhrdWNISmxjR0Z5WlVKc2IyTnJLQ1FrV3lRd0xUTmRMQ0FrSkZza01DMHlYU3dnSkNSYkpEQXRNVjBzSUNRa1d5UXdYU3dnWm1Gc2MyVXNJSFJvYVhNdVh5UXBPMXh1WW5KbFlXczdYRzVqWVhObElERTBPblJvYVhNdUpDQTlJSGw1TG5CeVpYQmhjbVZDYkc5amF5Z2tKRnNrTUMwelhTd2dKQ1JiSkRBdE1sMHNJQ1FrV3lRd0xURmRMQ0FrSkZza01GMHNJSFJ5ZFdVc0lIUm9hWE11WHlRcE8xeHVZbkpsWVdzN1hHNWpZWE5sSURFMU9uUm9hWE11SkNBOUlIc2diM0JsYmpvZ0pDUmJKREF0TlYwc0lIQmhkR2c2SUNRa1d5UXdMVFJkTENCd1lYSmhiWE02SUNRa1d5UXdMVE5kTENCb1lYTm9PaUFrSkZza01DMHlYU3dnWW14dlkydFFZWEpoYlhNNklDUWtXeVF3TFRGZExDQnpkSEpwY0RvZ2VYa3VjM1J5YVhCR2JHRm5jeWdrSkZza01DMDFYU3dnSkNSYkpEQmRLU0I5TzF4dVluSmxZV3M3WEc1allYTmxJREUyT25Sb2FYTXVKQ0E5SUhzZ2NHRjBhRG9nSkNSYkpEQXRORjBzSUhCaGNtRnRjem9nSkNSYkpEQXRNMTBzSUdoaGMyZzZJQ1FrV3lRd0xUSmRMQ0JpYkc5amExQmhjbUZ0Y3pvZ0pDUmJKREF0TVYwc0lITjBjbWx3T2lCNWVTNXpkSEpwY0Vac1lXZHpLQ1FrV3lRd0xUVmRMQ0FrSkZza01GMHBJSDA3WEc1aWNtVmhhenRjYm1OaGMyVWdNVGM2ZEdocGN5NGtJRDBnZXlCd1lYUm9PaUFrSkZza01DMDBYU3dnY0dGeVlXMXpPaUFrSkZza01DMHpYU3dnYUdGemFEb2dKQ1JiSkRBdE1sMHNJR0pzYjJOclVHRnlZVzF6T2lBa0pGc2tNQzB4WFN3Z2MzUnlhWEE2SUhsNUxuTjBjbWx3Um14aFozTW9KQ1JiSkRBdE5WMHNJQ1FrV3lRd1hTa2dmVHRjYm1KeVpXRnJPMXh1WTJGelpTQXhPRHAwYUdsekxpUWdQU0I3SUhOMGNtbHdPaUI1ZVM1emRISnBjRVpzWVdkektDUWtXeVF3TFRGZExDQWtKRnNrTUMweFhTa3NJSEJ5YjJkeVlXMDZJQ1FrV3lRd1hTQjlPMXh1WW5KbFlXczdYRzVqWVhObElERTVPbHh1SUNBZ0lIWmhjaUJwYm5abGNuTmxJRDBnZVhrdWNISmxjR0Z5WlVKc2IyTnJLQ1FrV3lRd0xUSmRMQ0FrSkZza01DMHhYU3dnSkNSYkpEQmRMQ0FrSkZza01GMHNJR1poYkhObExDQjBhR2x6TGw4a0tTeGNiaUFnSUNBZ0lDQWdjSEp2WjNKaGJTQTlJSGw1TG5CeVpYQmhjbVZRY205bmNtRnRLRnRwYm5abGNuTmxYU3dnSkNSYkpEQXRNVjB1Ykc5aktUdGNiaUFnSUNCd2NtOW5jbUZ0TG1Ob1lXbHVaV1FnUFNCMGNuVmxPMXh1WEc0Z0lDQWdkR2hwY3k0a0lEMGdleUJ6ZEhKcGNEb2dKQ1JiSkRBdE1sMHVjM1J5YVhBc0lIQnliMmR5WVcwNklIQnliMmR5WVcwc0lHTm9ZV2x1T2lCMGNuVmxJSDA3WEc0Z0lGeHVZbkpsWVdzN1hHNWpZWE5sSURJd09uUm9hWE11SkNBOUlDUWtXeVF3WFR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F5TVRwMGFHbHpMaVFnUFNCN2NHRjBhRG9nSkNSYkpEQXRNVjBzSUhOMGNtbHdPaUI1ZVM1emRISnBjRVpzWVdkektDUWtXeVF3TFRKZExDQWtKRnNrTUYwcGZUdGNibUp5WldGck8xeHVZMkZ6WlNBeU1qcDBhR2x6TGlRZ1BTQjVlUzV3Y21Wd1lYSmxUWFZ6ZEdGamFHVW9KQ1JiSkRBdE0xMHNJQ1FrV3lRd0xUSmRMQ0FrSkZza01DMHhYU3dnSkNSYkpEQXRORjBzSUhsNUxuTjBjbWx3Um14aFozTW9KQ1JiSkRBdE5GMHNJQ1FrV3lRd1hTa3NJSFJvYVhNdVh5UXBPMXh1WW5KbFlXczdYRzVqWVhObElESXpPblJvYVhNdUpDQTlJSGw1TG5CeVpYQmhjbVZOZFhOMFlXTm9aU2drSkZza01DMHpYU3dnSkNSYkpEQXRNbDBzSUNRa1d5UXdMVEZkTENBa0pGc2tNQzAwWFN3Z2VYa3VjM1J5YVhCR2JHRm5jeWdrSkZza01DMDBYU3dnSkNSYkpEQmRLU3dnZEdocGN5NWZKQ2s3WEc1aWNtVmhhenRjYm1OaGMyVWdNalE2WEc0Z0lDQWdkR2hwY3k0a0lEMGdlMXh1SUNBZ0lDQWdkSGx3WlRvZ0oxQmhjblJwWVd4VGRHRjBaVzFsYm5RbkxGeHVJQ0FnSUNBZ2JtRnRaVG9nSkNSYkpEQXRNMTBzWEc0Z0lDQWdJQ0J3WVhKaGJYTTZJQ1FrV3lRd0xUSmRMRnh1SUNBZ0lDQWdhR0Z6YURvZ0pDUmJKREF0TVYwc1hHNGdJQ0FnSUNCcGJtUmxiblE2SUNjbkxGeHVJQ0FnSUNBZ2MzUnlhWEE2SUhsNUxuTjBjbWx3Um14aFozTW9KQ1JiSkRBdE5GMHNJQ1FrV3lRd1hTa3NYRzRnSUNBZ0lDQnNiMk02SUhsNUxteHZZMGx1Wm04b2RHaHBjeTVmSkNsY2JpQWdJQ0I5TzF4dUlDQmNibUp5WldGck8xeHVZMkZ6WlNBeU5UcDBhR2x6TGlRZ1BTQjVlUzV3Y21Wd1lYSmxVR0Z5ZEdsaGJFSnNiMk5yS0NRa1d5UXdMVEpkTENBa0pGc2tNQzB4WFN3Z0pDUmJKREJkTENCMGFHbHpMbDhrS1R0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F5TmpwMGFHbHpMaVFnUFNCN0lIQmhkR2c2SUNRa1d5UXdMVE5kTENCd1lYSmhiWE02SUNRa1d5UXdMVEpkTENCb1lYTm9PaUFrSkZza01DMHhYU3dnYzNSeWFYQTZJSGw1TG5OMGNtbHdSbXhoWjNNb0pDUmJKREF0TkYwc0lDUWtXeVF3WFNrZ2ZUdGNibUp5WldGck8xeHVZMkZ6WlNBeU56cDBhR2x6TGlRZ1BTQWtKRnNrTUYwN1hHNWljbVZoYXp0Y2JtTmhjMlVnTWpnNmRHaHBjeTRrSUQwZ0pDUmJKREJkTzF4dVluSmxZV3M3WEc1allYTmxJREk1T2x4dUlDQWdJSFJvYVhNdUpDQTlJSHRjYmlBZ0lDQWdJSFI1Y0dVNklDZFRkV0pGZUhCeVpYTnphVzl1Snl4Y2JpQWdJQ0FnSUhCaGRHZzZJQ1FrV3lRd0xUTmRMRnh1SUNBZ0lDQWdjR0Z5WVcxek9pQWtKRnNrTUMweVhTeGNiaUFnSUNBZ0lHaGhjMmc2SUNRa1d5UXdMVEZkTEZ4dUlDQWdJQ0FnYkc5ak9pQjVlUzVzYjJOSmJtWnZLSFJvYVhNdVh5UXBYRzRnSUNBZ2ZUdGNiaUFnWEc1aWNtVmhhenRjYm1OaGMyVWdNekE2ZEdocGN5NGtJRDBnZTNSNWNHVTZJQ2RJWVhOb0p5d2djR0ZwY25NNklDUWtXeVF3WFN3Z2JHOWpPaUI1ZVM1c2IyTkpibVp2S0hSb2FYTXVYeVFwZlR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F6TVRwMGFHbHpMaVFnUFNCN2RIbHdaVG9nSjBoaGMyaFFZV2x5Snl3Z2EyVjVPaUI1ZVM1cFpDZ2tKRnNrTUMweVhTa3NJSFpoYkhWbE9pQWtKRnNrTUYwc0lHeHZZem9nZVhrdWJHOWpTVzVtYnloMGFHbHpMbDhrS1gwN1hHNWljbVZoYXp0Y2JtTmhjMlVnTXpJNmRHaHBjeTRrSUQwZ2VYa3VhV1FvSkNSYkpEQXRNVjBwTzF4dVluSmxZV3M3WEc1allYTmxJRE16T25Sb2FYTXVKQ0E5SUNRa1d5UXdYVHRjYm1KeVpXRnJPMXh1WTJGelpTQXpORHAwYUdsekxpUWdQU0FrSkZza01GMDdYRzVpY21WaGF6dGNibU5oYzJVZ016VTZkR2hwY3k0a0lEMGdlM1I1Y0dVNklDZFRkSEpwYm1kTWFYUmxjbUZzSnl3Z2RtRnNkV1U2SUNRa1d5UXdYU3dnYjNKcFoybHVZV3c2SUNRa1d5UXdYU3dnYkc5ak9pQjVlUzVzYjJOSmJtWnZLSFJvYVhNdVh5UXBmVHRjYm1KeVpXRnJPMXh1WTJGelpTQXpOanAwYUdsekxpUWdQU0I3ZEhsd1pUb2dKMDUxYldKbGNreHBkR1Z5WVd3bkxDQjJZV3gxWlRvZ1RuVnRZbVZ5S0NRa1d5UXdYU2tzSUc5eWFXZHBibUZzT2lCT2RXMWlaWElvSkNSYkpEQmRLU3dnYkc5ak9pQjVlUzVzYjJOSmJtWnZLSFJvYVhNdVh5UXBmVHRjYm1KeVpXRnJPMXh1WTJGelpTQXpOenAwYUdsekxpUWdQU0I3ZEhsd1pUb2dKMEp2YjJ4bFlXNU1hWFJsY21Gc0p5d2dkbUZzZFdVNklDUWtXeVF3WFNBOVBUMGdKM1J5ZFdVbkxDQnZjbWxuYVc1aGJEb2dKQ1JiSkRCZElEMDlQU0FuZEhKMVpTY3NJR3h2WXpvZ2VYa3ViRzlqU1c1bWJ5aDBhR2x6TGw4a0tYMDdYRzVpY21WaGF6dGNibU5oYzJVZ016ZzZkR2hwY3k0a0lEMGdlM1I1Y0dVNklDZFZibVJsWm1sdVpXUk1hWFJsY21Gc0p5d2diM0pwWjJsdVlXdzZJSFZ1WkdWbWFXNWxaQ3dnZG1Gc2RXVTZJSFZ1WkdWbWFXNWxaQ3dnYkc5ak9pQjVlUzVzYjJOSmJtWnZLSFJvYVhNdVh5UXBmVHRjYm1KeVpXRnJPMXh1WTJGelpTQXpPVHAwYUdsekxpUWdQU0I3ZEhsd1pUb2dKMDUxYkd4TWFYUmxjbUZzSnl3Z2IzSnBaMmx1WVd3NklHNTFiR3dzSUhaaGJIVmxPaUJ1ZFd4c0xDQnNiMk02SUhsNUxteHZZMGx1Wm04b2RHaHBjeTVmSkNsOU8xeHVZbkpsWVdzN1hHNWpZWE5sSURRd09uUm9hWE11SkNBOUlDUWtXeVF3WFR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0EwTVRwMGFHbHpMaVFnUFNBa0pGc2tNRjA3WEc1aWNtVmhhenRjYm1OaGMyVWdOREk2ZEdocGN5NGtJRDBnZVhrdWNISmxjR0Z5WlZCaGRHZ29kSEoxWlN3Z0pDUmJKREJkTENCMGFHbHpMbDhrS1R0Y2JtSnlaV0ZyTzF4dVkyRnpaU0EwTXpwMGFHbHpMaVFnUFNCNWVTNXdjbVZ3WVhKbFVHRjBhQ2htWVd4elpTd2dKQ1JiSkRCZExDQjBhR2x6TGw4a0tUdGNibUp5WldGck8xeHVZMkZ6WlNBME5Eb2dKQ1JiSkRBdE1sMHVjSFZ6YUNoN2NHRnlkRG9nZVhrdWFXUW9KQ1JiSkRCZEtTd2diM0pwWjJsdVlXdzZJQ1FrV3lRd1hTd2djMlZ3WVhKaGRHOXlPaUFrSkZza01DMHhYWDBwT3lCMGFHbHpMaVFnUFNBa0pGc2tNQzB5WFRzZ1hHNWljbVZoYXp0Y2JtTmhjMlVnTkRVNmRHaHBjeTRrSUQwZ1czdHdZWEowT2lCNWVTNXBaQ2drSkZza01GMHBMQ0J2Y21sbmFXNWhiRG9nSkNSYkpEQmRmVjA3WEc1aWNtVmhhenRjYm1OaGMyVWdORFk2ZEdocGN5NGtJRDBnVzEwN1hHNWljbVZoYXp0Y2JtTmhjMlVnTkRjNkpDUmJKREF0TVYwdWNIVnphQ2drSkZza01GMHBPMXh1WW5KbFlXczdYRzVqWVhObElEUTRPblJvYVhNdUpDQTlJRnRkTzF4dVluSmxZV3M3WEc1allYTmxJRFE1T2lRa1d5UXdMVEZkTG5CMWMyZ29KQ1JiSkRCZEtUdGNibUp5WldGck8xeHVZMkZ6WlNBMU1EcDBhR2x6TGlRZ1BTQmJYVHRjYm1KeVpXRnJPMXh1WTJGelpTQTFNVG9rSkZza01DMHhYUzV3ZFhOb0tDUWtXeVF3WFNrN1hHNWljbVZoYXp0Y2JtTmhjMlVnTlRnNmRHaHBjeTRrSUQwZ1cxMDdYRzVpY21WaGF6dGNibU5oYzJVZ05UazZKQ1JiSkRBdE1WMHVjSFZ6YUNna0pGc2tNRjBwTzF4dVluSmxZV3M3WEc1allYTmxJRFkwT25Sb2FYTXVKQ0E5SUZ0ZE8xeHVZbkpsWVdzN1hHNWpZWE5sSURZMU9pUWtXeVF3TFRGZExuQjFjMmdvSkNSYkpEQmRLVHRjYm1KeVpXRnJPMXh1WTJGelpTQTNNRHAwYUdsekxpUWdQU0JiWFR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0EzTVRva0pGc2tNQzB4WFM1d2RYTm9LQ1FrV3lRd1hTazdYRzVpY21WaGF6dGNibU5oYzJVZ056ZzZkR2hwY3k0a0lEMGdXMTA3WEc1aWNtVmhhenRjYm1OaGMyVWdOems2SkNSYkpEQXRNVjB1Y0hWemFDZ2tKRnNrTUYwcE8xeHVZbkpsWVdzN1hHNWpZWE5sSURneU9uUm9hWE11SkNBOUlGdGRPMXh1WW5KbFlXczdYRzVqWVhObElEZ3pPaVFrV3lRd0xURmRMbkIxYzJnb0pDUmJKREJkS1R0Y2JtSnlaV0ZyTzF4dVkyRnpaU0E0TmpwMGFHbHpMaVFnUFNCYlhUdGNibUp5WldGck8xeHVZMkZ6WlNBNE56b2tKRnNrTUMweFhTNXdkWE5vS0NRa1d5UXdYU2s3WEc1aWNtVmhhenRjYm1OaGMyVWdPVEE2ZEdocGN5NGtJRDBnVzEwN1hHNWljbVZoYXp0Y2JtTmhjMlVnT1RFNkpDUmJKREF0TVYwdWNIVnphQ2drSkZza01GMHBPMXh1WW5KbFlXczdYRzVqWVhObElEazBPblJvYVhNdUpDQTlJRnRkTzF4dVluSmxZV3M3WEc1allYTmxJRGsxT2lRa1d5UXdMVEZkTG5CMWMyZ29KQ1JiSkRCZEtUdGNibUp5WldGck8xeHVZMkZ6WlNBNU9EcDBhR2x6TGlRZ1BTQmJKQ1JiSkRCZFhUdGNibUp5WldGck8xeHVZMkZ6WlNBNU9Ub2tKRnNrTUMweFhTNXdkWE5vS0NRa1d5UXdYU2s3WEc1aWNtVmhhenRjYm1OaGMyVWdNVEF3T25Sb2FYTXVKQ0E5SUZza0pGc2tNRjFkTzF4dVluSmxZV3M3WEc1allYTmxJREV3TVRva0pGc2tNQzB4WFM1d2RYTm9LQ1FrV3lRd1hTazdYRzVpY21WaGF6dGNibjFjYm4wc1hHNTBZV0pzWlRvZ1czc3pPakVzTkRveUxEVTZXeklzTkRaZExEWTZNeXd4TkRwYk1pdzBObDBzTVRVNld6SXNORFpkTERFNU9sc3lMRFEyWFN3eU9UcGJNaXcwTmwwc016UTZXeklzTkRaZExEUTRPbHN5TERRMlhTdzFNVHBiTWl3ME5sMHNOVFU2V3pJc05EWmRMRFl3T2xzeUxEUTJYWDBzZXpFNld6TmRmU3g3TlRwYk1TdzBYWDBzZXpVNld6SXNNbDBzTnpvMUxEZzZOaXc1T2pjc01UQTZPQ3d4TVRvNUxERXlPakV3TERFek9qRXhMREUwT2xzeExERXlYU3d4TlRwYk1Td3lNRjBzTVRZNk1UY3NNVGs2V3pFc01qTmRMREkwT2pFMUxESTNPakUyTERJNU9sc3hMREl4WFN3ek5EcGJNU3d5TWwwc016azZXeklzTWwwc05EUTZXeklzTWwwc05EYzZXeklzTWwwc05EZzZXekVzTVROZExEVXhPbHN4TERFMFhTdzFOVHBiTVN3eE9GMHNOVGs2TVRrc05qQTZXekVzTWpSZGZTeDdNVHBiTWl3eFhYMHNlelU2V3pJc05EZGRMREUwT2xzeUxEUTNYU3d4TlRwYk1pdzBOMTBzTVRrNld6SXNORGRkTERJNU9sc3lMRFEzWFN3ek5EcGJNaXcwTjEwc016azZXeklzTkRkZExEUTBPbHN5TERRM1hTdzBOenBiTWl3ME4xMHNORGc2V3pJc05EZGRMRFV4T2xzeUxEUTNYU3cxTlRwYk1pdzBOMTBzTmpBNld6SXNORGRkZlN4N05UcGJNaXd6WFN3eE5EcGJNaXd6WFN3eE5UcGJNaXd6WFN3eE9UcGJNaXd6WFN3eU9UcGJNaXd6WFN3ek5EcGJNaXd6WFN3ek9UcGJNaXd6WFN3ME5EcGJNaXd6WFN3ME56cGJNaXd6WFN3ME9EcGJNaXd6WFN3MU1UcGJNaXd6WFN3MU5UcGJNaXd6WFN3Mk1EcGJNaXd6WFgwc2V6VTZXeklzTkYwc01UUTZXeklzTkYwc01UVTZXeklzTkYwc01UazZXeklzTkYwc01qazZXeklzTkYwc016UTZXeklzTkYwc016azZXeklzTkYwc05EUTZXeklzTkYwc05EYzZXeklzTkYwc05EZzZXeklzTkYwc05URTZXeklzTkYwc05UVTZXeklzTkYwc05qQTZXeklzTkYxOUxIczFPbHN5TERWZExERTBPbHN5TERWZExERTFPbHN5TERWZExERTVPbHN5TERWZExESTVPbHN5TERWZExETTBPbHN5TERWZExETTVPbHN5TERWZExEUTBPbHN5TERWZExEUTNPbHN5TERWZExEUTRPbHN5TERWZExEVXhPbHN5TERWZExEVTFPbHN5TERWZExEWXdPbHN5TERWZGZTeDdOVHBiTWl3MlhTd3hORHBiTWl3MlhTd3hOVHBiTWl3MlhTd3hPVHBiTWl3MlhTd3lPVHBiTWl3MlhTd3pORHBiTWl3MlhTd3pPVHBiTWl3MlhTdzBORHBiTWl3MlhTdzBOenBiTWl3MlhTdzBPRHBiTWl3MlhTdzFNVHBiTWl3MlhTdzFOVHBiTWl3MlhTdzJNRHBiTWl3MlhYMHNlelU2V3pJc04xMHNNVFE2V3pJc04xMHNNVFU2V3pJc04xMHNNVGs2V3pJc04xMHNNams2V3pJc04xMHNNelE2V3pJc04xMHNNems2V3pJc04xMHNORFE2V3pJc04xMHNORGM2V3pJc04xMHNORGc2V3pJc04xMHNOVEU2V3pJc04xMHNOVFU2V3pJc04xMHNOakE2V3pJc04xMTlMSHMxT2xzeUxEaGRMREUwT2xzeUxEaGRMREUxT2xzeUxEaGRMREU1T2xzeUxEaGRMREk1T2xzeUxEaGRMRE0wT2xzeUxEaGRMRE01T2xzeUxEaGRMRFEwT2xzeUxEaGRMRFEzT2xzeUxEaGRMRFE0T2xzeUxEaGRMRFV4T2xzeUxEaGRMRFUxT2xzeUxEaGRMRFl3T2xzeUxEaGRmU3g3TlRwYk1pdzVYU3d4TkRwYk1pdzVYU3d4TlRwYk1pdzVYU3d4T1RwYk1pdzVYU3d5T1RwYk1pdzVYU3d6TkRwYk1pdzVYU3d6T1RwYk1pdzVYU3cwTkRwYk1pdzVYU3cwTnpwYk1pdzVYU3cwT0RwYk1pdzVYU3cxTVRwYk1pdzVYU3cxTlRwYk1pdzVYU3cyTURwYk1pdzVYWDBzZXpJd09qSTFMRGN5T2xzeExETTFYU3czT0RveU5pdzNPVG95Tnl3NE1EcGJNU3d5T0Ywc09ERTZXekVzTWpsZExEZ3lPbHN4TERNd1hTdzRNenBiTVN3ek1WMHNPRFE2V3pFc016SmRMRGcxT2xzeExETTBYU3c0Tmpvek0zMHNlekl3T2pNMkxEY3lPbHN4TERNMVhTdzNPRG95Tml3M09Ub3lOeXc0TURwYk1Td3lPRjBzT0RFNld6RXNNamxkTERneU9sc3hMRE13WFN3NE16cGJNU3d6TVYwc09EUTZXekVzTXpKZExEZzFPbHN4TERNMFhTdzROam96TTMwc2V6UTZNemNzTmpvekxERTBPbHN5TERRMlhTd3hOVHBiTWl3ME5sMHNNVGs2V3pJc05EWmRMREk1T2xzeUxEUTJYU3d6TkRwYk1pdzBObDBzTXprNld6SXNORFpkTERRME9sc3lMRFEyWFN3ME56cGJNaXcwTmwwc05EZzZXeklzTkRaZExEVXhPbHN5TERRMlhTdzFOVHBiTWl3ME5sMHNOakE2V3pJc05EWmRmU3g3TkRvek9DdzJPak1zTVRRNld6SXNORFpkTERFMU9sc3lMRFEyWFN3eE9UcGJNaXcwTmwwc01qazZXeklzTkRaZExETTBPbHN5TERRMlhTdzBORHBiTWl3ME5sMHNORGM2V3pJc05EWmRMRFE0T2xzeUxEUTJYU3cxTVRwYk1pdzBObDBzTlRVNld6SXNORFpkTERZd09sc3lMRFEyWFgwc2V6RTFPbHN5TERRNFhTd3hOem96T1N3eE9EcGJNaXcwT0YxOUxIc3lNRG8wTVN3MU5qbzBNQ3cyTkRvME1pdzJOVHBiTVN3ME0xMHNOekk2V3pFc016VmRMRGM0T2pJMkxEYzVPakkzTERnd09sc3hMREk0WFN3NE1UcGJNU3d5T1Ywc09ESTZXekVzTXpCZExEZ3pPbHN4TERNeFhTdzRORHBiTVN3ek1sMHNPRFU2V3pFc016UmRMRGcyT2pNemZTeDdORG8wTkN3Mk9qTXNNVFE2V3pJc05EWmRMREUxT2xzeUxEUTJYU3d4T1RwYk1pdzBObDBzTWprNld6SXNORFpkTERNME9sc3lMRFEyWFN3ME56cGJNaXcwTmwwc05EZzZXeklzTkRaZExEVXhPbHN5TERRMlhTdzFOVHBiTWl3ME5sMHNOakE2V3pJc05EWmRmU3g3TlRwYk1pd3hNRjBzTVRRNld6SXNNVEJkTERFMU9sc3lMREV3WFN3eE9EcGJNaXd4TUYwc01UazZXeklzTVRCZExESTVPbHN5TERFd1hTd3pORHBiTWl3eE1GMHNNems2V3pJc01UQmRMRFEwT2xzeUxERXdYU3cwTnpwYk1pd3hNRjBzTkRnNld6SXNNVEJkTERVeE9sc3lMREV3WFN3MU5UcGJNaXd4TUYwc05qQTZXeklzTVRCZGZTeDdNakE2TkRVc056STZXekVzTXpWZExEYzRPakkyTERjNU9qSTNMRGd3T2xzeExESTRYU3c0TVRwYk1Td3lPVjBzT0RJNld6RXNNekJkTERnek9sc3hMRE14WFN3NE5EcGJNU3d6TWwwc09EVTZXekVzTXpSZExEZzJPak16ZlN4N01qQTZORFlzTnpJNld6RXNNelZkTERjNE9qSTJMRGM1T2pJM0xEZ3dPbHN4TERJNFhTdzRNVHBiTVN3eU9WMHNPREk2V3pFc016QmRMRGd6T2xzeExETXhYU3c0TkRwYk1Td3pNbDBzT0RVNld6RXNNelJkTERnMk9qTXpmU3g3TWpBNk5EY3NOekk2V3pFc016VmRMRGM0T2pJMkxEYzVPakkzTERnd09sc3hMREk0WFN3NE1UcGJNU3d5T1Ywc09ESTZXekVzTXpCZExEZ3pPbHN4TERNeFhTdzRORHBiTVN3ek1sMHNPRFU2V3pFc016UmRMRGcyT2pNemZTeDdNakE2TkRFc05UWTZORGdzTmpRNk5ESXNOalU2V3pFc05ETmRMRGN5T2xzeExETTFYU3czT0RveU5pdzNPVG95Tnl3NE1EcGJNU3d5T0Ywc09ERTZXekVzTWpsZExEZ3lPbHN4TERNd1hTdzRNenBiTVN3ek1WMHNPRFE2V3pFc016SmRMRGcxT2xzeExETTBYU3c0Tmpvek0zMHNlek16T2xzeUxEYzRYU3cwT1RvME9TdzJOVHBiTWl3M09GMHNOekk2V3pJc056aGRMRGd3T2xzeUxEYzRYU3c0TVRwYk1pdzNPRjBzT0RJNld6SXNOemhkTERnek9sc3lMRGM0WFN3NE5EcGJNaXczT0Ywc09EVTZXeklzTnpoZGZTeDdNak02V3pJc016TmRMRE16T2xzeUxETXpYU3cxTkRwYk1pd3pNMTBzTmpVNld6SXNNek5kTERZNE9sc3lMRE16WFN3M01qcGJNaXd6TTEwc056VTZXeklzTXpOZExEZ3dPbHN5TERNelhTdzRNVHBiTWl3ek0xMHNPREk2V3pJc016TmRMRGd6T2xzeUxETXpYU3c0TkRwYk1pd3pNMTBzT0RVNld6SXNNek5kZlN4N01qTTZXeklzTXpSZExETXpPbHN5TERNMFhTdzFORHBiTWl3ek5GMHNOalU2V3pJc016UmRMRFk0T2xzeUxETTBYU3czTWpwYk1pd3pORjBzTnpVNld6SXNNelJkTERnd09sc3lMRE0wWFN3NE1UcGJNaXd6TkYwc09ESTZXeklzTXpSZExEZ3pPbHN5TERNMFhTdzRORHBiTWl3ek5GMHNPRFU2V3pJc016UmRmU3g3TWpNNld6SXNNelZkTERNek9sc3lMRE0xWFN3MU5EcGJNaXd6TlYwc05qVTZXeklzTXpWZExEWTRPbHN5TERNMVhTdzNNanBiTWl3ek5WMHNOelU2V3pJc016VmRMRGd3T2xzeUxETTFYU3c0TVRwYk1pd3pOVjBzT0RJNld6SXNNelZkTERnek9sc3lMRE0xWFN3NE5EcGJNaXd6TlYwc09EVTZXeklzTXpWZGZTeDdNak02V3pJc016WmRMRE16T2xzeUxETTJYU3cxTkRwYk1pd3pObDBzTmpVNld6SXNNelpkTERZNE9sc3lMRE0yWFN3M01qcGJNaXd6Tmwwc056VTZXeklzTXpaZExEZ3dPbHN5TERNMlhTdzRNVHBiTWl3ek5sMHNPREk2V3pJc016WmRMRGd6T2xzeUxETTJYU3c0TkRwYk1pd3pObDBzT0RVNld6SXNNelpkZlN4N01qTTZXeklzTXpkZExETXpPbHN5TERNM1hTdzFORHBiTWl3ek4xMHNOalU2V3pJc016ZGRMRFk0T2xzeUxETTNYU3czTWpwYk1pd3pOMTBzTnpVNld6SXNNemRkTERnd09sc3lMRE0zWFN3NE1UcGJNaXd6TjEwc09ESTZXeklzTXpkZExEZ3pPbHN5TERNM1hTdzRORHBiTWl3ek4xMHNPRFU2V3pJc016ZGRmU3g3TWpNNld6SXNNemhkTERNek9sc3lMRE00WFN3MU5EcGJNaXd6T0Ywc05qVTZXeklzTXpoZExEWTRPbHN5TERNNFhTdzNNanBiTWl3ek9GMHNOelU2V3pJc016aGRMRGd3T2xzeUxETTRYU3c0TVRwYk1pd3pPRjBzT0RJNld6SXNNemhkTERnek9sc3lMRE00WFN3NE5EcGJNaXd6T0Ywc09EVTZXeklzTXpoZGZTeDdNak02V3pJc016bGRMRE16T2xzeUxETTVYU3cxTkRwYk1pd3pPVjBzTmpVNld6SXNNemxkTERZNE9sc3lMRE01WFN3M01qcGJNaXd6T1Ywc056VTZXeklzTXpsZExEZ3dPbHN5TERNNVhTdzRNVHBiTWl3ek9WMHNPREk2V3pJc016bGRMRGd6T2xzeUxETTVYU3c0TkRwYk1pd3pPVjBzT0RVNld6SXNNemxkZlN4N01qTTZXeklzTkROZExETXpPbHN5TERRelhTdzFORHBiTWl3ME0xMHNOalU2V3pJc05ETmRMRFk0T2xzeUxEUXpYU3czTWpwYk1pdzBNMTBzTnpVNld6SXNORE5kTERnd09sc3lMRFF6WFN3NE1UcGJNaXcwTTEwc09ESTZXeklzTkROZExEZ3pPbHN5TERRelhTdzRORHBiTWl3ME0xMHNPRFU2V3pJc05ETmRMRGczT2xzeExEVXdYWDBzZXpjeU9sc3hMRE0xWFN3NE5qbzFNWDBzZXpJek9sc3lMRFExWFN3ek16cGJNaXcwTlYwc05UUTZXeklzTkRWZExEWTFPbHN5TERRMVhTdzJPRHBiTWl3ME5WMHNOekk2V3pJc05EVmRMRGMxT2xzeUxEUTFYU3c0TURwYk1pdzBOVjBzT0RFNld6SXNORFZkTERneU9sc3lMRFExWFN3NE16cGJNaXcwTlYwc09EUTZXeklzTkRWZExEZzFPbHN5TERRMVhTdzROenBiTWl3ME5WMTlMSHMxTWpvMU1pdzFORHBiTWl3NE1sMHNOalU2V3pJc09ESmRMRGN5T2xzeUxEZ3lYU3c0TURwYk1pdzRNbDBzT0RFNld6SXNPREpkTERneU9sc3lMRGd5WFN3NE16cGJNaXc0TWwwc09EUTZXeklzT0RKZExEZzFPbHN5TERneVhYMHNlekkxT2pVekxETTRPalUxTERNNU9sc3hMRFUzWFN3ME16bzFOaXcwTkRwYk1TdzFPRjBzTkRVNk5UUXNORGM2V3pJc05UUmRmU3g3TWpnNk5Ua3NORE02TmpBc05EUTZXekVzTlRoZExEUTNPbHN5TERVMlhYMHNlekV6T2pZeUxERTFPbHN4TERJd1hTd3hPRHBiTVN3Mk1WMTlMSHN6TXpwYk1pdzRObDBzTlRjNk5qTXNOalU2V3pJc09EWmRMRGN5T2xzeUxEZzJYU3c0TURwYk1pdzRObDBzT0RFNld6SXNPRFpkTERneU9sc3lMRGcyWFN3NE16cGJNaXc0Tmwwc09EUTZXeklzT0RaZExEZzFPbHN5TERnMlhYMHNlek16T2xzeUxEUXdYU3cyTlRwYk1pdzBNRjBzTnpJNld6SXNOREJkTERnd09sc3lMRFF3WFN3NE1UcGJNaXcwTUYwc09ESTZXeklzTkRCZExEZ3pPbHN5TERRd1hTdzRORHBiTWl3ME1GMHNPRFU2V3pJc05EQmRmU3g3TXpNNld6SXNOREZkTERZMU9sc3lMRFF4WFN3M01qcGJNaXcwTVYwc09EQTZXeklzTkRGZExEZ3hPbHN5TERReFhTdzRNanBiTWl3ME1WMHNPRE02V3pJc05ERmRMRGcwT2xzeUxEUXhYU3c0TlRwYk1pdzBNVjE5TEhzeU1EbzJOQ3czTWpwYk1Td3pOVjBzTnpnNk1qWXNOems2TWpjc09EQTZXekVzTWpoZExEZ3hPbHN4TERJNVhTdzRNanBiTVN3ek1GMHNPRE02V3pFc016RmRMRGcwT2xzeExETXlYU3c0TlRwYk1Td3pORjBzT0RZNk16TjlMSHN5TmpvMk5TdzBOenBiTVN3Mk5sMTlMSHN6TURvMk55d3pNenBiTWl3MU9GMHNOalU2V3pJc05UaGRMRGN5T2xzeUxEVTRYU3czTlRwYk1pdzFPRjBzT0RBNld6SXNOVGhkTERneE9sc3lMRFU0WFN3NE1qcGJNaXcxT0Ywc09ETTZXeklzTlRoZExEZzBPbHN5TERVNFhTdzROVHBiTWl3MU9GMTlMSHN6TXpwYk1pdzJORjBzTXpVNk5qZ3NOalU2V3pJc05qUmRMRGN5T2xzeUxEWTBYU3czTlRwYk1pdzJORjBzT0RBNld6SXNOalJkTERneE9sc3lMRFkwWFN3NE1qcGJNaXcyTkYwc09ETTZXeklzTmpSZExEZzBPbHN5TERZMFhTdzROVHBiTWl3Mk5GMTlMSHN5TVRvMk9Td3lNenBiTWl3MU1GMHNOalU2V3pJc05UQmRMRGN5T2xzeUxEVXdYU3c0TURwYk1pdzFNRjBzT0RFNld6SXNOVEJkTERneU9sc3lMRFV3WFN3NE16cGJNaXcxTUYwc09EUTZXeklzTlRCZExEZzFPbHN5TERVd1hYMHNlek16T2xzeUxEa3dYU3cyTVRvM01DdzJOVHBiTWl3NU1GMHNOekk2V3pJc09UQmRMRGd3T2xzeUxEa3dYU3c0TVRwYk1pdzVNRjBzT0RJNld6SXNPVEJkTERnek9sc3lMRGt3WFN3NE5EcGJNaXc1TUYwc09EVTZXeklzT1RCZGZTeDdNakE2TnpRc016TTZXeklzT0RCZExEVXdPamN4TERZek9qY3lMRFkwT2pjMUxEWTFPbHN4TERRelhTdzJPVG8zTXl3M01EbzNOaXczTVRvM055dzNNanBiTVN3M09GMHNOemc2TWpZc056azZNamNzT0RBNld6RXNNamhkTERneE9sc3hMREk1WFN3NE1qcGJNU3d6TUYwc09ETTZXekVzTXpGZExEZzBPbHN4TERNeVhTdzROVHBiTVN3ek5GMHNPRFk2TXpOOUxIczNNanBiTVN3M09WMTlMSHN5TXpwYk1pdzBNbDBzTXpNNld6SXNOREpkTERVME9sc3lMRFF5WFN3Mk5UcGJNaXcwTWwwc05qZzZXeklzTkRKZExEY3lPbHN5TERReVhTdzNOVHBiTWl3ME1sMHNPREE2V3pJc05ESmRMRGd4T2xzeUxEUXlYU3c0TWpwYk1pdzBNbDBzT0RNNld6SXNOREpkTERnME9sc3lMRFF5WFN3NE5UcGJNaXcwTWwwc09EYzZXekVzTlRCZGZTeDdNakE2TnpRc05UTTZPREFzTlRRNld6SXNPRFJkTERZek9qZ3hMRFkwT2pjMUxEWTFPbHN4TERRelhTdzJPVG80TWl3M01EbzNOaXczTVRvM055dzNNanBiTVN3M09GMHNOemc2TWpZc056azZNamNzT0RBNld6RXNNamhkTERneE9sc3hMREk1WFN3NE1qcGJNU3d6TUYwc09ETTZXekVzTXpGZExEZzBPbHN4TERNeVhTdzROVHBiTVN3ek5GMHNPRFk2TXpOOUxIc3lOam80TXl3ME56cGJNU3cyTmwxOUxIczBOenBiTWl3MU5WMTlMSHMwT2pnMExEWTZNeXd4TkRwYk1pdzBObDBzTVRVNld6SXNORFpkTERFNU9sc3lMRFEyWFN3eU9UcGJNaXcwTmwwc016UTZXeklzTkRaZExETTVPbHN5TERRMlhTdzBORHBiTWl3ME5sMHNORGM2V3pJc05EWmRMRFE0T2xzeUxEUTJYU3cxTVRwYk1pdzBObDBzTlRVNld6SXNORFpkTERZd09sc3lMRFEyWFgwc2V6UTNPbHN5TERJd1hYMHNlekl3T2pnMUxEY3lPbHN4TERNMVhTdzNPRG95Tml3M09Ub3lOeXc0TURwYk1Td3lPRjBzT0RFNld6RXNNamxkTERneU9sc3hMRE13WFN3NE16cGJNU3d6TVYwc09EUTZXekVzTXpKZExEZzFPbHN4TERNMFhTdzROam96TTMwc2V6UTZPRFlzTmpvekxERTBPbHN5TERRMlhTd3hOVHBiTWl3ME5sMHNNVGs2V3pJc05EWmRMREk1T2xzeUxEUTJYU3d6TkRwYk1pdzBObDBzTkRjNld6SXNORFpkTERRNE9sc3lMRFEyWFN3MU1UcGJNaXcwTmwwc05UVTZXeklzTkRaZExEWXdPbHN5TERRMlhYMHNlekkyT2pnM0xEUTNPbHN4TERZMlhYMHNlelEzT2xzeUxEVTNYWDBzZXpVNld6SXNNVEZkTERFME9sc3lMREV4WFN3eE5UcGJNaXd4TVYwc01UazZXeklzTVRGZExESTVPbHN5TERFeFhTd3pORHBiTWl3eE1WMHNNems2V3pJc01URmRMRFEwT2xzeUxERXhYU3cwTnpwYk1pd3hNVjBzTkRnNld6SXNNVEZkTERVeE9sc3lMREV4WFN3MU5UcGJNaXd4TVYwc05qQTZXeklzTVRGZGZTeDdNVFU2V3pJc05EbGRMREU0T2xzeUxEUTVYWDBzZXpJd09qYzBMRE16T2xzeUxEZzRYU3cxT0RvNE9DdzJNem80T1N3Mk5EbzNOU3cyTlRwYk1TdzBNMTBzTmprNk9UQXNOekE2TnpZc056RTZOemNzTnpJNld6RXNOemhkTERjNE9qSTJMRGM1T2pJM0xEZ3dPbHN4TERJNFhTdzRNVHBiTVN3eU9WMHNPREk2V3pFc016QmRMRGd6T2xzeExETXhYU3c0TkRwYk1Td3pNbDBzT0RVNld6RXNNelJkTERnMk9qTXpmU3g3TmpVNld6SXNPVFJkTERZMk9qa3hMRFk0T2xzeUxEazBYU3czTWpwYk1pdzVORjBzT0RBNld6SXNPVFJkTERneE9sc3lMRGswWFN3NE1qcGJNaXc1TkYwc09ETTZXeklzT1RSZExEZzBPbHN5TERrMFhTdzROVHBiTWl3NU5GMTlMSHMxT2xzeUxESTFYU3d4TkRwYk1pd3lOVjBzTVRVNld6SXNNalZkTERFNU9sc3lMREkxWFN3eU9UcGJNaXd5TlYwc016UTZXeklzTWpWZExETTVPbHN5TERJMVhTdzBORHBiTWl3eU5WMHNORGM2V3pJc01qVmRMRFE0T2xzeUxESTFYU3cxTVRwYk1pd3lOVjBzTlRVNld6SXNNalZkTERZd09sc3lMREkxWFgwc2V6SXdPamt5TERjeU9sc3hMRE0xWFN3M09Eb3lOaXczT1RveU55dzRNRHBiTVN3eU9GMHNPREU2V3pFc01qbGRMRGd5T2xzeExETXdYU3c0TXpwYk1Td3pNVjBzT0RRNld6RXNNekpkTERnMU9sc3hMRE0wWFN3NE5qb3pNMzBzZXpJd09qYzBMRE14T2prekxETXpPbHN5TERZd1hTdzJNem81TkN3Mk5EbzNOU3cyTlRwYk1TdzBNMTBzTmprNk9UVXNOekE2TnpZc056RTZOemNzTnpJNld6RXNOemhkTERjMU9sc3lMRFl3WFN3M09Eb3lOaXczT1RveU55dzRNRHBiTVN3eU9GMHNPREU2V3pFc01qbGRMRGd5T2xzeExETXdYU3c0TXpwYk1Td3pNVjBzT0RRNld6RXNNekpkTERnMU9sc3hMRE0wWFN3NE5qb3pNMzBzZXpJd09qYzBMRE16T2xzeUxEWTJYU3d6TmpvNU5pdzJNem81Tnl3Mk5EbzNOU3cyTlRwYk1TdzBNMTBzTmprNk9UZ3NOekE2TnpZc056RTZOemNzTnpJNld6RXNOemhkTERjMU9sc3lMRFkyWFN3M09Eb3lOaXczT1RveU55dzRNRHBiTVN3eU9GMHNPREU2V3pFc01qbGRMRGd5T2xzeExETXdYU3c0TXpwYk1Td3pNVjBzT0RRNld6RXNNekpkTERnMU9sc3hMRE0wWFN3NE5qb3pNMzBzZXpJd09qYzBMREl5T2prNUxESXpPbHN5TERVeVhTdzJNem94TURBc05qUTZOelVzTmpVNld6RXNORE5kTERZNU9qRXdNU3czTURvM05pdzNNVG8zTnl3M01qcGJNU3czT0Ywc056ZzZNallzTnprNk1qY3NPREE2V3pFc01qaGRMRGd4T2xzeExESTVYU3c0TWpwYk1Td3pNRjBzT0RNNld6RXNNekZkTERnME9sc3hMRE15WFN3NE5UcGJNU3d6TkYwc09EWTZNek45TEhzeU1EbzNOQ3d6TXpwYk1pdzVNbDBzTmpJNk1UQXlMRFl6T2pFd015dzJORG8zTlN3Mk5UcGJNU3cwTTEwc05qazZNVEEwTERjd09qYzJMRGN4T2pjM0xEY3lPbHN4TERjNFhTdzNPRG95Tml3M09Ub3lOeXc0TURwYk1Td3lPRjBzT0RFNld6RXNNamxkTERneU9sc3hMRE13WFN3NE16cGJNU3d6TVYwc09EUTZXekVzTXpKZExEZzFPbHN4TERNMFhTdzROam96TTMwc2V6TXpPbHN4TERFd05WMTlMSHN6TXpwYk1pdzNPVjBzTmpVNld6SXNOemxkTERjeU9sc3lMRGM1WFN3NE1EcGJNaXczT1Ywc09ERTZXeklzTnpsZExEZ3lPbHN5TERjNVhTdzRNenBiTWl3M09WMHNPRFE2V3pJc056bGRMRGcxT2xzeUxEYzVYWDBzZXpNek9sc3lMRGd4WFgwc2V6SXpPbHN5TERJM1hTd3pNenBiTWl3eU4xMHNOVFE2V3pJc01qZGRMRFkxT2xzeUxESTNYU3cyT0RwYk1pd3lOMTBzTnpJNld6SXNNamRkTERjMU9sc3lMREkzWFN3NE1EcGJNaXd5TjEwc09ERTZXeklzTWpkZExEZ3lPbHN5TERJM1hTdzRNenBiTWl3eU4xMHNPRFE2V3pJc01qZGRMRGcxT2xzeUxESTNYWDBzZXpJek9sc3lMREk0WFN3ek16cGJNaXd5T0Ywc05UUTZXeklzTWpoZExEWTFPbHN5TERJNFhTdzJPRHBiTWl3eU9GMHNOekk2V3pJc01qaGRMRGMxT2xzeUxESTRYU3c0TURwYk1pd3lPRjBzT0RFNld6SXNNamhkTERneU9sc3lMREk0WFN3NE16cGJNaXd5T0Ywc09EUTZXeklzTWpoZExEZzFPbHN5TERJNFhYMHNlekl6T2xzeUxETXdYU3d6TXpwYk1pd3pNRjBzTlRRNld6SXNNekJkTERZNE9sc3lMRE13WFN3M01Ub3hNRFlzTnpJNld6RXNNVEEzWFN3M05UcGJNaXd6TUYxOUxIc3lNenBiTWl3NU9GMHNNek02V3pJc09UaGRMRFUwT2xzeUxEazRYU3cyT0RwYk1pdzVPRjBzTnpJNld6SXNPVGhkTERjMU9sc3lMRGs0WFgwc2V6SXpPbHN5TERRMVhTd3pNenBiTWl3ME5WMHNOVFE2V3pJc05EVmRMRFkxT2xzeUxEUTFYU3cyT0RwYk1pdzBOVjBzTnpJNld6SXNORFZkTERjek9sc3hMREV3T0Ywc056VTZXeklzTkRWZExEZ3dPbHN5TERRMVhTdzRNVHBiTWl3ME5WMHNPREk2V3pJc05EVmRMRGd6T2xzeUxEUTFYU3c0TkRwYk1pdzBOVjBzT0RVNld6SXNORFZkTERnM09sc3lMRFExWFgwc2V6SXpPbHN5TERRMFhTd3pNenBiTWl3ME5GMHNOVFE2V3pJc05EUmRMRFkxT2xzeUxEUTBYU3cyT0RwYk1pdzBORjBzTnpJNld6SXNORFJkTERjMU9sc3lMRFEwWFN3NE1EcGJNaXcwTkYwc09ERTZXeklzTkRSZExEZ3lPbHN5TERRMFhTdzRNenBiTWl3ME5GMHNPRFE2V3pJc05EUmRMRGcxT2xzeUxEUTBYU3c0TnpwYk1pdzBORjE5TEhzMU5EcGJNU3d4TURsZGZTeDdOVFE2V3pJc09ETmRMRFkxT2xzeUxEZ3pYU3czTWpwYk1pdzRNMTBzT0RBNld6SXNPRE5kTERneE9sc3lMRGd6WFN3NE1qcGJNaXc0TTEwc09ETTZXeklzT0ROZExEZzBPbHN5TERnelhTdzROVHBiTWl3NE0xMTlMSHMxTkRwYk1pdzROVjE5TEhzMU9sc3lMREV6WFN3eE5EcGJNaXd4TTEwc01UVTZXeklzTVROZExERTVPbHN5TERFelhTd3lPVHBiTWl3eE0xMHNNelE2V3pJc01UTmRMRE01T2xzeUxERXpYU3cwTkRwYk1pd3hNMTBzTkRjNld6SXNNVE5kTERRNE9sc3lMREV6WFN3MU1UcGJNaXd4TTEwc05UVTZXeklzTVROZExEWXdPbHN5TERFelhYMHNlek00T2pVMUxETTVPbHN4TERVM1hTdzBNem8xTml3ME5EcGJNU3cxT0Ywc05EVTZNVEV4TERRMk9qRXhNQ3cwTnpwYk1pdzNObDE5TEhzek16cGJNaXczTUYwc05EQTZNVEV5TERZMU9sc3lMRGN3WFN3M01qcGJNaXczTUYwc056VTZXeklzTnpCZExEZ3dPbHN5TERjd1hTdzRNVHBiTWl3M01GMHNPREk2V3pJc056QmRMRGd6T2xzeUxEY3dYU3c0TkRwYk1pdzNNRjBzT0RVNld6SXNOekJkZlN4N05EYzZXeklzTVRoZGZTeDdOVHBiTWl3eE5GMHNNVFE2V3pJc01UUmRMREUxT2xzeUxERTBYU3d4T1RwYk1pd3hORjBzTWprNld6SXNNVFJkTERNME9sc3lMREUwWFN3ek9UcGJNaXd4TkYwc05EUTZXeklzTVRSZExEUTNPbHN5TERFMFhTdzBPRHBiTWl3eE5GMHNOVEU2V3pJc01UUmRMRFUxT2xzeUxERTBYU3cyTURwYk1pd3hORjE5TEhzek16cGJNU3d4TVROZGZTeDdNek02V3pJc09EZGRMRFkxT2xzeUxEZzNYU3czTWpwYk1pdzROMTBzT0RBNld6SXNPRGRkTERneE9sc3lMRGczWFN3NE1qcGJNaXc0TjEwc09ETTZXeklzT0RkZExEZzBPbHN5TERnM1hTdzROVHBiTWl3NE4xMTlMSHN6TXpwYk1pdzRPVjE5TEhzeU1EbzNOQ3cyTXpveE1UVXNOalE2TnpVc05qVTZXekVzTkROZExEWTNPakV4TkN3Mk9EcGJNaXc1Tmwwc05qazZNVEUyTERjd09qYzJMRGN4T2pjM0xEY3lPbHN4TERjNFhTdzNPRG95Tml3M09Ub3lOeXc0TURwYk1Td3lPRjBzT0RFNld6RXNNamxkTERneU9sc3hMRE13WFN3NE16cGJNU3d6TVYwc09EUTZXekVzTXpKZExEZzFPbHN4TERNMFhTdzROam96TTMwc2V6TXpPbHN4TERFeE4xMTlMSHN6TWpveE1UZ3NNek02V3pJc05qSmRMRGMwT2pFeE9TdzNOVHBiTVN3eE1qQmRmU3g3TXpNNld6SXNOVGxkTERZMU9sc3lMRFU1WFN3M01qcGJNaXcxT1Ywc056VTZXeklzTlRsZExEZ3dPbHN5TERVNVhTdzRNVHBiTWl3MU9WMHNPREk2V3pJc05UbGRMRGd6T2xzeUxEVTVYU3c0TkRwYk1pdzFPVjBzT0RVNld6SXNOVGxkZlN4N016TTZXeklzTmpGZExEYzFPbHN5TERZeFhYMHNlek16T2xzeUxEWTRYU3d6TnpveE1qRXNOelE2TVRJeUxEYzFPbHN4TERFeU1GMTlMSHN6TXpwYk1pdzJOVjBzTmpVNld6SXNOalZkTERjeU9sc3lMRFkxWFN3M05UcGJNaXcyTlYwc09EQTZXeklzTmpWZExEZ3hPbHN5TERZMVhTdzRNanBiTWl3Mk5WMHNPRE02V3pJc05qVmRMRGcwT2xzeUxEWTFYU3c0TlRwYk1pdzJOVjE5TEhzek16cGJNaXcyTjEwc056VTZXeklzTmpkZGZTeDdNak02V3pFc01USXpYWDBzZXpJek9sc3lMRFV4WFN3Mk5UcGJNaXcxTVYwc056STZXeklzTlRGZExEZ3dPbHN5TERVeFhTdzRNVHBiTWl3MU1WMHNPREk2V3pJc05URmRMRGd6T2xzeUxEVXhYU3c0TkRwYk1pdzFNVjBzT0RVNld6SXNOVEZkZlN4N01qTTZXeklzTlROZGZTeDdNek02V3pFc01USTBYWDBzZXpNek9sc3lMRGt4WFN3Mk5UcGJNaXc1TVYwc056STZXeklzT1RGZExEZ3dPbHN5TERreFhTdzRNVHBiTWl3NU1WMHNPREk2V3pJc09URmRMRGd6T2xzeUxEa3hYU3c0TkRwYk1pdzVNVjBzT0RVNld6SXNPVEZkZlN4N016TTZXeklzT1ROZGZTeDdOVHBiTWl3eU1sMHNNVFE2V3pJc01qSmRMREUxT2xzeUxESXlYU3d4T1RwYk1pd3lNbDBzTWprNld6SXNNakpkTERNME9sc3lMREl5WFN3ek9UcGJNaXd5TWwwc05EUTZXeklzTWpKZExEUTNPbHN5TERJeVhTdzBPRHBiTWl3eU1sMHNOVEU2V3pJc01qSmRMRFUxT2xzeUxESXlYU3cyTURwYk1pd3lNbDE5TEhzeU16cGJNaXc1T1Ywc016TTZXeklzT1RsZExEVTBPbHN5TERrNVhTdzJPRHBiTWl3NU9WMHNOekk2V3pJc09UbGRMRGMxT2xzeUxEazVYWDBzZXpjek9sc3hMREV3T0YxOUxIc3lNRG8zTkN3Mk16b3hNalVzTmpRNk56VXNOalU2V3pFc05ETmRMRGN5T2xzeExETTFYU3czT0RveU5pdzNPVG95Tnl3NE1EcGJNU3d5T0Ywc09ERTZXekVzTWpsZExEZ3lPbHN4TERNd1hTdzRNenBiTVN3ek1WMHNPRFE2V3pFc016SmRMRGcxT2xzeExETTBYU3c0Tmpvek0zMHNlelU2V3pJc01qTmRMREUwT2xzeUxESXpYU3d4TlRwYk1pd3lNMTBzTVRrNld6SXNNak5kTERJNU9sc3lMREl6WFN3ek5EcGJNaXd5TTEwc016azZXeklzTWpOZExEUTBPbHN5TERJelhTdzBOenBiTWl3eU0xMHNORGc2V3pJc01qTmRMRFV4T2xzeUxESXpYU3cxTlRwYk1pd3lNMTBzTmpBNld6SXNNak5kZlN4N05EYzZXeklzTVRsZGZTeDdORGM2V3pJc056ZGRmU3g3TWpBNk56UXNNek02V3pJc056SmRMRFF4T2pFeU5pdzJNem94TWpjc05qUTZOelVzTmpVNld6RXNORE5kTERZNU9qRXlPQ3czTURvM05pdzNNVG8zTnl3M01qcGJNU3czT0Ywc056VTZXeklzTnpKZExEYzRPakkyTERjNU9qSTNMRGd3T2xzeExESTRYU3c0TVRwYk1Td3lPVjBzT0RJNld6RXNNekJkTERnek9sc3hMRE14WFN3NE5EcGJNU3d6TWwwc09EVTZXekVzTXpSZExEZzJPak16ZlN4N05UcGJNaXd5TkYwc01UUTZXeklzTWpSZExERTFPbHN5TERJMFhTd3hPVHBiTWl3eU5GMHNNams2V3pJc01qUmRMRE0wT2xzeUxESTBYU3d6T1RwYk1pd3lORjBzTkRRNld6SXNNalJkTERRM09sc3lMREkwWFN3ME9EcGJNaXd5TkYwc05URTZXeklzTWpSZExEVTFPbHN5TERJMFhTdzJNRHBiTWl3eU5GMTlMSHMyT0RwYk1Td3hNamxkZlN4N05qVTZXeklzT1RWZExEWTRPbHN5TERrMVhTdzNNanBiTWl3NU5WMHNPREE2V3pJc09UVmRMRGd4T2xzeUxEazFYU3c0TWpwYk1pdzVOVjBzT0RNNld6SXNPVFZkTERnME9sc3lMRGsxWFN3NE5UcGJNaXc1TlYxOUxIczJPRHBiTWl3NU4xMTlMSHMxT2xzeUxESXhYU3d4TkRwYk1pd3lNVjBzTVRVNld6SXNNakZkTERFNU9sc3lMREl4WFN3eU9UcGJNaXd5TVYwc016UTZXeklzTWpGZExETTVPbHN5TERJeFhTdzBORHBiTWl3eU1WMHNORGM2V3pJc01qRmRMRFE0T2xzeUxESXhYU3cxTVRwYk1pd3lNVjBzTlRVNld6SXNNakZkTERZd09sc3lMREl4WFgwc2V6TXpPbHN4TERFek1GMTlMSHN6TXpwYk1pdzJNMTE5TEhzM01qcGJNU3d4TXpKZExEYzJPakV6TVgwc2V6TXpPbHN4TERFek0xMTlMSHN6TXpwYk1pdzJPVjE5TEhzeE5UcGJNaXd4TWwwc01UZzZXeklzTVRKZGZTeDdNVFE2V3pJc01qWmRMREUxT2xzeUxESTJYU3d4T1RwYk1pd3lObDBzTWprNld6SXNNalpkTERNME9sc3lMREkyWFN3ME56cGJNaXd5Tmwwc05EZzZXeklzTWpaZExEVXhPbHN5TERJMlhTdzFOVHBiTWl3eU5sMHNOakE2V3pJc01qWmRmU3g3TWpNNld6SXNNekZkTERNek9sc3lMRE14WFN3MU5EcGJNaXd6TVYwc05qZzZXeklzTXpGZExEY3lPbHN5TERNeFhTdzNOVHBiTWl3ek1WMTlMSHN6TXpwYk1pdzNORjBzTkRJNk1UTTBMRGMwT2pFek5TdzNOVHBiTVN3eE1qQmRmU3g3TXpNNld6SXNOekZkTERZMU9sc3lMRGN4WFN3M01qcGJNaXczTVYwc056VTZXeklzTnpGZExEZ3dPbHN5TERjeFhTdzRNVHBiTWl3M01WMHNPREk2V3pJc056RmRMRGd6T2xzeUxEY3hYU3c0TkRwYk1pdzNNVjBzT0RVNld6SXNOekZkZlN4N016TTZXeklzTnpOZExEYzFPbHN5TERjelhYMHNlekl6T2xzeUxESTVYU3d6TXpwYk1pd3lPVjBzTlRRNld6SXNNamxkTERZMU9sc3lMREk1WFN3Mk9EcGJNaXd5T1Ywc056STZXeklzTWpsZExEYzFPbHN5TERJNVhTdzRNRHBiTWl3eU9WMHNPREU2V3pJc01qbGRMRGd5T2xzeUxESTVYU3c0TXpwYk1pd3lPVjBzT0RRNld6SXNNamxkTERnMU9sc3lMREk1WFgwc2V6RTBPbHN5TERFMVhTd3hOVHBiTWl3eE5WMHNNVGs2V3pJc01UVmRMREk1T2xzeUxERTFYU3d6TkRwYk1pd3hOVjBzTXprNld6SXNNVFZkTERRME9sc3lMREUxWFN3ME56cGJNaXd4TlYwc05EZzZXeklzTVRWZExEVXhPbHN5TERFMVhTdzFOVHBiTWl3eE5WMHNOakE2V3pJc01UVmRmU3g3TnpJNld6RXNNVE0zWFN3M056cGJNU3d4TXpaZGZTeDdOekk2V3pJc01UQXdYU3czTnpwYk1pd3hNREJkZlN4N01UUTZXeklzTVRaZExERTFPbHN5TERFMlhTd3hPVHBiTWl3eE5sMHNNams2V3pJc01UWmRMRE0wT2xzeUxERTJYU3cwTkRwYk1pd3hObDBzTkRjNld6SXNNVFpkTERRNE9sc3lMREUyWFN3MU1UcGJNaXd4Tmwwc05UVTZXeklzTVRaZExEWXdPbHN5TERFMlhYMHNlek16T2xzeExERXpPRjE5TEhzek16cGJNaXczTlYxOUxIc3pNenBiTWl3ek1sMTlMSHMzTWpwYk1pd3hNREZkTERjM09sc3lMREV3TVYxOUxIc3hORHBiTWl3eE4xMHNNVFU2V3pJc01UZGRMREU1T2xzeUxERTNYU3d5T1RwYk1pd3hOMTBzTXpRNld6SXNNVGRkTERNNU9sc3lMREUzWFN3ME5EcGJNaXd4TjEwc05EYzZXeklzTVRkZExEUTRPbHN5TERFM1hTdzFNVHBiTWl3eE4xMHNOVFU2V3pJc01UZGRMRFl3T2xzeUxERTNYWDFkTEZ4dVpHVm1ZWFZzZEVGamRHbHZibk02SUhzME9sc3lMREZkTERVME9sc3lMRFUxWFN3MU5qcGJNaXd5TUYwc05qQTZXeklzTlRkZExEY3pPbHN5TERneFhTdzRNanBiTWl3NE5WMHNPRFk2V3pJc01UaGRMRGt3T2xzeUxEZzVYU3d4TURFNld6SXNOVE5kTERFd05EcGJNaXc1TTEwc01URXdPbHN5TERFNVhTd3hNVEU2V3pJc056ZGRMREV4TmpwYk1pdzVOMTBzTVRFNU9sc3lMRFl6WFN3eE1qSTZXeklzTmpsZExERXpOVHBiTWl3M05WMHNNVE0yT2xzeUxETXlYWDBzWEc1d1lYSnpaVVZ5Y205eU9pQm1kVzVqZEdsdmJpQndZWEp6WlVWeWNtOXlJQ2h6ZEhJc0lHaGhjMmdwSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9jM1J5S1R0Y2JuMHNYRzV3WVhKelpUb2dablZ1WTNScGIyNGdjR0Z5YzJVb2FXNXdkWFFwSUh0Y2JpQWdJQ0IyWVhJZ2MyVnNaaUE5SUhSb2FYTXNJSE4wWVdOcklEMGdXekJkTENCMmMzUmhZMnNnUFNCYmJuVnNiRjBzSUd4emRHRmpheUE5SUZ0ZExDQjBZV0pzWlNBOUlIUm9hWE11ZEdGaWJHVXNJSGw1ZEdWNGRDQTlJRndpWENJc0lIbDViR2x1Wlc1dklEMGdNQ3dnZVhsc1pXNW5JRDBnTUN3Z2NtVmpiM1psY21sdVp5QTlJREFzSUZSRlVsSlBVaUE5SURJc0lFVlBSaUE5SURFN1hHNGdJQ0FnZEdocGN5NXNaWGhsY2k1elpYUkpibkIxZENocGJuQjFkQ2s3WEc0Z0lDQWdkR2hwY3k1c1pYaGxjaTU1ZVNBOUlIUm9hWE11ZVhrN1hHNGdJQ0FnZEdocGN5NTVlUzVzWlhobGNpQTlJSFJvYVhNdWJHVjRaWEk3WEc0Z0lDQWdkR2hwY3k1NWVTNXdZWEp6WlhJZ1BTQjBhR2x6TzF4dUlDQWdJR2xtSUNoMGVYQmxiMllnZEdocGN5NXNaWGhsY2k1NWVXeHNiMk1nUFQwZ1hDSjFibVJsWm1sdVpXUmNJaWxjYmlBZ0lDQWdJQ0FnZEdocGN5NXNaWGhsY2k1NWVXeHNiMk1nUFNCN2ZUdGNiaUFnSUNCMllYSWdlWGxzYjJNZ1BTQjBhR2x6TG14bGVHVnlMbmw1Ykd4dll6dGNiaUFnSUNCc2MzUmhZMnN1Y0hWemFDaDVlV3h2WXlrN1hHNGdJQ0FnZG1GeUlISmhibWRsY3lBOUlIUm9hWE11YkdWNFpYSXViM0IwYVc5dWN5QW1KaUIwYUdsekxteGxlR1Z5TG05d2RHbHZibk11Y21GdVoyVnpPMXh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdkR2hwY3k1NWVTNXdZWEp6WlVWeWNtOXlJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHRnljMlZGY25KdmNpQTlJSFJvYVhNdWVYa3VjR0Z5YzJWRmNuSnZjanRjYmlBZ0lDQm1kVzVqZEdsdmJpQndiM0JUZEdGamF5aHVLU0I3WEc0Z0lDQWdJQ0FnSUhOMFlXTnJMbXhsYm1kMGFDQTlJSE4wWVdOckxteGxibWQwYUNBdElESWdLaUJ1TzF4dUlDQWdJQ0FnSUNCMmMzUmhZMnN1YkdWdVozUm9JRDBnZG5OMFlXTnJMbXhsYm1kMGFDQXRJRzQ3WEc0Z0lDQWdJQ0FnSUd4emRHRmpheTVzWlc1bmRHZ2dQU0JzYzNSaFkyc3ViR1Z1WjNSb0lDMGdianRjYmlBZ0lDQjlYRzRnSUNBZ1puVnVZM1JwYjI0Z2JHVjRLQ2tnZTF4dUlDQWdJQ0FnSUNCMllYSWdkRzlyWlc0N1hHNGdJQ0FnSUNBZ0lIUnZhMlZ1SUQwZ2MyVnNaaTVzWlhobGNpNXNaWGdvS1NCOGZDQXhPMXh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhSdmEyVnVJQ0U5UFNCY0ltNTFiV0psY2x3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIydGxiaUE5SUhObGJHWXVjM2x0WW05c2MxOWJkRzlyWlc1ZElIeDhJSFJ2YTJWdU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBiMnRsYmp0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUhONWJXSnZiQ3dnY0hKbFJYSnliM0pUZVcxaWIyd3NJSE4wWVhSbExDQmhZM1JwYjI0c0lHRXNJSElzSUhsNWRtRnNJRDBnZTMwc0lIQXNJR3hsYml3Z2JtVjNVM1JoZEdVc0lHVjRjR1ZqZEdWa08xeHVJQ0FnSUhkb2FXeGxJQ2gwY25WbEtTQjdYRzRnSUNBZ0lDQWdJSE4wWVhSbElEMGdjM1JoWTJ0YmMzUmhZMnN1YkdWdVozUm9JQzBnTVYwN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtUmxabUYxYkhSQlkzUnBiMjV6VzNOMFlYUmxYU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZV04wYVc5dUlEMGdkR2hwY3k1a1pXWmhkV3gwUVdOMGFXOXVjMXR6ZEdGMFpWMDdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jM2x0WW05c0lEMDlQU0J1ZFd4c0lIeDhJSFI1Y0dWdlppQnplVzFpYjJ3Z1BUMGdYQ0oxYm1SbFptbHVaV1JjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjViV0p2YkNBOUlHeGxlQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1lXTjBhVzl1SUQwZ2RHRmliR1ZiYzNSaGRHVmRJQ1ltSUhSaFlteGxXM04wWVhSbFhWdHplVzFpYjJ4ZE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWVdOMGFXOXVJRDA5UFNCY0luVnVaR1ZtYVc1bFpGd2lJSHg4SUNGaFkzUnBiMjR1YkdWdVozUm9JSHg4SUNGaFkzUnBiMjViTUYwcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmxjbkpUZEhJZ1BTQmNJbHdpTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGeVpXTnZkbVZ5YVc1bktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWGh3WldOMFpXUWdQU0JiWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSEFnYVc0Z2RHRmliR1ZiYzNSaGRHVmRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MFpYSnRhVzVoYkhOZlczQmRJQ1ltSUhBZ1BpQXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsZUhCbFkzUmxaQzV3ZFhOb0tGd2lKMXdpSUNzZ2RHaHBjeTUwWlhKdGFXNWhiSE5mVzNCZElDc2dYQ0luWENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YkdWNFpYSXVjMmh2ZDFCdmMybDBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z5Y2xOMGNpQTlJRndpVUdGeWMyVWdaWEp5YjNJZ2IyNGdiR2x1WlNCY0lpQXJJQ2g1ZVd4cGJtVnVieUFySURFcElDc2dYQ0k2WEZ4dVhDSWdLeUIwYUdsekxteGxlR1Z5TG5Ob2IzZFFiM05wZEdsdmJpZ3BJQ3NnWENKY1hHNUZlSEJsWTNScGJtY2dYQ0lnS3lCbGVIQmxZM1JsWkM1cWIybHVLRndpTENCY0lpa2dLeUJjSWl3Z1oyOTBJQ2RjSWlBcklDaDBhR2x6TG5SbGNtMXBibUZzYzE5YmMzbHRZbTlzWFNCOGZDQnplVzFpYjJ3cElDc2dYQ0luWENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWEp5VTNSeUlEMGdYQ0pRWVhKelpTQmxjbkp2Y2lCdmJpQnNhVzVsSUZ3aUlDc2dLSGw1YkdsdVpXNXZJQ3NnTVNrZ0t5QmNJam9nVlc1bGVIQmxZM1JsWkNCY0lpQXJJQ2h6ZVcxaWIyd2dQVDBnTVQ5Y0ltVnVaQ0J2WmlCcGJuQjFkRndpT2x3aUoxd2lJQ3NnS0hSb2FYTXVkR1Z5YldsdVlXeHpYMXR6ZVcxaWIyeGRJSHg4SUhONWJXSnZiQ2tnS3lCY0lpZGNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjR0Z5YzJWRmNuSnZjaWhsY25KVGRISXNJSHQwWlhoME9pQjBhR2x6TG14bGVHVnlMbTFoZEdOb0xDQjBiMnRsYmpvZ2RHaHBjeTUwWlhKdGFXNWhiSE5mVzNONWJXSnZiRjBnZkh3Z2MzbHRZbTlzTENCc2FXNWxPaUIwYUdsekxteGxlR1Z5TG5sNWJHbHVaVzV2TENCc2IyTTZJSGw1Ykc5akxDQmxlSEJsWTNSbFpEb2daWGh3WldOMFpXUjlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb1lXTjBhVzl1V3pCZElHbHVjM1JoYm1ObGIyWWdRWEp5WVhrZ0ppWWdZV04wYVc5dUxteGxibWQwYUNBK0lERXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loY0lsQmhjbk5sSUVWeWNtOXlPaUJ0ZFd4MGFYQnNaU0JoWTNScGIyNXpJSEJ2YzNOcFlteGxJR0YwSUhOMFlYUmxPaUJjSWlBcklITjBZWFJsSUNzZ1hDSXNJSFJ2YTJWdU9pQmNJaUFySUhONWJXSnZiQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2MzZHBkR05vSUNoaFkzUnBiMjViTUYwcElIdGNiaUFnSUNBZ0lDQWdZMkZ6WlNBeE9seHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaFkyc3VjSFZ6YUNoemVXMWliMndwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbk4wWVdOckxuQjFjMmdvZEdocGN5NXNaWGhsY2k1NWVYUmxlSFFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiSE4wWVdOckxuQjFjMmdvZEdocGN5NXNaWGhsY2k1NWVXeHNiMk1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjM1JoWTJzdWNIVnphQ2hoWTNScGIyNWJNVjBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjM2x0WW05c0lEMGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaGNISmxSWEp5YjNKVGVXMWliMndwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNWVXeGxibWNnUFNCMGFHbHpMbXhsZUdWeUxubDViR1Z1Wnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNWVYUmxlSFFnUFNCMGFHbHpMbXhsZUdWeUxubDVkR1Y0ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNWVXeHBibVZ1YnlBOUlIUm9hWE11YkdWNFpYSXVlWGxzYVc1bGJtODdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlWGxzYjJNZ1BTQjBhR2x6TG14bGVHVnlMbmw1Ykd4dll6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY21WamIzWmxjbWx1WnlBK0lEQXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbFkyOTJaWEpwYm1jdExUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNsdFltOXNJRDBnY0hKbFJYSnliM0pUZVcxaWIydzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsUlhKeWIzSlRlVzFpYjJ3Z1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3WEc0Z0lDQWdJQ0FnSUdOaGMyVWdNanBjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxiaUE5SUhSb2FYTXVjSEp2WkhWamRHbHZibk5mVzJGamRHbHZibHN4WFYxYk1WMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCNWVYWmhiQzRrSUQwZ2RuTjBZV05yVzNaemRHRmpheTVzWlc1bmRHZ2dMU0JzWlc1ZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZVhsMllXd3VYeVFnUFNCN1ptbHljM1JmYkdsdVpUb2diSE4wWVdOclcyeHpkR0ZqYXk1c1pXNW5kR2dnTFNBb2JHVnVJSHg4SURFcFhTNW1hWEp6ZEY5c2FXNWxMQ0JzWVhOMFgyeHBibVU2SUd4emRHRmphMXRzYzNSaFkyc3ViR1Z1WjNSb0lDMGdNVjB1YkdGemRGOXNhVzVsTENCbWFYSnpkRjlqYjJ4MWJXNDZJR3h6ZEdGamExdHNjM1JoWTJzdWJHVnVaM1JvSUMwZ0tHeGxiaUI4ZkNBeEtWMHVabWx5YzNSZlkyOXNkVzF1TENCc1lYTjBYMk52YkhWdGJqb2diSE4wWVdOclcyeHpkR0ZqYXk1c1pXNW5kR2dnTFNBeFhTNXNZWE4wWDJOdmJIVnRibjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY21GdVoyVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVhsMllXd3VYeVF1Y21GdVoyVWdQU0JiYkhOMFlXTnJXMnh6ZEdGamF5NXNaVzVuZEdnZ0xTQW9iR1Z1SUh4OElERXBYUzV5WVc1blpWc3dYU3dnYkhOMFlXTnJXMnh6ZEdGamF5NXNaVzVuZEdnZ0xTQXhYUzV5WVc1blpWc3hYVjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCeUlEMGdkR2hwY3k1d1pYSm1iM0p0UVdOMGFXOXVMbU5oYkd3b2VYbDJZV3dzSUhsNWRHVjRkQ3dnZVhsc1pXNW5MQ0I1ZVd4cGJtVnVieXdnZEdocGN5NTVlU3dnWVdOMGFXOXVXekZkTENCMmMzUmhZMnNzSUd4emRHRmpheWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JSElnSVQwOUlGd2lkVzVrWldacGJtVmtYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzWlc0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0ZqYXlBOUlITjBZV05yTG5Oc2FXTmxLREFzSUMweElDb2diR1Z1SUNvZ01pazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbk4wWVdOcklEMGdkbk4wWVdOckxuTnNhV05sS0RBc0lDMHhJQ29nYkdWdUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNjM1JoWTJzZ1BTQnNjM1JoWTJzdWMyeHBZMlVvTUN3Z0xURWdLaUJzWlc0cE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjM1JoWTJzdWNIVnphQ2gwYUdsekxuQnliMlIxWTNScGIyNXpYMXRoWTNScGIyNWJNVjFkV3pCZEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaemRHRmpheTV3ZFhOb0tIbDVkbUZzTGlRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkhOMFlXTnJMbkIxYzJnb2VYbDJZV3d1WHlRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1UzUmhkR1VnUFNCMFlXSnNaVnR6ZEdGamExdHpkR0ZqYXk1c1pXNW5kR2dnTFNBeVhWMWJjM1JoWTJ0YmMzUmhZMnN1YkdWdVozUm9JQzBnTVYxZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaFkyc3VjSFZ6YUNodVpYZFRkR0YwWlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6dGNiaUFnSUNBZ0lDQWdZMkZ6WlNBek9seHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNTlYRzU5TzF4dUx5b2dTbWx6YjI0Z1oyVnVaWEpoZEdWa0lHeGxlR1Z5SUNvdlhHNTJZWElnYkdWNFpYSWdQU0FvWm5WdVkzUnBiMjRvS1h0Y2JuWmhjaUJzWlhobGNpQTlJQ2g3UlU5R09qRXNYRzV3WVhKelpVVnljbTl5T21aMWJtTjBhVzl1SUhCaGNuTmxSWEp5YjNJb2MzUnlMQ0JvWVhOb0tTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbmw1TG5CaGNuTmxjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NWVTNXdZWEp6WlhJdWNHRnljMlZGY25KdmNpaHpkSElzSUdoaGMyZ3BPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0hOMGNpazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlMRnh1YzJWMFNXNXdkWFE2Wm5WdVkzUnBiMjRnS0dsdWNIVjBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMmx1Y0hWMElEMGdhVzV3ZFhRN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDIxdmNtVWdQU0IwYUdsekxsOXNaWE56SUQwZ2RHaHBjeTVrYjI1bElEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZVhsc2FXNWxibThnUFNCMGFHbHpMbmw1YkdWdVp5QTlJREE3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVlWGwwWlhoMElEMGdkR2hwY3k1dFlYUmphR1ZrSUQwZ2RHaHBjeTV0WVhSamFDQTlJQ2NuTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbU52Ym1ScGRHbHZibE4wWVdOcklEMGdXeWRKVGtsVVNVRk1KMTA3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVlWGxzYkc5aklEMGdlMlpwY25OMFgyeHBibVU2TVN4bWFYSnpkRjlqYjJ4MWJXNDZNQ3hzWVhOMFgyeHBibVU2TVN4c1lYTjBYMk52YkhWdGJqb3dmVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YjNCMGFXOXVjeTV5WVc1blpYTXBJSFJvYVhNdWVYbHNiRzlqTG5KaGJtZGxJRDBnV3pBc01GMDdYRzRnSUNBZ0lDQWdJSFJvYVhNdWIyWm1jMlYwSUQwZ01EdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03WEc0Z0lDQWdmU3hjYm1sdWNIVjBPbVoxYm1OMGFXOXVJQ2dwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR05vSUQwZ2RHaHBjeTVmYVc1d2RYUmJNRjA3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVlWGwwWlhoMElDczlJR05vTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbmw1YkdWdVp5c3JPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtOW1abk5sZENzck8xeHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRHTm9JQ3M5SUdOb08xeHVJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRHTm9aV1FnS3owZ1kyZzdYRzRnSUNBZ0lDQWdJSFpoY2lCc2FXNWxjeUE5SUdOb0xtMWhkR05vS0M4b1B6cGNYSEpjWEc0L2ZGeGNiaWt1S2k5bktUdGNiaUFnSUNBZ0lDQWdhV1lnS0d4cGJtVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5sNWJHbHVaVzV2S3lzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxubDViR3h2WXk1c1lYTjBYMnhwYm1Vckt6dGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlWGxzYkc5akxteGhjM1JmWTI5c2RXMXVLeXM3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1eVlXNW5aWE1wSUhSb2FYTXVlWGxzYkc5akxuSmhibWRsV3pGZEt5czdYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWZhVzV3ZFhRZ1BTQjBhR2x6TGw5cGJuQjFkQzV6YkdsalpTZ3hLVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR05vTzF4dUlDQWdJSDBzWEc1MWJuQjFkRHBtZFc1amRHbHZiaUFvWTJncElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUd4bGJpQTlJR05vTG14bGJtZDBhRHRjYmlBZ0lDQWdJQ0FnZG1GeUlHeHBibVZ6SUQwZ1kyZ3VjM0JzYVhRb0x5Zy9PbHhjY2x4Y2JqOThYRnh1S1M5bktUdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxsOXBibkIxZENBOUlHTm9JQ3NnZEdocGN5NWZhVzV3ZFhRN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZVhsMFpYaDBJRDBnZEdocGN5NTVlWFJsZUhRdWMzVmljM1J5S0RBc0lIUm9hWE11ZVhsMFpYaDBMbXhsYm1kMGFDMXNaVzR0TVNrN1hHNGdJQ0FnSUNBZ0lDOHZkR2hwY3k1NWVXeGxibWNnTFQwZ2JHVnVPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtOW1abk5sZENBdFBTQnNaVzQ3WEc0Z0lDQWdJQ0FnSUhaaGNpQnZiR1JNYVc1bGN5QTlJSFJvYVhNdWJXRjBZMmd1YzNCc2FYUW9MeWcvT2x4Y2NseGNiajk4WEZ4dUtTOW5LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXRZWFJqYUNBOUlIUm9hWE11YldGMFkyZ3VjM1ZpYzNSeUtEQXNJSFJvYVhNdWJXRjBZMmd1YkdWdVozUm9MVEVwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbTFoZEdOb1pXUWdQU0IwYUdsekxtMWhkR05vWldRdWMzVmljM1J5S0RBc0lIUm9hWE11YldGMFkyaGxaQzVzWlc1bmRHZ3RNU2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR3hwYm1WekxteGxibWQwYUMweEtTQjBhR2x6TG5sNWJHbHVaVzV2SUMwOUlHeHBibVZ6TG14bGJtZDBhQzB4TzF4dUlDQWdJQ0FnSUNCMllYSWdjaUE5SUhSb2FYTXVlWGxzYkc5akxuSmhibWRsTzF4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZVhsc2JHOWpJRDBnZTJacGNuTjBYMnhwYm1VNklIUm9hWE11ZVhsc2JHOWpMbVpwY25OMFgyeHBibVVzWEc0Z0lDQWdJQ0FnSUNBZ2JHRnpkRjlzYVc1bE9pQjBhR2x6TG5sNWJHbHVaVzV2S3pFc1hHNGdJQ0FnSUNBZ0lDQWdabWx5YzNSZlkyOXNkVzF1T2lCMGFHbHpMbmw1Ykd4dll5NW1hWEp6ZEY5amIyeDFiVzRzWEc0Z0lDQWdJQ0FnSUNBZ2JHRnpkRjlqYjJ4MWJXNDZJR3hwYm1WeklEOWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0tHeHBibVZ6TG14bGJtZDBhQ0E5UFQwZ2IyeGtUR2x1WlhNdWJHVnVaM1JvSUQ4Z2RHaHBjeTU1ZVd4c2IyTXVabWx5YzNSZlkyOXNkVzF1SURvZ01Da2dLeUJ2YkdSTWFXNWxjMXR2YkdSTWFXNWxjeTVzWlc1bmRHZ2dMU0JzYVc1bGN5NXNaVzVuZEdoZExteGxibWQwYUNBdElHeHBibVZ6V3pCZExteGxibWQwYURwY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTVlV3hzYjJNdVptbHljM1JmWTI5c2RXMXVJQzBnYkdWdVhHNGdJQ0FnSUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG5KaGJtZGxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NWVXeHNiMk11Y21GdVoyVWdQU0JiY2xzd1hTd2djbHN3WFNBcklIUm9hWE11ZVhsc1pXNW5JQzBnYkdWdVhUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3p0Y2JpQWdJQ0I5TEZ4dWJXOXlaVHBtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDIxdmNtVWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenRjYmlBZ0lDQjlMRnh1YkdWemN6cG1kVzVqZEdsdmJpQW9iaWtnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMblZ1Y0hWMEtIUm9hWE11YldGMFkyZ3VjMnhwWTJVb2Jpa3BPMXh1SUNBZ0lIMHNYRzV3WVhOMFNXNXdkWFE2Wm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnY0dGemRDQTlJSFJvYVhNdWJXRjBZMmhsWkM1emRXSnpkSElvTUN3Z2RHaHBjeTV0WVhSamFHVmtMbXhsYm1kMGFDQXRJSFJvYVhNdWJXRjBZMmd1YkdWdVozUm9LVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2h3WVhOMExteGxibWQwYUNBK0lESXdJRDhnSnk0dUxpYzZKeWNwSUNzZ2NHRnpkQzV6ZFdKemRISW9MVEl3S1M1eVpYQnNZV05sS0M5Y1hHNHZaeXdnWENKY0lpazdYRzRnSUNBZ2ZTeGNiblZ3WTI5dGFXNW5TVzV3ZFhRNlpuVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2JtVjRkQ0E5SUhSb2FYTXViV0YwWTJnN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h1WlhoMExteGxibWQwYUNBOElESXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVaWGgwSUNzOUlIUm9hWE11WDJsdWNIVjBMbk4xWW5OMGNpZ3dMQ0F5TUMxdVpYaDBMbXhsYm1kMGFDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2h1WlhoMExuTjFZbk4wY2lnd0xESXdLU3NvYm1WNGRDNXNaVzVuZEdnZ1BpQXlNQ0EvSUNjdUxpNG5PaWNuS1NrdWNtVndiR0ZqWlNndlhGeHVMMmNzSUZ3aVhDSXBPMXh1SUNBZ0lIMHNYRzV6YUc5M1VHOXphWFJwYjI0NlpuVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2NISmxJRDBnZEdocGN5NXdZWE4wU1c1d2RYUW9LVHRjYmlBZ0lDQWdJQ0FnZG1GeUlHTWdQU0J1WlhjZ1FYSnlZWGtvY0hKbExteGxibWQwYUNBcklERXBMbXB2YVc0b1hDSXRYQ0lwTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKbElDc2dkR2hwY3k1MWNHTnZiV2x1WjBsdWNIVjBLQ2tnS3lCY0lseGNibHdpSUNzZ1l5dGNJbDVjSWp0Y2JpQWdJQ0I5TEZ4dWJtVjRkRHBtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtUnZibVVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGtWUFJqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11WDJsdWNIVjBLU0IwYUdsekxtUnZibVVnUFNCMGNuVmxPMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQjBiMnRsYml4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdOb0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWdGNFMWhkR05vTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ3c1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bGN6dGNiaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbDl0YjNKbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmw1ZEdWNGRDQTlJQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYUmphQ0E5SUNjbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSFpoY2lCeWRXeGxjeUE5SUhSb2FYTXVYMk4xY25KbGJuUlNkV3hsY3lncE8xeHVJQ0FnSUNBZ0lDQm1iM0lnS0haaGNpQnBQVEE3YVNBOElISjFiR1Z6TG14bGJtZDBhRHNnYVNzcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMFpXMXdUV0YwWTJnZ1BTQjBhR2x6TGw5cGJuQjFkQzV0WVhSamFDaDBhR2x6TG5KMWJHVnpXM0oxYkdWelcybGRYU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdWdGNFMWhkR05vSUNZbUlDZ2hiV0YwWTJnZ2ZId2dkR1Z0Y0UxaGRHTm9XekJkTG14bGJtZDBhQ0ErSUcxaGRHTm9XekJkTG14bGJtZDBhQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUmphQ0E5SUhSbGJYQk5ZWFJqYUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlQ0E5SUdrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxtOXdkR2x2Ym5NdVpteGxlQ2tnWW5KbFlXczdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0cxaGRHTm9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhVzVsY3lBOUlHMWhkR05vV3pCZExtMWhkR05vS0M4b1B6cGNYSEpjWEc0L2ZGeGNiaWt1S2k5bktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNhVzVsY3lrZ2RHaHBjeTU1ZVd4cGJtVnVieUFyUFNCc2FXNWxjeTVzWlc1bmRHZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmw1Ykd4dll5QTlJSHRtYVhKemRGOXNhVzVsT2lCMGFHbHpMbmw1Ykd4dll5NXNZWE4wWDJ4cGJtVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVhOMFgyeHBibVU2SUhSb2FYTXVlWGxzYVc1bGJtOHJNU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGNuTjBYMk52YkhWdGJqb2dkR2hwY3k1NWVXeHNiMk11YkdGemRGOWpiMngxYlc0c1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZWE4wWDJOdmJIVnRiam9nYkdsdVpYTWdQeUJzYVc1bGMxdHNhVzVsY3k1c1pXNW5kR2d0TVYwdWJHVnVaM1JvTFd4cGJtVnpXMnhwYm1WekxteGxibWQwYUMweFhTNXRZWFJqYUNndlhGeHlQMXhjYmo4dktWc3dYUzVzWlc1bmRHZ2dPaUIwYUdsekxubDViR3h2WXk1c1lYTjBYMk52YkhWdGJpQXJJRzFoZEdOb1d6QmRMbXhsYm1kMGFIMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmw1ZEdWNGRDQXJQU0J0WVhSamFGc3dYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGMFkyZ2dLejBnYldGMFkyaGJNRjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRHTm9aWE1nUFNCdFlYUmphRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZVhsc1pXNW5JRDBnZEdocGN5NTVlWFJsZUhRdWJHVnVaM1JvTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NXlZVzVuWlhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5sNWJHeHZZeTV5WVc1blpTQTlJRnQwYUdsekxtOW1abk5sZEN3Z2RHaHBjeTV2Wm1aelpYUWdLejBnZEdocGN5NTVlV3hsYm1kZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmJXOXlaU0E5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1d2RYUWdQU0IwYUdsekxsOXBibkIxZEM1emJHbGpaU2h0WVhSamFGc3dYUzVzWlc1bmRHZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WVhSamFHVmtJQ3M5SUcxaGRHTm9XekJkTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkRzlyWlc0Z1BTQjBhR2x6TG5CbGNtWnZjbTFCWTNScGIyNHVZMkZzYkNoMGFHbHpMQ0IwYUdsekxubDVMQ0IwYUdsekxDQnlkV3hsYzF0cGJtUmxlRjBzZEdocGN5NWpiMjVrYVhScGIyNVRkR0ZqYTF0MGFHbHpMbU52Ym1ScGRHbHZibE4wWVdOckxteGxibWQwYUMweFhTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1a2IyNWxJQ1ltSUhSb2FYTXVYMmx1Y0hWMEtTQjBhR2x6TG1SdmJtVWdQU0JtWVd4elpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBiMnRsYmlrZ2NtVjBkWEp1SUhSdmEyVnVPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJsdWNIVjBJRDA5UFNCY0lsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVGVDBZN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lYSnpaVVZ5Y205eUtDZE1aWGhwWTJGc0lHVnljbTl5SUc5dUlHeHBibVVnSnlzb2RHaHBjeTU1ZVd4cGJtVnVieXN4S1NzbkxpQlZibkpsWTI5bmJtbDZaV1FnZEdWNGRDNWNYRzRuSzNSb2FYTXVjMmh2ZDFCdmMybDBhVzl1S0Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHQwWlhoME9pQmNJbHdpTENCMGIydGxiam9nYm5Wc2JDd2diR2x1WlRvZ2RHaHBjeTU1ZVd4cGJtVnViMzBwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlN4Y2JteGxlRHBtZFc1amRHbHZiaUJzWlhnZ0tDa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2NpQTlJSFJvYVhNdWJtVjRkQ2dwTzF4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlISWdJVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2p0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG14bGVDZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmU3hjYm1KbFoybHVPbVoxYm1OMGFXOXVJR0psWjJsdUlDaGpiMjVrYVhScGIyNHBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjVrYVhScGIyNVRkR0ZqYXk1d2RYTm9LR052Ym1ScGRHbHZiaWs3WEc0Z0lDQWdmU3hjYm5CdmNGTjBZWFJsT21aMWJtTjBhVzl1SUhCdmNGTjBZWFJsSUNncElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dVpHbDBhVzl1VTNSaFkyc3VjRzl3S0NrN1hHNGdJQ0FnZlN4Y2JsOWpkWEp5Wlc1MFVuVnNaWE02Wm5WdVkzUnBiMjRnWDJOMWNuSmxiblJTZFd4bGN5QW9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZibVJwZEdsdmJuTmJkR2hwY3k1amIyNWthWFJwYjI1VGRHRmphMXQwYUdsekxtTnZibVJwZEdsdmJsTjBZV05yTG14bGJtZDBhQzB4WFYwdWNuVnNaWE03WEc0Z0lDQWdmU3hjYm5SdmNGTjBZWFJsT21aMWJtTjBhVzl1SUNncElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dVpHbDBhVzl1VTNSaFkydGJkR2hwY3k1amIyNWthWFJwYjI1VGRHRmpheTVzWlc1bmRHZ3RNbDA3WEc0Z0lDQWdmU3hjYm5CMWMyaFRkR0YwWlRwbWRXNWpkR2x2YmlCaVpXZHBiaUFvWTI5dVpHbDBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WW1WbmFXNG9ZMjl1WkdsMGFXOXVLVHRjYmlBZ0lDQjlmU2s3WEc1c1pYaGxjaTV2Y0hScGIyNXpJRDBnZTMwN1hHNXNaWGhsY2k1d1pYSm1iM0p0UVdOMGFXOXVJRDBnWm5WdVkzUnBiMjRnWVc1dmJubHRiM1Z6S0hsNUxIbDVYeXdrWVhadmFXUnBibWRmYm1GdFpWOWpiMnhzYVhOcGIyNXpMRmxaWDFOVVFWSlVYRzRwSUh0Y2JseHVYRzVtZFc1amRHbHZiaUJ6ZEhKcGNDaHpkR0Z5ZEN3Z1pXNWtLU0I3WEc0Z0lISmxkSFZ5YmlCNWVWOHVlWGwwWlhoMElEMGdlWGxmTG5sNWRHVjRkQzV6ZFdKemRISnBibWNvYzNSaGNuUXNJSGw1WHk1NWVXeGxibWNnTFNCbGJtUWdLeUJ6ZEdGeWRDazdYRzU5WEc1Y2JseHVkbUZ5SUZsWlUxUkJWRVU5V1ZsZlUxUkJVbFJjYm5OM2FYUmphQ2drWVhadmFXUnBibWRmYm1GdFpWOWpiMnhzYVhOcGIyNXpLU0I3WEc1allYTmxJREE2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtIbDVYeTU1ZVhSbGVIUXVjMnhwWTJVb0xUSXBJRDA5UFNCY0lseGNYRnhjWEZ4Y1hDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRISnBjQ2d3TERFcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVltVm5hVzRvWENKdGRWd2lLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtS0hsNVh5NTVlWFJsZUhRdWMyeHBZMlVvTFRFcElEMDlQU0JjSWx4Y1hGeGNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBjbWx3S0RBc01TazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlaV2RwYmloY0ltVnRkVndpS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1KbFoybHVLRndpYlhWY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb2VYbGZMbmw1ZEdWNGRDa2djbVYwZFhKdUlERTFPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYRzVpY21WaGF6dGNibU5oYzJVZ01UcHlaWFIxY200Z01UVTdYRzVpY21WaGF6dGNibU5oYzJVZ01qcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1d2IzQlRkR0YwWlNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z01UVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNibUp5WldGck8xeHVZMkZ6WlNBek9uUm9hWE11WW1WbmFXNG9KM0poZHljcE95QnlaWFIxY200Z01UVTdYRzVpY21WaGF6dGNibU5oYzJVZ05EcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CdmNGTjBZWFJsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdVMmh2ZFd4a0lHSmxJSFZ6YVc1bklHQjBhR2x6TG5SdmNGTjBZWFJsS0NsZ0lHSmxiRzkzTENCaWRYUWdhWFFnWTNWeWNtVnVkR3g1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2NtVjBkWEp1Y3lCMGFHVWdjMlZqYjI1a0lIUnZjQ0JwYm5OMFpXRmtJRzltSUhSb1pTQm1hWEp6ZENCMGIzQXVJRTl3Wlc1bFpDQmhibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUdsemMzVmxJR0ZpYjNWMElHbDBJR0YwSUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5NllXRmphQzlxYVhOdmJpOXBjM04xWlhNdk1qa3hYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZMjl1WkdsMGFXOXVVM1JoWTJ0YmRHaHBjeTVqYjI1a2FYUnBiMjVUZEdGamF5NXNaVzVuZEdndE1WMGdQVDA5SUNkeVlYY25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnTVRVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBjbWx3S0RVc0lEa3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ2RGVGtSZlVrRlhYMEpNVDBOTEp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNibUp5WldGck8xeHVZMkZ6WlNBMU9pQnlaWFIxY200Z01UVTdJRnh1WW5KbFlXczdYRzVqWVhObElEWTZYRzRnSUhSb2FYTXVjRzl3VTNSaGRHVW9LVHRjYmlBZ2NtVjBkWEp1SURFME8xeHVYRzVpY21WaGF6dGNibU5oYzJVZ056cHlaWFIxY200Z05qVTdYRzVpY21WaGF6dGNibU5oYzJVZ09EcHlaWFIxY200Z05qZzdYRzVpY21WaGF6dGNibU5oYzJVZ09Ub2djbVYwZFhKdUlERTVPeUJjYm1KeVpXRnJPMXh1WTJGelpTQXhNRHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnZjRk4wWVhSbEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aVpXZHBiaWduY21GM0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlESXpPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYRzVpY21WaGF6dGNibU5oYzJVZ01URTZjbVYwZFhKdUlEVTFPMXh1WW5KbFlXczdYRzVqWVhObElERXlPbkpsZEhWeWJpQTJNRHRjYm1KeVpXRnJPMXh1WTJGelpTQXhNenB5WlhSMWNtNGdNams3WEc1aWNtVmhhenRjYm1OaGMyVWdNVFE2Y21WMGRYSnVJRFEzTzF4dVluSmxZV3M3WEc1allYTmxJREUxT25Sb2FYTXVjRzl3VTNSaGRHVW9LVHNnY21WMGRYSnVJRFEwTzF4dVluSmxZV3M3WEc1allYTmxJREUyT25Sb2FYTXVjRzl3VTNSaGRHVW9LVHNnY21WMGRYSnVJRFEwTzF4dVluSmxZV3M3WEc1allYTmxJREUzT25KbGRIVnliaUF6TkR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F4T0RweVpYUjFjbTRnTXprN1hHNWljbVZoYXp0Y2JtTmhjMlVnTVRrNmNtVjBkWEp1SURVeE8xeHVZbkpsWVdzN1hHNWpZWE5sSURJd09uSmxkSFZ5YmlBME9EdGNibUp5WldGck8xeHVZMkZ6WlNBeU1UcGNiaUFnZEdocGN5NTFibkIxZENoNWVWOHVlWGwwWlhoMEtUdGNiaUFnZEdocGN5NXdiM0JUZEdGMFpTZ3BPMXh1SUNCMGFHbHpMbUpsWjJsdUtDZGpiMjBuS1R0Y2JseHVZbkpsWVdzN1hHNWpZWE5sSURJeU9seHVJQ0IwYUdsekxuQnZjRk4wWVhSbEtDazdYRzRnSUhKbGRIVnliaUF4TkR0Y2JseHVZbkpsWVdzN1hHNWpZWE5sSURJek9uSmxkSFZ5YmlBME9EdGNibUp5WldGck8xeHVZMkZ6WlNBeU5EcHlaWFIxY200Z056TTdYRzVpY21WaGF6dGNibU5oYzJVZ01qVTZjbVYwZFhKdUlEY3lPMXh1WW5KbFlXczdYRzVqWVhObElESTJPbkpsZEhWeWJpQTNNanRjYm1KeVpXRnJPMXh1WTJGelpTQXlOenB5WlhSMWNtNGdPRGM3WEc1aWNtVmhhenRjYm1OaGMyVWdNamc2THk4Z2FXZHViM0psSUhkb2FYUmxjM0JoWTJWY2JtSnlaV0ZyTzF4dVkyRnpaU0F5T1RwMGFHbHpMbkJ2Y0ZOMFlYUmxLQ2s3SUhKbGRIVnliaUExTkR0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F6TURwMGFHbHpMbkJ2Y0ZOMFlYUmxLQ2s3SUhKbGRIVnliaUF6TXp0Y2JtSnlaV0ZyTzF4dVkyRnpaU0F6TVRwNWVWOHVlWGwwWlhoMElEMGdjM1J5YVhBb01Td3lLUzV5WlhCc1lXTmxLQzljWEZ4Y1hDSXZaeXduWENJbktUc2djbVYwZFhKdUlEZ3dPMXh1WW5KbFlXczdYRzVqWVhObElETXlPbmw1WHk1NWVYUmxlSFFnUFNCemRISnBjQ2d4TERJcExuSmxjR3hoWTJVb0wxeGNYRnduTDJjc1hDSW5YQ0lwT3lCeVpYUjFjbTRnT0RBN1hHNWljbVZoYXp0Y2JtTmhjMlVnTXpNNmNtVjBkWEp1SURnMU8xeHVZbkpsWVdzN1hHNWpZWE5sSURNME9uSmxkSFZ5YmlBNE1qdGNibUp5WldGck8xeHVZMkZ6WlNBek5UcHlaWFIxY200Z09ESTdYRzVpY21WaGF6dGNibU5oYzJVZ016WTZjbVYwZFhKdUlEZ3pPMXh1WW5KbFlXczdYRzVqWVhObElETTNPbkpsZEhWeWJpQTRORHRjYm1KeVpXRnJPMXh1WTJGelpTQXpPRHB5WlhSMWNtNGdPREU3WEc1aWNtVmhhenRjYm1OaGMyVWdNems2Y21WMGRYSnVJRGMxTzF4dVluSmxZV3M3WEc1allYTmxJRFF3T25KbGRIVnliaUEzTnp0Y2JtSnlaV0ZyTzF4dVkyRnpaU0EwTVRweVpYUjFjbTRnTnpJN1hHNWljbVZoYXp0Y2JtTmhjMlVnTkRJNmVYbGZMbmw1ZEdWNGRDQTlJSGw1WHk1NWVYUmxlSFF1Y21Wd2JHRmpaU2d2WEZ4Y1hDaGJYRnhjWEZ4Y1hWMHBMMmNzSnlReEp5azdJSEpsZEhWeWJpQTNNanRjYm1KeVpXRnJPMXh1WTJGelpTQTBNenB5WlhSMWNtNGdKMGxPVmtGTVNVUW5PMXh1WW5KbFlXczdYRzVqWVhObElEUTBPbkpsZEhWeWJpQTFPMXh1WW5KbFlXczdYRzU5WEc1OU8xeHViR1Y0WlhJdWNuVnNaWE1nUFNCYkwxNG9QenBiWGx4Y2VEQXdYU28vS0Q4OUtGeGNlMXhjZXlrcEtTOHNMMTRvUHpwYlhseGNlREF3WFNzcEx5d3ZYaWcvT2x0ZVhGeDRNREJkZXpJc2ZUOG9QejBvWEZ4N1hGeDdmRnhjWEZ4Y1hIdGNYSHQ4WEZ4Y1hGeGNYRnhjWEh0Y1hIdDhKQ2twS1M4c0wxNG9QenBjWEh0Y1hIdGNYSHRjWEhzb1B6MWJYbHhjTDEwcEtTOHNMMTRvUHpwY1hIdGNYSHRjWEh0Y1hIdGNYQzliWGx4Y2N5RmNJaU1sTFN4Y1hDNWNYQzg3TFQ1QVhGeGJMVnhjWG1CY1hIc3RmbDByS0Q4OVd6MTlYRnh6WEZ3dkxsMHBYRng5WEZ4OVhGeDlYRng5S1M4c0wxNG9QenBiWGx4Y2VEQXdYU3MvS0Q4OUtGeGNlMXhjZTF4Y2UxeGNleWtwS1M4c0wxNG9QenBiWEZ4elhGeFRYU28vTFMwb2Zpay9YRng5WEZ4OUtTOHNMMTRvUHpwY1hDZ3BMeXd2WGlnL09seGNLU2t2TEM5ZUtEODZYRng3WEZ4N1hGeDdYRng3S1M4c0wxNG9QenBjWEgxY1hIMWNYSDFjWEgwcEx5d3ZYaWcvT2x4Y2UxeGNleWgrS1Q4K0tTOHNMMTRvUHpwY1hIdGNYSHNvZmlrL0l6NHBMeXd2WGlnL09seGNlMXhjZXloK0tUOGpYRndxUHlrdkxDOWVLRDg2WEZ4N1hGeDdLSDRwUDF4Y0x5a3ZMQzllS0Q4NlhGeDdYRng3S0g0cFAxeGNYbHhjY3lvb2Zpay9YRng5WEZ4OUtTOHNMMTRvUHpwY1hIdGNYSHNvZmlrL1hGeHpLbVZzYzJWY1hITXFLSDRwUDF4Y2ZWeGNmU2t2TEM5ZUtEODZYRng3WEZ4N0tINHBQMXhjWGlrdkxDOWVLRDg2WEZ4N1hGeDdLSDRwUDF4Y2N5cGxiSE5sWEZ4aUtTOHNMMTRvUHpwY1hIdGNYSHNvZmlrL1hGeDdLUzhzTDE0b1B6cGNYSHRjWEhzb2Zpay9KaWt2TEM5ZUtEODZYRng3WEZ4N0tINHBQeUV0TFNrdkxDOWVLRDg2WEZ4N1hGeDdLSDRwUHlGYlhGeHpYRnhUWFNvL1hGeDlYRng5S1M4c0wxNG9QenBjWEh0Y1hIc29maWsvWEZ3cVB5a3ZMQzllS0Q4NlBTa3ZMQzllS0Q4NlhGd3VYRnd1S1M4c0wxNG9QenBjWEM0b1B6MG9XejErZlZ4Y2MxeGNMeTRwZkYwcEtTa3ZMQzllS0Q4NlcxeGNMeTVkS1M4c0wxNG9QenBjWEhNcktTOHNMMTRvUHpwY1hIMG9maWsvWEZ4OVhGeDlLUzhzTDE0b1B6b29maWsvWEZ4OVhGeDlLUzhzTDE0b1B6cGNJaWhjWEZ4Y1cxd2lYWHhiWGx3aVhTa3FYQ0lwTHl3dlhpZy9PaWNvWEZ4Y1hGc25YWHhiWGlkZEtTb25LUzhzTDE0b1B6cEFLUzhzTDE0b1B6cDBjblZsS0Q4OUtGdCtmVnhjY3lsZEtTa3BMeXd2WGlnL09tWmhiSE5sS0Q4OUtGdCtmVnhjY3lsZEtTa3BMeXd2WGlnL09uVnVaR1ZtYVc1bFpDZy9QU2hiZm4xY1hITXBYU2twS1M4c0wxNG9QenB1ZFd4c0tEODlLRnQrZlZ4Y2N5bGRLU2twTHl3dlhpZy9PaTAvV3pBdE9WMHJLRDg2WEZ3dVd6QXRPVjByS1Q4b1B6MG9XMzU5WEZ4ektWMHBLU2t2TEM5ZUtEODZZWE5jWEhNclhGeDhLUzhzTDE0b1B6cGNYSHdwTHl3dlhpZy9PaWhiWGx4Y2N5RmNJaU1sTFN4Y1hDNWNYQzg3TFQ1QVhGeGJMVnhjWG1CY1hIc3RmbDByS0Q4OUtGczlmbjFjWEhOY1hDOHVLWHhkS1NrcEtTOHNMMTRvUHpwY1hGc29YRnhjWEZ4Y1hYeGJYbHhjWFYwcEtseGNYU2t2TEM5ZUtEODZMaWt2TEM5ZUtEODZKQ2t2WFR0Y2JteGxlR1Z5TG1OdmJtUnBkR2x2Ym5NZ1BTQjdYQ0p0ZFZ3aU9udGNJbkoxYkdWelhDSTZXemNzT0N3NUxERXdMREV4TERFeUxERXpMREUwTERFMUxERTJMREUzTERFNExERTVMREl3TERJeExESXlMREl6TERJMExESTFMREkyTERJM0xESTRMREk1TERNd0xETXhMRE15TERNekxETTBMRE0xTERNMkxETTNMRE00TERNNUxEUXdMRFF4TERReUxEUXpMRFEwWFN4Y0ltbHVZMngxYzJsMlpWd2lPbVpoYkhObGZTeGNJbVZ0ZFZ3aU9udGNJbkoxYkdWelhDSTZXekpkTEZ3aWFXNWpiSFZ6YVhabFhDSTZabUZzYzJWOUxGd2lZMjl0WENJNmUxd2ljblZzWlhOY0lqcGJObDBzWENKcGJtTnNkWE5wZG1WY0lqcG1ZV3h6Wlgwc1hDSnlZWGRjSWpwN1hDSnlkV3hsYzF3aU9sc3pMRFFzTlYwc1hDSnBibU5zZFhOcGRtVmNJanBtWVd4elpYMHNYQ0pKVGtsVVNVRk1YQ0k2ZTF3aWNuVnNaWE5jSWpwYk1Dd3hMRFEwWFN4Y0ltbHVZMngxYzJsMlpWd2lPblJ5ZFdWOWZUdGNibkpsZEhWeWJpQnNaWGhsY2p0OUtTZ3BYRzV3WVhKelpYSXViR1Y0WlhJZ1BTQnNaWGhsY2p0Y2JtWjFibU4wYVc5dUlGQmhjbk5sY2lBb0tTQjdJSFJvYVhNdWVYa2dQU0I3ZlRzZ2ZWQmhjbk5sY2k1d2NtOTBiM1I1Y0dVZ1BTQndZWEp6WlhJN2NHRnljMlZ5TGxCaGNuTmxjaUE5SUZCaGNuTmxjanRjYm5KbGRIVnliaUJ1WlhjZ1VHRnljMlZ5TzF4dWZTa29LVHRsZUhCdmNuUWdaR1ZtWVhWc2RDQm9ZVzVrYkdWaVlYSnpPMXh1SWwxOVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX3Zpc2l0b3IgPSByZXF1aXJlKCcuL3Zpc2l0b3InKTtcblxudmFyIF92aXNpdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Zpc2l0b3IpO1xuXG5mdW5jdGlvbiBXaGl0ZXNwYWNlQ29udHJvbCgpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyB7fSA6IGFyZ3VtZW50c1swXTtcblxuICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xufVxuV2hpdGVzcGFjZUNvbnRyb2wucHJvdG90eXBlID0gbmV3IF92aXNpdG9yMlsnZGVmYXVsdCddKCk7XG5cbldoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5Qcm9ncmFtID0gZnVuY3Rpb24gKHByb2dyYW0pIHtcbiAgdmFyIGRvU3RhbmRhbG9uZSA9ICF0aGlzLm9wdGlvbnMuaWdub3JlU3RhbmRhbG9uZTtcblxuICB2YXIgaXNSb290ID0gIXRoaXMuaXNSb290U2VlbjtcbiAgdGhpcy5pc1Jvb3RTZWVuID0gdHJ1ZTtcblxuICB2YXIgYm9keSA9IHByb2dyYW0uYm9keTtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBib2R5Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBjdXJyZW50ID0gYm9keVtpXSxcbiAgICAgICAgc3RyaXAgPSB0aGlzLmFjY2VwdChjdXJyZW50KTtcblxuICAgIGlmICghc3RyaXApIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHZhciBfaXNQcmV2V2hpdGVzcGFjZSA9IGlzUHJldldoaXRlc3BhY2UoYm9keSwgaSwgaXNSb290KSxcbiAgICAgICAgX2lzTmV4dFdoaXRlc3BhY2UgPSBpc05leHRXaGl0ZXNwYWNlKGJvZHksIGksIGlzUm9vdCksXG4gICAgICAgIG9wZW5TdGFuZGFsb25lID0gc3RyaXAub3BlblN0YW5kYWxvbmUgJiYgX2lzUHJldldoaXRlc3BhY2UsXG4gICAgICAgIGNsb3NlU3RhbmRhbG9uZSA9IHN0cmlwLmNsb3NlU3RhbmRhbG9uZSAmJiBfaXNOZXh0V2hpdGVzcGFjZSxcbiAgICAgICAgaW5saW5lU3RhbmRhbG9uZSA9IHN0cmlwLmlubGluZVN0YW5kYWxvbmUgJiYgX2lzUHJldldoaXRlc3BhY2UgJiYgX2lzTmV4dFdoaXRlc3BhY2U7XG5cbiAgICBpZiAoc3RyaXAuY2xvc2UpIHtcbiAgICAgIG9taXRSaWdodChib2R5LCBpLCB0cnVlKTtcbiAgICB9XG4gICAgaWYgKHN0cmlwLm9wZW4pIHtcbiAgICAgIG9taXRMZWZ0KGJvZHksIGksIHRydWUpO1xuICAgIH1cblxuICAgIGlmIChkb1N0YW5kYWxvbmUgJiYgaW5saW5lU3RhbmRhbG9uZSkge1xuICAgICAgb21pdFJpZ2h0KGJvZHksIGkpO1xuXG4gICAgICBpZiAob21pdExlZnQoYm9keSwgaSkpIHtcbiAgICAgICAgLy8gSWYgd2UgYXJlIG9uIGEgc3RhbmRhbG9uZSBub2RlLCBzYXZlIHRoZSBpbmRlbnQgaW5mbyBmb3IgcGFydGlhbHNcbiAgICAgICAgaWYgKGN1cnJlbnQudHlwZSA9PT0gJ1BhcnRpYWxTdGF0ZW1lbnQnKSB7XG4gICAgICAgICAgLy8gUHVsbCBvdXQgdGhlIHdoaXRlc3BhY2UgZnJvbSB0aGUgZmluYWwgbGluZVxuICAgICAgICAgIGN1cnJlbnQuaW5kZW50ID0gLyhbIFxcdF0rJCkvLmV4ZWMoYm9keVtpIC0gMV0ub3JpZ2luYWwpWzFdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChkb1N0YW5kYWxvbmUgJiYgb3BlblN0YW5kYWxvbmUpIHtcbiAgICAgIG9taXRSaWdodCgoY3VycmVudC5wcm9ncmFtIHx8IGN1cnJlbnQuaW52ZXJzZSkuYm9keSk7XG5cbiAgICAgIC8vIFN0cmlwIG91dCB0aGUgcHJldmlvdXMgY29udGVudCBub2RlIGlmIGl0J3Mgd2hpdGVzcGFjZSBvbmx5XG4gICAgICBvbWl0TGVmdChib2R5LCBpKTtcbiAgICB9XG4gICAgaWYgKGRvU3RhbmRhbG9uZSAmJiBjbG9zZVN0YW5kYWxvbmUpIHtcbiAgICAgIC8vIEFsd2F5cyBzdHJpcCB0aGUgbmV4dCBub2RlXG4gICAgICBvbWl0UmlnaHQoYm9keSwgaSk7XG5cbiAgICAgIG9taXRMZWZ0KChjdXJyZW50LmludmVyc2UgfHwgY3VycmVudC5wcm9ncmFtKS5ib2R5KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcHJvZ3JhbTtcbn07XG5cbldoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5CbG9ja1N0YXRlbWVudCA9IFdoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5EZWNvcmF0b3JCbG9jayA9IFdoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5QYXJ0aWFsQmxvY2tTdGF0ZW1lbnQgPSBmdW5jdGlvbiAoYmxvY2spIHtcbiAgdGhpcy5hY2NlcHQoYmxvY2sucHJvZ3JhbSk7XG4gIHRoaXMuYWNjZXB0KGJsb2NrLmludmVyc2UpO1xuXG4gIC8vIEZpbmQgdGhlIGludmVyc2UgcHJvZ3JhbSB0aGF0IGlzIGludm9sZWQgd2l0aCB3aGl0ZXNwYWNlIHN0cmlwcGluZy5cbiAgdmFyIHByb2dyYW0gPSBibG9jay5wcm9ncmFtIHx8IGJsb2NrLmludmVyc2UsXG4gICAgICBpbnZlcnNlID0gYmxvY2sucHJvZ3JhbSAmJiBibG9jay5pbnZlcnNlLFxuICAgICAgZmlyc3RJbnZlcnNlID0gaW52ZXJzZSxcbiAgICAgIGxhc3RJbnZlcnNlID0gaW52ZXJzZTtcblxuICBpZiAoaW52ZXJzZSAmJiBpbnZlcnNlLmNoYWluZWQpIHtcbiAgICBmaXJzdEludmVyc2UgPSBpbnZlcnNlLmJvZHlbMF0ucHJvZ3JhbTtcblxuICAgIC8vIFdhbGsgdGhlIGludmVyc2UgY2hhaW4gdG8gZmluZCB0aGUgbGFzdCBpbnZlcnNlIHRoYXQgaXMgYWN0dWFsbHkgaW4gdGhlIGNoYWluLlxuICAgIHdoaWxlIChsYXN0SW52ZXJzZS5jaGFpbmVkKSB7XG4gICAgICBsYXN0SW52ZXJzZSA9IGxhc3RJbnZlcnNlLmJvZHlbbGFzdEludmVyc2UuYm9keS5sZW5ndGggLSAxXS5wcm9ncmFtO1xuICAgIH1cbiAgfVxuXG4gIHZhciBzdHJpcCA9IHtcbiAgICBvcGVuOiBibG9jay5vcGVuU3RyaXAub3BlbixcbiAgICBjbG9zZTogYmxvY2suY2xvc2VTdHJpcC5jbG9zZSxcblxuICAgIC8vIERldGVybWluZSB0aGUgc3RhbmRhbG9uZSBjYW5kaWFjeS4gQmFzaWNhbGx5IGZsYWcgb3VyIGNvbnRlbnQgYXMgYmVpbmcgcG9zc2libHkgc3RhbmRhbG9uZVxuICAgIC8vIHNvIG91ciBwYXJlbnQgY2FuIGRldGVybWluZSBpZiB3ZSBhY3R1YWxseSBhcmUgc3RhbmRhbG9uZVxuICAgIG9wZW5TdGFuZGFsb25lOiBpc05leHRXaGl0ZXNwYWNlKHByb2dyYW0uYm9keSksXG4gICAgY2xvc2VTdGFuZGFsb25lOiBpc1ByZXZXaGl0ZXNwYWNlKChmaXJzdEludmVyc2UgfHwgcHJvZ3JhbSkuYm9keSlcbiAgfTtcblxuICBpZiAoYmxvY2sub3BlblN0cmlwLmNsb3NlKSB7XG4gICAgb21pdFJpZ2h0KHByb2dyYW0uYm9keSwgbnVsbCwgdHJ1ZSk7XG4gIH1cblxuICBpZiAoaW52ZXJzZSkge1xuICAgIHZhciBpbnZlcnNlU3RyaXAgPSBibG9jay5pbnZlcnNlU3RyaXA7XG5cbiAgICBpZiAoaW52ZXJzZVN0cmlwLm9wZW4pIHtcbiAgICAgIG9taXRMZWZ0KHByb2dyYW0uYm9keSwgbnVsbCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKGludmVyc2VTdHJpcC5jbG9zZSkge1xuICAgICAgb21pdFJpZ2h0KGZpcnN0SW52ZXJzZS5ib2R5LCBudWxsLCB0cnVlKTtcbiAgICB9XG4gICAgaWYgKGJsb2NrLmNsb3NlU3RyaXAub3Blbikge1xuICAgICAgb21pdExlZnQobGFzdEludmVyc2UuYm9keSwgbnVsbCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgLy8gRmluZCBzdGFuZGFsb25lIGVsc2Ugc3RhdG1lbnRzXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMuaWdub3JlU3RhbmRhbG9uZSAmJiBpc1ByZXZXaGl0ZXNwYWNlKHByb2dyYW0uYm9keSkgJiYgaXNOZXh0V2hpdGVzcGFjZShmaXJzdEludmVyc2UuYm9keSkpIHtcbiAgICAgIG9taXRMZWZ0KHByb2dyYW0uYm9keSk7XG4gICAgICBvbWl0UmlnaHQoZmlyc3RJbnZlcnNlLmJvZHkpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChibG9jay5jbG9zZVN0cmlwLm9wZW4pIHtcbiAgICBvbWl0TGVmdChwcm9ncmFtLmJvZHksIG51bGwsIHRydWUpO1xuICB9XG5cbiAgcmV0dXJuIHN0cmlwO1xufTtcblxuV2hpdGVzcGFjZUNvbnRyb2wucHJvdG90eXBlLkRlY29yYXRvciA9IFdoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5NdXN0YWNoZVN0YXRlbWVudCA9IGZ1bmN0aW9uIChtdXN0YWNoZSkge1xuICByZXR1cm4gbXVzdGFjaGUuc3RyaXA7XG59O1xuXG5XaGl0ZXNwYWNlQ29udHJvbC5wcm90b3R5cGUuUGFydGlhbFN0YXRlbWVudCA9IFdoaXRlc3BhY2VDb250cm9sLnByb3RvdHlwZS5Db21tZW50U3RhdGVtZW50ID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgdmFyIHN0cmlwID0gbm9kZS5zdHJpcCB8fCB7fTtcbiAgcmV0dXJuIHtcbiAgICBpbmxpbmVTdGFuZGFsb25lOiB0cnVlLFxuICAgIG9wZW46IHN0cmlwLm9wZW4sXG4gICAgY2xvc2U6IHN0cmlwLmNsb3NlXG4gIH07XG59O1xuXG5mdW5jdGlvbiBpc1ByZXZXaGl0ZXNwYWNlKGJvZHksIGksIGlzUm9vdCkge1xuICBpZiAoaSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgaSA9IGJvZHkubGVuZ3RoO1xuICB9XG5cbiAgLy8gTm9kZXMgdGhhdCBlbmQgd2l0aCBuZXdsaW5lcyBhcmUgY29uc2lkZXJlZCB3aGl0ZXNwYWNlIChidXQgYXJlIHNwZWNpYWxcbiAgLy8gY2FzZWQgZm9yIHN0cmlwIG9wZXJhdGlvbnMpXG4gIHZhciBwcmV2ID0gYm9keVtpIC0gMV0sXG4gICAgICBzaWJsaW5nID0gYm9keVtpIC0gMl07XG4gIGlmICghcHJldikge1xuICAgIHJldHVybiBpc1Jvb3Q7XG4gIH1cblxuICBpZiAocHJldi50eXBlID09PSAnQ29udGVudFN0YXRlbWVudCcpIHtcbiAgICByZXR1cm4gKHNpYmxpbmcgfHwgIWlzUm9vdCA/IC9cXHI/XFxuXFxzKj8kLyA6IC8oXnxcXHI/XFxuKVxccyo/JC8pLnRlc3QocHJldi5vcmlnaW5hbCk7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzTmV4dFdoaXRlc3BhY2UoYm9keSwgaSwgaXNSb290KSB7XG4gIGlmIChpID09PSB1bmRlZmluZWQpIHtcbiAgICBpID0gLTE7XG4gIH1cblxuICB2YXIgbmV4dCA9IGJvZHlbaSArIDFdLFxuICAgICAgc2libGluZyA9IGJvZHlbaSArIDJdO1xuICBpZiAoIW5leHQpIHtcbiAgICByZXR1cm4gaXNSb290O1xuICB9XG5cbiAgaWYgKG5leHQudHlwZSA9PT0gJ0NvbnRlbnRTdGF0ZW1lbnQnKSB7XG4gICAgcmV0dXJuIChzaWJsaW5nIHx8ICFpc1Jvb3QgPyAvXlxccyo/XFxyP1xcbi8gOiAvXlxccyo/KFxccj9cXG58JCkvKS50ZXN0KG5leHQub3JpZ2luYWwpO1xuICB9XG59XG5cbi8vIE1hcmtzIHRoZSBub2RlIHRvIHRoZSByaWdodCBvZiB0aGUgcG9zaXRpb24gYXMgb21pdHRlZC5cbi8vIEkuZS4ge3tmb299fScgJyB3aWxsIG1hcmsgdGhlICcgJyBub2RlIGFzIG9taXR0ZWQuXG4vL1xuLy8gSWYgaSBpcyB1bmRlZmluZWQsIHRoZW4gdGhlIGZpcnN0IGNoaWxkIHdpbGwgYmUgbWFya2VkIGFzIHN1Y2guXG4vL1xuLy8gSWYgbXVsaXRwbGUgaXMgdHJ1dGh5IHRoZW4gYWxsIHdoaXRlc3BhY2Ugd2lsbCBiZSBzdHJpcHBlZCBvdXQgdW50aWwgbm9uLXdoaXRlc3BhY2Vcbi8vIGNvbnRlbnQgaXMgbWV0LlxuZnVuY3Rpb24gb21pdFJpZ2h0KGJvZHksIGksIG11bHRpcGxlKSB7XG4gIHZhciBjdXJyZW50ID0gYm9keVtpID09IG51bGwgPyAwIDogaSArIDFdO1xuICBpZiAoIWN1cnJlbnQgfHwgY3VycmVudC50eXBlICE9PSAnQ29udGVudFN0YXRlbWVudCcgfHwgIW11bHRpcGxlICYmIGN1cnJlbnQucmlnaHRTdHJpcHBlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBvcmlnaW5hbCA9IGN1cnJlbnQudmFsdWU7XG4gIGN1cnJlbnQudmFsdWUgPSBjdXJyZW50LnZhbHVlLnJlcGxhY2UobXVsdGlwbGUgPyAvXlxccysvIDogL15bIFxcdF0qXFxyP1xcbj8vLCAnJyk7XG4gIGN1cnJlbnQucmlnaHRTdHJpcHBlZCA9IGN1cnJlbnQudmFsdWUgIT09IG9yaWdpbmFsO1xufVxuXG4vLyBNYXJrcyB0aGUgbm9kZSB0byB0aGUgbGVmdCBvZiB0aGUgcG9zaXRpb24gYXMgb21pdHRlZC5cbi8vIEkuZS4gJyAne3tmb299fSB3aWxsIG1hcmsgdGhlICcgJyBub2RlIGFzIG9taXR0ZWQuXG4vL1xuLy8gSWYgaSBpcyB1bmRlZmluZWQgdGhlbiB0aGUgbGFzdCBjaGlsZCB3aWxsIGJlIG1hcmtlZCBhcyBzdWNoLlxuLy9cbi8vIElmIG11bGl0cGxlIGlzIHRydXRoeSB0aGVuIGFsbCB3aGl0ZXNwYWNlIHdpbGwgYmUgc3RyaXBwZWQgb3V0IHVudGlsIG5vbi13aGl0ZXNwYWNlXG4vLyBjb250ZW50IGlzIG1ldC5cbmZ1bmN0aW9uIG9taXRMZWZ0KGJvZHksIGksIG11bHRpcGxlKSB7XG4gIHZhciBjdXJyZW50ID0gYm9keVtpID09IG51bGwgPyBib2R5Lmxlbmd0aCAtIDEgOiBpIC0gMV07XG4gIGlmICghY3VycmVudCB8fCBjdXJyZW50LnR5cGUgIT09ICdDb250ZW50U3RhdGVtZW50JyB8fCAhbXVsdGlwbGUgJiYgY3VycmVudC5sZWZ0U3RyaXBwZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBXZSBvbWl0IHRoZSBsYXN0IG5vZGUgaWYgaXQncyB3aGl0ZXNwYWNlIG9ubHkgYW5kIG5vdCBwcmVjZWRlZCBieSBhIG5vbi1jb250ZW50IG5vZGUuXG4gIHZhciBvcmlnaW5hbCA9IGN1cnJlbnQudmFsdWU7XG4gIGN1cnJlbnQudmFsdWUgPSBjdXJyZW50LnZhbHVlLnJlcGxhY2UobXVsdGlwbGUgPyAvXFxzKyQvIDogL1sgXFx0XSskLywgJycpO1xuICBjdXJyZW50LmxlZnRTdHJpcHBlZCA9IGN1cnJlbnQudmFsdWUgIT09IG9yaWdpbmFsO1xuICByZXR1cm4gY3VycmVudC5sZWZ0U3RyaXBwZWQ7XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IFdoaXRlc3BhY2VDb250cm9sO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMk52YlhCcGJHVnlMM2RvYVhSbGMzQmhZMlV0WTI5dWRISnZiQzVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3pzN096czdPM1ZDUVVGdlFpeFhRVUZYT3pzN08wRkJSUzlDTEZOQlFWTXNhVUpCUVdsQ0xFZEJRV1U3VFVGQlpDeFBRVUZQTEhsRVFVRkhMRVZCUVVVN08wRkJRM0pETEUxQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1QwRkJUeXhEUVVGRE8wTkJRM2hDTzBGQlEwUXNhVUpCUVdsQ0xFTkJRVU1zVTBGQlV5eEhRVUZITERCQ1FVRmhMRU5CUVVNN08wRkJSVFZETEdsQ1FVRnBRaXhEUVVGRExGTkJRVk1zUTBGQlF5eFBRVUZQTEVkQlFVY3NWVUZCVXl4UFFVRlBMRVZCUVVVN1FVRkRkRVFzVFVGQlRTeFpRVUZaTEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExHZENRVUZuUWl4RFFVRkRPenRCUVVWd1JDeE5RVUZKTEUxQlFVMHNSMEZCUnl4RFFVRkRMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU03UVVGRE9VSXNUVUZCU1N4RFFVRkRMRlZCUVZVc1IwRkJSeXhKUVVGSkxFTkJRVU03TzBGQlJYWkNMRTFCUVVrc1NVRkJTU3hIUVVGSExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTTdRVUZEZUVJc1QwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVNelF5eFJRVUZKTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8xRkJRMjVDTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZET3p0QlFVVXZRaXhSUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTzBGQlExWXNaVUZCVXp0TFFVTldPenRCUVVWRUxGRkJRVWtzYVVKQlFXbENMRWRCUVVjc1owSkJRV2RDTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1JVRkJSU3hOUVVGTkxFTkJRVU03VVVGRGRrUXNhVUpCUVdsQ0xFZEJRVWNzWjBKQlFXZENMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zUlVGQlJTeE5RVUZOTEVOQlFVTTdVVUZEY2tRc1kwRkJZeXhIUVVGSExFdEJRVXNzUTBGQlF5eGpRVUZqTEVsQlFVa3NhVUpCUVdsQ08xRkJRekZFTEdWQlFXVXNSMEZCUnl4TFFVRkxMRU5CUVVNc1pVRkJaU3hKUVVGSkxHbENRVUZwUWp0UlFVTTFSQ3huUWtGQlowSXNSMEZEWkN4TFFVRkxMRU5CUVVNc1owSkJRV2RDTEVsQlFVa3NhVUpCUVdsQ0xFbEJRVWtzYVVKQlFXbENMRU5CUVVNN08wRkJSWEpGTEZGQlFVa3NTMEZCU3l4RFFVRkRMRXRCUVVzc1JVRkJSVHRCUVVObUxHVkJRVk1zUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRekZDTzBGQlEwUXNVVUZCU1N4TFFVRkxMRU5CUVVNc1NVRkJTU3hGUVVGRk8wRkJRMlFzWTBGQlVTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03UzBGRGVrSTdPMEZCUlVRc1VVRkJTU3haUVVGWkxFbEJRVWtzWjBKQlFXZENMRVZCUVVVN1FVRkRjRU1zWlVGQlV5eERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRU5CUVVNc1EwRkJRenM3UVVGRmJrSXNWVUZCU1N4UlFVRlJMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zUTBGQlF5eEZRVUZGT3p0QlFVVnlRaXhaUVVGSkxFOUJRVThzUTBGQlF5eEpRVUZKTEV0QlFVc3NhMEpCUVd0Q0xFVkJRVVU3TzBGQlJYWkRMR2xDUVVGUExFTkJRVU1zVFVGQlRTeEhRVUZITEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dFRRVU0xUkR0UFFVTkdPMHRCUTBZN1FVRkRSQ3hSUVVGSkxGbEJRVmtzU1VGQlNTeGpRVUZqTEVWQlFVVTdRVUZEYkVNc1pVRkJVeXhEUVVGRExFTkJRVU1zVDBGQlR5eERRVUZETEU5QlFVOHNTVUZCU1N4UFFVRlBMRU5CUVVNc1QwRkJUeXhEUVVGQkxFTkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdPenRCUVVkeVJDeGpRVUZSTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRE8wdEJRMjVDTzBGQlEwUXNVVUZCU1N4WlFVRlpMRWxCUVVrc1pVRkJaU3hGUVVGRk96dEJRVVZ1UXl4bFFVRlRMRU5CUVVNc1NVRkJTU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZET3p0QlFVVnVRaXhqUVVGUkxFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTXNUMEZCVHl4SlFVRkpMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVUVzUTBGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXp0TFFVTnlSRHRIUVVOR096dEJRVVZFTEZOQlFVOHNUMEZCVHl4RFFVRkRPME5CUTJoQ0xFTkJRVU03TzBGQlJVWXNhVUpCUVdsQ0xFTkJRVU1zVTBGQlV5eERRVUZETEdOQlFXTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF5eFRRVUZUTEVOQlFVTXNZMEZCWXl4SFFVRkhMR2xDUVVGcFFpeERRVUZETEZOQlFWTXNRMEZCUXl4eFFrRkJjVUlzUjBGQlJ5eFZRVU0xU1N4TFFVRkxMRVZCUTB3N1FVRkRRU3hOUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVNelFpeE5RVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6czdPMEZCUnpOQ0xFMUJRVWtzVDBGQlR5eEhRVUZITEV0QlFVc3NRMEZCUXl4UFFVRlBMRWxCUVVrc1MwRkJTeXhEUVVGRExFOUJRVTg3VFVGRE1VTXNUMEZCVHl4SFFVRkhMRXRCUVVzc1EwRkJReXhQUVVGUExFbEJRVWtzUzBGQlN5eERRVUZETEU5QlFVODdUVUZEZUVNc1dVRkJXU3hIUVVGSExFOUJRVTg3VFVGRGRFSXNWMEZCVnl4SFFVRkhMRTlCUVU4c1EwRkJRenM3UVVGRmVFSXNUVUZCU1N4UFFVRlBMRWxCUVVrc1QwRkJUeXhEUVVGRExFOUJRVThzUlVGQlJUdEJRVU01UWl4blFrRkJXU3hIUVVGSExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1QwRkJUeXhEUVVGRE96czdRVUZIZGtNc1YwRkJUeXhYUVVGWExFTkJRVU1zVDBGQlR5eEZRVUZGTzBGQlF6RkNMR2xDUVVGWExFZEJRVWNzVjBGQlZ5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eERRVUZETEVOQlFVTXNRMEZCUXl4UFFVRlBMRU5CUVVNN1MwRkRja1U3UjBGRFJqczdRVUZGUkN4TlFVRkpMRXRCUVVzc1IwRkJSenRCUVVOV0xGRkJRVWtzUlVGQlJTeExRVUZMTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrN1FVRkRNVUlzVTBGQlN5eEZRVUZGTEV0QlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNc1MwRkJTenM3T3p0QlFVazNRaXhyUWtGQll5eEZRVUZGTEdkQ1FVRm5RaXhEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVOQlFVTTdRVUZET1VNc2JVSkJRV1VzUlVGQlJTeG5Ra0ZCWjBJc1EwRkJReXhEUVVGRExGbEJRVmtzU1VGQlNTeFBRVUZQTEVOQlFVRXNRMEZCUlN4SlFVRkpMRU5CUVVNN1IwRkRiRVVzUTBGQlF6czdRVUZGUml4TlFVRkpMRXRCUVVzc1EwRkJReXhUUVVGVExFTkJRVU1zUzBGQlN5eEZRVUZGTzBGQlEzcENMR0ZCUVZNc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeEZRVUZGTEVsQlFVa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRIUVVOeVF6czdRVUZGUkN4TlFVRkpMRTlCUVU4c1JVRkJSVHRCUVVOWUxGRkJRVWtzV1VGQldTeEhRVUZITEV0QlFVc3NRMEZCUXl4WlFVRlpMRU5CUVVNN08wRkJSWFJETEZGQlFVa3NXVUZCV1N4RFFVRkRMRWxCUVVrc1JVRkJSVHRCUVVOeVFpeGpRVUZSTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdTMEZEY0VNN08wRkJSVVFzVVVGQlNTeFpRVUZaTEVOQlFVTXNTMEZCU3l4RlFVRkZPMEZCUTNSQ0xHVkJRVk1zUTBGQlF5eFpRVUZaTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU14UXp0QlFVTkVMRkZCUVVrc1MwRkJTeXhEUVVGRExGVkJRVlVzUTBGQlF5eEpRVUZKTEVWQlFVVTdRVUZEZWtJc1kwRkJVU3hEUVVGRExGZEJRVmNzUTBGQlF5eEpRVUZKTEVWQlFVVXNTVUZCU1N4RlFVRkZMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRM2hET3pzN1FVRkhSQ3hSUVVORkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4blFrRkJaMElzU1VGRE9VSXNaMEpCUVdkQ0xFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4SlFVTTVRaXhuUWtGQlowSXNRMEZCUXl4WlFVRlpMRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRMjVETzBGQlEwRXNZMEZCVVN4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dEJRVU4yUWl4bFFVRlRMRU5CUVVNc1dVRkJXU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzB0QlF6bENPMGRCUTBZc1RVRkJUU3hKUVVGSkxFdEJRVXNzUTBGQlF5eFZRVUZWTEVOQlFVTXNTVUZCU1N4RlFVRkZPMEZCUTJoRExGbEJRVkVzUTBGQlF5eFBRVUZQTEVOQlFVTXNTVUZCU1N4RlFVRkZMRWxCUVVrc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dEhRVU53UXpzN1FVRkZSQ3hUUVVGUExFdEJRVXNzUTBGQlF6dERRVU5rTEVOQlFVTTdPMEZCUlVZc2FVSkJRV2xDTEVOQlFVTXNVMEZCVXl4RFFVRkRMRk5CUVZNc1IwRkJSeXhwUWtGQmFVSXNRMEZCUXl4VFFVRlRMRU5CUVVNc2FVSkJRV2xDTEVkQlFVY3NWVUZEZEVZc1VVRkJVU3hGUVVOU08wRkJRMEVzVTBGQlR5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRPME5CUTNaQ0xFTkJRVU03TzBGQlJVWXNhVUpCUVdsQ0xFTkJRVU1zVTBGQlV5eERRVUZETEdkQ1FVRm5RaXhIUVVGSExHbENRVUZwUWl4RFFVRkRMRk5CUVZNc1EwRkJReXhuUWtGQlowSXNSMEZCUnl4VlFVTTFSaXhKUVVGSkxFVkJRMG83TzBGQlJVRXNUVUZCU1N4TFFVRkxMRWRCUVVjc1NVRkJTU3hEUVVGRExFdEJRVXNzU1VGQlNTeEZRVUZGTEVOQlFVTTdRVUZETjBJc1UwRkJUenRCUVVOTUxHOUNRVUZuUWl4RlFVRkZMRWxCUVVrN1FVRkRkRUlzVVVGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4SlFVRkpPMEZCUTJoQ0xGTkJRVXNzUlVGQlJTeExRVUZMTEVOQlFVTXNTMEZCU3p0SFFVTnVRaXhEUVVGRE8wTkJRMGdzUTBGQlF6czdRVUZGUml4VFFVRlRMR2RDUVVGblFpeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRMRVZCUVVVc1RVRkJUU3hGUVVGRk8wRkJRM3BETEUxQlFVa3NRMEZCUXl4TFFVRkxMRk5CUVZNc1JVRkJSVHRCUVVOdVFpeExRVUZETEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJRenRIUVVOcVFqczdPenRCUVVsRUxFMUJRVWtzU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wMUJRM0JDTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEzaENMRTFCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVU3UVVGRFZDeFhRVUZQTEUxQlFVMHNRMEZCUXp0SFFVTm1PenRCUVVWRUxFMUJRVWtzU1VGQlNTeERRVUZETEVsQlFVa3NTMEZCU3l4clFrRkJhMElzUlVGQlJUdEJRVU53UXl4WFFVRlBMRU5CUVVNc1QwRkJUeXhKUVVGSkxFTkJRVU1zVFVGQlRTeEhRVUZITEZsQlFWa3NSMEZCUnl4blFrRkJaMElzUTBGQlFTeERRVUZGTEVsQlFVa3NRMEZEYUVVc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGRFpDeERRVUZETzBkQlEwZzdRMEZEUmp0QlFVTkVMRk5CUVZNc1owSkJRV2RDTEVOQlFVTXNTVUZCU1N4RlFVRkZMRU5CUVVNc1JVRkJSU3hOUVVGTkxFVkJRVVU3UVVGRGVrTXNUVUZCU1N4RFFVRkRMRXRCUVVzc1UwRkJVeXhGUVVGRk8wRkJRMjVDTEV0QlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRIUVVOU096dEJRVVZFTEUxQlFVa3NTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzAxQlEzQkNMRTlCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU1zUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4RFFVRkRPMEZCUTNoQ0xFMUJRVWtzUTBGQlF5eEpRVUZKTEVWQlFVVTdRVUZEVkN4WFFVRlBMRTFCUVUwc1EwRkJRenRIUVVObU96dEJRVVZFTEUxQlFVa3NTVUZCU1N4RFFVRkRMRWxCUVVrc1MwRkJTeXhyUWtGQmEwSXNSVUZCUlR0QlFVTndReXhYUVVGUExFTkJRVU1zVDBGQlR5eEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRmxCUVZrc1IwRkJSeXhuUWtGQlowSXNRMEZCUVN4RFFVRkZMRWxCUVVrc1EwRkRhRVVzU1VGQlNTeERRVUZETEZGQlFWRXNRMEZEWkN4RFFVRkRPMGRCUTBnN1EwRkRSanM3T3pzN096czdPMEZCVTBRc1UwRkJVeXhUUVVGVExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNSVUZCUlN4UlFVRlJMRVZCUVVVN1FVRkRjRU1zVFVGQlNTeFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hKUVVGSkxFZEJRVWNzUTBGQlF5eEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVNeFF5eE5RVU5GTEVOQlFVTXNUMEZCVHl4SlFVTlNMRTlCUVU4c1EwRkJReXhKUVVGSkxFdEJRVXNzYTBKQlFXdENMRWxCUTJ4RExFTkJRVU1zVVVGQlVTeEpRVUZKTEU5QlFVOHNRMEZCUXl4aFFVRmhMRUZCUVVNc1JVRkRjRU03UVVGRFFTeFhRVUZQTzBkQlExSTdPMEZCUlVRc1RVRkJTU3hSUVVGUkxFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTTNRaXhUUVVGUExFTkJRVU1zUzBGQlN5eEhRVUZITEU5QlFVOHNRMEZCUXl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVOdVF5eFJRVUZSTEVkQlFVY3NUVUZCVFN4SFFVRkhMR1ZCUVdVc1JVRkRia01zUlVGQlJTeERRVU5JTEVOQlFVTTdRVUZEUml4VFFVRlBMRU5CUVVNc1lVRkJZU3hIUVVGSExFOUJRVThzUTBGQlF5eExRVUZMTEV0QlFVc3NVVUZCVVN4RFFVRkRPME5CUTNCRU96czdPenM3T3pzN1FVRlRSQ3hUUVVGVExGRkJRVkVzUTBGQlF5eEpRVUZKTEVWQlFVVXNRMEZCUXl4RlFVRkZMRkZCUVZFc1JVRkJSVHRCUVVOdVF5eE5RVUZKTEU5QlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1EwRkJReXhKUVVGSkxFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZEZUVRc1RVRkRSU3hEUVVGRExFOUJRVThzU1VGRFVpeFBRVUZQTEVOQlFVTXNTVUZCU1N4TFFVRkxMR3RDUVVGclFpeEpRVU5zUXl4RFFVRkRMRkZCUVZFc1NVRkJTU3hQUVVGUExFTkJRVU1zV1VGQldTeEJRVUZETEVWQlEyNURPMEZCUTBFc1YwRkJUenRIUVVOU096czdRVUZIUkN4TlFVRkpMRkZCUVZFc1IwRkJSeXhQUVVGUExFTkJRVU1zUzBGQlN5eERRVUZETzBGQlF6ZENMRk5CUVU4c1EwRkJReXhMUVVGTExFZEJRVWNzVDBGQlR5eERRVUZETEV0QlFVc3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hIUVVGSExFMUJRVTBzUjBGQlJ5eFRRVUZUTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRla1VzVTBGQlR5eERRVUZETEZsQlFWa3NSMEZCUnl4UFFVRlBMRU5CUVVNc1MwRkJTeXhMUVVGTExGRkJRVkVzUTBGQlF6dEJRVU5zUkN4VFFVRlBMRTlCUVU4c1EwRkJReXhaUVVGWkxFTkJRVU03UTBGRE4wSTdPM0ZDUVVWakxHbENRVUZwUWlJc0ltWnBiR1VpT2lKM2FHbDBaWE53WVdObExXTnZiblJ5YjJ3dWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdWbWx6YVhSdmNpQm1jbTl0SUNjdUwzWnBjMmwwYjNJbk8xeHVYRzVtZFc1amRHbHZiaUJYYUdsMFpYTndZV05sUTI5dWRISnZiQ2h2Y0hScGIyNXpJRDBnZTMwcElIdGNiaUFnZEdocGN5NXZjSFJwYjI1eklEMGdiM0IwYVc5dWN6dGNibjFjYmxkb2FYUmxjM0JoWTJWRGIyNTBjbTlzTG5CeWIzUnZkSGx3WlNBOUlHNWxkeUJXYVhOcGRHOXlLQ2s3WEc1Y2JsZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNVFjbTluY21GdElEMGdablZ1WTNScGIyNG9jSEp2WjNKaGJTa2dlMXh1SUNCamIyNXpkQ0JrYjFOMFlXNWtZV3h2Ym1VZ1BTQWhkR2hwY3k1dmNIUnBiMjV6TG1sbmJtOXlaVk4wWVc1a1lXeHZibVU3WEc1Y2JpQWdiR1YwSUdselVtOXZkQ0E5SUNGMGFHbHpMbWx6VW05dmRGTmxaVzQ3WEc0Z0lIUm9hWE11YVhOU2IyOTBVMlZsYmlBOUlIUnlkV1U3WEc1Y2JpQWdiR1YwSUdKdlpIa2dQU0J3Y205bmNtRnRMbUp2WkhrN1hHNGdJR1p2Y2lBb2JHVjBJR2tnUFNBd0xDQnNJRDBnWW05a2VTNXNaVzVuZEdnN0lHa2dQQ0JzT3lCcEt5c3BJSHRjYmlBZ0lDQnNaWFFnWTNWeWNtVnVkQ0E5SUdKdlpIbGJhVjBzWEc0Z0lDQWdJQ0J6ZEhKcGNDQTlJSFJvYVhNdVlXTmpaWEIwS0dOMWNuSmxiblFwTzF4dVhHNGdJQ0FnYVdZZ0tDRnpkSEpwY0NrZ2UxeHVJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYkdWMElGOXBjMUJ5WlhaWGFHbDBaWE53WVdObElEMGdhWE5RY21WMlYyaHBkR1Z6Y0dGalpTaGliMlI1TENCcExDQnBjMUp2YjNRcExGeHVJQ0FnSUNBZ1gybHpUbVY0ZEZkb2FYUmxjM0JoWTJVZ1BTQnBjMDVsZUhSWGFHbDBaWE53WVdObEtHSnZaSGtzSUdrc0lHbHpVbTl2ZENrc1hHNGdJQ0FnSUNCdmNHVnVVM1JoYm1SaGJHOXVaU0E5SUhOMGNtbHdMbTl3Wlc1VGRHRnVaR0ZzYjI1bElDWW1JRjlwYzFCeVpYWlhhR2wwWlhOd1lXTmxMRnh1SUNBZ0lDQWdZMnh2YzJWVGRHRnVaR0ZzYjI1bElEMGdjM1J5YVhBdVkyeHZjMlZUZEdGdVpHRnNiMjVsSUNZbUlGOXBjMDVsZUhSWGFHbDBaWE53WVdObExGeHVJQ0FnSUNBZ2FXNXNhVzVsVTNSaGJtUmhiRzl1WlNBOVhHNGdJQ0FnSUNBZ0lITjBjbWx3TG1sdWJHbHVaVk4wWVc1a1lXeHZibVVnSmlZZ1gybHpVSEpsZGxkb2FYUmxjM0JoWTJVZ0ppWWdYMmx6VG1WNGRGZG9hWFJsYzNCaFkyVTdYRzVjYmlBZ0lDQnBaaUFvYzNSeWFYQXVZMnh2YzJVcElIdGNiaUFnSUNBZ0lHOXRhWFJTYVdkb2RDaGliMlI1TENCcExDQjBjblZsS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0hOMGNtbHdMbTl3Wlc0cElIdGNiaUFnSUNBZ0lHOXRhWFJNWldaMEtHSnZaSGtzSUdrc0lIUnlkV1VwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoa2IxTjBZVzVrWVd4dmJtVWdKaVlnYVc1c2FXNWxVM1JoYm1SaGJHOXVaU2tnZTF4dUlDQWdJQ0FnYjIxcGRGSnBaMmgwS0dKdlpIa3NJR2twTzF4dVhHNGdJQ0FnSUNCcFppQW9iMjFwZEV4bFpuUW9ZbTlrZVN3Z2FTa3BJSHRjYmlBZ0lDQWdJQ0FnTHk4Z1NXWWdkMlVnWVhKbElHOXVJR0VnYzNSaGJtUmhiRzl1WlNCdWIyUmxMQ0J6WVhabElIUm9aU0JwYm1SbGJuUWdhVzVtYnlCbWIzSWdjR0Z5ZEdsaGJITmNiaUFnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblF1ZEhsd1pTQTlQVDBnSjFCaGNuUnBZV3hUZEdGMFpXMWxiblFuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdMeThnVUhWc2JDQnZkWFFnZEdobElIZG9hWFJsYzNCaFkyVWdabkp2YlNCMGFHVWdabWx1WVd3Z2JHbHVaVnh1SUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblF1YVc1a1pXNTBJRDBnTHloYklGeGNkRjBySkNrdkxtVjRaV01vWW05a2VWdHBJQzBnTVYwdWIzSnBaMmx1WVd3cFd6RmRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2hrYjFOMFlXNWtZV3h2Ym1VZ0ppWWdiM0JsYmxOMFlXNWtZV3h2Ym1VcElIdGNiaUFnSUNBZ0lHOXRhWFJTYVdkb2RDZ29ZM1Z5Y21WdWRDNXdjbTluY21GdElIeDhJR04xY25KbGJuUXVhVzUyWlhKelpTa3VZbTlrZVNrN1hHNWNiaUFnSUNBZ0lDOHZJRk4wY21sd0lHOTFkQ0IwYUdVZ2NISmxkbWx2ZFhNZ1kyOXVkR1Z1ZENCdWIyUmxJR2xtSUdsMEozTWdkMmhwZEdWemNHRmpaU0J2Ym14NVhHNGdJQ0FnSUNCdmJXbDBUR1ZtZENoaWIyUjVMQ0JwS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0dSdlUzUmhibVJoYkc5dVpTQW1KaUJqYkc5elpWTjBZVzVrWVd4dmJtVXBJSHRjYmlBZ0lDQWdJQzh2SUVGc2QyRjVjeUJ6ZEhKcGNDQjBhR1VnYm1WNGRDQnViMlJsWEc0Z0lDQWdJQ0J2YldsMFVtbG5hSFFvWW05a2VTd2dhU2s3WEc1Y2JpQWdJQ0FnSUc5dGFYUk1aV1owS0NoamRYSnlaVzUwTG1sdWRtVnljMlVnZkh3Z1kzVnljbVZ1ZEM1d2NtOW5jbUZ0S1M1aWIyUjVLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdjSEp2WjNKaGJUdGNibjA3WEc1Y2JsZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNUNiRzlqYTFOMFlYUmxiV1Z1ZENBOUlGZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNUVaV052Y21GMGIzSkNiRzlqYXlBOUlGZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNVFZWEowYVdGc1FteHZZMnRUZEdGMFpXMWxiblFnUFNCbWRXNWpkR2x2YmloY2JpQWdZbXh2WTJ0Y2Jpa2dlMXh1SUNCMGFHbHpMbUZqWTJWd2RDaGliRzlqYXk1d2NtOW5jbUZ0S1R0Y2JpQWdkR2hwY3k1aFkyTmxjSFFvWW14dlkyc3VhVzUyWlhKelpTazdYRzVjYmlBZ0x5OGdSbWx1WkNCMGFHVWdhVzUyWlhKelpTQndjbTluY21GdElIUm9ZWFFnYVhNZ2FXNTJiMnhsWkNCM2FYUm9JSGRvYVhSbGMzQmhZMlVnYzNSeWFYQndhVzVuTGx4dUlDQnNaWFFnY0hKdlozSmhiU0E5SUdKc2IyTnJMbkJ5YjJkeVlXMGdmSHdnWW14dlkyc3VhVzUyWlhKelpTeGNiaUFnSUNCcGJuWmxjbk5sSUQwZ1lteHZZMnN1Y0hKdlozSmhiU0FtSmlCaWJHOWpheTVwYm5abGNuTmxMRnh1SUNBZ0lHWnBjbk4wU1c1MlpYSnpaU0E5SUdsdWRtVnljMlVzWEc0Z0lDQWdiR0Z6ZEVsdWRtVnljMlVnUFNCcGJuWmxjbk5sTzF4dVhHNGdJR2xtSUNocGJuWmxjbk5sSUNZbUlHbHVkbVZ5YzJVdVkyaGhhVzVsWkNrZ2UxeHVJQ0FnSUdacGNuTjBTVzUyWlhKelpTQTlJR2x1ZG1WeWMyVXVZbTlrZVZzd1hTNXdjbTluY21GdE8xeHVYRzRnSUNBZ0x5OGdWMkZzYXlCMGFHVWdhVzUyWlhKelpTQmphR0ZwYmlCMGJ5Qm1hVzVrSUhSb1pTQnNZWE4wSUdsdWRtVnljMlVnZEdoaGRDQnBjeUJoWTNSMVlXeHNlU0JwYmlCMGFHVWdZMmhoYVc0dVhHNGdJQ0FnZDJocGJHVWdLR3hoYzNSSmJuWmxjbk5sTG1Ob1lXbHVaV1FwSUh0Y2JpQWdJQ0FnSUd4aGMzUkpiblpsY25ObElEMGdiR0Z6ZEVsdWRtVnljMlV1WW05a2VWdHNZWE4wU1c1MlpYSnpaUzVpYjJSNUxteGxibWQwYUNBdElERmRMbkJ5YjJkeVlXMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdiR1YwSUhOMGNtbHdJRDBnZTF4dUlDQWdJRzl3Wlc0NklHSnNiMk5yTG05d1pXNVRkSEpwY0M1dmNHVnVMRnh1SUNBZ0lHTnNiM05sT2lCaWJHOWpheTVqYkc5elpWTjBjbWx3TG1Oc2IzTmxMRnh1WEc0Z0lDQWdMeThnUkdWMFpYSnRhVzVsSUhSb1pTQnpkR0Z1WkdGc2IyNWxJR05oYm1ScFlXTjVMaUJDWVhOcFkyRnNiSGtnWm14aFp5QnZkWElnWTI5dWRHVnVkQ0JoY3lCaVpXbHVaeUJ3YjNOemFXSnNlU0J6ZEdGdVpHRnNiMjVsWEc0Z0lDQWdMeThnYzI4Z2IzVnlJSEJoY21WdWRDQmpZVzRnWkdWMFpYSnRhVzVsSUdsbUlIZGxJR0ZqZEhWaGJHeDVJR0Z5WlNCemRHRnVaR0ZzYjI1bFhHNGdJQ0FnYjNCbGJsTjBZVzVrWVd4dmJtVTZJR2x6VG1WNGRGZG9hWFJsYzNCaFkyVW9jSEp2WjNKaGJTNWliMlI1S1N4Y2JpQWdJQ0JqYkc5elpWTjBZVzVrWVd4dmJtVTZJR2x6VUhKbGRsZG9hWFJsYzNCaFkyVW9LR1pwY25OMFNXNTJaWEp6WlNCOGZDQndjbTluY21GdEtTNWliMlI1S1Z4dUlDQjlPMXh1WEc0Z0lHbG1JQ2hpYkc5amF5NXZjR1Z1VTNSeWFYQXVZMnh2YzJVcElIdGNiaUFnSUNCdmJXbDBVbWxuYUhRb2NISnZaM0poYlM1aWIyUjVMQ0J1ZFd4c0xDQjBjblZsS1R0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2hwYm5abGNuTmxLU0I3WEc0Z0lDQWdiR1YwSUdsdWRtVnljMlZUZEhKcGNDQTlJR0pzYjJOckxtbHVkbVZ5YzJWVGRISnBjRHRjYmx4dUlDQWdJR2xtSUNocGJuWmxjbk5sVTNSeWFYQXViM0JsYmlrZ2UxeHVJQ0FnSUNBZ2IyMXBkRXhsWm5Rb2NISnZaM0poYlM1aWIyUjVMQ0J1ZFd4c0xDQjBjblZsS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FXNTJaWEp6WlZOMGNtbHdMbU5zYjNObEtTQjdYRzRnSUNBZ0lDQnZiV2wwVW1sbmFIUW9abWx5YzNSSmJuWmxjbk5sTG1KdlpIa3NJRzUxYkd3c0lIUnlkV1VwTzF4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvWW14dlkyc3VZMnh2YzJWVGRISnBjQzV2Y0dWdUtTQjdYRzRnSUNBZ0lDQnZiV2wwVEdWbWRDaHNZWE4wU1c1MlpYSnpaUzVpYjJSNUxDQnVkV3hzTENCMGNuVmxLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJHYVc1a0lITjBZVzVrWVd4dmJtVWdaV3h6WlNCemRHRjBiV1Z1ZEhOY2JpQWdJQ0JwWmlBb1hHNGdJQ0FnSUNBaGRHaHBjeTV2Y0hScGIyNXpMbWxuYm05eVpWTjBZVzVrWVd4dmJtVWdKaVpjYmlBZ0lDQWdJR2x6VUhKbGRsZG9hWFJsYzNCaFkyVW9jSEp2WjNKaGJTNWliMlI1S1NBbUpseHVJQ0FnSUNBZ2FYTk9aWGgwVjJocGRHVnpjR0ZqWlNobWFYSnpkRWx1ZG1WeWMyVXVZbTlrZVNsY2JpQWdJQ0FwSUh0Y2JpQWdJQ0FnSUc5dGFYUk1aV1owS0hCeWIyZHlZVzB1WW05a2VTazdYRzRnSUNBZ0lDQnZiV2wwVW1sbmFIUW9abWx5YzNSSmJuWmxjbk5sTG1KdlpIa3BPMXh1SUNBZ0lIMWNiaUFnZlNCbGJITmxJR2xtSUNoaWJHOWpheTVqYkc5elpWTjBjbWx3TG05d1pXNHBJSHRjYmlBZ0lDQnZiV2wwVEdWbWRDaHdjbTluY21GdExtSnZaSGtzSUc1MWJHd3NJSFJ5ZFdVcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlITjBjbWx3TzF4dWZUdGNibHh1VjJocGRHVnpjR0ZqWlVOdmJuUnliMnd1Y0hKdmRHOTBlWEJsTGtSbFkyOXlZWFJ2Y2lBOUlGZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNU5kWE4wWVdOb1pWTjBZWFJsYldWdWRDQTlJR1oxYm1OMGFXOXVLRnh1SUNCdGRYTjBZV05vWlZ4dUtTQjdYRzRnSUhKbGRIVnliaUJ0ZFhOMFlXTm9aUzV6ZEhKcGNEdGNibjA3WEc1Y2JsZG9hWFJsYzNCaFkyVkRiMjUwY205c0xuQnliM1J2ZEhsd1pTNVFZWEowYVdGc1UzUmhkR1Z0Wlc1MElEMGdWMmhwZEdWemNHRmpaVU52Ym5SeWIyd3VjSEp2ZEc5MGVYQmxMa052YlcxbGJuUlRkR0YwWlcxbGJuUWdQU0JtZFc1amRHbHZiaWhjYmlBZ2JtOWtaVnh1S1NCN1hHNGdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0J1WlhoMElDb3ZYRzRnSUd4bGRDQnpkSEpwY0NBOUlHNXZaR1V1YzNSeWFYQWdmSHdnZTMwN1hHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ2FXNXNhVzVsVTNSaGJtUmhiRzl1WlRvZ2RISjFaU3hjYmlBZ0lDQnZjR1Z1T2lCemRISnBjQzV2Y0dWdUxGeHVJQ0FnSUdOc2IzTmxPaUJ6ZEhKcGNDNWpiRzl6WlZ4dUlDQjlPMXh1ZlR0Y2JseHVablZ1WTNScGIyNGdhWE5RY21WMlYyaHBkR1Z6Y0dGalpTaGliMlI1TENCcExDQnBjMUp2YjNRcElIdGNiaUFnYVdZZ0tHa2dQVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUdrZ1BTQmliMlI1TG14bGJtZDBhRHRjYmlBZ2ZWeHVYRzRnSUM4dklFNXZaR1Z6SUhSb1lYUWdaVzVrSUhkcGRHZ2dibVYzYkdsdVpYTWdZWEpsSUdOdmJuTnBaR1Z5WldRZ2QyaHBkR1Z6Y0dGalpTQW9ZblYwSUdGeVpTQnpjR1ZqYVdGc1hHNGdJQzh2SUdOaGMyVmtJR1p2Y2lCemRISnBjQ0J2Y0dWeVlYUnBiMjV6S1Z4dUlDQnNaWFFnY0hKbGRpQTlJR0p2WkhsYmFTQXRJREZkTEZ4dUlDQWdJSE5wWW14cGJtY2dQU0JpYjJSNVcya2dMU0F5WFR0Y2JpQWdhV1lnS0NGd2NtVjJLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHbHpVbTl2ZER0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2h3Y21WMkxuUjVjR1VnUFQwOUlDZERiMjUwWlc1MFUzUmhkR1Z0Wlc1MEp5a2dlMXh1SUNBZ0lISmxkSFZ5YmlBb2MybGliR2x1WnlCOGZDQWhhWE5TYjI5MElEOGdMMXhjY2o5Y1hHNWNYSE1xUHlRdklEb2dMeWhlZkZ4Y2NqOWNYRzRwWEZ4ektqOGtMeWt1ZEdWemRDaGNiaUFnSUNBZ0lIQnlaWFl1YjNKcFoybHVZV3hjYmlBZ0lDQXBPMXh1SUNCOVhHNTlYRzVtZFc1amRHbHZiaUJwYzA1bGVIUlhhR2wwWlhOd1lXTmxLR0p2Wkhrc0lHa3NJR2x6VW05dmRDa2dlMXh1SUNCcFppQW9hU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ2FTQTlJQzB4TzF4dUlDQjlYRzVjYmlBZ2JHVjBJRzVsZUhRZ1BTQmliMlI1VzJrZ0t5QXhYU3hjYmlBZ0lDQnphV0pzYVc1bklEMGdZbTlrZVZ0cElDc2dNbDA3WEc0Z0lHbG1JQ2doYm1WNGRDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCcGMxSnZiM1E3WEc0Z0lIMWNibHh1SUNCcFppQW9ibVY0ZEM1MGVYQmxJRDA5UFNBblEyOXVkR1Z1ZEZOMFlYUmxiV1Z1ZENjcElIdGNiaUFnSUNCeVpYUjFjbTRnS0hOcFlteHBibWNnZkh3Z0lXbHpVbTl2ZENBL0lDOWVYRnh6S2o5Y1hISS9YRnh1THlBNklDOWVYRnh6S2o4b1hGeHlQMXhjYm53a0tTOHBMblJsYzNRb1hHNGdJQ0FnSUNCdVpYaDBMbTl5YVdkcGJtRnNYRzRnSUNBZ0tUdGNiaUFnZlZ4dWZWeHVYRzR2THlCTllYSnJjeUIwYUdVZ2JtOWtaU0IwYnlCMGFHVWdjbWxuYUhRZ2IyWWdkR2hsSUhCdmMybDBhVzl1SUdGeklHOXRhWFIwWldRdVhHNHZMeUJKTG1VdUlIdDdabTl2ZlgwbklDY2dkMmxzYkNCdFlYSnJJSFJvWlNBbklDY2dibTlrWlNCaGN5QnZiV2wwZEdWa0xseHVMeTljYmk4dklFbG1JR2tnYVhNZ2RXNWtaV1pwYm1Wa0xDQjBhR1Z1SUhSb1pTQm1hWEp6ZENCamFHbHNaQ0IzYVd4c0lHSmxJRzFoY210bFpDQmhjeUJ6ZFdOb0xseHVMeTljYmk4dklFbG1JRzExYkdsMGNHeGxJR2x6SUhSeWRYUm9lU0IwYUdWdUlHRnNiQ0IzYUdsMFpYTndZV05sSUhkcGJHd2dZbVVnYzNSeWFYQndaV1FnYjNWMElIVnVkR2xzSUc1dmJpMTNhR2wwWlhOd1lXTmxYRzR2THlCamIyNTBaVzUwSUdseklHMWxkQzVjYm1aMWJtTjBhVzl1SUc5dGFYUlNhV2RvZENoaWIyUjVMQ0JwTENCdGRXeDBhWEJzWlNrZ2UxeHVJQ0JzWlhRZ1kzVnljbVZ1ZENBOUlHSnZaSGxiYVNBOVBTQnVkV3hzSUQ4Z01DQTZJR2tnS3lBeFhUdGNiaUFnYVdZZ0tGeHVJQ0FnSUNGamRYSnlaVzUwSUh4OFhHNGdJQ0FnWTNWeWNtVnVkQzUwZVhCbElDRTlQU0FuUTI5dWRHVnVkRk4wWVhSbGJXVnVkQ2NnZkh4Y2JpQWdJQ0FvSVcxMWJIUnBjR3hsSUNZbUlHTjFjbkpsYm5RdWNtbG5hSFJUZEhKcGNIQmxaQ2xjYmlBZ0tTQjdYRzRnSUNBZ2NtVjBkWEp1TzF4dUlDQjlYRzVjYmlBZ2JHVjBJRzl5YVdkcGJtRnNJRDBnWTNWeWNtVnVkQzUyWVd4MVpUdGNiaUFnWTNWeWNtVnVkQzUyWVd4MVpTQTlJR04xY25KbGJuUXVkbUZzZFdVdWNtVndiR0ZqWlNoY2JpQWdJQ0J0ZFd4MGFYQnNaU0EvSUM5ZVhGeHpLeThnT2lBdlhsc2dYRngwWFNwY1hISS9YRnh1UHk4c1hHNGdJQ0FnSnlkY2JpQWdLVHRjYmlBZ1kzVnljbVZ1ZEM1eWFXZG9kRk4wY21sd2NHVmtJRDBnWTNWeWNtVnVkQzUyWVd4MVpTQWhQVDBnYjNKcFoybHVZV3c3WEc1OVhHNWNiaTh2SUUxaGNtdHpJSFJvWlNCdWIyUmxJSFJ2SUhSb1pTQnNaV1owSUc5bUlIUm9aU0J3YjNOcGRHbHZiaUJoY3lCdmJXbDBkR1ZrTGx4dUx5OGdTUzVsTGlBbklDZDdlMlp2YjMxOUlIZHBiR3dnYldGeWF5QjBhR1VnSnlBbklHNXZaR1VnWVhNZ2IyMXBkSFJsWkM1Y2JpOHZYRzR2THlCSlppQnBJR2x6SUhWdVpHVm1hVzVsWkNCMGFHVnVJSFJvWlNCc1lYTjBJR05vYVd4a0lIZHBiR3dnWW1VZ2JXRnlhMlZrSUdGeklITjFZMmd1WEc0dkwxeHVMeThnU1dZZ2JYVnNhWFJ3YkdVZ2FYTWdkSEoxZEdoNUlIUm9aVzRnWVd4c0lIZG9hWFJsYzNCaFkyVWdkMmxzYkNCaVpTQnpkSEpwY0hCbFpDQnZkWFFnZFc1MGFXd2dibTl1TFhkb2FYUmxjM0JoWTJWY2JpOHZJR052Ym5SbGJuUWdhWE1nYldWMExseHVablZ1WTNScGIyNGdiMjFwZEV4bFpuUW9ZbTlrZVN3Z2FTd2diWFZzZEdsd2JHVXBJSHRjYmlBZ2JHVjBJR04xY25KbGJuUWdQU0JpYjJSNVcya2dQVDBnYm5Wc2JDQS9JR0p2WkhrdWJHVnVaM1JvSUMwZ01TQTZJR2tnTFNBeFhUdGNiaUFnYVdZZ0tGeHVJQ0FnSUNGamRYSnlaVzUwSUh4OFhHNGdJQ0FnWTNWeWNtVnVkQzUwZVhCbElDRTlQU0FuUTI5dWRHVnVkRk4wWVhSbGJXVnVkQ2NnZkh4Y2JpQWdJQ0FvSVcxMWJIUnBjR3hsSUNZbUlHTjFjbkpsYm5RdWJHVm1kRk4wY21sd2NHVmtLVnh1SUNBcElIdGNiaUFnSUNCeVpYUjFjbTQ3WEc0Z0lIMWNibHh1SUNBdkx5QlhaU0J2YldsMElIUm9aU0JzWVhOMElHNXZaR1VnYVdZZ2FYUW5jeUIzYUdsMFpYTndZV05sSUc5dWJIa2dZVzVrSUc1dmRDQndjbVZqWldSbFpDQmllU0JoSUc1dmJpMWpiMjUwWlc1MElHNXZaR1V1WEc0Z0lHeGxkQ0J2Y21sbmFXNWhiQ0E5SUdOMWNuSmxiblF1ZG1Gc2RXVTdYRzRnSUdOMWNuSmxiblF1ZG1Gc2RXVWdQU0JqZFhKeVpXNTBMblpoYkhWbExuSmxjR3hoWTJVb2JYVnNkR2x3YkdVZ1B5QXZYRnh6S3lRdklEb2dMMXNnWEZ4MFhTc2tMeXdnSnljcE8xeHVJQ0JqZFhKeVpXNTBMbXhsWm5SVGRISnBjSEJsWkNBOUlHTjFjbkpsYm5RdWRtRnNkV1VnSVQwOUlHOXlhV2RwYm1Gc08xeHVJQ0J5WlhSMWNtNGdZM1Z5Y21WdWRDNXNaV1owVTNSeWFYQndaV1E3WEc1OVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElGZG9hWFJsYzNCaFkyVkRiMjUwY205c08xeHVJbDE5XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLlNvdXJjZUxvY2F0aW9uID0gU291cmNlTG9jYXRpb247XG5leHBvcnRzLmlkID0gaWQ7XG5leHBvcnRzLnN0cmlwRmxhZ3MgPSBzdHJpcEZsYWdzO1xuZXhwb3J0cy5zdHJpcENvbW1lbnQgPSBzdHJpcENvbW1lbnQ7XG5leHBvcnRzLnByZXBhcmVQYXRoID0gcHJlcGFyZVBhdGg7XG5leHBvcnRzLnByZXBhcmVNdXN0YWNoZSA9IHByZXBhcmVNdXN0YWNoZTtcbmV4cG9ydHMucHJlcGFyZVJhd0Jsb2NrID0gcHJlcGFyZVJhd0Jsb2NrO1xuZXhwb3J0cy5wcmVwYXJlQmxvY2sgPSBwcmVwYXJlQmxvY2s7XG5leHBvcnRzLnByZXBhcmVQcm9ncmFtID0gcHJlcGFyZVByb2dyYW07XG5leHBvcnRzLnByZXBhcmVQYXJ0aWFsQmxvY2sgPSBwcmVwYXJlUGFydGlhbEJsb2NrO1xuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXG52YXIgX2V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4uL2V4Y2VwdGlvbicpO1xuXG52YXIgX2V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZUNsb3NlKG9wZW4sIGNsb3NlKSB7XG4gIGNsb3NlID0gY2xvc2UucGF0aCA/IGNsb3NlLnBhdGgub3JpZ2luYWwgOiBjbG9zZTtcblxuICBpZiAob3Blbi5wYXRoLm9yaWdpbmFsICE9PSBjbG9zZSkge1xuICAgIHZhciBlcnJvck5vZGUgPSB7IGxvYzogb3Blbi5wYXRoLmxvYyB9O1xuXG4gICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10ob3Blbi5wYXRoLm9yaWdpbmFsICsgXCIgZG9lc24ndCBtYXRjaCBcIiArIGNsb3NlLCBlcnJvck5vZGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIFNvdXJjZUxvY2F0aW9uKHNvdXJjZSwgbG9jSW5mbykge1xuICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcbiAgdGhpcy5zdGFydCA9IHtcbiAgICBsaW5lOiBsb2NJbmZvLmZpcnN0X2xpbmUsXG4gICAgY29sdW1uOiBsb2NJbmZvLmZpcnN0X2NvbHVtblxuICB9O1xuICB0aGlzLmVuZCA9IHtcbiAgICBsaW5lOiBsb2NJbmZvLmxhc3RfbGluZSxcbiAgICBjb2x1bW46IGxvY0luZm8ubGFzdF9jb2x1bW5cbiAgfTtcbn1cblxuZnVuY3Rpb24gaWQodG9rZW4pIHtcbiAgaWYgKC9eXFxbLipcXF0kLy50ZXN0KHRva2VuKSkge1xuICAgIHJldHVybiB0b2tlbi5zdWJzdHJpbmcoMSwgdG9rZW4ubGVuZ3RoIC0gMSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHRva2VuO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0cmlwRmxhZ3Mob3BlbiwgY2xvc2UpIHtcbiAgcmV0dXJuIHtcbiAgICBvcGVuOiBvcGVuLmNoYXJBdCgyKSA9PT0gJ34nLFxuICAgIGNsb3NlOiBjbG9zZS5jaGFyQXQoY2xvc2UubGVuZ3RoIC0gMykgPT09ICd+J1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHJpcENvbW1lbnQoY29tbWVudCkge1xuICByZXR1cm4gY29tbWVudC5yZXBsYWNlKC9eXFx7XFx7fj8hLT8tPy8sICcnKS5yZXBsYWNlKC8tPy0/fj9cXH1cXH0kLywgJycpO1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlUGF0aChkYXRhLCBwYXJ0cywgbG9jKSB7XG4gIGxvYyA9IHRoaXMubG9jSW5mbyhsb2MpO1xuXG4gIHZhciBvcmlnaW5hbCA9IGRhdGEgPyAnQCcgOiAnJyxcbiAgICAgIGRpZyA9IFtdLFxuICAgICAgZGVwdGggPSAwO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gcGFydHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIHBhcnQgPSBwYXJ0c1tpXS5wYXJ0LFxuXG4gICAgLy8gSWYgd2UgaGF2ZSBbXSBzeW50YXggdGhlbiB3ZSBkbyBub3QgdHJlYXQgcGF0aCByZWZlcmVuY2VzIGFzIG9wZXJhdG9ycyxcbiAgICAvLyBpLmUuIGZvby5bdGhpc10gcmVzb2x2ZXMgdG8gYXBwcm94aW1hdGVseSBjb250ZXh0LmZvb1sndGhpcyddXG4gICAgaXNMaXRlcmFsID0gcGFydHNbaV0ub3JpZ2luYWwgIT09IHBhcnQ7XG4gICAgb3JpZ2luYWwgKz0gKHBhcnRzW2ldLnNlcGFyYXRvciB8fCAnJykgKyBwYXJ0O1xuXG4gICAgaWYgKCFpc0xpdGVyYWwgJiYgKHBhcnQgPT09ICcuLicgfHwgcGFydCA9PT0gJy4nIHx8IHBhcnQgPT09ICd0aGlzJykpIHtcbiAgICAgIGlmIChkaWcubGVuZ3RoID4gMCkge1xuICAgICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnSW52YWxpZCBwYXRoOiAnICsgb3JpZ2luYWwsIHsgbG9jOiBsb2MgfSk7XG4gICAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgICAgZGVwdGgrKztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZGlnLnB1c2gocGFydCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnUGF0aEV4cHJlc3Npb24nLFxuICAgIGRhdGE6IGRhdGEsXG4gICAgZGVwdGg6IGRlcHRoLFxuICAgIHBhcnRzOiBkaWcsXG4gICAgb3JpZ2luYWw6IG9yaWdpbmFsLFxuICAgIGxvYzogbG9jXG4gIH07XG59XG5cbmZ1bmN0aW9uIHByZXBhcmVNdXN0YWNoZShwYXRoLCBwYXJhbXMsIGhhc2gsIG9wZW4sIHN0cmlwLCBsb2NJbmZvKSB7XG4gIC8vIE11c3QgdXNlIGNoYXJBdCB0byBzdXBwb3J0IElFIHByZS0xMFxuICB2YXIgZXNjYXBlRmxhZyA9IG9wZW4uY2hhckF0KDMpIHx8IG9wZW4uY2hhckF0KDIpLFxuICAgICAgZXNjYXBlZCA9IGVzY2FwZUZsYWcgIT09ICd7JyAmJiBlc2NhcGVGbGFnICE9PSAnJic7XG5cbiAgdmFyIGRlY29yYXRvciA9IC9cXCovLnRlc3Qob3Blbik7XG4gIHJldHVybiB7XG4gICAgdHlwZTogZGVjb3JhdG9yID8gJ0RlY29yYXRvcicgOiAnTXVzdGFjaGVTdGF0ZW1lbnQnLFxuICAgIHBhdGg6IHBhdGgsXG4gICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgaGFzaDogaGFzaCxcbiAgICBlc2NhcGVkOiBlc2NhcGVkLFxuICAgIHN0cmlwOiBzdHJpcCxcbiAgICBsb2M6IHRoaXMubG9jSW5mbyhsb2NJbmZvKVxuICB9O1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlUmF3QmxvY2sob3BlblJhd0Jsb2NrLCBjb250ZW50cywgY2xvc2UsIGxvY0luZm8pIHtcbiAgdmFsaWRhdGVDbG9zZShvcGVuUmF3QmxvY2ssIGNsb3NlKTtcblxuICBsb2NJbmZvID0gdGhpcy5sb2NJbmZvKGxvY0luZm8pO1xuICB2YXIgcHJvZ3JhbSA9IHtcbiAgICB0eXBlOiAnUHJvZ3JhbScsXG4gICAgYm9keTogY29udGVudHMsXG4gICAgc3RyaXA6IHt9LFxuICAgIGxvYzogbG9jSW5mb1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0Jsb2NrU3RhdGVtZW50JyxcbiAgICBwYXRoOiBvcGVuUmF3QmxvY2sucGF0aCxcbiAgICBwYXJhbXM6IG9wZW5SYXdCbG9jay5wYXJhbXMsXG4gICAgaGFzaDogb3BlblJhd0Jsb2NrLmhhc2gsXG4gICAgcHJvZ3JhbTogcHJvZ3JhbSxcbiAgICBvcGVuU3RyaXA6IHt9LFxuICAgIGludmVyc2VTdHJpcDoge30sXG4gICAgY2xvc2VTdHJpcDoge30sXG4gICAgbG9jOiBsb2NJbmZvXG4gIH07XG59XG5cbmZ1bmN0aW9uIHByZXBhcmVCbG9jayhvcGVuQmxvY2ssIHByb2dyYW0sIGludmVyc2VBbmRQcm9ncmFtLCBjbG9zZSwgaW52ZXJ0ZWQsIGxvY0luZm8pIHtcbiAgaWYgKGNsb3NlICYmIGNsb3NlLnBhdGgpIHtcbiAgICB2YWxpZGF0ZUNsb3NlKG9wZW5CbG9jaywgY2xvc2UpO1xuICB9XG5cbiAgdmFyIGRlY29yYXRvciA9IC9cXCovLnRlc3Qob3BlbkJsb2NrLm9wZW4pO1xuXG4gIHByb2dyYW0uYmxvY2tQYXJhbXMgPSBvcGVuQmxvY2suYmxvY2tQYXJhbXM7XG5cbiAgdmFyIGludmVyc2UgPSB1bmRlZmluZWQsXG4gICAgICBpbnZlcnNlU3RyaXAgPSB1bmRlZmluZWQ7XG5cbiAgaWYgKGludmVyc2VBbmRQcm9ncmFtKSB7XG4gICAgaWYgKGRlY29yYXRvcikge1xuICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1VuZXhwZWN0ZWQgaW52ZXJzZSBibG9jayBvbiBkZWNvcmF0b3InLCBpbnZlcnNlQW5kUHJvZ3JhbSk7XG4gICAgfVxuXG4gICAgaWYgKGludmVyc2VBbmRQcm9ncmFtLmNoYWluKSB7XG4gICAgICBpbnZlcnNlQW5kUHJvZ3JhbS5wcm9ncmFtLmJvZHlbMF0uY2xvc2VTdHJpcCA9IGNsb3NlLnN0cmlwO1xuICAgIH1cblxuICAgIGludmVyc2VTdHJpcCA9IGludmVyc2VBbmRQcm9ncmFtLnN0cmlwO1xuICAgIGludmVyc2UgPSBpbnZlcnNlQW5kUHJvZ3JhbS5wcm9ncmFtO1xuICB9XG5cbiAgaWYgKGludmVydGVkKSB7XG4gICAgaW52ZXJ0ZWQgPSBpbnZlcnNlO1xuICAgIGludmVyc2UgPSBwcm9ncmFtO1xuICAgIHByb2dyYW0gPSBpbnZlcnRlZDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHlwZTogZGVjb3JhdG9yID8gJ0RlY29yYXRvckJsb2NrJyA6ICdCbG9ja1N0YXRlbWVudCcsXG4gICAgcGF0aDogb3BlbkJsb2NrLnBhdGgsXG4gICAgcGFyYW1zOiBvcGVuQmxvY2sucGFyYW1zLFxuICAgIGhhc2g6IG9wZW5CbG9jay5oYXNoLFxuICAgIHByb2dyYW06IHByb2dyYW0sXG4gICAgaW52ZXJzZTogaW52ZXJzZSxcbiAgICBvcGVuU3RyaXA6IG9wZW5CbG9jay5zdHJpcCxcbiAgICBpbnZlcnNlU3RyaXA6IGludmVyc2VTdHJpcCxcbiAgICBjbG9zZVN0cmlwOiBjbG9zZSAmJiBjbG9zZS5zdHJpcCxcbiAgICBsb2M6IHRoaXMubG9jSW5mbyhsb2NJbmZvKVxuICB9O1xufVxuXG5mdW5jdGlvbiBwcmVwYXJlUHJvZ3JhbShzdGF0ZW1lbnRzLCBsb2MpIHtcbiAgaWYgKCFsb2MgJiYgc3RhdGVtZW50cy5sZW5ndGgpIHtcbiAgICB2YXIgZmlyc3RMb2MgPSBzdGF0ZW1lbnRzWzBdLmxvYyxcbiAgICAgICAgbGFzdExvYyA9IHN0YXRlbWVudHNbc3RhdGVtZW50cy5sZW5ndGggLSAxXS5sb2M7XG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChmaXJzdExvYyAmJiBsYXN0TG9jKSB7XG4gICAgICBsb2MgPSB7XG4gICAgICAgIHNvdXJjZTogZmlyc3RMb2Muc291cmNlLFxuICAgICAgICBzdGFydDoge1xuICAgICAgICAgIGxpbmU6IGZpcnN0TG9jLnN0YXJ0LmxpbmUsXG4gICAgICAgICAgY29sdW1uOiBmaXJzdExvYy5zdGFydC5jb2x1bW5cbiAgICAgICAgfSxcbiAgICAgICAgZW5kOiB7XG4gICAgICAgICAgbGluZTogbGFzdExvYy5lbmQubGluZSxcbiAgICAgICAgICBjb2x1bW46IGxhc3RMb2MuZW5kLmNvbHVtblxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHlwZTogJ1Byb2dyYW0nLFxuICAgIGJvZHk6IHN0YXRlbWVudHMsXG4gICAgc3RyaXA6IHt9LFxuICAgIGxvYzogbG9jXG4gIH07XG59XG5cbmZ1bmN0aW9uIHByZXBhcmVQYXJ0aWFsQmxvY2sob3BlbiwgcHJvZ3JhbSwgY2xvc2UsIGxvY0luZm8pIHtcbiAgdmFsaWRhdGVDbG9zZShvcGVuLCBjbG9zZSk7XG5cbiAgcmV0dXJuIHtcbiAgICB0eXBlOiAnUGFydGlhbEJsb2NrU3RhdGVtZW50JyxcbiAgICBuYW1lOiBvcGVuLnBhdGgsXG4gICAgcGFyYW1zOiBvcGVuLnBhcmFtcyxcbiAgICBoYXNoOiBvcGVuLmhhc2gsXG4gICAgcHJvZ3JhbTogcHJvZ3JhbSxcbiAgICBvcGVuU3RyaXA6IG9wZW4uc3RyaXAsXG4gICAgY2xvc2VTdHJpcDogY2xvc2UgJiYgY2xvc2Uuc3RyaXAsXG4gICAgbG9jOiB0aGlzLmxvY0luZm8obG9jSW5mbylcbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwyaGxiSEJsY25NdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN096czdPenM3T3pzN2VVSkJRWE5DTEdOQlFXTTdPenM3UVVGRmNFTXNVMEZCVXl4aFFVRmhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUlVGQlJUdEJRVU5zUXl4UFFVRkxMRWRCUVVjc1MwRkJTeXhEUVVGRExFbEJRVWtzUjBGQlJ5eExRVUZMTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1IwRkJSeXhMUVVGTExFTkJRVU03TzBGQlJXcEVMRTFCUVVrc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEV0QlFVc3NTMEZCU3l4RlFVRkZPMEZCUTJoRExGRkJRVWtzVTBGQlV5eEhRVUZITEVWQlFVVXNSMEZCUnl4RlFVRkZMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVOQlFVTTdPMEZCUlhaRExGVkJRVTBzTWtKQlEwb3NTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFZEJRVWNzYVVKQlFXbENMRWRCUVVjc1MwRkJTeXhGUVVNNVF5eFRRVUZUTEVOQlExWXNRMEZCUXp0SFFVTklPME5CUTBZN08wRkJSVTBzVTBGQlV5eGpRVUZqTEVOQlFVTXNUVUZCVFN4RlFVRkZMRTlCUVU4c1JVRkJSVHRCUVVNNVF5eE5RVUZKTEVOQlFVTXNUVUZCVFN4SFFVRkhMRTFCUVUwc1EwRkJRenRCUVVOeVFpeE5RVUZKTEVOQlFVTXNTMEZCU3l4SFFVRkhPMEZCUTFnc1VVRkJTU3hGUVVGRkxFOUJRVThzUTBGQlF5eFZRVUZWTzBGQlEzaENMRlZCUVUwc1JVRkJSU3hQUVVGUExFTkJRVU1zV1VGQldUdEhRVU0zUWl4RFFVRkRPMEZCUTBZc1RVRkJTU3hEUVVGRExFZEJRVWNzUjBGQlJ6dEJRVU5VTEZGQlFVa3NSVUZCUlN4UFFVRlBMRU5CUVVNc1UwRkJVenRCUVVOMlFpeFZRVUZOTEVWQlFVVXNUMEZCVHl4RFFVRkRMRmRCUVZjN1IwRkROVUlzUTBGQlF6dERRVU5JT3p0QlFVVk5MRk5CUVZNc1JVRkJSU3hEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU40UWl4TlFVRkpMRlZCUVZVc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVWQlFVVTdRVUZETVVJc1YwRkJUeXhMUVVGTExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNSVUZCUlN4TFFVRkxMRU5CUVVNc1RVRkJUU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzBkQlF6ZERMRTFCUVUwN1FVRkRUQ3hYUVVGUExFdEJRVXNzUTBGQlF6dEhRVU5rTzBOQlEwWTdPMEZCUlUwc1UwRkJVeXhWUVVGVkxFTkJRVU1zU1VGQlNTeEZRVUZGTEV0QlFVc3NSVUZCUlR0QlFVTjBReXhUUVVGUE8wRkJRMHdzVVVGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRExFdEJRVXNzUjBGQlJ6dEJRVU0xUWl4VFFVRkxMRVZCUVVVc1MwRkJTeXhEUVVGRExFMUJRVTBzUTBGQlF5eExRVUZMTEVOQlFVTXNUVUZCVFN4SFFVRkhMRU5CUVVNc1EwRkJReXhMUVVGTExFZEJRVWM3UjBGRE9VTXNRMEZCUXp0RFFVTklPenRCUVVWTkxGTkJRVk1zV1VGQldTeERRVUZETEU5QlFVOHNSVUZCUlR0QlFVTndReXhUUVVGUExFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTXNZMEZCWXl4RlFVRkZMRVZCUVVVc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF5eGhRVUZoTEVWQlFVVXNSVUZCUlN4RFFVRkRMRU5CUVVNN1EwRkRka1U3TzBGQlJVMHNVMEZCVXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUlVGQlJTeEhRVUZITEVWQlFVVTdRVUZETlVNc1MwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN08wRkJSWGhDTEUxQlFVa3NVVUZCVVN4SFFVRkhMRWxCUVVrc1IwRkJSeXhIUVVGSExFZEJRVWNzUlVGQlJUdE5RVU0xUWl4SFFVRkhMRWRCUVVjc1JVRkJSVHROUVVOU0xFdEJRVXNzUjBGQlJ5eERRVUZETEVOQlFVTTdPMEZCUlZvc1QwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNRMEZCUXl4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVNMVF5eFJRVUZKTEVsQlFVa3NSMEZCUnl4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zU1VGQlNUczdPenRCUVVkMFFpeGhRVUZUTEVkQlFVY3NTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExGRkJRVkVzUzBGQlN5eEpRVUZKTEVOQlFVTTdRVUZEZWtNc1dVRkJVU3hKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRk5CUVZNc1NVRkJTU3hGUVVGRkxFTkJRVUVzUjBGQlNTeEpRVUZKTEVOQlFVTTdPMEZCUlRsRExGRkJRVWtzUTBGQlF5eFRRVUZUTEV0QlFVc3NTVUZCU1N4TFFVRkxMRWxCUVVrc1NVRkJTU3hKUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVsQlFVa3NTMEZCU3l4TlFVRk5MRU5CUVVFc1FVRkJReXhGUVVGRk8wRkJRM0JGTEZWQlFVa3NSMEZCUnl4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVU3UVVGRGJFSXNZMEZCVFN3eVFrRkJZeXhuUWtGQlowSXNSMEZCUnl4UlFVRlJMRVZCUVVVc1JVRkJSU3hIUVVGSExFVkJRVWdzUjBGQlJ5eEZRVUZGTEVOQlFVTXNRMEZCUXp0UFFVTXpSQ3hOUVVGTkxFbEJRVWtzU1VGQlNTeExRVUZMTEVsQlFVa3NSVUZCUlR0QlFVTjRRaXhoUVVGTExFVkJRVVVzUTBGQlF6dFBRVU5VTzB0QlEwWXNUVUZCVFR0QlFVTk1MRk5CUVVjc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTMEZEYUVJN1IwRkRSanM3UVVGRlJDeFRRVUZQTzBGQlEwd3NVVUZCU1N4RlFVRkZMR2RDUVVGblFqdEJRVU4wUWl4UlFVRkpMRVZCUVVvc1NVRkJTVHRCUVVOS0xGTkJRVXNzUlVGQlRDeExRVUZMTzBGQlEwd3NVMEZCU3l4RlFVRkZMRWRCUVVjN1FVRkRWaXhaUVVGUkxFVkJRVklzVVVGQlVUdEJRVU5TTEU5QlFVY3NSVUZCU0N4SFFVRkhPMGRCUTBvc1EwRkJRenREUVVOSU96dEJRVVZOTEZOQlFWTXNaVUZCWlN4RFFVRkRMRWxCUVVrc1JVRkJSU3hOUVVGTkxFVkJRVVVzU1VGQlNTeEZRVUZGTEVsQlFVa3NSVUZCUlN4TFFVRkxMRVZCUVVVc1QwRkJUeXhGUVVGRk96dEJRVVY0UlN4TlFVRkpMRlZCUVZVc1IwRkJSeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETzAxQlF5OURMRTlCUVU4c1IwRkJSeXhWUVVGVkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEZWQlFWVXNTMEZCU3l4SFFVRkhMRU5CUVVNN08wRkJSWEpFTEUxQlFVa3NVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEYUVNc1UwRkJUenRCUVVOTUxGRkJRVWtzUlVGQlJTeFRRVUZUTEVkQlFVY3NWMEZCVnl4SFFVRkhMRzFDUVVGdFFqdEJRVU51UkN4UlFVRkpMRVZCUVVvc1NVRkJTVHRCUVVOS0xGVkJRVTBzUlVGQlRpeE5RVUZOTzBGQlEwNHNVVUZCU1N4RlFVRktMRWxCUVVrN1FVRkRTaXhYUVVGUExFVkJRVkFzVDBGQlR6dEJRVU5RTEZOQlFVc3NSVUZCVEN4TFFVRkxPMEZCUTB3c1QwRkJSeXhGUVVGRkxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUMEZCVHl4RFFVRkRPMGRCUXpOQ0xFTkJRVU03UTBGRFNEczdRVUZGVFN4VFFVRlRMR1ZCUVdVc1EwRkJReXhaUVVGWkxFVkJRVVVzVVVGQlVTeEZRVUZGTEV0QlFVc3NSVUZCUlN4UFFVRlBMRVZCUVVVN1FVRkRkRVVzWlVGQllTeERRVUZETEZsQlFWa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJRenM3UVVGRmJrTXNVMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdRVUZEYUVNc1RVRkJTU3hQUVVGUExFZEJRVWM3UVVGRFdpeFJRVUZKTEVWQlFVVXNVMEZCVXp0QlFVTm1MRkZCUVVrc1JVRkJSU3hSUVVGUk8wRkJRMlFzVTBGQlN5eEZRVUZGTEVWQlFVVTdRVUZEVkN4UFFVRkhMRVZCUVVVc1QwRkJUenRIUVVOaUxFTkJRVU03TzBGQlJVWXNVMEZCVHp0QlFVTk1MRkZCUVVrc1JVRkJSU3huUWtGQlowSTdRVUZEZEVJc1VVRkJTU3hGUVVGRkxGbEJRVmtzUTBGQlF5eEpRVUZKTzBGQlEzWkNMRlZCUVUwc1JVRkJSU3haUVVGWkxFTkJRVU1zVFVGQlRUdEJRVU16UWl4UlFVRkpMRVZCUVVVc1dVRkJXU3hEUVVGRExFbEJRVWs3UVVGRGRrSXNWMEZCVHl4RlFVRlFMRTlCUVU4N1FVRkRVQ3hoUVVGVExFVkJRVVVzUlVGQlJUdEJRVU5pTEdkQ1FVRlpMRVZCUVVVc1JVRkJSVHRCUVVOb1FpeGpRVUZWTEVWQlFVVXNSVUZCUlR0QlFVTmtMRTlCUVVjc1JVRkJSU3hQUVVGUE8wZEJRMklzUTBGQlF6dERRVU5JT3p0QlFVVk5MRk5CUVZNc1dVRkJXU3hEUVVNeFFpeFRRVUZUTEVWQlExUXNUMEZCVHl4RlFVTlFMR2xDUVVGcFFpeEZRVU5xUWl4TFFVRkxMRVZCUTB3c1VVRkJVU3hGUVVOU0xFOUJRVThzUlVGRFVEdEJRVU5CTEUxQlFVa3NTMEZCU3l4SlFVRkpMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRVVU3UVVGRGRrSXNhVUpCUVdFc1EwRkJReXhUUVVGVExFVkJRVVVzUzBGQlN5eERRVUZETEVOQlFVTTdSMEZEYWtNN08wRkJSVVFzVFVGQlNTeFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdPMEZCUlRGRExGTkJRVThzUTBGQlF5eFhRVUZYTEVkQlFVY3NVMEZCVXl4RFFVRkRMRmRCUVZjc1EwRkJRenM3UVVGRk5VTXNUVUZCU1N4UFFVRlBMRmxCUVVFN1RVRkJSU3haUVVGWkxGbEJRVUVzUTBGQlF6czdRVUZGTVVJc1RVRkJTU3hwUWtGQmFVSXNSVUZCUlR0QlFVTnlRaXhSUVVGSkxGTkJRVk1zUlVGQlJUdEJRVU5pTEZsQlFVMHNNa0pCUTBvc2RVTkJRWFZETEVWQlEzWkRMR2xDUVVGcFFpeERRVU5zUWl4RFFVRkRPMHRCUTBnN08wRkJSVVFzVVVGQlNTeHBRa0ZCYVVJc1EwRkJReXhMUVVGTExFVkJRVVU3UVVGRE0wSXNkVUpCUVdsQ0xFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhWUVVGVkxFZEJRVWNzUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXp0TFFVTTFSRHM3UVVGRlJDeG5Ra0ZCV1N4SFFVRkhMR2xDUVVGcFFpeERRVUZETEV0QlFVc3NRMEZCUXp0QlFVTjJReXhYUVVGUExFZEJRVWNzYVVKQlFXbENMRU5CUVVNc1QwRkJUeXhEUVVGRE8wZEJRM0pET3p0QlFVVkVMRTFCUVVrc1VVRkJVU3hGUVVGRk8wRkJRMW9zV1VGQlVTeEhRVUZITEU5QlFVOHNRMEZCUXp0QlFVTnVRaXhYUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzBGQlEyeENMRmRCUVU4c1IwRkJSeXhSUVVGUkxFTkJRVU03UjBGRGNFSTdPMEZCUlVRc1UwRkJUenRCUVVOTUxGRkJRVWtzUlVGQlJTeFRRVUZUTEVkQlFVY3NaMEpCUVdkQ0xFZEJRVWNzWjBKQlFXZENPMEZCUTNKRUxGRkJRVWtzUlVGQlJTeFRRVUZUTEVOQlFVTXNTVUZCU1R0QlFVTndRaXhWUVVGTkxFVkJRVVVzVTBGQlV5eERRVUZETEUxQlFVMDdRVUZEZUVJc1VVRkJTU3hGUVVGRkxGTkJRVk1zUTBGQlF5eEpRVUZKTzBGQlEzQkNMRmRCUVU4c1JVRkJVQ3hQUVVGUE8wRkJRMUFzVjBGQlR5eEZRVUZRTEU5QlFVODdRVUZEVUN4aFFVRlRMRVZCUVVVc1UwRkJVeXhEUVVGRExFdEJRVXM3UVVGRE1VSXNaMEpCUVZrc1JVRkJXaXhaUVVGWk8wRkJRMW9zWTBGQlZTeEZRVUZGTEV0QlFVc3NTVUZCU1N4TFFVRkxMRU5CUVVNc1MwRkJTenRCUVVOb1F5eFBRVUZITEVWQlFVVXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhQUVVGUExFTkJRVU03UjBGRE0wSXNRMEZCUXp0RFFVTklPenRCUVVWTkxGTkJRVk1zWTBGQll5eERRVUZETEZWQlFWVXNSVUZCUlN4SFFVRkhMRVZCUVVVN1FVRkRPVU1zVFVGQlNTeERRVUZETEVkQlFVY3NTVUZCU1N4VlFVRlZMRU5CUVVNc1RVRkJUU3hGUVVGRk8wRkJRemRDTEZGQlFVMHNVVUZCVVN4SFFVRkhMRlZCUVZVc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITzFGQlEyaERMRTlCUVU4c1IwRkJSeXhWUVVGVkxFTkJRVU1zVlVGQlZTeERRVUZETEUxQlFVMHNSMEZCUnl4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFTkJRVU03T3p0QlFVZHNSQ3hSUVVGSkxGRkJRVkVzU1VGQlNTeFBRVUZQTEVWQlFVVTdRVUZEZGtJc1UwRkJSeXhIUVVGSE8wRkJRMG9zWTBGQlRTeEZRVUZGTEZGQlFWRXNRMEZCUXl4TlFVRk5PMEZCUTNaQ0xHRkJRVXNzUlVGQlJUdEJRVU5NTEdOQlFVa3NSVUZCUlN4UlFVRlJMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWs3UVVGRGVrSXNaMEpCUVUwc1JVRkJSU3hSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZETEUxQlFVMDdVMEZET1VJN1FVRkRSQ3hYUVVGSExFVkJRVVU3UVVGRFNDeGpRVUZKTEVWQlFVVXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhKUVVGSk8wRkJRM1JDTEdkQ1FVRk5MRVZCUVVVc1QwRkJUeXhEUVVGRExFZEJRVWNzUTBGQlF5eE5RVUZOTzFOQlF6TkNPMDlCUTBZc1EwRkJRenRMUVVOSU8wZEJRMFk3TzBGQlJVUXNVMEZCVHp0QlFVTk1MRkZCUVVrc1JVRkJSU3hUUVVGVE8wRkJRMllzVVVGQlNTeEZRVUZGTEZWQlFWVTdRVUZEYUVJc1UwRkJTeXhGUVVGRkxFVkJRVVU3UVVGRFZDeFBRVUZITEVWQlFVVXNSMEZCUnp0SFFVTlVMRU5CUVVNN1EwRkRTRHM3UVVGRlRTeFRRVUZUTEcxQ1FVRnRRaXhEUVVGRExFbEJRVWtzUlVGQlJTeFBRVUZQTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTlCUVU4c1JVRkJSVHRCUVVOcVJTeGxRVUZoTEVOQlFVTXNTVUZCU1N4RlFVRkZMRXRCUVVzc1EwRkJReXhEUVVGRE96dEJRVVV6UWl4VFFVRlBPMEZCUTB3c1VVRkJTU3hGUVVGRkxIVkNRVUYxUWp0QlFVTTNRaXhSUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEVsQlFVazdRVUZEWml4VlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRExFMUJRVTA3UVVGRGJrSXNVVUZCU1N4RlFVRkZMRWxCUVVrc1EwRkJReXhKUVVGSk8wRkJRMllzVjBGQlR5eEZRVUZRTEU5QlFVODdRVUZEVUN4aFFVRlRMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXM3UVVGRGNrSXNZMEZCVlN4RlFVRkZMRXRCUVVzc1NVRkJTU3hMUVVGTExFTkJRVU1zUzBGQlN6dEJRVU5vUXl4UFFVRkhMRVZCUVVVc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTTdSMEZETTBJc1EwRkJRenREUVVOSUlpd2labWxzWlNJNkltaGxiSEJsY25NdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdSWGhqWlhCMGFXOXVJR1p5YjIwZ0p5NHVMMlY0WTJWd2RHbHZiaWM3WEc1Y2JtWjFibU4wYVc5dUlIWmhiR2xrWVhSbFEyeHZjMlVvYjNCbGJpd2dZMnh2YzJVcElIdGNiaUFnWTJ4dmMyVWdQU0JqYkc5elpTNXdZWFJvSUQ4Z1kyeHZjMlV1Y0dGMGFDNXZjbWxuYVc1aGJDQTZJR05zYjNObE8xeHVYRzRnSUdsbUlDaHZjR1Z1TG5CaGRHZ3ViM0pwWjJsdVlXd2dJVDA5SUdOc2IzTmxLU0I3WEc0Z0lDQWdiR1YwSUdWeWNtOXlUbTlrWlNBOUlIc2diRzlqT2lCdmNHVnVMbkJoZEdndWJHOWpJSDA3WEc1Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhoalpYQjBhVzl1S0Z4dUlDQWdJQ0FnYjNCbGJpNXdZWFJvTG05eWFXZHBibUZzSUNzZ1hDSWdaRzlsYzI0bmRDQnRZWFJqYUNCY0lpQXJJR05zYjNObExGeHVJQ0FnSUNBZ1pYSnliM0pPYjJSbFhHNGdJQ0FnS1R0Y2JpQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1UyOTFjbU5sVEc5allYUnBiMjRvYzI5MWNtTmxMQ0JzYjJOSmJtWnZLU0I3WEc0Z0lIUm9hWE11YzI5MWNtTmxJRDBnYzI5MWNtTmxPMXh1SUNCMGFHbHpMbk4wWVhKMElEMGdlMXh1SUNBZ0lHeHBibVU2SUd4dlkwbHVabTh1Wm1seWMzUmZiR2x1WlN4Y2JpQWdJQ0JqYjJ4MWJXNDZJR3h2WTBsdVptOHVabWx5YzNSZlkyOXNkVzF1WEc0Z0lIMDdYRzRnSUhSb2FYTXVaVzVrSUQwZ2UxeHVJQ0FnSUd4cGJtVTZJR3h2WTBsdVptOHViR0Z6ZEY5c2FXNWxMRnh1SUNBZ0lHTnZiSFZ0YmpvZ2JHOWpTVzVtYnk1c1lYTjBYMk52YkhWdGJseHVJQ0I5TzF4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdhV1FvZEc5clpXNHBJSHRjYmlBZ2FXWWdLQzllWEZ4YkxpcGNYRjBrTHk1MFpYTjBLSFJ2YTJWdUtTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGIydGxiaTV6ZFdKemRISnBibWNvTVN3Z2RHOXJaVzR1YkdWdVozUm9JQzBnTVNrN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSdmEyVnVPMXh1SUNCOVhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6ZEhKcGNFWnNZV2R6S0c5d1pXNHNJR05zYjNObEtTQjdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdiM0JsYmpvZ2IzQmxiaTVqYUdGeVFYUW9NaWtnUFQwOUlDZCtKeXhjYmlBZ0lDQmpiRzl6WlRvZ1kyeHZjMlV1WTJoaGNrRjBLR05zYjNObExteGxibWQwYUNBdElETXBJRDA5UFNBbmZpZGNiaUFnZlR0Y2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE4wY21sd1EyOXRiV1Z1ZENoamIyMXRaVzUwS1NCN1hHNGdJSEpsZEhWeWJpQmpiMjF0Wlc1MExuSmxjR3hoWTJVb0wxNWNYSHRjWEh0K1B5RXRQeTAvTHl3Z0p5Y3BMbkpsY0d4aFkyVW9MeTAvTFQ5K1AxeGNmVnhjZlNRdkxDQW5KeWs3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQndjbVZ3WVhKbFVHRjBhQ2hrWVhSaExDQndZWEowY3l3Z2JHOWpLU0I3WEc0Z0lHeHZZeUE5SUhSb2FYTXViRzlqU1c1bWJ5aHNiMk1wTzF4dVhHNGdJR3hsZENCdmNtbG5hVzVoYkNBOUlHUmhkR0VnUHlBblFDY2dPaUFuSnl4Y2JpQWdJQ0JrYVdjZ1BTQmJYU3hjYmlBZ0lDQmtaWEIwYUNBOUlEQTdYRzVjYmlBZ1ptOXlJQ2hzWlhRZ2FTQTlJREFzSUd3Z1BTQndZWEowY3k1c1pXNW5kR2c3SUdrZ1BDQnNPeUJwS3lzcElIdGNiaUFnSUNCc1pYUWdjR0Z5ZENBOUlIQmhjblJ6VzJsZExuQmhjblFzWEc0Z0lDQWdJQ0F2THlCSlppQjNaU0JvWVhabElGdGRJSE41Ym5SaGVDQjBhR1Z1SUhkbElHUnZJRzV2ZENCMGNtVmhkQ0J3WVhSb0lISmxabVZ5Wlc1alpYTWdZWE1nYjNCbGNtRjBiM0p6TEZ4dUlDQWdJQ0FnTHk4Z2FTNWxMaUJtYjI4dVczUm9hWE5kSUhKbGMyOXNkbVZ6SUhSdklHRndjSEp2ZUdsdFlYUmxiSGtnWTI5dWRHVjRkQzVtYjI5YkozUm9hWE1uWFZ4dUlDQWdJQ0FnYVhOTWFYUmxjbUZzSUQwZ2NHRnlkSE5iYVYwdWIzSnBaMmx1WVd3Z0lUMDlJSEJoY25RN1hHNGdJQ0FnYjNKcFoybHVZV3dnS3owZ0tIQmhjblJ6VzJsZExuTmxjR0Z5WVhSdmNpQjhmQ0FuSnlrZ0t5QndZWEowTzF4dVhHNGdJQ0FnYVdZZ0tDRnBjMHhwZEdWeVlXd2dKaVlnS0hCaGNuUWdQVDA5SUNjdUxpY2dmSHdnY0dGeWRDQTlQVDBnSnk0bklIeDhJSEJoY25RZ1BUMDlJQ2QwYUdsekp5a3BJSHRjYmlBZ0lDQWdJR2xtSUNoa2FXY3ViR1Z1WjNSb0lENGdNQ2tnZTF4dUlDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtDZEpiblpoYkdsa0lIQmhkR2c2SUNjZ0t5QnZjbWxuYVc1aGJDd2dleUJzYjJNZ2ZTazdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSEJoY25RZ1BUMDlJQ2N1TGljcElIdGNiaUFnSUNBZ0lDQWdaR1Z3ZEdnckt6dGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnWkdsbkxuQjFjMmdvY0dGeWRDazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCMGVYQmxPaUFuVUdGMGFFVjRjSEpsYzNOcGIyNG5MRnh1SUNBZ0lHUmhkR0VzWEc0Z0lDQWdaR1Z3ZEdnc1hHNGdJQ0FnY0dGeWRITTZJR1JwWnl4Y2JpQWdJQ0J2Y21sbmFXNWhiQ3hjYmlBZ0lDQnNiMk5jYmlBZ2ZUdGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhCeVpYQmhjbVZOZFhOMFlXTm9aU2h3WVhSb0xDQndZWEpoYlhNc0lHaGhjMmdzSUc5d1pXNHNJSE4wY21sd0xDQnNiMk5KYm1adktTQjdYRzRnSUM4dklFMTFjM1FnZFhObElHTm9ZWEpCZENCMGJ5QnpkWEJ3YjNKMElFbEZJSEJ5WlMweE1GeHVJQ0JzWlhRZ1pYTmpZWEJsUm14aFp5QTlJRzl3Wlc0dVkyaGhja0YwS0RNcElIeDhJRzl3Wlc0dVkyaGhja0YwS0RJcExGeHVJQ0FnSUdWelkyRndaV1FnUFNCbGMyTmhjR1ZHYkdGbklDRTlQU0FuZXljZ0ppWWdaWE5qWVhCbFJteGhaeUFoUFQwZ0p5WW5PMXh1WEc0Z0lHeGxkQ0JrWldOdmNtRjBiM0lnUFNBdlhGd3FMeTUwWlhOMEtHOXdaVzRwTzF4dUlDQnlaWFIxY200Z2UxeHVJQ0FnSUhSNWNHVTZJR1JsWTI5eVlYUnZjaUEvSUNkRVpXTnZjbUYwYjNJbklEb2dKMDExYzNSaFkyaGxVM1JoZEdWdFpXNTBKeXhjYmlBZ0lDQndZWFJvTEZ4dUlDQWdJSEJoY21GdGN5eGNiaUFnSUNCb1lYTm9MRnh1SUNBZ0lHVnpZMkZ3WldRc1hHNGdJQ0FnYzNSeWFYQXNYRzRnSUNBZ2JHOWpPaUIwYUdsekxteHZZMGx1Wm04b2JHOWpTVzVtYnlsY2JpQWdmVHRjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlIQnlaWEJoY21WU1lYZENiRzlqYXlodmNHVnVVbUYzUW14dlkyc3NJR052Ym5SbGJuUnpMQ0JqYkc5elpTd2diRzlqU1c1bWJ5a2dlMXh1SUNCMllXeHBaR0YwWlVOc2IzTmxLRzl3Wlc1U1lYZENiRzlqYXl3Z1kyeHZjMlVwTzF4dVhHNGdJR3h2WTBsdVptOGdQU0IwYUdsekxteHZZMGx1Wm04b2JHOWpTVzVtYnlrN1hHNGdJR3hsZENCd2NtOW5jbUZ0SUQwZ2UxeHVJQ0FnSUhSNWNHVTZJQ2RRY205bmNtRnRKeXhjYmlBZ0lDQmliMlI1T2lCamIyNTBaVzUwY3l4Y2JpQWdJQ0J6ZEhKcGNEb2dlMzBzWEc0Z0lDQWdiRzlqT2lCc2IyTkpibVp2WEc0Z0lIMDdYRzVjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0IwZVhCbE9pQW5RbXh2WTJ0VGRHRjBaVzFsYm5RbkxGeHVJQ0FnSUhCaGRHZzZJRzl3Wlc1U1lYZENiRzlqYXk1d1lYUm9MRnh1SUNBZ0lIQmhjbUZ0Y3pvZ2IzQmxibEpoZDBKc2IyTnJMbkJoY21GdGN5eGNiaUFnSUNCb1lYTm9PaUJ2Y0dWdVVtRjNRbXh2WTJzdWFHRnphQ3hjYmlBZ0lDQndjbTluY21GdExGeHVJQ0FnSUc5d1pXNVRkSEpwY0RvZ2UzMHNYRzRnSUNBZ2FXNTJaWEp6WlZOMGNtbHdPaUI3ZlN4Y2JpQWdJQ0JqYkc5elpWTjBjbWx3T2lCN2ZTeGNiaUFnSUNCc2IyTTZJR3h2WTBsdVptOWNiaUFnZlR0Y2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSEJ5WlhCaGNtVkNiRzlqYXloY2JpQWdiM0JsYmtKc2IyTnJMRnh1SUNCd2NtOW5jbUZ0TEZ4dUlDQnBiblpsY25ObFFXNWtVSEp2WjNKaGJTeGNiaUFnWTJ4dmMyVXNYRzRnSUdsdWRtVnlkR1ZrTEZ4dUlDQnNiMk5KYm1adlhHNHBJSHRjYmlBZ2FXWWdLR05zYjNObElDWW1JR05zYjNObExuQmhkR2dwSUh0Y2JpQWdJQ0IyWVd4cFpHRjBaVU5zYjNObEtHOXdaVzVDYkc5amF5d2dZMnh2YzJVcE8xeHVJQ0I5WEc1Y2JpQWdiR1YwSUdSbFkyOXlZWFJ2Y2lBOUlDOWNYQ292TG5SbGMzUW9iM0JsYmtKc2IyTnJMbTl3Wlc0cE8xeHVYRzRnSUhCeWIyZHlZVzB1WW14dlkydFFZWEpoYlhNZ1BTQnZjR1Z1UW14dlkyc3VZbXh2WTJ0UVlYSmhiWE03WEc1Y2JpQWdiR1YwSUdsdWRtVnljMlVzSUdsdWRtVnljMlZUZEhKcGNEdGNibHh1SUNCcFppQW9hVzUyWlhKelpVRnVaRkJ5YjJkeVlXMHBJSHRjYmlBZ0lDQnBaaUFvWkdWamIzSmhkRzl5S1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtGeHVJQ0FnSUNBZ0lDQW5WVzVsZUhCbFkzUmxaQ0JwYm5abGNuTmxJR0pzYjJOcklHOXVJR1JsWTI5eVlYUnZjaWNzWEc0Z0lDQWdJQ0FnSUdsdWRtVnljMlZCYm1SUWNtOW5jbUZ0WEc0Z0lDQWdJQ0FwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNocGJuWmxjbk5sUVc1a1VISnZaM0poYlM1amFHRnBiaWtnZTF4dUlDQWdJQ0FnYVc1MlpYSnpaVUZ1WkZCeWIyZHlZVzB1Y0hKdlozSmhiUzVpYjJSNVd6QmRMbU5zYjNObFUzUnlhWEFnUFNCamJHOXpaUzV6ZEhKcGNEdGNiaUFnSUNCOVhHNWNiaUFnSUNCcGJuWmxjbk5sVTNSeWFYQWdQU0JwYm5abGNuTmxRVzVrVUhKdlozSmhiUzV6ZEhKcGNEdGNiaUFnSUNCcGJuWmxjbk5sSUQwZ2FXNTJaWEp6WlVGdVpGQnliMmR5WVcwdWNISnZaM0poYlR0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2hwYm5abGNuUmxaQ2tnZTF4dUlDQWdJR2x1ZG1WeWRHVmtJRDBnYVc1MlpYSnpaVHRjYmlBZ0lDQnBiblpsY25ObElEMGdjSEp2WjNKaGJUdGNiaUFnSUNCd2NtOW5jbUZ0SUQwZ2FXNTJaWEowWldRN1hHNGdJSDFjYmx4dUlDQnlaWFIxY200Z2UxeHVJQ0FnSUhSNWNHVTZJR1JsWTI5eVlYUnZjaUEvSUNkRVpXTnZjbUYwYjNKQ2JHOWpheWNnT2lBblFteHZZMnRUZEdGMFpXMWxiblFuTEZ4dUlDQWdJSEJoZEdnNklHOXdaVzVDYkc5amF5NXdZWFJvTEZ4dUlDQWdJSEJoY21GdGN6b2diM0JsYmtKc2IyTnJMbkJoY21GdGN5eGNiaUFnSUNCb1lYTm9PaUJ2Y0dWdVFteHZZMnN1YUdGemFDeGNiaUFnSUNCd2NtOW5jbUZ0TEZ4dUlDQWdJR2x1ZG1WeWMyVXNYRzRnSUNBZ2IzQmxibE4wY21sd09pQnZjR1Z1UW14dlkyc3VjM1J5YVhBc1hHNGdJQ0FnYVc1MlpYSnpaVk4wY21sd0xGeHVJQ0FnSUdOc2IzTmxVM1J5YVhBNklHTnNiM05sSUNZbUlHTnNiM05sTG5OMGNtbHdMRnh1SUNBZ0lHeHZZem9nZEdocGN5NXNiMk5KYm1adktHeHZZMGx1Wm04cFhHNGdJSDA3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQndjbVZ3WVhKbFVISnZaM0poYlNoemRHRjBaVzFsYm5SekxDQnNiMk1wSUh0Y2JpQWdhV1lnS0NGc2IyTWdKaVlnYzNSaGRHVnRaVzUwY3k1c1pXNW5kR2dwSUh0Y2JpQWdJQ0JqYjI1emRDQm1hWEp6ZEV4dll5QTlJSE4wWVhSbGJXVnVkSE5iTUYwdWJHOWpMRnh1SUNBZ0lDQWdiR0Z6ZEV4dll5QTlJSE4wWVhSbGJXVnVkSE5iYzNSaGRHVnRaVzUwY3k1c1pXNW5kR2dnTFNBeFhTNXNiMk03WEc1Y2JpQWdJQ0F2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnWld4elpTQXFMMXh1SUNBZ0lHbG1JQ2htYVhKemRFeHZZeUFtSmlCc1lYTjBURzlqS1NCN1hHNGdJQ0FnSUNCc2IyTWdQU0I3WEc0Z0lDQWdJQ0FnSUhOdmRYSmpaVG9nWm1seWMzUk1iMk11YzI5MWNtTmxMRnh1SUNBZ0lDQWdJQ0J6ZEdGeWREb2dlMXh1SUNBZ0lDQWdJQ0FnSUd4cGJtVTZJR1pwY25OMFRHOWpMbk4wWVhKMExteHBibVVzWEc0Z0lDQWdJQ0FnSUNBZ1kyOXNkVzF1T2lCbWFYSnpkRXh2WXk1emRHRnlkQzVqYjJ4MWJXNWNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWlc1a09pQjdYRzRnSUNBZ0lDQWdJQ0FnYkdsdVpUb2diR0Z6ZEV4dll5NWxibVF1YkdsdVpTeGNiaUFnSUNBZ0lDQWdJQ0JqYjJ4MWJXNDZJR3hoYzNSTWIyTXVaVzVrTG1OdmJIVnRibHh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkSGx3WlRvZ0oxQnliMmR5WVcwbkxGeHVJQ0FnSUdKdlpIazZJSE4wWVhSbGJXVnVkSE1zWEc0Z0lDQWdjM1J5YVhBNklIdDlMRnh1SUNBZ0lHeHZZem9nYkc5alhHNGdJSDA3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQndjbVZ3WVhKbFVHRnlkR2xoYkVKc2IyTnJLRzl3Wlc0c0lIQnliMmR5WVcwc0lHTnNiM05sTENCc2IyTkpibVp2S1NCN1hHNGdJSFpoYkdsa1lYUmxRMnh2YzJVb2IzQmxiaXdnWTJ4dmMyVXBPMXh1WEc0Z0lISmxkSFZ5YmlCN1hHNGdJQ0FnZEhsd1pUb2dKMUJoY25ScFlXeENiRzlqYTFOMFlYUmxiV1Z1ZENjc1hHNGdJQ0FnYm1GdFpUb2diM0JsYmk1d1lYUm9MRnh1SUNBZ0lIQmhjbUZ0Y3pvZ2IzQmxiaTV3WVhKaGJYTXNYRzRnSUNBZ2FHRnphRG9nYjNCbGJpNW9ZWE5vTEZ4dUlDQWdJSEJ5YjJkeVlXMHNYRzRnSUNBZ2IzQmxibE4wY21sd09pQnZjR1Z1TG5OMGNtbHdMRnh1SUNBZ0lHTnNiM05sVTNSeWFYQTZJR05zYjNObElDWW1JR05zYjNObExuTjBjbWx3TEZ4dUlDQWdJR3h2WXpvZ2RHaHBjeTVzYjJOSmJtWnZLR3h2WTBsdVptOHBYRzRnSUgwN1hHNTlYRzRpWFgwPVxuIiwiLyogZXNsaW50LWRpc2FibGUgbmV3LWNhcCAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkNvbXBpbGVyID0gQ29tcGlsZXI7XG5leHBvcnRzLnByZWNvbXBpbGUgPSBwcmVjb21waWxlO1xuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZTtcbi8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9leGNlcHRpb24gPSByZXF1aXJlKCcuLi9leGNlcHRpb24nKTtcblxudmFyIF9leGNlcHRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhjZXB0aW9uKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbnZhciBfYXN0ID0gcmVxdWlyZSgnLi9hc3QnKTtcblxudmFyIF9hc3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXN0KTtcblxudmFyIHNsaWNlID0gW10uc2xpY2U7XG5cbmZ1bmN0aW9uIENvbXBpbGVyKCkge31cblxuLy8gdGhlIGZvdW5kSGVscGVyIHJlZ2lzdGVyIHdpbGwgZGlzYW1iaWd1YXRlIGhlbHBlciBsb29rdXAgZnJvbSBmaW5kaW5nIGFcbi8vIGZ1bmN0aW9uIGluIGEgY29udGV4dC4gVGhpcyBpcyBuZWNlc3NhcnkgZm9yIG11c3RhY2hlIGNvbXBhdGliaWxpdHksIHdoaWNoXG4vLyByZXF1aXJlcyB0aGF0IGNvbnRleHQgZnVuY3Rpb25zIGluIGJsb2NrcyBhcmUgZXZhbHVhdGVkIGJ5IGJsb2NrSGVscGVyTWlzc2luZyxcbi8vIGFuZCB0aGVuIHByb2NlZWQgYXMgaWYgdGhlIHJlc3VsdGluZyB2YWx1ZSB3YXMgcHJvdmlkZWQgdG8gYmxvY2tIZWxwZXJNaXNzaW5nLlxuXG5Db21waWxlci5wcm90b3R5cGUgPSB7XG4gIGNvbXBpbGVyOiBDb21waWxlcixcblxuICBlcXVhbHM6IGZ1bmN0aW9uIGVxdWFscyhvdGhlcikge1xuICAgIHZhciBsZW4gPSB0aGlzLm9wY29kZXMubGVuZ3RoO1xuICAgIGlmIChvdGhlci5vcGNvZGVzLmxlbmd0aCAhPT0gbGVuKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgdmFyIG9wY29kZSA9IHRoaXMub3Bjb2Rlc1tpXSxcbiAgICAgICAgICBvdGhlck9wY29kZSA9IG90aGVyLm9wY29kZXNbaV07XG4gICAgICBpZiAob3Bjb2RlLm9wY29kZSAhPT0gb3RoZXJPcGNvZGUub3Bjb2RlIHx8ICFhcmdFcXVhbHMob3Bjb2RlLmFyZ3MsIG90aGVyT3Bjb2RlLmFyZ3MpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXZSBrbm93IHRoYXQgbGVuZ3RoIGlzIHRoZSBzYW1lIGJldHdlZW4gdGhlIHR3byBhcnJheXMgYmVjYXVzZSB0aGV5IGFyZSBkaXJlY3RseSB0aWVkXG4gICAgLy8gdG8gdGhlIG9wY29kZSBiZWhhdmlvciBhYm92ZS5cbiAgICBsZW4gPSB0aGlzLmNoaWxkcmVuLmxlbmd0aDtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpZiAoIXRoaXMuY2hpbGRyZW5baV0uZXF1YWxzKG90aGVyLmNoaWxkcmVuW2ldKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgZ3VpZDogMCxcblxuICBjb21waWxlOiBmdW5jdGlvbiBjb21waWxlKHByb2dyYW0sIG9wdGlvbnMpIHtcbiAgICB0aGlzLnNvdXJjZU5vZGUgPSBbXTtcbiAgICB0aGlzLm9wY29kZXMgPSBbXTtcbiAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLnN0cmluZ1BhcmFtcyA9IG9wdGlvbnMuc3RyaW5nUGFyYW1zO1xuICAgIHRoaXMudHJhY2tJZHMgPSBvcHRpb25zLnRyYWNrSWRzO1xuXG4gICAgb3B0aW9ucy5ibG9ja1BhcmFtcyA9IG9wdGlvbnMuYmxvY2tQYXJhbXMgfHwgW107XG5cbiAgICBvcHRpb25zLmtub3duSGVscGVycyA9IF91dGlscy5leHRlbmQoT2JqZWN0LmNyZWF0ZShudWxsKSwge1xuICAgICAgaGVscGVyTWlzc2luZzogdHJ1ZSxcbiAgICAgIGJsb2NrSGVscGVyTWlzc2luZzogdHJ1ZSxcbiAgICAgIGVhY2g6IHRydWUsXG4gICAgICAnaWYnOiB0cnVlLFxuICAgICAgdW5sZXNzOiB0cnVlLFxuICAgICAgJ3dpdGgnOiB0cnVlLFxuICAgICAgbG9nOiB0cnVlLFxuICAgICAgbG9va3VwOiB0cnVlXG4gICAgfSwgb3B0aW9ucy5rbm93bkhlbHBlcnMpO1xuXG4gICAgcmV0dXJuIHRoaXMuYWNjZXB0KHByb2dyYW0pO1xuICB9LFxuXG4gIGNvbXBpbGVQcm9ncmFtOiBmdW5jdGlvbiBjb21waWxlUHJvZ3JhbShwcm9ncmFtKSB7XG4gICAgdmFyIGNoaWxkQ29tcGlsZXIgPSBuZXcgdGhpcy5jb21waWxlcigpLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5ldy1jYXBcbiAgICByZXN1bHQgPSBjaGlsZENvbXBpbGVyLmNvbXBpbGUocHJvZ3JhbSwgdGhpcy5vcHRpb25zKSxcbiAgICAgICAgZ3VpZCA9IHRoaXMuZ3VpZCsrO1xuXG4gICAgdGhpcy51c2VQYXJ0aWFsID0gdGhpcy51c2VQYXJ0aWFsIHx8IHJlc3VsdC51c2VQYXJ0aWFsO1xuXG4gICAgdGhpcy5jaGlsZHJlbltndWlkXSA9IHJlc3VsdDtcbiAgICB0aGlzLnVzZURlcHRocyA9IHRoaXMudXNlRGVwdGhzIHx8IHJlc3VsdC51c2VEZXB0aHM7XG5cbiAgICByZXR1cm4gZ3VpZDtcbiAgfSxcblxuICBhY2NlcHQ6IGZ1bmN0aW9uIGFjY2VwdChub2RlKSB7XG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQ6IFNhbml0eSBjb2RlICovXG4gICAgaWYgKCF0aGlzW25vZGUudHlwZV0pIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdVbmtub3duIHR5cGU6ICcgKyBub2RlLnR5cGUsIG5vZGUpO1xuICAgIH1cblxuICAgIHRoaXMuc291cmNlTm9kZS51bnNoaWZ0KG5vZGUpO1xuICAgIHZhciByZXQgPSB0aGlzW25vZGUudHlwZV0obm9kZSk7XG4gICAgdGhpcy5zb3VyY2VOb2RlLnNoaWZ0KCk7XG4gICAgcmV0dXJuIHJldDtcbiAgfSxcblxuICBQcm9ncmFtOiBmdW5jdGlvbiBQcm9ncmFtKHByb2dyYW0pIHtcbiAgICB0aGlzLm9wdGlvbnMuYmxvY2tQYXJhbXMudW5zaGlmdChwcm9ncmFtLmJsb2NrUGFyYW1zKTtcblxuICAgIHZhciBib2R5ID0gcHJvZ3JhbS5ib2R5LFxuICAgICAgICBib2R5TGVuZ3RoID0gYm9keS5sZW5ndGg7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2R5TGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuYWNjZXB0KGJvZHlbaV0pO1xuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucy5ibG9ja1BhcmFtcy5zaGlmdCgpO1xuXG4gICAgdGhpcy5pc1NpbXBsZSA9IGJvZHlMZW5ndGggPT09IDE7XG4gICAgdGhpcy5ibG9ja1BhcmFtcyA9IHByb2dyYW0uYmxvY2tQYXJhbXMgPyBwcm9ncmFtLmJsb2NrUGFyYW1zLmxlbmd0aCA6IDA7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfSxcblxuICBCbG9ja1N0YXRlbWVudDogZnVuY3Rpb24gQmxvY2tTdGF0ZW1lbnQoYmxvY2spIHtcbiAgICB0cmFuc2Zvcm1MaXRlcmFsVG9QYXRoKGJsb2NrKTtcblxuICAgIHZhciBwcm9ncmFtID0gYmxvY2sucHJvZ3JhbSxcbiAgICAgICAgaW52ZXJzZSA9IGJsb2NrLmludmVyc2U7XG5cbiAgICBwcm9ncmFtID0gcHJvZ3JhbSAmJiB0aGlzLmNvbXBpbGVQcm9ncmFtKHByb2dyYW0pO1xuICAgIGludmVyc2UgPSBpbnZlcnNlICYmIHRoaXMuY29tcGlsZVByb2dyYW0oaW52ZXJzZSk7XG5cbiAgICB2YXIgdHlwZSA9IHRoaXMuY2xhc3NpZnlTZXhwcihibG9jayk7XG5cbiAgICBpZiAodHlwZSA9PT0gJ2hlbHBlcicpIHtcbiAgICAgIHRoaXMuaGVscGVyU2V4cHIoYmxvY2ssIHByb2dyYW0sIGludmVyc2UpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3NpbXBsZScpIHtcbiAgICAgIHRoaXMuc2ltcGxlU2V4cHIoYmxvY2spO1xuXG4gICAgICAvLyBub3cgdGhhdCB0aGUgc2ltcGxlIG11c3RhY2hlIGlzIHJlc29sdmVkLCB3ZSBuZWVkIHRvXG4gICAgICAvLyBldmFsdWF0ZSBpdCBieSBleGVjdXRpbmcgYGJsb2NrSGVscGVyTWlzc2luZ2BcbiAgICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIHByb2dyYW0pO1xuICAgICAgdGhpcy5vcGNvZGUoJ3B1c2hQcm9ncmFtJywgaW52ZXJzZSk7XG4gICAgICB0aGlzLm9wY29kZSgnZW1wdHlIYXNoJyk7XG4gICAgICB0aGlzLm9wY29kZSgnYmxvY2tWYWx1ZScsIGJsb2NrLnBhdGgub3JpZ2luYWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFtYmlndW91c1NleHByKGJsb2NrLCBwcm9ncmFtLCBpbnZlcnNlKTtcblxuICAgICAgLy8gbm93IHRoYXQgdGhlIHNpbXBsZSBtdXN0YWNoZSBpcyByZXNvbHZlZCwgd2UgbmVlZCB0b1xuICAgICAgLy8gZXZhbHVhdGUgaXQgYnkgZXhlY3V0aW5nIGBibG9ja0hlbHBlck1pc3NpbmdgXG4gICAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBwcm9ncmFtKTtcbiAgICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIGludmVyc2UpO1xuICAgICAgdGhpcy5vcGNvZGUoJ2VtcHR5SGFzaCcpO1xuICAgICAgdGhpcy5vcGNvZGUoJ2FtYmlndW91c0Jsb2NrVmFsdWUnKTtcbiAgICB9XG5cbiAgICB0aGlzLm9wY29kZSgnYXBwZW5kJyk7XG4gIH0sXG5cbiAgRGVjb3JhdG9yQmxvY2s6IGZ1bmN0aW9uIERlY29yYXRvckJsb2NrKGRlY29yYXRvcikge1xuICAgIHZhciBwcm9ncmFtID0gZGVjb3JhdG9yLnByb2dyYW0gJiYgdGhpcy5jb21waWxlUHJvZ3JhbShkZWNvcmF0b3IucHJvZ3JhbSk7XG4gICAgdmFyIHBhcmFtcyA9IHRoaXMuc2V0dXBGdWxsTXVzdGFjaGVQYXJhbXMoZGVjb3JhdG9yLCBwcm9ncmFtLCB1bmRlZmluZWQpLFxuICAgICAgICBwYXRoID0gZGVjb3JhdG9yLnBhdGg7XG5cbiAgICB0aGlzLnVzZURlY29yYXRvcnMgPSB0cnVlO1xuICAgIHRoaXMub3Bjb2RlKCdyZWdpc3RlckRlY29yYXRvcicsIHBhcmFtcy5sZW5ndGgsIHBhdGgub3JpZ2luYWwpO1xuICB9LFxuXG4gIFBhcnRpYWxTdGF0ZW1lbnQ6IGZ1bmN0aW9uIFBhcnRpYWxTdGF0ZW1lbnQocGFydGlhbCkge1xuICAgIHRoaXMudXNlUGFydGlhbCA9IHRydWU7XG5cbiAgICB2YXIgcHJvZ3JhbSA9IHBhcnRpYWwucHJvZ3JhbTtcbiAgICBpZiAocHJvZ3JhbSkge1xuICAgICAgcHJvZ3JhbSA9IHRoaXMuY29tcGlsZVByb2dyYW0ocGFydGlhbC5wcm9ncmFtKTtcbiAgICB9XG5cbiAgICB2YXIgcGFyYW1zID0gcGFydGlhbC5wYXJhbXM7XG4gICAgaWYgKHBhcmFtcy5sZW5ndGggPiAxKSB7XG4gICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnVW5zdXBwb3J0ZWQgbnVtYmVyIG9mIHBhcnRpYWwgYXJndW1lbnRzOiAnICsgcGFyYW1zLmxlbmd0aCwgcGFydGlhbCk7XG4gICAgfSBlbHNlIGlmICghcGFyYW1zLmxlbmd0aCkge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5leHBsaWNpdFBhcnRpYWxDb250ZXh0KSB7XG4gICAgICAgIHRoaXMub3Bjb2RlKCdwdXNoTGl0ZXJhbCcsICd1bmRlZmluZWQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcmFtcy5wdXNoKHsgdHlwZTogJ1BhdGhFeHByZXNzaW9uJywgcGFydHM6IFtdLCBkZXB0aDogMCB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbE5hbWUgPSBwYXJ0aWFsLm5hbWUub3JpZ2luYWwsXG4gICAgICAgIGlzRHluYW1pYyA9IHBhcnRpYWwubmFtZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbic7XG4gICAgaWYgKGlzRHluYW1pYykge1xuICAgICAgdGhpcy5hY2NlcHQocGFydGlhbC5uYW1lKTtcbiAgICB9XG5cbiAgICB0aGlzLnNldHVwRnVsbE11c3RhY2hlUGFyYW1zKHBhcnRpYWwsIHByb2dyYW0sIHVuZGVmaW5lZCwgdHJ1ZSk7XG5cbiAgICB2YXIgaW5kZW50ID0gcGFydGlhbC5pbmRlbnQgfHwgJyc7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5wcmV2ZW50SW5kZW50ICYmIGluZGVudCkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZENvbnRlbnQnLCBpbmRlbnQpO1xuICAgICAgaW5kZW50ID0gJyc7XG4gICAgfVxuXG4gICAgdGhpcy5vcGNvZGUoJ2ludm9rZVBhcnRpYWwnLCBpc0R5bmFtaWMsIHBhcnRpYWxOYW1lLCBpbmRlbnQpO1xuICAgIHRoaXMub3Bjb2RlKCdhcHBlbmQnKTtcbiAgfSxcbiAgUGFydGlhbEJsb2NrU3RhdGVtZW50OiBmdW5jdGlvbiBQYXJ0aWFsQmxvY2tTdGF0ZW1lbnQocGFydGlhbEJsb2NrKSB7XG4gICAgdGhpcy5QYXJ0aWFsU3RhdGVtZW50KHBhcnRpYWxCbG9jayk7XG4gIH0sXG5cbiAgTXVzdGFjaGVTdGF0ZW1lbnQ6IGZ1bmN0aW9uIE11c3RhY2hlU3RhdGVtZW50KG11c3RhY2hlKSB7XG4gICAgdGhpcy5TdWJFeHByZXNzaW9uKG11c3RhY2hlKTtcblxuICAgIGlmIChtdXN0YWNoZS5lc2NhcGVkICYmICF0aGlzLm9wdGlvbnMubm9Fc2NhcGUpIHtcbiAgICAgIHRoaXMub3Bjb2RlKCdhcHBlbmRFc2NhcGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub3Bjb2RlKCdhcHBlbmQnKTtcbiAgICB9XG4gIH0sXG4gIERlY29yYXRvcjogZnVuY3Rpb24gRGVjb3JhdG9yKGRlY29yYXRvcikge1xuICAgIHRoaXMuRGVjb3JhdG9yQmxvY2soZGVjb3JhdG9yKTtcbiAgfSxcblxuICBDb250ZW50U3RhdGVtZW50OiBmdW5jdGlvbiBDb250ZW50U3RhdGVtZW50KGNvbnRlbnQpIHtcbiAgICBpZiAoY29udGVudC52YWx1ZSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2FwcGVuZENvbnRlbnQnLCBjb250ZW50LnZhbHVlKTtcbiAgICB9XG4gIH0sXG5cbiAgQ29tbWVudFN0YXRlbWVudDogZnVuY3Rpb24gQ29tbWVudFN0YXRlbWVudCgpIHt9LFxuXG4gIFN1YkV4cHJlc3Npb246IGZ1bmN0aW9uIFN1YkV4cHJlc3Npb24oc2V4cHIpIHtcbiAgICB0cmFuc2Zvcm1MaXRlcmFsVG9QYXRoKHNleHByKTtcbiAgICB2YXIgdHlwZSA9IHRoaXMuY2xhc3NpZnlTZXhwcihzZXhwcik7XG5cbiAgICBpZiAodHlwZSA9PT0gJ3NpbXBsZScpIHtcbiAgICAgIHRoaXMuc2ltcGxlU2V4cHIoc2V4cHIpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2hlbHBlcicpIHtcbiAgICAgIHRoaXMuaGVscGVyU2V4cHIoc2V4cHIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFtYmlndW91c1NleHByKHNleHByKTtcbiAgICB9XG4gIH0sXG4gIGFtYmlndW91c1NleHByOiBmdW5jdGlvbiBhbWJpZ3VvdXNTZXhwcihzZXhwciwgcHJvZ3JhbSwgaW52ZXJzZSkge1xuICAgIHZhciBwYXRoID0gc2V4cHIucGF0aCxcbiAgICAgICAgbmFtZSA9IHBhdGgucGFydHNbMF0sXG4gICAgICAgIGlzQmxvY2sgPSBwcm9ncmFtICE9IG51bGwgfHwgaW52ZXJzZSAhPSBudWxsO1xuXG4gICAgdGhpcy5vcGNvZGUoJ2dldENvbnRleHQnLCBwYXRoLmRlcHRoKTtcblxuICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIHByb2dyYW0pO1xuICAgIHRoaXMub3Bjb2RlKCdwdXNoUHJvZ3JhbScsIGludmVyc2UpO1xuXG4gICAgcGF0aC5zdHJpY3QgPSB0cnVlO1xuICAgIHRoaXMuYWNjZXB0KHBhdGgpO1xuXG4gICAgdGhpcy5vcGNvZGUoJ2ludm9rZUFtYmlndW91cycsIG5hbWUsIGlzQmxvY2spO1xuICB9LFxuXG4gIHNpbXBsZVNleHByOiBmdW5jdGlvbiBzaW1wbGVTZXhwcihzZXhwcikge1xuICAgIHZhciBwYXRoID0gc2V4cHIucGF0aDtcbiAgICBwYXRoLnN0cmljdCA9IHRydWU7XG4gICAgdGhpcy5hY2NlcHQocGF0aCk7XG4gICAgdGhpcy5vcGNvZGUoJ3Jlc29sdmVQb3NzaWJsZUxhbWJkYScpO1xuICB9LFxuXG4gIGhlbHBlclNleHByOiBmdW5jdGlvbiBoZWxwZXJTZXhwcihzZXhwciwgcHJvZ3JhbSwgaW52ZXJzZSkge1xuICAgIHZhciBwYXJhbXMgPSB0aGlzLnNldHVwRnVsbE11c3RhY2hlUGFyYW1zKHNleHByLCBwcm9ncmFtLCBpbnZlcnNlKSxcbiAgICAgICAgcGF0aCA9IHNleHByLnBhdGgsXG4gICAgICAgIG5hbWUgPSBwYXRoLnBhcnRzWzBdO1xuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5rbm93bkhlbHBlcnNbbmFtZV0pIHtcbiAgICAgIHRoaXMub3Bjb2RlKCdpbnZva2VLbm93bkhlbHBlcicsIHBhcmFtcy5sZW5ndGgsIG5hbWUpO1xuICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLmtub3duSGVscGVyc09ubHkpIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdZb3Ugc3BlY2lmaWVkIGtub3duSGVscGVyc09ubHksIGJ1dCB1c2VkIHRoZSB1bmtub3duIGhlbHBlciAnICsgbmFtZSwgc2V4cHIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXRoLnN0cmljdCA9IHRydWU7XG4gICAgICBwYXRoLmZhbHN5ID0gdHJ1ZTtcblxuICAgICAgdGhpcy5hY2NlcHQocGF0aCk7XG4gICAgICB0aGlzLm9wY29kZSgnaW52b2tlSGVscGVyJywgcGFyYW1zLmxlbmd0aCwgcGF0aC5vcmlnaW5hbCwgX2FzdDJbJ2RlZmF1bHQnXS5oZWxwZXJzLnNpbXBsZUlkKHBhdGgpKTtcbiAgICB9XG4gIH0sXG5cbiAgUGF0aEV4cHJlc3Npb246IGZ1bmN0aW9uIFBhdGhFeHByZXNzaW9uKHBhdGgpIHtcbiAgICB0aGlzLmFkZERlcHRoKHBhdGguZGVwdGgpO1xuICAgIHRoaXMub3Bjb2RlKCdnZXRDb250ZXh0JywgcGF0aC5kZXB0aCk7XG5cbiAgICB2YXIgbmFtZSA9IHBhdGgucGFydHNbMF0sXG4gICAgICAgIHNjb3BlZCA9IF9hc3QyWydkZWZhdWx0J10uaGVscGVycy5zY29wZWRJZChwYXRoKSxcbiAgICAgICAgYmxvY2tQYXJhbUlkID0gIXBhdGguZGVwdGggJiYgIXNjb3BlZCAmJiB0aGlzLmJsb2NrUGFyYW1JbmRleChuYW1lKTtcblxuICAgIGlmIChibG9ja1BhcmFtSWQpIHtcbiAgICAgIHRoaXMub3Bjb2RlKCdsb29rdXBCbG9ja1BhcmFtJywgYmxvY2tQYXJhbUlkLCBwYXRoLnBhcnRzKTtcbiAgICB9IGVsc2UgaWYgKCFuYW1lKSB7XG4gICAgICAvLyBDb250ZXh0IHJlZmVyZW5jZSwgaS5lLiBge3tmb28gLn19YCBvciBge3tmb28gLi59fWBcbiAgICAgIHRoaXMub3Bjb2RlKCdwdXNoQ29udGV4dCcpO1xuICAgIH0gZWxzZSBpZiAocGF0aC5kYXRhKSB7XG4gICAgICB0aGlzLm9wdGlvbnMuZGF0YSA9IHRydWU7XG4gICAgICB0aGlzLm9wY29kZSgnbG9va3VwRGF0YScsIHBhdGguZGVwdGgsIHBhdGgucGFydHMsIHBhdGguc3RyaWN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcGNvZGUoJ2xvb2t1cE9uQ29udGV4dCcsIHBhdGgucGFydHMsIHBhdGguZmFsc3ksIHBhdGguc3RyaWN0LCBzY29wZWQpO1xuICAgIH1cbiAgfSxcblxuICBTdHJpbmdMaXRlcmFsOiBmdW5jdGlvbiBTdHJpbmdMaXRlcmFsKHN0cmluZykge1xuICAgIHRoaXMub3Bjb2RlKCdwdXNoU3RyaW5nJywgc3RyaW5nLnZhbHVlKTtcbiAgfSxcblxuICBOdW1iZXJMaXRlcmFsOiBmdW5jdGlvbiBOdW1iZXJMaXRlcmFsKG51bWJlcikge1xuICAgIHRoaXMub3Bjb2RlKCdwdXNoTGl0ZXJhbCcsIG51bWJlci52YWx1ZSk7XG4gIH0sXG5cbiAgQm9vbGVhbkxpdGVyYWw6IGZ1bmN0aW9uIEJvb2xlYW5MaXRlcmFsKGJvb2wpIHtcbiAgICB0aGlzLm9wY29kZSgncHVzaExpdGVyYWwnLCBib29sLnZhbHVlKTtcbiAgfSxcblxuICBVbmRlZmluZWRMaXRlcmFsOiBmdW5jdGlvbiBVbmRlZmluZWRMaXRlcmFsKCkge1xuICAgIHRoaXMub3Bjb2RlKCdwdXNoTGl0ZXJhbCcsICd1bmRlZmluZWQnKTtcbiAgfSxcblxuICBOdWxsTGl0ZXJhbDogZnVuY3Rpb24gTnVsbExpdGVyYWwoKSB7XG4gICAgdGhpcy5vcGNvZGUoJ3B1c2hMaXRlcmFsJywgJ251bGwnKTtcbiAgfSxcblxuICBIYXNoOiBmdW5jdGlvbiBIYXNoKGhhc2gpIHtcbiAgICB2YXIgcGFpcnMgPSBoYXNoLnBhaXJzLFxuICAgICAgICBpID0gMCxcbiAgICAgICAgbCA9IHBhaXJzLmxlbmd0aDtcblxuICAgIHRoaXMub3Bjb2RlKCdwdXNoSGFzaCcpO1xuXG4gICAgZm9yICg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRoaXMucHVzaFBhcmFtKHBhaXJzW2ldLnZhbHVlKTtcbiAgICB9XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgdGhpcy5vcGNvZGUoJ2Fzc2lnblRvSGFzaCcsIHBhaXJzW2ldLmtleSk7XG4gICAgfVxuICAgIHRoaXMub3Bjb2RlKCdwb3BIYXNoJyk7XG4gIH0sXG5cbiAgLy8gSEVMUEVSU1xuICBvcGNvZGU6IGZ1bmN0aW9uIG9wY29kZShuYW1lKSB7XG4gICAgdGhpcy5vcGNvZGVzLnB1c2goe1xuICAgICAgb3Bjb2RlOiBuYW1lLFxuICAgICAgYXJnczogc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLFxuICAgICAgbG9jOiB0aGlzLnNvdXJjZU5vZGVbMF0ubG9jXG4gICAgfSk7XG4gIH0sXG5cbiAgYWRkRGVwdGg6IGZ1bmN0aW9uIGFkZERlcHRoKGRlcHRoKSB7XG4gICAgaWYgKCFkZXB0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudXNlRGVwdGhzID0gdHJ1ZTtcbiAgfSxcblxuICBjbGFzc2lmeVNleHByOiBmdW5jdGlvbiBjbGFzc2lmeVNleHByKHNleHByKSB7XG4gICAgdmFyIGlzU2ltcGxlID0gX2FzdDJbJ2RlZmF1bHQnXS5oZWxwZXJzLnNpbXBsZUlkKHNleHByLnBhdGgpO1xuXG4gICAgdmFyIGlzQmxvY2tQYXJhbSA9IGlzU2ltcGxlICYmICEhdGhpcy5ibG9ja1BhcmFtSW5kZXgoc2V4cHIucGF0aC5wYXJ0c1swXSk7XG5cbiAgICAvLyBhIG11c3RhY2hlIGlzIGFuIGVsaWdpYmxlIGhlbHBlciBpZjpcbiAgICAvLyAqIGl0cyBpZCBpcyBzaW1wbGUgKGEgc2luZ2xlIHBhcnQsIG5vdCBgdGhpc2Agb3IgYC4uYClcbiAgICB2YXIgaXNIZWxwZXIgPSAhaXNCbG9ja1BhcmFtICYmIF9hc3QyWydkZWZhdWx0J10uaGVscGVycy5oZWxwZXJFeHByZXNzaW9uKHNleHByKTtcblxuICAgIC8vIGlmIGEgbXVzdGFjaGUgaXMgYW4gZWxpZ2libGUgaGVscGVyIGJ1dCBub3QgYSBkZWZpbml0ZVxuICAgIC8vIGhlbHBlciwgaXQgaXMgYW1iaWd1b3VzLCBhbmQgd2lsbCBiZSByZXNvbHZlZCBpbiBhIGxhdGVyXG4gICAgLy8gcGFzcyBvciBhdCBydW50aW1lLlxuICAgIHZhciBpc0VsaWdpYmxlID0gIWlzQmxvY2tQYXJhbSAmJiAoaXNIZWxwZXIgfHwgaXNTaW1wbGUpO1xuXG4gICAgLy8gaWYgYW1iaWd1b3VzLCB3ZSBjYW4gcG9zc2libHkgcmVzb2x2ZSB0aGUgYW1iaWd1aXR5IG5vd1xuICAgIC8vIEFuIGVsaWdpYmxlIGhlbHBlciBpcyBvbmUgdGhhdCBkb2VzIG5vdCBoYXZlIGEgY29tcGxleCBwYXRoLCBpLmUuIGB0aGlzLmZvb2AsIGAuLi9mb29gIGV0Yy5cbiAgICBpZiAoaXNFbGlnaWJsZSAmJiAhaXNIZWxwZXIpIHtcbiAgICAgIHZhciBfbmFtZSA9IHNleHByLnBhdGgucGFydHNbMF0sXG4gICAgICAgICAgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgIGlmIChvcHRpb25zLmtub3duSGVscGVyc1tfbmFtZV0pIHtcbiAgICAgICAgaXNIZWxwZXIgPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChvcHRpb25zLmtub3duSGVscGVyc09ubHkpIHtcbiAgICAgICAgaXNFbGlnaWJsZSA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0hlbHBlcikge1xuICAgICAgcmV0dXJuICdoZWxwZXInO1xuICAgIH0gZWxzZSBpZiAoaXNFbGlnaWJsZSkge1xuICAgICAgcmV0dXJuICdhbWJpZ3VvdXMnO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ3NpbXBsZSc7XG4gICAgfVxuICB9LFxuXG4gIHB1c2hQYXJhbXM6IGZ1bmN0aW9uIHB1c2hQYXJhbXMocGFyYW1zKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBwYXJhbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICB0aGlzLnB1c2hQYXJhbShwYXJhbXNbaV0pO1xuICAgIH1cbiAgfSxcblxuICBwdXNoUGFyYW06IGZ1bmN0aW9uIHB1c2hQYXJhbSh2YWwpIHtcbiAgICB2YXIgdmFsdWUgPSB2YWwudmFsdWUgIT0gbnVsbCA/IHZhbC52YWx1ZSA6IHZhbC5vcmlnaW5hbCB8fCAnJztcblxuICAgIGlmICh0aGlzLnN0cmluZ1BhcmFtcykge1xuICAgICAgaWYgKHZhbHVlLnJlcGxhY2UpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9eKFxcLj9cXC5cXC8pKi9nLCAnJykucmVwbGFjZSgvXFwvL2csICcuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWwuZGVwdGgpIHtcbiAgICAgICAgdGhpcy5hZGREZXB0aCh2YWwuZGVwdGgpO1xuICAgICAgfVxuICAgICAgdGhpcy5vcGNvZGUoJ2dldENvbnRleHQnLCB2YWwuZGVwdGggfHwgMCk7XG4gICAgICB0aGlzLm9wY29kZSgncHVzaFN0cmluZ1BhcmFtJywgdmFsdWUsIHZhbC50eXBlKTtcblxuICAgICAgaWYgKHZhbC50eXBlID09PSAnU3ViRXhwcmVzc2lvbicpIHtcbiAgICAgICAgLy8gU3ViRXhwcmVzc2lvbnMgZ2V0IGV2YWx1YXRlZCBhbmQgcGFzc2VkIGluXG4gICAgICAgIC8vIGluIHN0cmluZyBwYXJhbXMgbW9kZS5cbiAgICAgICAgdGhpcy5hY2NlcHQodmFsKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHRoaXMudHJhY2tJZHMpIHtcbiAgICAgICAgdmFyIGJsb2NrUGFyYW1JbmRleCA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHZhbC5wYXJ0cyAmJiAhX2FzdDJbJ2RlZmF1bHQnXS5oZWxwZXJzLnNjb3BlZElkKHZhbCkgJiYgIXZhbC5kZXB0aCkge1xuICAgICAgICAgIGJsb2NrUGFyYW1JbmRleCA9IHRoaXMuYmxvY2tQYXJhbUluZGV4KHZhbC5wYXJ0c1swXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJsb2NrUGFyYW1JbmRleCkge1xuICAgICAgICAgIHZhciBibG9ja1BhcmFtQ2hpbGQgPSB2YWwucGFydHMuc2xpY2UoMSkuam9pbignLicpO1xuICAgICAgICAgIHRoaXMub3Bjb2RlKCdwdXNoSWQnLCAnQmxvY2tQYXJhbScsIGJsb2NrUGFyYW1JbmRleCwgYmxvY2tQYXJhbUNoaWxkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IHZhbC5vcmlnaW5hbCB8fCB2YWx1ZTtcbiAgICAgICAgICBpZiAodmFsdWUucmVwbGFjZSkge1xuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9edGhpcyg/OlxcLnwkKS8sICcnKS5yZXBsYWNlKC9eXFwuXFwvLywgJycpLnJlcGxhY2UoL15cXC4kLywgJycpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHRoaXMub3Bjb2RlKCdwdXNoSWQnLCB2YWwudHlwZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmFjY2VwdCh2YWwpO1xuICAgIH1cbiAgfSxcblxuICBzZXR1cEZ1bGxNdXN0YWNoZVBhcmFtczogZnVuY3Rpb24gc2V0dXBGdWxsTXVzdGFjaGVQYXJhbXMoc2V4cHIsIHByb2dyYW0sIGludmVyc2UsIG9taXRFbXB0eSkge1xuICAgIHZhciBwYXJhbXMgPSBzZXhwci5wYXJhbXM7XG4gICAgdGhpcy5wdXNoUGFyYW1zKHBhcmFtcyk7XG5cbiAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBwcm9ncmFtKTtcbiAgICB0aGlzLm9wY29kZSgncHVzaFByb2dyYW0nLCBpbnZlcnNlKTtcblxuICAgIGlmIChzZXhwci5oYXNoKSB7XG4gICAgICB0aGlzLmFjY2VwdChzZXhwci5oYXNoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5vcGNvZGUoJ2VtcHR5SGFzaCcsIG9taXRFbXB0eSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcmFtcztcbiAgfSxcblxuICBibG9ja1BhcmFtSW5kZXg6IGZ1bmN0aW9uIGJsb2NrUGFyYW1JbmRleChuYW1lKSB7XG4gICAgZm9yICh2YXIgZGVwdGggPSAwLCBsZW4gPSB0aGlzLm9wdGlvbnMuYmxvY2tQYXJhbXMubGVuZ3RoOyBkZXB0aCA8IGxlbjsgZGVwdGgrKykge1xuICAgICAgdmFyIGJsb2NrUGFyYW1zID0gdGhpcy5vcHRpb25zLmJsb2NrUGFyYW1zW2RlcHRoXSxcbiAgICAgICAgICBwYXJhbSA9IGJsb2NrUGFyYW1zICYmIF91dGlscy5pbmRleE9mKGJsb2NrUGFyYW1zLCBuYW1lKTtcbiAgICAgIGlmIChibG9ja1BhcmFtcyAmJiBwYXJhbSA+PSAwKSB7XG4gICAgICAgIHJldHVybiBbZGVwdGgsIHBhcmFtXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGVudikge1xuICBpZiAoaW5wdXQgPT0gbnVsbCB8fCB0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnICYmIGlucHV0LnR5cGUgIT09ICdQcm9ncmFtJykge1xuICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdZb3UgbXVzdCBwYXNzIGEgc3RyaW5nIG9yIEhhbmRsZWJhcnMgQVNUIHRvIEhhbmRsZWJhcnMucHJlY29tcGlsZS4gWW91IHBhc3NlZCAnICsgaW5wdXQpO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmICghKCdkYXRhJyBpbiBvcHRpb25zKSkge1xuICAgIG9wdGlvbnMuZGF0YSA9IHRydWU7XG4gIH1cbiAgaWYgKG9wdGlvbnMuY29tcGF0KSB7XG4gICAgb3B0aW9ucy51c2VEZXB0aHMgPSB0cnVlO1xuICB9XG5cbiAgdmFyIGFzdCA9IGVudi5wYXJzZShpbnB1dCwgb3B0aW9ucyksXG4gICAgICBlbnZpcm9ubWVudCA9IG5ldyBlbnYuQ29tcGlsZXIoKS5jb21waWxlKGFzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBuZXcgZW52LkphdmFTY3JpcHRDb21waWxlcigpLmNvbXBpbGUoZW52aXJvbm1lbnQsIG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBjb21waWxlKGlucHV0LCBvcHRpb25zLCBlbnYpIHtcbiAgaWYgKG9wdGlvbnMgPT09IHVuZGVmaW5lZCkgb3B0aW9ucyA9IHt9O1xuXG4gIGlmIChpbnB1dCA9PSBudWxsIHx8IHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycgJiYgaW5wdXQudHlwZSAhPT0gJ1Byb2dyYW0nKSB7XG4gICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ1lvdSBtdXN0IHBhc3MgYSBzdHJpbmcgb3IgSGFuZGxlYmFycyBBU1QgdG8gSGFuZGxlYmFycy5jb21waWxlLiBZb3UgcGFzc2VkICcgKyBpbnB1dCk7XG4gIH1cblxuICBvcHRpb25zID0gX3V0aWxzLmV4dGVuZCh7fSwgb3B0aW9ucyk7XG4gIGlmICghKCdkYXRhJyBpbiBvcHRpb25zKSkge1xuICAgIG9wdGlvbnMuZGF0YSA9IHRydWU7XG4gIH1cbiAgaWYgKG9wdGlvbnMuY29tcGF0KSB7XG4gICAgb3B0aW9ucy51c2VEZXB0aHMgPSB0cnVlO1xuICB9XG5cbiAgdmFyIGNvbXBpbGVkID0gdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIGNvbXBpbGVJbnB1dCgpIHtcbiAgICB2YXIgYXN0ID0gZW52LnBhcnNlKGlucHV0LCBvcHRpb25zKSxcbiAgICAgICAgZW52aXJvbm1lbnQgPSBuZXcgZW52LkNvbXBpbGVyKCkuY29tcGlsZShhc3QsIG9wdGlvbnMpLFxuICAgICAgICB0ZW1wbGF0ZVNwZWMgPSBuZXcgZW52LkphdmFTY3JpcHRDb21waWxlcigpLmNvbXBpbGUoZW52aXJvbm1lbnQsIG9wdGlvbnMsIHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgcmV0dXJuIGVudi50ZW1wbGF0ZSh0ZW1wbGF0ZVNwZWMpO1xuICB9XG5cbiAgLy8gVGVtcGxhdGUgaXMgb25seSBjb21waWxlZCBvbiBmaXJzdCB1c2UgYW5kIGNhY2hlZCBhZnRlciB0aGF0IHBvaW50LlxuICBmdW5jdGlvbiByZXQoY29udGV4dCwgZXhlY09wdGlvbnMpIHtcbiAgICBpZiAoIWNvbXBpbGVkKSB7XG4gICAgICBjb21waWxlZCA9IGNvbXBpbGVJbnB1dCgpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGlsZWQuY2FsbCh0aGlzLCBjb250ZXh0LCBleGVjT3B0aW9ucyk7XG4gIH1cbiAgcmV0Ll9zZXR1cCA9IGZ1bmN0aW9uIChzZXR1cE9wdGlvbnMpIHtcbiAgICBpZiAoIWNvbXBpbGVkKSB7XG4gICAgICBjb21waWxlZCA9IGNvbXBpbGVJbnB1dCgpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGlsZWQuX3NldHVwKHNldHVwT3B0aW9ucyk7XG4gIH07XG4gIHJldC5fY2hpbGQgPSBmdW5jdGlvbiAoaSwgZGF0YSwgYmxvY2tQYXJhbXMsIGRlcHRocykge1xuICAgIGlmICghY29tcGlsZWQpIHtcbiAgICAgIGNvbXBpbGVkID0gY29tcGlsZUlucHV0KCk7XG4gICAgfVxuICAgIHJldHVybiBjb21waWxlZC5fY2hpbGQoaSwgZGF0YSwgYmxvY2tQYXJhbXMsIGRlcHRocyk7XG4gIH07XG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGFyZ0VxdWFscyhhLCBiKSB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoX3V0aWxzLmlzQXJyYXkoYSkgJiYgX3V0aWxzLmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWFyZ0VxdWFscyhhW2ldLCBiW2ldKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUxpdGVyYWxUb1BhdGgoc2V4cHIpIHtcbiAgaWYgKCFzZXhwci5wYXRoLnBhcnRzKSB7XG4gICAgdmFyIGxpdGVyYWwgPSBzZXhwci5wYXRoO1xuICAgIC8vIENhc3RpbmcgdG8gc3RyaW5nIGhlcmUgdG8gbWFrZSBmYWxzZSBhbmQgMCBsaXRlcmFsIHZhbHVlcyBwbGF5IG5pY2VseSB3aXRoIHRoZSByZXN0XG4gICAgLy8gb2YgdGhlIHN5c3RlbS5cbiAgICBzZXhwci5wYXRoID0ge1xuICAgICAgdHlwZTogJ1BhdGhFeHByZXNzaW9uJyxcbiAgICAgIGRhdGE6IGZhbHNlLFxuICAgICAgZGVwdGg6IDAsXG4gICAgICBwYXJ0czogW2xpdGVyYWwub3JpZ2luYWwgKyAnJ10sXG4gICAgICBvcmlnaW5hbDogbGl0ZXJhbC5vcmlnaW5hbCArICcnLFxuICAgICAgbG9jOiBsaXRlcmFsLmxvY1xuICAgIH07XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwyTnZiWEJwYkdWeUxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSTdPenM3T3pzN096czdPenQ1UWtGRmMwSXNZMEZCWXpzN096dHhRa0ZEU3l4VlFVRlZPenR0UWtGRGJrTXNUMEZCVHpzN096dEJRVVYyUWl4SlFVRk5MRXRCUVVzc1IwRkJSeXhGUVVGRkxFTkJRVU1zUzBGQlN5eERRVUZET3p0QlFVVm9RaXhUUVVGVExGRkJRVkVzUjBGQlJ5eEZRVUZGT3pzN096czdPMEZCVHpkQ0xGRkJRVkVzUTBGQlF5eFRRVUZUTEVkQlFVYzdRVUZEYmtJc1ZVRkJVU3hGUVVGRkxGRkJRVkU3TzBGQlJXeENMRkZCUVUwc1JVRkJSU3huUWtGQlV5eExRVUZMTEVWQlFVVTdRVUZEZEVJc1VVRkJTU3hIUVVGSExFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRU5CUVVNN1FVRkRPVUlzVVVGQlNTeExRVUZMTEVOQlFVTXNUMEZCVHl4RFFVRkRMRTFCUVUwc1MwRkJTeXhIUVVGSExFVkJRVVU3UVVGRGFFTXNZVUZCVHl4TFFVRkxMRU5CUVVNN1MwRkRaRHM3UVVGRlJDeFRRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUXpWQ0xGVkJRVWtzVFVGQlRTeEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJReXhEUVVGRE8xVkJRekZDTEZkQlFWY3NSMEZCUnl4TFFVRkxMRU5CUVVNc1QwRkJUeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlEycERMRlZCUTBVc1RVRkJUU3hEUVVGRExFMUJRVTBzUzBGQlN5eFhRVUZYTEVOQlFVTXNUVUZCVFN4SlFVTndReXhEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNTVUZCU1N4RlFVRkZMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU1zUlVGRGVrTTdRVUZEUVN4bFFVRlBMRXRCUVVzc1EwRkJRenRQUVVOa08wdEJRMFk3T3pzN1FVRkpSQ3hQUVVGSExFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4TlFVRk5MRU5CUVVNN1FVRkRNMElzVTBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTTFRaXhWUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhGUVVGRk8wRkJReTlETEdWQlFVOHNTMEZCU3l4RFFVRkRPMDlCUTJRN1MwRkRSanM3UVVGRlJDeFhRVUZQTEVsQlFVa3NRMEZCUXp0SFFVTmlPenRCUVVWRUxFMUJRVWtzUlVGQlJTeERRVUZET3p0QlFVVlFMRk5CUVU4c1JVRkJSU3hwUWtGQlV5eFBRVUZQTEVWQlFVVXNUMEZCVHl4RlFVRkZPMEZCUTJ4RExGRkJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTNKQ0xGRkJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTJ4Q0xGRkJRVWtzUTBGQlF5eFJRVUZSTEVkQlFVY3NSVUZCUlN4RFFVRkRPMEZCUTI1Q0xGRkJRVWtzUTBGQlF5eFBRVUZQTEVkQlFVY3NUMEZCVHl4RFFVRkRPMEZCUTNaQ0xGRkJRVWtzUTBGQlF5eFpRVUZaTEVkQlFVY3NUMEZCVHl4RFFVRkRMRmxCUVZrc1EwRkJRenRCUVVONlF5eFJRVUZKTEVOQlFVTXNVVUZCVVN4SFFVRkhMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU03TzBGQlJXcERMRmRCUVU4c1EwRkJReXhYUVVGWExFZEJRVWNzVDBGQlR5eERRVUZETEZkQlFWY3NTVUZCU1N4RlFVRkZMRU5CUVVNN08wRkJSV2hFTEZkQlFVOHNRMEZCUXl4WlFVRlpMRWRCUVVjc1kwRkRja0lzVFVGQlRTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1JVRkRia0k3UVVGRFJTeHRRa0ZCWVN4RlFVRkZMRWxCUVVrN1FVRkRia0lzZDBKQlFXdENMRVZCUVVVc1NVRkJTVHRCUVVONFFpeFZRVUZKTEVWQlFVVXNTVUZCU1R0QlFVTldMRmxCUVVrc1NVRkJTVHRCUVVOU0xGbEJRVTBzUlVGQlJTeEpRVUZKTzBGQlExb3NZMEZCVFN4SlFVRkpPMEZCUTFZc1UwRkJSeXhGUVVGRkxFbEJRVWs3UVVGRFZDeFpRVUZOTEVWQlFVVXNTVUZCU1R0TFFVTmlMRVZCUTBRc1QwRkJUeXhEUVVGRExGbEJRVmtzUTBGRGNrSXNRMEZCUXpzN1FVRkZSaXhYUVVGUExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN1IwRkROMEk3TzBGQlJVUXNaMEpCUVdNc1JVRkJSU3gzUWtGQlV5eFBRVUZQTEVWQlFVVTdRVUZEYUVNc1VVRkJTU3hoUVVGaExFZEJRVWNzU1VGQlNTeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZPenRCUVVOeVF5eFZRVUZOTEVkQlFVY3NZVUZCWVN4RFFVRkRMRTlCUVU4c1EwRkJReXhQUVVGUExFVkJRVVVzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXp0UlFVTnlSQ3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlN4RFFVRkRPenRCUVVWeVFpeFJRVUZKTEVOQlFVTXNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJReXhWUVVGVkxFbEJRVWtzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXpzN1FVRkZka1FzVVVGQlNTeERRVUZETEZGQlFWRXNRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhOUVVGTkxFTkJRVU03UVVGRE4wSXNVVUZCU1N4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eEpRVUZKTEUxQlFVMHNRMEZCUXl4VFFVRlRMRU5CUVVNN08wRkJSWEJFTEZkQlFVOHNTVUZCU1N4RFFVRkRPMGRCUTJJN08wRkJSVVFzVVVGQlRTeEZRVUZGTEdkQ1FVRlRMRWxCUVVrc1JVRkJSVHM3UVVGRmNrSXNVVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdRVUZEY0VJc1dVRkJUU3d5UWtGQll5eG5Ra0ZCWjBJc1IwRkJSeXhKUVVGSkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNwRU96dEJRVVZFTEZGQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzBGQlF6bENMRkZCUVVrc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGFFTXNVVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dEJRVU40UWl4WFFVRlBMRWRCUVVjc1EwRkJRenRIUVVOYU96dEJRVVZFTEZOQlFVOHNSVUZCUlN4cFFrRkJVeXhQUVVGUExFVkJRVVU3UVVGRGVrSXNVVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhYUVVGWExFTkJRVU1zVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJRenM3UVVGRmRFUXNVVUZCU1N4SlFVRkpMRWRCUVVjc1QwRkJUeXhEUVVGRExFbEJRVWs3VVVGRGNrSXNWVUZCVlN4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU03UVVGRE0wSXNVMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEhRVUZITEZWQlFWVXNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVOdVF5eFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzB0QlEzUkNPenRCUVVWRUxGRkJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNWMEZCVnl4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVGRE96dEJRVVZxUXl4UlFVRkpMRU5CUVVNc1VVRkJVU3hIUVVGSExGVkJRVlVzUzBGQlN5eERRVUZETEVOQlFVTTdRVUZEYWtNc1VVRkJTU3hEUVVGRExGZEJRVmNzUjBGQlJ5eFBRVUZQTEVOQlFVTXNWMEZCVnl4SFFVRkhMRTlCUVU4c1EwRkJReXhYUVVGWExFTkJRVU1zVFVGQlRTeEhRVUZITEVOQlFVTXNRMEZCUXpzN1FVRkZlRVVzVjBGQlR5eEpRVUZKTEVOQlFVTTdSMEZEWWpzN1FVRkZSQ3huUWtGQll5eEZRVUZGTEhkQ1FVRlRMRXRCUVVzc1JVRkJSVHRCUVVNNVFpd3dRa0ZCYzBJc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6czdRVUZGT1VJc1VVRkJTU3hQUVVGUExFZEJRVWNzUzBGQlN5eERRVUZETEU5QlFVODdVVUZEZWtJc1QwRkJUeXhIUVVGSExFdEJRVXNzUTBGQlF5eFBRVUZQTEVOQlFVTTdPMEZCUlRGQ0xGZEJRVThzUjBGQlJ5eFBRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU5zUkN4WFFVRlBMRWRCUVVjc1QwRkJUeXhKUVVGSkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN08wRkJSV3hFTEZGQlFVa3NTVUZCU1N4SFFVRkhMRWxCUVVrc1EwRkJReXhoUVVGaExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdPMEZCUlhKRExGRkJRVWtzU1VGQlNTeExRVUZMTEZGQlFWRXNSVUZCUlR0QlFVTnlRaXhWUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEV0QlFVc3NSVUZCUlN4UFFVRlBMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03UzBGRE0wTXNUVUZCVFN4SlFVRkpMRWxCUVVrc1MwRkJTeXhSUVVGUkxFVkJRVVU3UVVGRE5VSXNWVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6czdPenRCUVVsNFFpeFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR0ZCUVdFc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU53UXl4VlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExHRkJRV0VzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0QlFVTndReXhWUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMEZCUTNwQ0xGVkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RlFVRkZMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTTdTMEZEYUVRc1RVRkJUVHRCUVVOTUxGVkJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNTMEZCU3l4RlFVRkZMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6czdPenRCUVVrM1F5eFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR0ZCUVdFc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU53UXl4VlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExHRkJRV0VzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0QlFVTndReXhWUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRPMEZCUTNwQ0xGVkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNjVUpCUVhGQ0xFTkJRVU1zUTBGQlF6dExRVU53UXpzN1FVRkZSQ3hSUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZGQlFWRXNRMEZCUXl4RFFVRkRPMGRCUTNaQ096dEJRVVZFTEdkQ1FVRmpMRVZCUVVFc2QwSkJRVU1zVTBGQlV5eEZRVUZGTzBGQlEzaENMRkZCUVVrc1QwRkJUeXhIUVVGSExGTkJRVk1zUTBGQlF5eFBRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1EwRkJReXhUUVVGVExFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdRVUZETVVVc1VVRkJTU3hOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEhWQ1FVRjFRaXhEUVVGRExGTkJRVk1zUlVGQlJTeFBRVUZQTEVWQlFVVXNVMEZCVXl4RFFVRkRPMUZCUTNSRkxFbEJRVWtzUjBGQlJ5eFRRVUZUTEVOQlFVTXNTVUZCU1N4RFFVRkRPenRCUVVWNFFpeFJRVUZKTEVOQlFVTXNZVUZCWVN4SFFVRkhMRWxCUVVrc1EwRkJRenRCUVVNeFFpeFJRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRzFDUVVGdFFpeEZRVUZGTEUxQlFVMHNRMEZCUXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZETzBkQlEyaEZPenRCUVVWRUxHdENRVUZuUWl4RlFVRkZMREJDUVVGVExFOUJRVThzUlVGQlJUdEJRVU5zUXl4UlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6czdRVUZGZGtJc1VVRkJTU3hQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETEU5QlFVOHNRMEZCUXp0QlFVTTVRaXhSUVVGSkxFOUJRVThzUlVGQlJUdEJRVU5ZTEdGQlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1kwRkJZeXhEUVVGRExFOUJRVThzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0TFFVTm9SRHM3UVVGRlJDeFJRVUZKTEUxQlFVMHNSMEZCUnl4UFFVRlBMRU5CUVVNc1RVRkJUU3hEUVVGRE8wRkJRelZDTEZGQlFVa3NUVUZCVFN4RFFVRkRMRTFCUVUwc1IwRkJSeXhEUVVGRExFVkJRVVU3UVVGRGNrSXNXVUZCVFN3eVFrRkRTaXd5UTBGQk1rTXNSMEZCUnl4TlFVRk5MRU5CUVVNc1RVRkJUU3hGUVVNelJDeFBRVUZQTEVOQlExSXNRMEZCUXp0TFFVTklMRTFCUVUwc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVWQlFVVTdRVUZEZWtJc1ZVRkJTU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEhOQ1FVRnpRaXhGUVVGRk8wRkJRM1pETEZsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1lVRkJZU3hGUVVGRkxGZEJRVmNzUTBGQlF5eERRVUZETzA5QlEzcERMRTFCUVUwN1FVRkRUQ3hqUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVXNTVUZCU1N4RlFVRkZMR2RDUVVGblFpeEZRVUZGTEV0QlFVc3NSVUZCUlN4RlFVRkZMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTTdUMEZET1VRN1MwRkRSanM3UVVGRlJDeFJRVUZKTEZkQlFWY3NSMEZCUnl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExGRkJRVkU3VVVGRGNrTXNVMEZCVXl4SFFVRkhMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeExRVUZMTEdWQlFXVXNRMEZCUXp0QlFVTndSQ3hSUVVGSkxGTkJRVk1zUlVGQlJUdEJRVU5pTEZWQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzB0QlF6TkNPenRCUVVWRUxGRkJRVWtzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhQUVVGUExFVkJRVVVzVDBGQlR5eEZRVUZGTEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenM3UVVGRmFFVXNVVUZCU1N4TlFVRk5MRWRCUVVjc1QwRkJUeXhEUVVGRExFMUJRVTBzU1VGQlNTeEZRVUZGTEVOQlFVTTdRVUZEYkVNc1VVRkJTU3hKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEdGQlFXRXNTVUZCU1N4TlFVRk5MRVZCUVVVN1FVRkRlRU1zVlVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4bFFVRmxMRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03UVVGRGNrTXNXVUZCVFN4SFFVRkhMRVZCUVVVc1EwRkJRenRMUVVOaU96dEJRVVZFTEZGQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1pVRkJaU3hGUVVGRkxGTkJRVk1zUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN1FVRkROMFFzVVVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRIUVVOMlFqdEJRVU5FTEhWQ1FVRnhRaXhGUVVGRkxDdENRVUZUTEZsQlFWa3NSVUZCUlR0QlFVTTFReXhSUVVGSkxFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU03UjBGRGNrTTdPMEZCUlVRc2JVSkJRV2xDTEVWQlFVVXNNa0pCUVZNc1VVRkJVU3hGUVVGRk8wRkJRM0JETEZGQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1VVRkJVU3hEUVVGRExFTkJRVU03TzBGQlJUZENMRkZCUVVrc1VVRkJVU3hEUVVGRExFOUJRVThzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1VVRkJVU3hGUVVGRk8wRkJRemxETEZWQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1pVRkJaU3hEUVVGRExFTkJRVU03UzBGRE9VSXNUVUZCVFR0QlFVTk1MRlZCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVVVGQlVTeERRVUZETEVOQlFVTTdTMEZEZGtJN1IwRkRSanRCUVVORUxGZEJRVk1zUlVGQlFTeHRRa0ZCUXl4VFFVRlRMRVZCUVVVN1FVRkRia0lzVVVGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4VFFVRlRMRU5CUVVNc1EwRkJRenRIUVVOb1F6czdRVUZGUkN4clFrRkJaMElzUlVGQlJTd3dRa0ZCVXl4UFFVRlBMRVZCUVVVN1FVRkRiRU1zVVVGQlNTeFBRVUZQTEVOQlFVTXNTMEZCU3l4RlFVRkZPMEZCUTJwQ0xGVkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNaVUZCWlN4RlFVRkZMRTlCUVU4c1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dExRVU0zUXp0SFFVTkdPenRCUVVWRUxHdENRVUZuUWl4RlFVRkZMRFJDUVVGWExFVkJRVVU3TzBGQlJTOUNMR1ZCUVdFc1JVRkJSU3gxUWtGQlV5eExRVUZMTEVWQlFVVTdRVUZETjBJc01FSkJRWE5DTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1FVRkRPVUlzVVVGQlNTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6czdRVUZGY2tNc1VVRkJTU3hKUVVGSkxFdEJRVXNzVVVGQlVTeEZRVUZGTzBGQlEzSkNMRlZCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdTMEZEZWtJc1RVRkJUU3hKUVVGSkxFbEJRVWtzUzBGQlN5eFJRVUZSTEVWQlFVVTdRVUZETlVJc1ZVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0TFFVTjZRaXhOUVVGTk8wRkJRMHdzVlVGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRMUVVNMVFqdEhRVU5HTzBGQlEwUXNaMEpCUVdNc1JVRkJSU3gzUWtGQlV5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVU4c1JVRkJSVHRCUVVOb1JDeFJRVUZKTEVsQlFVa3NSMEZCUnl4TFFVRkxMRU5CUVVNc1NVRkJTVHRSUVVOdVFpeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU03VVVGRGNFSXNUMEZCVHl4SFFVRkhMRTlCUVU4c1NVRkJTU3hKUVVGSkxFbEJRVWtzVDBGQlR5eEpRVUZKTEVsQlFVa3NRMEZCUXpzN1FVRkZMME1zVVVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4WlFVRlpMRVZCUVVVc1NVRkJTU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZET3p0QlFVVjBReXhSUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEdGQlFXRXNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVOd1F5eFJRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR0ZCUVdFc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6czdRVUZGY0VNc1VVRkJTU3hEUVVGRExFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTTdRVUZEYmtJc1VVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXpzN1FVRkZiRUlzVVVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4cFFrRkJhVUlzUlVGQlJTeEpRVUZKTEVWQlFVVXNUMEZCVHl4RFFVRkRMRU5CUVVNN1IwRkRMME03TzBGQlJVUXNZVUZCVnl4RlFVRkZMSEZDUVVGVExFdEJRVXNzUlVGQlJUdEJRVU16UWl4UlFVRkpMRWxCUVVrc1IwRkJSeXhMUVVGTExFTkJRVU1zU1VGQlNTeERRVUZETzBGQlEzUkNMRkZCUVVrc1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETzBGQlEyNUNMRkZCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEYkVJc1VVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eDFRa0ZCZFVJc1EwRkJReXhEUVVGRE8wZEJRM1JET3p0QlFVVkVMR0ZCUVZjc1JVRkJSU3h4UWtGQlV5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZMRTlCUVU4c1JVRkJSVHRCUVVNM1F5eFJRVUZKTEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc2RVSkJRWFZDTEVOQlFVTXNTMEZCU3l4RlFVRkZMRTlCUVU4c1JVRkJSU3hQUVVGUExFTkJRVU03VVVGRGFFVXNTVUZCU1N4SFFVRkhMRXRCUVVzc1EwRkJReXhKUVVGSk8xRkJRMnBDTEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZET3p0QlFVVjJRaXhSUVVGSkxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVGRk8wRkJRMjVETEZWQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc2JVSkJRVzFDTEVWQlFVVXNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkJSU3hKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU4yUkN4TlFVRk5MRWxCUVVrc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eG5Ra0ZCWjBJc1JVRkJSVHRCUVVONFF5eFpRVUZOTERKQ1FVTktMRGhFUVVFNFJDeEhRVUZITEVsQlFVa3NSVUZEY2tVc1MwRkJTeXhEUVVOT0xFTkJRVU03UzBGRFNDeE5RVUZOTzBGQlEwd3NWVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRGJrSXNWVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU03TzBGQlJXeENMRlZCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdRVUZEYkVJc1ZVRkJTU3hEUVVGRExFMUJRVTBzUTBGRFZDeGpRVUZqTEVWQlEyUXNUVUZCVFN4RFFVRkRMRTFCUVUwc1JVRkRZaXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVU5pTEdsQ1FVRkpMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlF6TkNMRU5CUVVNN1MwRkRTRHRIUVVOR096dEJRVVZFTEdkQ1FVRmpMRVZCUVVVc2QwSkJRVk1zU1VGQlNTeEZRVUZGTzBGQlF6ZENMRkZCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMEZCUXpGQ0xGRkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6czdRVUZGZEVNc1VVRkJTU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRMRU5CUVVNN1VVRkRkRUlzVFVGQlRTeEhRVUZITEdsQ1FVRkpMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zU1VGQlNTeERRVUZETzFGQlEyNURMRmxCUVZrc1IwRkJSeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVsQlFVa3NRMEZCUXl4TlFVRk5MRWxCUVVrc1NVRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXpzN1FVRkZkRVVzVVVGQlNTeFpRVUZaTEVWQlFVVTdRVUZEYUVJc1ZVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eHJRa0ZCYTBJc1JVRkJSU3haUVVGWkxFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMHRCUXpORUxFMUJRVTBzU1VGQlNTeERRVUZETEVsQlFVa3NSVUZCUlRzN1FVRkZhRUlzVlVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRMUVVNMVFpeE5RVUZOTEVsQlFVa3NTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSVHRCUVVOd1FpeFZRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRGVrSXNWVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFVkJRVVVzU1VGQlNTeERRVUZETEV0QlFVc3NSVUZCUlN4SlFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTm9SU3hOUVVGTk8wRkJRMHdzVlVGQlNTeERRVUZETEUxQlFVMHNRMEZEVkN4cFFrRkJhVUlzUlVGRGFrSXNTVUZCU1N4RFFVRkRMRXRCUVVzc1JVRkRWaXhKUVVGSkxFTkJRVU1zUzBGQlN5eEZRVU5XTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUTFnc1RVRkJUU3hEUVVOUUxFTkJRVU03UzBGRFNEdEhRVU5HT3p0QlFVVkVMR1ZCUVdFc1JVRkJSU3gxUWtGQlV5eE5RVUZOTEVWQlFVVTdRVUZET1VJc1VVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFpRVUZaTEVWQlFVVXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wZEJRM3BET3p0QlFVVkVMR1ZCUVdFc1JVRkJSU3gxUWtGQlV5eE5RVUZOTEVWQlFVVTdRVUZET1VJc1VVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eGhRVUZoTEVWQlFVVXNUVUZCVFN4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRE8wZEJRekZET3p0QlFVVkVMR2RDUVVGakxFVkJRVVVzZDBKQlFWTXNTVUZCU1N4RlFVRkZPMEZCUXpkQ0xGRkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNZVUZCWVN4RlFVRkZMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dEhRVU40UXpzN1FVRkZSQ3hyUWtGQlowSXNSVUZCUlN3MFFrRkJWenRCUVVNelFpeFJRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR0ZCUVdFc1JVRkJSU3hYUVVGWExFTkJRVU1zUTBGQlF6dEhRVU42UXpzN1FVRkZSQ3hoUVVGWExFVkJRVVVzZFVKQlFWYzdRVUZEZEVJc1VVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eGhRVUZoTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN1IwRkRjRU03TzBGQlJVUXNUVUZCU1N4RlFVRkZMR05CUVZNc1NVRkJTU3hGUVVGRk8wRkJRMjVDTEZGQlFVa3NTMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhMUVVGTE8xRkJRM0JDTEVOQlFVTXNSMEZCUnl4RFFVRkRPMUZCUTB3c1EwRkJReXhIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTTdPMEZCUlc1Q0xGRkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNWVUZCVlN4RFFVRkRMRU5CUVVNN08wRkJSWGhDTEZkQlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU5xUWl4VlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4TFFVRkxMRU5CUVVNc1EwRkJRenRMUVVOb1F6dEJRVU5FTEZkQlFVOHNRMEZCUXl4RlFVRkZMRVZCUVVVN1FVRkRWaXhWUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEdOQlFXTXNSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdTMEZETTBNN1FVRkRSQ3hSUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZOQlFWTXNRMEZCUXl4RFFVRkRPMGRCUTNoQ096czdRVUZIUkN4UlFVRk5MRVZCUVVVc1owSkJRVk1zU1VGQlNTeEZRVUZGTzBGQlEzSkNMRkZCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zU1VGQlNTeERRVUZETzBGQlEyaENMRmxCUVUwc1JVRkJSU3hKUVVGSk8wRkJRMW9zVlVGQlNTeEZRVUZGTEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU1zUTBGQlF6dEJRVU01UWl4VFFVRkhMRVZCUVVVc1NVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhPMHRCUXpWQ0xFTkJRVU1zUTBGQlF6dEhRVU5LT3p0QlFVVkVMRlZCUVZFc1JVRkJSU3hyUWtGQlV5eExRVUZMTEVWQlFVVTdRVUZEZUVJc1VVRkJTU3hEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU5XTEdGQlFVODdTMEZEVWpzN1FVRkZSQ3hSUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXp0SFFVTjJRanM3UVVGRlJDeGxRVUZoTEVWQlFVVXNkVUpCUVZNc1MwRkJTeXhGUVVGRk8wRkJRemRDTEZGQlFVa3NVVUZCVVN4SFFVRkhMR2xDUVVGSkxFOUJRVThzUTBGQlF5eFJRVUZSTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE96dEJRVVZvUkN4UlFVRkpMRmxCUVZrc1IwRkJSeXhSUVVGUkxFbEJRVWtzUTBGQlF5eERRVUZETEVsQlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1MwRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenM3T3p0QlFVa3pSU3hSUVVGSkxGRkJRVkVzUjBGQlJ5eERRVUZETEZsQlFWa3NTVUZCU1N4cFFrRkJTU3hQUVVGUExFTkJRVU1zWjBKQlFXZENMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03T3pzN08wRkJTM0JGTEZGQlFVa3NWVUZCVlN4SFFVRkhMRU5CUVVNc1dVRkJXU3hMUVVGTExGRkJRVkVzU1VGQlNTeFJRVUZSTEVOQlFVRXNRVUZCUXl4RFFVRkRPenM3TzBGQlNYcEVMRkZCUVVrc1ZVRkJWU3hKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTzBGQlF6TkNMRlZCUVVrc1MwRkJTU3hIUVVGSExFdEJRVXNzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRWUVVNMVFpeFBRVUZQTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJRenRCUVVONlFpeFZRVUZKTEU5QlFVOHNRMEZCUXl4WlFVRlpMRU5CUVVNc1MwRkJTU3hEUVVGRExFVkJRVVU3UVVGRE9VSXNaMEpCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU03VDBGRGFrSXNUVUZCVFN4SlFVRkpMRTlCUVU4c1EwRkJReXhuUWtGQlowSXNSVUZCUlR0QlFVTnVReXhyUWtGQlZTeEhRVUZITEV0QlFVc3NRMEZCUXp0UFFVTndRanRMUVVOR096dEJRVVZFTEZGQlFVa3NVVUZCVVN4RlFVRkZPMEZCUTFvc1lVRkJUeXhSUVVGUkxFTkJRVU03UzBGRGFrSXNUVUZCVFN4SlFVRkpMRlZCUVZVc1JVRkJSVHRCUVVOeVFpeGhRVUZQTEZkQlFWY3NRMEZCUXp0TFFVTndRaXhOUVVGTk8wRkJRMHdzWVVGQlR5eFJRVUZSTEVOQlFVTTdTMEZEYWtJN1IwRkRSanM3UVVGRlJDeFpRVUZWTEVWQlFVVXNiMEpCUVZNc1RVRkJUU3hGUVVGRk8wRkJRek5DTEZOQlFVc3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFTkJRVU1zUjBGQlJ5eE5RVUZOTEVOQlFVTXNUVUZCVFN4RlFVRkZMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUTBGQlF5eEZRVUZGTEVWQlFVVTdRVUZETjBNc1ZVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRMUVVNelFqdEhRVU5HT3p0QlFVVkVMRmRCUVZNc1JVRkJSU3h0UWtGQlV5eEhRVUZITEVWQlFVVTdRVUZEZGtJc1VVRkJTU3hMUVVGTExFZEJRVWNzUjBGQlJ5eERRVUZETEV0QlFVc3NTVUZCU1N4SlFVRkpMRWRCUVVjc1IwRkJSeXhEUVVGRExFdEJRVXNzUjBGQlJ5eEhRVUZITEVOQlFVTXNVVUZCVVN4SlFVRkpMRVZCUVVVc1EwRkJRenM3UVVGRkwwUXNVVUZCU1N4SlFVRkpMRU5CUVVNc1dVRkJXU3hGUVVGRk8wRkJRM0pDTEZWQlFVa3NTMEZCU3l4RFFVRkRMRTlCUVU4c1JVRkJSVHRCUVVOcVFpeGhRVUZMTEVkQlFVY3NTMEZCU3l4RFFVRkRMRTlCUVU4c1EwRkJReXhqUVVGakxFVkJRVVVzUlVGQlJTeERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF6dFBRVU12UkRzN1FVRkZSQ3hWUVVGSkxFZEJRVWNzUTBGQlF5eExRVUZMTEVWQlFVVTdRVUZEWWl4WlFVRkpMRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0UFFVTXhRanRCUVVORUxGVkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RlFVRkZMRWRCUVVjc1EwRkJReXhMUVVGTExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZETVVNc1ZVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eHBRa0ZCYVVJc1JVRkJSU3hMUVVGTExFVkJRVVVzUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPenRCUVVWb1JDeFZRVUZKTEVkQlFVY3NRMEZCUXl4SlFVRkpMRXRCUVVzc1pVRkJaU3hGUVVGRk96czdRVUZIYUVNc1dVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXp0UFFVTnNRanRMUVVOR0xFMUJRVTA3UVVGRFRDeFZRVUZKTEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVN1FVRkRha0lzV1VGQlNTeGxRVUZsTEZsQlFVRXNRMEZCUXp0QlFVTndRaXhaUVVGSkxFZEJRVWNzUTBGQlF5eExRVUZMTEVsQlFVa3NRMEZCUXl4cFFrRkJTU3hQUVVGUExFTkJRVU1zVVVGQlVTeERRVUZETEVkQlFVY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFdEJRVXNzUlVGQlJUdEJRVU42UkN4NVFrRkJaU3hIUVVGSExFbEJRVWtzUTBGQlF5eGxRVUZsTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzFOQlEzUkVPMEZCUTBRc1dVRkJTU3hsUVVGbExFVkJRVVU3UVVGRGJrSXNZMEZCU1N4bFFVRmxMRWRCUVVjc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzBGQlEyNUVMR05CUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVVVGQlVTeEZRVUZGTEZsQlFWa3NSVUZCUlN4bFFVRmxMRVZCUVVVc1pVRkJaU3hEUVVGRExFTkJRVU03VTBGRGRrVXNUVUZCVFR0QlFVTk1MR1ZCUVVzc1IwRkJSeXhIUVVGSExFTkJRVU1zVVVGQlVTeEpRVUZKTEV0QlFVc3NRMEZCUXp0QlFVTTVRaXhqUVVGSkxFdEJRVXNzUTBGQlF5eFBRVUZQTEVWQlFVVTdRVUZEYWtJc2FVSkJRVXNzUjBGQlJ5eExRVUZMTEVOQlExWXNUMEZCVHl4RFFVRkRMR1ZCUVdVc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGRE5VSXNUMEZCVHl4RFFVRkRMRTlCUVU4c1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGRGNFSXNUMEZCVHl4RFFVRkRMRTFCUVUwc1JVRkJSU3hGUVVGRkxFTkJRVU1zUTBGQlF6dFhRVU40UWpzN1FVRkZSQ3hqUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZGQlFWRXNSVUZCUlN4SFFVRkhMRU5CUVVNc1NVRkJTU3hGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETzFOQlEzaERPMDlCUTBZN1FVRkRSQ3hWUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPMHRCUTJ4Q08wZEJRMFk3TzBGQlJVUXNlVUpCUVhWQ0xFVkJRVVVzYVVOQlFWTXNTMEZCU3l4RlFVRkZMRTlCUVU4c1JVRkJSU3hQUVVGUExFVkJRVVVzVTBGQlV5eEZRVUZGTzBGQlEzQkZMRkZCUVVrc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTTdRVUZETVVJc1VVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXpzN1FVRkZlRUlzVVVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4aFFVRmhMRVZCUVVVc1QwRkJUeXhEUVVGRExFTkJRVU03UVVGRGNFTXNVVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhoUVVGaExFVkJRVVVzVDBGQlR5eERRVUZETEVOQlFVTTdPMEZCUlhCRExGRkJRVWtzUzBGQlN5eERRVUZETEVsQlFVa3NSVUZCUlR0QlFVTmtMRlZCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUzBGQlN5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNwQ0xFMUJRVTA3UVVGRFRDeFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRmRCUVZjc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF6dExRVU55UXpzN1FVRkZSQ3hYUVVGUExFMUJRVTBzUTBGQlF6dEhRVU5tT3p0QlFVVkVMR2xDUVVGbExFVkJRVVVzZVVKQlFWTXNTVUZCU1N4RlFVRkZPMEZCUXpsQ0xGTkJRMFVzU1VGQlNTeExRVUZMTEVkQlFVY3NRMEZCUXl4RlFVRkZMRWRCUVVjc1IwRkJSeXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRVZCUTNCRUxFdEJRVXNzUjBGQlJ5eEhRVUZITEVWQlExZ3NTMEZCU3l4RlFVRkZMRVZCUTFBN1FVRkRRU3hWUVVGSkxGZEJRVmNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmRCUVZjc1EwRkJReXhMUVVGTExFTkJRVU03VlVGREwwTXNTMEZCU3l4SFFVRkhMRmRCUVZjc1NVRkJTU3hsUVVGUkxGZEJRVmNzUlVGQlJTeEpRVUZKTEVOQlFVTXNRMEZCUXp0QlFVTndSQ3hWUVVGSkxGZEJRVmNzU1VGQlNTeExRVUZMTEVsQlFVa3NRMEZCUXl4RlFVRkZPMEZCUXpkQ0xHVkJRVThzUTBGQlF5eExRVUZMTEVWQlFVVXNTMEZCU3l4RFFVRkRMRU5CUVVNN1QwRkRka0k3UzBGRFJqdEhRVU5HTzBOQlEwWXNRMEZCUXpzN1FVRkZTeXhUUVVGVExGVkJRVlVzUTBGQlF5eExRVUZMTEVWQlFVVXNUMEZCVHl4RlFVRkZMRWRCUVVjc1JVRkJSVHRCUVVNNVF5eE5RVU5GTEV0QlFVc3NTVUZCU1N4SlFVRkpMRWxCUTFvc1QwRkJUeXhMUVVGTExFdEJRVXNzVVVGQlVTeEpRVUZKTEV0QlFVc3NRMEZCUXl4SlFVRkpMRXRCUVVzc1UwRkJVeXhCUVVGRExFVkJRM1pFTzBGQlEwRXNWVUZCVFN3eVFrRkRTaXhuUmtGQlowWXNSMEZET1VVc1MwRkJTeXhEUVVOU0xFTkJRVU03UjBGRFNEczdRVUZGUkN4VFFVRlBMRWRCUVVjc1QwRkJUeXhKUVVGSkxFVkJRVVVzUTBGQlF6dEJRVU40UWl4TlFVRkpMRVZCUVVVc1RVRkJUU3hKUVVGSkxFOUJRVThzUTBGQlFTeEJRVUZETEVWQlFVVTdRVUZEZUVJc1YwRkJUeXhEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdSMEZEY2tJN1FVRkRSQ3hOUVVGSkxFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVTdRVUZEYkVJc1YwRkJUeXhEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdSMEZETVVJN08wRkJSVVFzVFVGQlNTeEhRVUZITEVkQlFVY3NSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhMUVVGTExFVkJRVVVzVDBGQlR5eERRVUZETzAxQlEycERMRmRCUVZjc1IwRkJSeXhKUVVGSkxFZEJRVWNzUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXl4UFFVRlBMRU5CUVVNc1IwRkJSeXhGUVVGRkxFOUJRVThzUTBGQlF5eERRVUZETzBGQlEzcEVMRk5CUVU4c1NVRkJTU3hIUVVGSExFTkJRVU1zYTBKQlFXdENMRVZCUVVVc1EwRkJReXhQUVVGUExFTkJRVU1zVjBGQlZ5eEZRVUZGTEU5QlFVOHNRMEZCUXl4RFFVRkRPME5CUTI1Rk96dEJRVVZOTEZOQlFWTXNUMEZCVHl4RFFVRkRMRXRCUVVzc1JVRkJSU3hQUVVGUExFVkJRVThzUjBGQlJ5eEZRVUZGTzAxQlFXNUNMRTlCUVU4c1owSkJRVkFzVDBGQlR5eEhRVUZITEVWQlFVVTdPMEZCUTNwRExFMUJRMFVzUzBGQlN5eEpRVUZKTEVsQlFVa3NTVUZEV2l4UFFVRlBMRXRCUVVzc1MwRkJTeXhSUVVGUkxFbEJRVWtzUzBGQlN5eERRVUZETEVsQlFVa3NTMEZCU3l4VFFVRlRMRUZCUVVNc1JVRkRka1E3UVVGRFFTeFZRVUZOTERKQ1FVTktMRFpGUVVFMlJTeEhRVU16UlN4TFFVRkxMRU5CUTFJc1EwRkJRenRIUVVOSU96dEJRVVZFTEZOQlFVOHNSMEZCUnl4alFVRlBMRVZCUVVVc1JVRkJSU3hQUVVGUExFTkJRVU1zUTBGQlF6dEJRVU01UWl4TlFVRkpMRVZCUVVVc1RVRkJUU3hKUVVGSkxFOUJRVThzUTBGQlFTeEJRVUZETEVWQlFVVTdRVUZEZUVJc1YwRkJUeXhEUVVGRExFbEJRVWtzUjBGQlJ5eEpRVUZKTEVOQlFVTTdSMEZEY2tJN1FVRkRSQ3hOUVVGSkxFOUJRVThzUTBGQlF5eE5RVUZOTEVWQlFVVTdRVUZEYkVJc1YwRkJUeXhEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdSMEZETVVJN08wRkJSVVFzVFVGQlNTeFJRVUZSTEZsQlFVRXNRMEZCUXpzN1FVRkZZaXhYUVVGVExGbEJRVmtzUjBGQlJ6dEJRVU4wUWl4UlFVRkpMRWRCUVVjc1IwRkJSeXhIUVVGSExFTkJRVU1zUzBGQlN5eERRVUZETEV0QlFVc3NSVUZCUlN4UFFVRlBMRU5CUVVNN1VVRkRha01zVjBGQlZ5eEhRVUZITEVsQlFVa3NSMEZCUnl4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRExFOUJRVThzUTBGQlF5eEhRVUZITEVWQlFVVXNUMEZCVHl4RFFVRkRPMUZCUTNSRUxGbEJRVmtzUjBGQlJ5eEpRVUZKTEVkQlFVY3NRMEZCUXl4clFrRkJhMElzUlVGQlJTeERRVUZETEU5QlFVOHNRMEZEYWtRc1YwRkJWeXhGUVVOWUxFOUJRVThzUlVGRFVDeFRRVUZUTEVWQlExUXNTVUZCU1N4RFFVTk1MRU5CUVVNN1FVRkRTaXhYUVVGUExFZEJRVWNzUTBGQlF5eFJRVUZSTEVOQlFVTXNXVUZCV1N4RFFVRkRMRU5CUVVNN1IwRkRia003T3p0QlFVZEVMRmRCUVZNc1IwRkJSeXhEUVVGRExFOUJRVThzUlVGQlJTeFhRVUZYTEVWQlFVVTdRVUZEYWtNc1VVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5pTEdOQlFWRXNSMEZCUnl4WlFVRlpMRVZCUVVVc1EwRkJRenRMUVVNelFqdEJRVU5FTEZkQlFVOHNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFVkJRVVVzVDBGQlR5eEZRVUZGTEZkQlFWY3NRMEZCUXl4RFFVRkRPMGRCUTJ4RU8wRkJRMFFzUzBGQlJ5eERRVUZETEUxQlFVMHNSMEZCUnl4VlFVRlRMRmxCUVZrc1JVRkJSVHRCUVVOc1F5eFJRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZPMEZCUTJJc1kwRkJVU3hIUVVGSExGbEJRVmtzUlVGQlJTeERRVUZETzB0QlF6TkNPMEZCUTBRc1YwRkJUeXhSUVVGUkxFTkJRVU1zVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4RFFVRkRPMGRCUTNSRExFTkJRVU03UVVGRFJpeExRVUZITEVOQlFVTXNUVUZCVFN4SFFVRkhMRlZCUVZNc1EwRkJReXhGUVVGRkxFbEJRVWtzUlVGQlJTeFhRVUZYTEVWQlFVVXNUVUZCVFN4RlFVRkZPMEZCUTJ4RUxGRkJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVTdRVUZEWWl4alFVRlJMRWRCUVVjc1dVRkJXU3hGUVVGRkxFTkJRVU03UzBGRE0wSTdRVUZEUkN4WFFVRlBMRkZCUVZFc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVsQlFVa3NSVUZCUlN4WFFVRlhMRVZCUVVVc1RVRkJUU3hEUVVGRExFTkJRVU03UjBGRGRFUXNRMEZCUXp0QlFVTkdMRk5CUVU4c1IwRkJSeXhEUVVGRE8wTkJRMW83TzBGQlJVUXNVMEZCVXl4VFFVRlRMRU5CUVVNc1EwRkJReXhGUVVGRkxFTkJRVU1zUlVGQlJUdEJRVU4yUWl4TlFVRkpMRU5CUVVNc1MwRkJTeXhEUVVGRExFVkJRVVU3UVVGRFdDeFhRVUZQTEVsQlFVa3NRMEZCUXp0SFFVTmlPenRCUVVWRUxFMUJRVWtzWlVGQlVTeERRVUZETEVOQlFVTXNTVUZCU1N4bFFVRlJMRU5CUVVNc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF5eE5RVUZOTEV0QlFVc3NRMEZCUXl4RFFVRkRMRTFCUVUwc1JVRkJSVHRCUVVOeVJDeFRRVUZMTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETEUxQlFVMHNSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVOcVF5eFZRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRCUVVNeFFpeGxRVUZQTEV0QlFVc3NRMEZCUXp0UFFVTmtPMHRCUTBZN1FVRkRSQ3hYUVVGUExFbEJRVWtzUTBGQlF6dEhRVU5pTzBOQlEwWTdPMEZCUlVRc1UwRkJVeXh6UWtGQmMwSXNRMEZCUXl4TFFVRkxMRVZCUVVVN1FVRkRja01zVFVGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJTeXhGUVVGRk8wRkJRM0pDTEZGQlFVa3NUMEZCVHl4SFFVRkhMRXRCUVVzc1EwRkJReXhKUVVGSkxFTkJRVU03T3p0QlFVZDZRaXhUUVVGTExFTkJRVU1zU1VGQlNTeEhRVUZITzBGQlExZ3NWVUZCU1N4RlFVRkZMR2RDUVVGblFqdEJRVU4wUWl4VlFVRkpMRVZCUVVVc1MwRkJTenRCUVVOWUxGZEJRVXNzUlVGQlJTeERRVUZETzBGQlExSXNWMEZCU3l4RlFVRkZMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUjBGQlJ5eEZRVUZGTEVOQlFVTTdRVUZET1VJc1kwRkJVU3hGUVVGRkxFOUJRVThzUTBGQlF5eFJRVUZSTEVkQlFVY3NSVUZCUlR0QlFVTXZRaXhUUVVGSExFVkJRVVVzVDBGQlR5eERRVUZETEVkQlFVYzdTMEZEYWtJc1EwRkJRenRIUVVOSU8wTkJRMFlpTENKbWFXeGxJam9pWTI5dGNHbHNaWEl1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaUJsYzJ4cGJuUXRaR2x6WVdKc1pTQnVaWGN0WTJGd0lDb3ZYRzVjYm1sdGNHOXlkQ0JGZUdObGNIUnBiMjRnWm5KdmJTQW5MaTR2WlhoalpYQjBhVzl1Snp0Y2JtbHRjRzl5ZENCN0lHbHpRWEp5WVhrc0lHbHVaR1Y0VDJZc0lHVjRkR1Z1WkNCOUlHWnliMjBnSnk0dUwzVjBhV3h6Snp0Y2JtbHRjRzl5ZENCQlUxUWdabkp2YlNBbkxpOWhjM1FuTzF4dVhHNWpiMjV6ZENCemJHbGpaU0E5SUZ0ZExuTnNhV05sTzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1EyOXRjR2xzWlhJb0tTQjdmVnh1WEc0dkx5QjBhR1VnWm05MWJtUklaV3h3WlhJZ2NtVm5hWE4wWlhJZ2QybHNiQ0JrYVhOaGJXSnBaM1ZoZEdVZ2FHVnNjR1Z5SUd4dmIydDFjQ0JtY205dElHWnBibVJwYm1jZ1lWeHVMeThnWm5WdVkzUnBiMjRnYVc0Z1lTQmpiMjUwWlhoMExpQlVhR2x6SUdseklHNWxZMlZ6YzJGeWVTQm1iM0lnYlhWemRHRmphR1VnWTI5dGNHRjBhV0pwYkdsMGVTd2dkMmhwWTJoY2JpOHZJSEpsY1hWcGNtVnpJSFJvWVhRZ1kyOXVkR1Y0ZENCbWRXNWpkR2x2Ym5NZ2FXNGdZbXh2WTJ0eklHRnlaU0JsZG1Gc2RXRjBaV1FnWW5rZ1lteHZZMnRJWld4d1pYSk5hWE56YVc1bkxGeHVMeThnWVc1a0lIUm9aVzRnY0hKdlkyVmxaQ0JoY3lCcFppQjBhR1VnY21WemRXeDBhVzVuSUhaaGJIVmxJSGRoY3lCd2NtOTJhV1JsWkNCMGJ5QmliRzlqYTBobGJIQmxjazFwYzNOcGJtY3VYRzVjYmtOdmJYQnBiR1Z5TG5CeWIzUnZkSGx3WlNBOUlIdGNiaUFnWTI5dGNHbHNaWEk2SUVOdmJYQnBiR1Z5TEZ4dVhHNGdJR1Z4ZFdGc2N6b2dablZ1WTNScGIyNG9iM1JvWlhJcElIdGNiaUFnSUNCc1pYUWdiR1Z1SUQwZ2RHaHBjeTV2Y0dOdlpHVnpMbXhsYm1kMGFEdGNiaUFnSUNCcFppQW9iM1JvWlhJdWIzQmpiMlJsY3k1c1pXNW5kR2dnSVQwOUlHeGxiaWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdadmNpQW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNBZ0lHeGxkQ0J2Y0dOdlpHVWdQU0IwYUdsekxtOXdZMjlrWlhOYmFWMHNYRzRnSUNBZ0lDQWdJRzkwYUdWeVQzQmpiMlJsSUQwZ2IzUm9aWEl1YjNCamIyUmxjMXRwWFR0Y2JpQWdJQ0FnSUdsbUlDaGNiaUFnSUNBZ0lDQWdiM0JqYjJSbExtOXdZMjlrWlNBaFBUMGdiM1JvWlhKUGNHTnZaR1V1YjNCamIyUmxJSHg4WEc0Z0lDQWdJQ0FnSUNGaGNtZEZjWFZoYkhNb2IzQmpiMlJsTG1GeVozTXNJRzkwYUdWeVQzQmpiMlJsTG1GeVozTXBYRzRnSUNBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklGZGxJR3R1YjNjZ2RHaGhkQ0JzWlc1bmRHZ2dhWE1nZEdobElITmhiV1VnWW1WMGQyVmxiaUIwYUdVZ2RIZHZJR0Z5Y21GNWN5QmlaV05oZFhObElIUm9aWGtnWVhKbElHUnBjbVZqZEd4NUlIUnBaV1JjYmlBZ0lDQXZMeUIwYnlCMGFHVWdiM0JqYjJSbElHSmxhR0YyYVc5eUlHRmliM1psTGx4dUlDQWdJR3hsYmlBOUlIUm9hWE11WTJocGJHUnlaVzR1YkdWdVozUm9PMXh1SUNBZ0lHWnZjaUFvYkdWMElHa2dQU0F3T3lCcElEd2diR1Z1T3lCcEt5c3BJSHRjYmlBZ0lDQWdJR2xtSUNnaGRHaHBjeTVqYUdsc1pISmxibHRwWFM1bGNYVmhiSE1vYjNSb1pYSXVZMmhwYkdSeVpXNWJhVjBwS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZTeGNibHh1SUNCbmRXbGtPaUF3TEZ4dVhHNGdJR052YlhCcGJHVTZJR1oxYm1OMGFXOXVLSEJ5YjJkeVlXMHNJRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQjBhR2x6TG5OdmRYSmpaVTV2WkdVZ1BTQmJYVHRjYmlBZ0lDQjBhR2x6TG05d1kyOWtaWE1nUFNCYlhUdGNiaUFnSUNCMGFHbHpMbU5vYVd4a2NtVnVJRDBnVzEwN1hHNGdJQ0FnZEdocGN5NXZjSFJwYjI1eklEMGdiM0IwYVc5dWN6dGNiaUFnSUNCMGFHbHpMbk4wY21sdVoxQmhjbUZ0Y3lBOUlHOXdkR2x2Ym5NdWMzUnlhVzVuVUdGeVlXMXpPMXh1SUNBZ0lIUm9hWE11ZEhKaFkydEpaSE1nUFNCdmNIUnBiMjV6TG5SeVlXTnJTV1J6TzF4dVhHNGdJQ0FnYjNCMGFXOXVjeTVpYkc5amExQmhjbUZ0Y3lBOUlHOXdkR2x2Ym5NdVlteHZZMnRRWVhKaGJYTWdmSHdnVzEwN1hHNWNiaUFnSUNCdmNIUnBiMjV6TG10dWIzZHVTR1ZzY0dWeWN5QTlJR1Y0ZEdWdVpDaGNiaUFnSUNBZ0lFOWlhbVZqZEM1amNtVmhkR1VvYm5Wc2JDa3NYRzRnSUNBZ0lDQjdYRzRnSUNBZ0lDQWdJR2hsYkhCbGNrMXBjM05wYm1jNklIUnlkV1VzWEc0Z0lDQWdJQ0FnSUdKc2IyTnJTR1ZzY0dWeVRXbHpjMmx1WnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnWldGamFEb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2FXWTZJSFJ5ZFdVc1hHNGdJQ0FnSUNBZ0lIVnViR1Z6Y3pvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZDJsMGFEb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2JHOW5PaUIwY25WbExGeHVJQ0FnSUNBZ0lDQnNiMjlyZFhBNklIUnlkV1ZjYmlBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpMbXR1YjNkdVNHVnNjR1Z5YzF4dUlDQWdJQ2s3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aFkyTmxjSFFvY0hKdlozSmhiU2s3WEc0Z0lIMHNYRzVjYmlBZ1kyOXRjR2xzWlZCeWIyZHlZVzA2SUdaMWJtTjBhVzl1S0hCeWIyZHlZVzBwSUh0Y2JpQWdJQ0JzWlhRZ1kyaHBiR1JEYjIxd2FXeGxjaUE5SUc1bGR5QjBhR2x6TG1OdmJYQnBiR1Z5S0Nrc0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXeHBibVVnYm1WM0xXTmhjRnh1SUNBZ0lDQWdjbVZ6ZFd4MElEMGdZMmhwYkdSRGIyMXdhV3hsY2k1amIyMXdhV3hsS0hCeWIyZHlZVzBzSUhSb2FYTXViM0IwYVc5dWN5a3NYRzRnSUNBZ0lDQm5kV2xrSUQwZ2RHaHBjeTVuZFdsa0t5czdYRzVjYmlBZ0lDQjBhR2x6TG5WelpWQmhjblJwWVd3Z1BTQjBhR2x6TG5WelpWQmhjblJwWVd3Z2ZId2djbVZ6ZFd4MExuVnpaVkJoY25ScFlXdzdYRzVjYmlBZ0lDQjBhR2x6TG1Ob2FXeGtjbVZ1VzJkMWFXUmRJRDBnY21WemRXeDBPMXh1SUNBZ0lIUm9hWE11ZFhObFJHVndkR2h6SUQwZ2RHaHBjeTUxYzJWRVpYQjBhSE1nZkh3Z2NtVnpkV3gwTG5WelpVUmxjSFJvY3p0Y2JseHVJQ0FnSUhKbGRIVnliaUJuZFdsa08xeHVJQ0I5TEZ4dVhHNGdJR0ZqWTJWd2REb2dablZ1WTNScGIyNG9ibTlrWlNrZ2UxeHVJQ0FnSUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCdVpYaDBPaUJUWVc1cGRIa2dZMjlrWlNBcUwxeHVJQ0FnSUdsbUlDZ2hkR2hwYzF0dWIyUmxMblI1Y0dWZEtTQjdYRzRnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLQ2RWYm10dWIzZHVJSFI1Y0dVNklDY2dLeUJ1YjJSbExuUjVjR1VzSUc1dlpHVXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUm9hWE11YzI5MWNtTmxUbTlrWlM1MWJuTm9hV1owS0c1dlpHVXBPMXh1SUNBZ0lHeGxkQ0J5WlhRZ1BTQjBhR2x6VzI1dlpHVXVkSGx3WlYwb2JtOWtaU2s3WEc0Z0lDQWdkR2hwY3k1emIzVnlZMlZPYjJSbExuTm9hV1owS0NrN1hHNGdJQ0FnY21WMGRYSnVJSEpsZER0Y2JpQWdmU3hjYmx4dUlDQlFjbTluY21GdE9pQm1kVzVqZEdsdmJpaHdjbTluY21GdEtTQjdYRzRnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbUpzYjJOclVHRnlZVzF6TG5WdWMyaHBablFvY0hKdlozSmhiUzVpYkc5amExQmhjbUZ0Y3lrN1hHNWNiaUFnSUNCc1pYUWdZbTlrZVNBOUlIQnliMmR5WVcwdVltOWtlU3hjYmlBZ0lDQWdJR0p2WkhsTVpXNW5kR2dnUFNCaWIyUjVMbXhsYm1kMGFEdGNiaUFnSUNCbWIzSWdLR3hsZENCcElEMGdNRHNnYVNBOElHSnZaSGxNWlc1bmRHZzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVoWTJObGNIUW9ZbTlrZVZ0cFhTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbUpzYjJOclVHRnlZVzF6TG5Ob2FXWjBLQ2s3WEc1Y2JpQWdJQ0IwYUdsekxtbHpVMmx0Y0d4bElEMGdZbTlrZVV4bGJtZDBhQ0E5UFQwZ01UdGNiaUFnSUNCMGFHbHpMbUpzYjJOclVHRnlZVzF6SUQwZ2NISnZaM0poYlM1aWJHOWphMUJoY21GdGN5QS9JSEJ5YjJkeVlXMHVZbXh2WTJ0UVlYSmhiWE11YkdWdVozUm9JRG9nTUR0Y2JseHVJQ0FnSUhKbGRIVnliaUIwYUdsek8xeHVJQ0I5TEZ4dVhHNGdJRUpzYjJOclUzUmhkR1Z0Wlc1ME9pQm1kVzVqZEdsdmJpaGliRzlqYXlrZ2UxeHVJQ0FnSUhSeVlXNXpabTl5YlV4cGRHVnlZV3hVYjFCaGRHZ29ZbXh2WTJzcE8xeHVYRzRnSUNBZ2JHVjBJSEJ5YjJkeVlXMGdQU0JpYkc5amF5NXdjbTluY21GdExGeHVJQ0FnSUNBZ2FXNTJaWEp6WlNBOUlHSnNiMk5yTG1sdWRtVnljMlU3WEc1Y2JpQWdJQ0J3Y205bmNtRnRJRDBnY0hKdlozSmhiU0FtSmlCMGFHbHpMbU52YlhCcGJHVlFjbTluY21GdEtIQnliMmR5WVcwcE8xeHVJQ0FnSUdsdWRtVnljMlVnUFNCcGJuWmxjbk5sSUNZbUlIUm9hWE11WTI5dGNHbHNaVkJ5YjJkeVlXMG9hVzUyWlhKelpTazdYRzVjYmlBZ0lDQnNaWFFnZEhsd1pTQTlJSFJvYVhNdVkyeGhjM05wWm5sVFpYaHdjaWhpYkc5amF5azdYRzVjYmlBZ0lDQnBaaUFvZEhsd1pTQTlQVDBnSjJobGJIQmxjaWNwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVhR1ZzY0dWeVUyVjRjSElvWW14dlkyc3NJSEJ5YjJkeVlXMHNJR2x1ZG1WeWMyVXBPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3WlNBOVBUMGdKM05wYlhCc1pTY3BJSHRjYmlBZ0lDQWdJSFJvYVhNdWMybHRjR3hsVTJWNGNISW9ZbXh2WTJzcE8xeHVYRzRnSUNBZ0lDQXZMeUJ1YjNjZ2RHaGhkQ0IwYUdVZ2MybHRjR3hsSUcxMWMzUmhZMmhsSUdseklISmxjMjlzZG1Wa0xDQjNaU0J1WldWa0lIUnZYRzRnSUNBZ0lDQXZMeUJsZG1Gc2RXRjBaU0JwZENCaWVTQmxlR1ZqZFhScGJtY2dZR0pzYjJOclNHVnNjR1Z5VFdsemMybHVaMkJjYmlBZ0lDQWdJSFJvYVhNdWIzQmpiMlJsS0Nkd2RYTm9VSEp2WjNKaGJTY3NJSEJ5YjJkeVlXMHBPMXh1SUNBZ0lDQWdkR2hwY3k1dmNHTnZaR1VvSjNCMWMyaFFjbTluY21GdEp5d2dhVzUyWlhKelpTazdYRzRnSUNBZ0lDQjBhR2x6TG05d1kyOWtaU2duWlcxd2RIbElZWE5vSnlrN1hHNGdJQ0FnSUNCMGFHbHpMbTl3WTI5a1pTZ25ZbXh2WTJ0V1lXeDFaU2NzSUdKc2IyTnJMbkJoZEdndWIzSnBaMmx1WVd3cE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IwYUdsekxtRnRZbWxuZFc5MWMxTmxlSEJ5S0dKc2IyTnJMQ0J3Y205bmNtRnRMQ0JwYm5abGNuTmxLVHRjYmx4dUlDQWdJQ0FnTHk4Z2JtOTNJSFJvWVhRZ2RHaGxJSE5wYlhCc1pTQnRkWE4wWVdOb1pTQnBjeUJ5WlhOdmJIWmxaQ3dnZDJVZ2JtVmxaQ0IwYjF4dUlDQWdJQ0FnTHk4Z1pYWmhiSFZoZEdVZ2FYUWdZbmtnWlhobFkzVjBhVzVuSUdCaWJHOWphMGhsYkhCbGNrMXBjM05wYm1kZ1hHNGdJQ0FnSUNCMGFHbHpMbTl3WTI5a1pTZ25jSFZ6YUZCeWIyZHlZVzBuTENCd2NtOW5jbUZ0S1R0Y2JpQWdJQ0FnSUhSb2FYTXViM0JqYjJSbEtDZHdkWE5vVUhKdlozSmhiU2NzSUdsdWRtVnljMlVwTzF4dUlDQWdJQ0FnZEdocGN5NXZjR052WkdVb0oyVnRjSFI1U0dGemFDY3BPMXh1SUNBZ0lDQWdkR2hwY3k1dmNHTnZaR1VvSjJGdFltbG5kVzkxYzBKc2IyTnJWbUZzZFdVbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbTl3WTI5a1pTZ25ZWEJ3Wlc1a0p5azdYRzRnSUgwc1hHNWNiaUFnUkdWamIzSmhkRzl5UW14dlkyc29aR1ZqYjNKaGRHOXlLU0I3WEc0Z0lDQWdiR1YwSUhCeWIyZHlZVzBnUFNCa1pXTnZjbUYwYjNJdWNISnZaM0poYlNBbUppQjBhR2x6TG1OdmJYQnBiR1ZRY205bmNtRnRLR1JsWTI5eVlYUnZjaTV3Y205bmNtRnRLVHRjYmlBZ0lDQnNaWFFnY0dGeVlXMXpJRDBnZEdocGN5NXpaWFIxY0VaMWJHeE5kWE4wWVdOb1pWQmhjbUZ0Y3loa1pXTnZjbUYwYjNJc0lIQnliMmR5WVcwc0lIVnVaR1ZtYVc1bFpDa3NYRzRnSUNBZ0lDQndZWFJvSUQwZ1pHVmpiM0poZEc5eUxuQmhkR2c3WEc1Y2JpQWdJQ0IwYUdsekxuVnpaVVJsWTI5eVlYUnZjbk1nUFNCMGNuVmxPMXh1SUNBZ0lIUm9hWE11YjNCamIyUmxLQ2R5WldkcGMzUmxja1JsWTI5eVlYUnZjaWNzSUhCaGNtRnRjeTVzWlc1bmRHZ3NJSEJoZEdndWIzSnBaMmx1WVd3cE8xeHVJQ0I5TEZ4dVhHNGdJRkJoY25ScFlXeFRkR0YwWlcxbGJuUTZJR1oxYm1OMGFXOXVLSEJoY25ScFlXd3BJSHRjYmlBZ0lDQjBhR2x6TG5WelpWQmhjblJwWVd3Z1BTQjBjblZsTzF4dVhHNGdJQ0FnYkdWMElIQnliMmR5WVcwZ1BTQndZWEowYVdGc0xuQnliMmR5WVcwN1hHNGdJQ0FnYVdZZ0tIQnliMmR5WVcwcElIdGNiaUFnSUNBZ0lIQnliMmR5WVcwZ1BTQjBhR2x6TG1OdmJYQnBiR1ZRY205bmNtRnRLSEJoY25ScFlXd3VjSEp2WjNKaGJTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JHVjBJSEJoY21GdGN5QTlJSEJoY25ScFlXd3VjR0Z5WVcxek8xeHVJQ0FnSUdsbUlDaHdZWEpoYlhNdWJHVnVaM1JvSUQ0Z01Ta2dlMXh1SUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVY0WTJWd2RHbHZiaWhjYmlBZ0lDQWdJQ0FnSjFWdWMzVndjRzl5ZEdWa0lHNTFiV0psY2lCdlppQndZWEowYVdGc0lHRnlaM1Z0Wlc1MGN6b2dKeUFySUhCaGNtRnRjeTVzWlc1bmRHZ3NYRzRnSUNBZ0lDQWdJSEJoY25ScFlXeGNiaUFnSUNBZ0lDazdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDZ2hjR0Z5WVcxekxteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdWIzQjBhVzl1Y3k1bGVIQnNhV05wZEZCaGNuUnBZV3hEYjI1MFpYaDBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXViM0JqYjJSbEtDZHdkWE5vVEdsMFpYSmhiQ2NzSUNkMWJtUmxabWx1WldRbktUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIQmhjbUZ0Y3k1d2RYTm9LSHNnZEhsd1pUb2dKMUJoZEdoRmVIQnlaWE56YVc5dUp5d2djR0Z5ZEhNNklGdGRMQ0JrWlhCMGFEb2dNQ0I5S1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ2NHRnlkR2xoYkU1aGJXVWdQU0J3WVhKMGFXRnNMbTVoYldVdWIzSnBaMmx1WVd3c1hHNGdJQ0FnSUNCcGMwUjVibUZ0YVdNZ1BTQndZWEowYVdGc0xtNWhiV1V1ZEhsd1pTQTlQVDBnSjFOMVlrVjRjSEpsYzNOcGIyNG5PMXh1SUNBZ0lHbG1JQ2hwYzBSNWJtRnRhV01wSUh0Y2JpQWdJQ0FnSUhSb2FYTXVZV05qWlhCMEtIQmhjblJwWVd3dWJtRnRaU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1elpYUjFjRVoxYkd4TmRYTjBZV05vWlZCaGNtRnRjeWh3WVhKMGFXRnNMQ0J3Y205bmNtRnRMQ0IxYm1SbFptbHVaV1FzSUhSeWRXVXBPMXh1WEc0Z0lDQWdiR1YwSUdsdVpHVnVkQ0E5SUhCaGNuUnBZV3d1YVc1a1pXNTBJSHg4SUNjbk8xeHVJQ0FnSUdsbUlDaDBhR2x6TG05d2RHbHZibk11Y0hKbGRtVnVkRWx1WkdWdWRDQW1KaUJwYm1SbGJuUXBJSHRjYmlBZ0lDQWdJSFJvYVhNdWIzQmpiMlJsS0NkaGNIQmxibVJEYjI1MFpXNTBKeXdnYVc1a1pXNTBLVHRjYmlBZ0lDQWdJR2x1WkdWdWRDQTlJQ2NuTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdWIzQmpiMlJsS0NkcGJuWnZhMlZRWVhKMGFXRnNKeXdnYVhORWVXNWhiV2xqTENCd1lYSjBhV0ZzVG1GdFpTd2dhVzVrWlc1MEtUdGNiaUFnSUNCMGFHbHpMbTl3WTI5a1pTZ25ZWEJ3Wlc1a0p5azdYRzRnSUgwc1hHNGdJRkJoY25ScFlXeENiRzlqYTFOMFlYUmxiV1Z1ZERvZ1puVnVZM1JwYjI0b2NHRnlkR2xoYkVKc2IyTnJLU0I3WEc0Z0lDQWdkR2hwY3k1UVlYSjBhV0ZzVTNSaGRHVnRaVzUwS0hCaGNuUnBZV3hDYkc5amF5azdYRzRnSUgwc1hHNWNiaUFnVFhWemRHRmphR1ZUZEdGMFpXMWxiblE2SUdaMWJtTjBhVzl1S0cxMWMzUmhZMmhsS1NCN1hHNGdJQ0FnZEdocGN5NVRkV0pGZUhCeVpYTnphVzl1S0cxMWMzUmhZMmhsS1R0Y2JseHVJQ0FnSUdsbUlDaHRkWE4wWVdOb1pTNWxjMk5oY0dWa0lDWW1JQ0YwYUdsekxtOXdkR2x2Ym5NdWJtOUZjMk5oY0dVcElIdGNiaUFnSUNBZ0lIUm9hWE11YjNCamIyUmxLQ2RoY0hCbGJtUkZjMk5oY0dWa0p5azdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhSb2FYTXViM0JqYjJSbEtDZGhjSEJsYm1RbktUdGNiaUFnSUNCOVhHNGdJSDBzWEc0Z0lFUmxZMjl5WVhSdmNpaGtaV052Y21GMGIzSXBJSHRjYmlBZ0lDQjBhR2x6TGtSbFkyOXlZWFJ2Y2tKc2IyTnJLR1JsWTI5eVlYUnZjaWs3WEc0Z0lIMHNYRzVjYmlBZ1EyOXVkR1Z1ZEZOMFlYUmxiV1Z1ZERvZ1puVnVZM1JwYjI0b1kyOXVkR1Z1ZENrZ2UxeHVJQ0FnSUdsbUlDaGpiMjUwWlc1MExuWmhiSFZsS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbTl3WTI5a1pTZ25ZWEJ3Wlc1a1EyOXVkR1Z1ZENjc0lHTnZiblJsYm5RdWRtRnNkV1VwTzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCRGIyMXRaVzUwVTNSaGRHVnRaVzUwT2lCbWRXNWpkR2x2YmlncElIdDlMRnh1WEc0Z0lGTjFZa1Y0Y0hKbGMzTnBiMjQ2SUdaMWJtTjBhVzl1S0hObGVIQnlLU0I3WEc0Z0lDQWdkSEpoYm5ObWIzSnRUR2wwWlhKaGJGUnZVR0YwYUNoelpYaHdjaWs3WEc0Z0lDQWdiR1YwSUhSNWNHVWdQU0IwYUdsekxtTnNZWE56YVdaNVUyVjRjSElvYzJWNGNISXBPMXh1WEc0Z0lDQWdhV1lnS0hSNWNHVWdQVDA5SUNkemFXMXdiR1VuS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbk5wYlhCc1pWTmxlSEJ5S0hObGVIQnlLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFI1Y0dVZ1BUMDlJQ2RvWld4d1pYSW5LU0I3WEc0Z0lDQWdJQ0IwYUdsekxtaGxiSEJsY2xObGVIQnlLSE5sZUhCeUtUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnZEdocGN5NWhiV0pwWjNWdmRYTlRaWGh3Y2loelpYaHdjaWs3WEc0Z0lDQWdmVnh1SUNCOUxGeHVJQ0JoYldKcFozVnZkWE5UWlhod2Nqb2dablZ1WTNScGIyNG9jMlY0Y0hJc0lIQnliMmR5WVcwc0lHbHVkbVZ5YzJVcElIdGNiaUFnSUNCc1pYUWdjR0YwYUNBOUlITmxlSEJ5TG5CaGRHZ3NYRzRnSUNBZ0lDQnVZVzFsSUQwZ2NHRjBhQzV3WVhKMGMxc3dYU3hjYmlBZ0lDQWdJR2x6UW14dlkyc2dQU0J3Y205bmNtRnRJQ0U5SUc1MWJHd2dmSHdnYVc1MlpYSnpaU0FoUFNCdWRXeHNPMXh1WEc0Z0lDQWdkR2hwY3k1dmNHTnZaR1VvSjJkbGRFTnZiblJsZUhRbkxDQndZWFJvTG1SbGNIUm9LVHRjYmx4dUlDQWdJSFJvYVhNdWIzQmpiMlJsS0Nkd2RYTm9VSEp2WjNKaGJTY3NJSEJ5YjJkeVlXMHBPMXh1SUNBZ0lIUm9hWE11YjNCamIyUmxLQ2R3ZFhOb1VISnZaM0poYlNjc0lHbHVkbVZ5YzJVcE8xeHVYRzRnSUNBZ2NHRjBhQzV6ZEhKcFkzUWdQU0IwY25WbE8xeHVJQ0FnSUhSb2FYTXVZV05qWlhCMEtIQmhkR2dwTzF4dVhHNGdJQ0FnZEdocGN5NXZjR052WkdVb0oybHVkbTlyWlVGdFltbG5kVzkxY3ljc0lHNWhiV1VzSUdselFteHZZMnNwTzF4dUlDQjlMRnh1WEc0Z0lITnBiWEJzWlZObGVIQnlPaUJtZFc1amRHbHZiaWh6Wlhod2Npa2dlMXh1SUNBZ0lHeGxkQ0J3WVhSb0lEMGdjMlY0Y0hJdWNHRjBhRHRjYmlBZ0lDQndZWFJvTG5OMGNtbGpkQ0E5SUhSeWRXVTdYRzRnSUNBZ2RHaHBjeTVoWTJObGNIUW9jR0YwYUNrN1hHNGdJQ0FnZEdocGN5NXZjR052WkdVb0ozSmxjMjlzZG1WUWIzTnphV0pzWlV4aGJXSmtZU2NwTzF4dUlDQjlMRnh1WEc0Z0lHaGxiSEJsY2xObGVIQnlPaUJtZFc1amRHbHZiaWh6Wlhod2Npd2djSEp2WjNKaGJTd2dhVzUyWlhKelpTa2dlMXh1SUNBZ0lHeGxkQ0J3WVhKaGJYTWdQU0IwYUdsekxuTmxkSFZ3Um5Wc2JFMTFjM1JoWTJobFVHRnlZVzF6S0hObGVIQnlMQ0J3Y205bmNtRnRMQ0JwYm5abGNuTmxLU3hjYmlBZ0lDQWdJSEJoZEdnZ1BTQnpaWGh3Y2k1d1lYUm9MRnh1SUNBZ0lDQWdibUZ0WlNBOUlIQmhkR2d1Y0dGeWRITmJNRjA3WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTV2Y0hScGIyNXpMbXR1YjNkdVNHVnNjR1Z5YzF0dVlXMWxYU2tnZTF4dUlDQWdJQ0FnZEdocGN5NXZjR052WkdVb0oybHVkbTlyWlV0dWIzZHVTR1ZzY0dWeUp5d2djR0Z5WVcxekxteGxibWQwYUN3Z2JtRnRaU2s3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2gwYUdsekxtOXdkR2x2Ym5NdWEyNXZkMjVJWld4d1pYSnpUMjVzZVNrZ2UxeHVJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVjRZMlZ3ZEdsdmJpaGNiaUFnSUNBZ0lDQWdKMWx2ZFNCemNHVmphV1pwWldRZ2EyNXZkMjVJWld4d1pYSnpUMjVzZVN3Z1luVjBJSFZ6WldRZ2RHaGxJSFZ1YTI1dmQyNGdhR1ZzY0dWeUlDY2dLeUJ1WVcxbExGeHVJQ0FnSUNBZ0lDQnpaWGh3Y2x4dUlDQWdJQ0FnS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdjR0YwYUM1emRISnBZM1FnUFNCMGNuVmxPMXh1SUNBZ0lDQWdjR0YwYUM1bVlXeHplU0E5SUhSeWRXVTdYRzVjYmlBZ0lDQWdJSFJvYVhNdVlXTmpaWEIwS0hCaGRHZ3BPMXh1SUNBZ0lDQWdkR2hwY3k1dmNHTnZaR1VvWEc0Z0lDQWdJQ0FnSUNkcGJuWnZhMlZJWld4d1pYSW5MRnh1SUNBZ0lDQWdJQ0J3WVhKaGJYTXViR1Z1WjNSb0xGeHVJQ0FnSUNBZ0lDQndZWFJvTG05eWFXZHBibUZzTEZ4dUlDQWdJQ0FnSUNCQlUxUXVhR1ZzY0dWeWN5NXphVzF3YkdWSlpDaHdZWFJvS1Z4dUlDQWdJQ0FnS1R0Y2JpQWdJQ0I5WEc0Z0lIMHNYRzVjYmlBZ1VHRjBhRVY0Y0hKbGMzTnBiMjQ2SUdaMWJtTjBhVzl1S0hCaGRHZ3BJSHRjYmlBZ0lDQjBhR2x6TG1Ga1pFUmxjSFJvS0hCaGRHZ3VaR1Z3ZEdncE8xeHVJQ0FnSUhSb2FYTXViM0JqYjJSbEtDZG5aWFJEYjI1MFpYaDBKeXdnY0dGMGFDNWtaWEIwYUNrN1hHNWNiaUFnSUNCc1pYUWdibUZ0WlNBOUlIQmhkR2d1Y0dGeWRITmJNRjBzWEc0Z0lDQWdJQ0J6WTI5d1pXUWdQU0JCVTFRdWFHVnNjR1Z5Y3k1elkyOXdaV1JKWkNod1lYUm9LU3hjYmlBZ0lDQWdJR0pzYjJOclVHRnlZVzFKWkNBOUlDRndZWFJvTG1SbGNIUm9JQ1ltSUNGelkyOXdaV1FnSmlZZ2RHaHBjeTVpYkc5amExQmhjbUZ0U1c1a1pYZ29ibUZ0WlNrN1hHNWNiaUFnSUNCcFppQW9ZbXh2WTJ0UVlYSmhiVWxrS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbTl3WTI5a1pTZ25iRzl2YTNWd1FteHZZMnRRWVhKaGJTY3NJR0pzYjJOclVHRnlZVzFKWkN3Z2NHRjBhQzV3WVhKMGN5azdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDZ2hibUZ0WlNrZ2UxeHVJQ0FnSUNBZ0x5OGdRMjl1ZEdWNGRDQnlaV1psY21WdVkyVXNJR2t1WlM0Z1lIdDdabTl2SUM1OWZXQWdiM0lnWUh0N1ptOXZJQzR1ZlgxZ1hHNGdJQ0FnSUNCMGFHbHpMbTl3WTI5a1pTZ25jSFZ6YUVOdmJuUmxlSFFuS1R0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0hCaGRHZ3VaR0YwWVNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV2Y0hScGIyNXpMbVJoZEdFZ1BTQjBjblZsTzF4dUlDQWdJQ0FnZEdocGN5NXZjR052WkdVb0oyeHZiMnQxY0VSaGRHRW5MQ0J3WVhSb0xtUmxjSFJvTENCd1lYUm9MbkJoY25SekxDQndZWFJvTG5OMGNtbGpkQ2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lIUm9hWE11YjNCamIyUmxLRnh1SUNBZ0lDQWdJQ0FuYkc5dmEzVndUMjVEYjI1MFpYaDBKeXhjYmlBZ0lDQWdJQ0FnY0dGMGFDNXdZWEowY3l4Y2JpQWdJQ0FnSUNBZ2NHRjBhQzVtWVd4emVTeGNiaUFnSUNBZ0lDQWdjR0YwYUM1emRISnBZM1FzWEc0Z0lDQWdJQ0FnSUhOamIzQmxaRnh1SUNBZ0lDQWdLVHRjYmlBZ0lDQjlYRzRnSUgwc1hHNWNiaUFnVTNSeWFXNW5UR2wwWlhKaGJEb2dablZ1WTNScGIyNG9jM1J5YVc1bktTQjdYRzRnSUNBZ2RHaHBjeTV2Y0dOdlpHVW9KM0IxYzJoVGRISnBibWNuTENCemRISnBibWN1ZG1Gc2RXVXBPMXh1SUNCOUxGeHVYRzRnSUU1MWJXSmxja3hwZEdWeVlXdzZJR1oxYm1OMGFXOXVLRzUxYldKbGNpa2dlMXh1SUNBZ0lIUm9hWE11YjNCamIyUmxLQ2R3ZFhOb1RHbDBaWEpoYkNjc0lHNTFiV0psY2k1MllXeDFaU2s3WEc0Z0lIMHNYRzVjYmlBZ1FtOXZiR1ZoYmt4cGRHVnlZV3c2SUdaMWJtTjBhVzl1S0dKdmIyd3BJSHRjYmlBZ0lDQjBhR2x6TG05d1kyOWtaU2duY0hWemFFeHBkR1Z5WVd3bkxDQmliMjlzTG5aaGJIVmxLVHRjYmlBZ2ZTeGNibHh1SUNCVmJtUmxabWx1WldSTWFYUmxjbUZzT2lCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNCMGFHbHpMbTl3WTI5a1pTZ25jSFZ6YUV4cGRHVnlZV3duTENBbmRXNWtaV1pwYm1Wa0p5azdYRzRnSUgwc1hHNWNiaUFnVG5Wc2JFeHBkR1Z5WVd3NklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lIUm9hWE11YjNCamIyUmxLQ2R3ZFhOb1RHbDBaWEpoYkNjc0lDZHVkV3hzSnlrN1hHNGdJSDBzWEc1Y2JpQWdTR0Z6YURvZ1puVnVZM1JwYjI0b2FHRnphQ2tnZTF4dUlDQWdJR3hsZENCd1lXbHljeUE5SUdoaGMyZ3VjR0ZwY25Nc1hHNGdJQ0FnSUNCcElEMGdNQ3hjYmlBZ0lDQWdJR3dnUFNCd1lXbHljeTVzWlc1bmRHZzdYRzVjYmlBZ0lDQjBhR2x6TG05d1kyOWtaU2duY0hWemFFaGhjMmduS1R0Y2JseHVJQ0FnSUdadmNpQW9PeUJwSUR3Z2JEc2dhU3NyS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbkIxYzJoUVlYSmhiU2h3WVdseWMxdHBYUzUyWVd4MVpTazdYRzRnSUNBZ2ZWeHVJQ0FnSUhkb2FXeGxJQ2hwTFMwcElIdGNiaUFnSUNBZ0lIUm9hWE11YjNCamIyUmxLQ2RoYzNOcFoyNVViMGhoYzJnbkxDQndZV2x5YzF0cFhTNXJaWGtwTzF4dUlDQWdJSDFjYmlBZ0lDQjBhR2x6TG05d1kyOWtaU2duY0c5d1NHRnphQ2NwTzF4dUlDQjlMRnh1WEc0Z0lDOHZJRWhGVEZCRlVsTmNiaUFnYjNCamIyUmxPaUJtZFc1amRHbHZiaWh1WVcxbEtTQjdYRzRnSUNBZ2RHaHBjeTV2Y0dOdlpHVnpMbkIxYzJnb2UxeHVJQ0FnSUNBZ2IzQmpiMlJsT2lCdVlXMWxMRnh1SUNBZ0lDQWdZWEpuY3pvZ2MyeHBZMlV1WTJGc2JDaGhjbWQxYldWdWRITXNJREVwTEZ4dUlDQWdJQ0FnYkc5ak9pQjBhR2x6TG5OdmRYSmpaVTV2WkdWYk1GMHViRzlqWEc0Z0lDQWdmU2s3WEc0Z0lIMHNYRzVjYmlBZ1lXUmtSR1Z3ZEdnNklHWjFibU4wYVc5dUtHUmxjSFJvS1NCN1hHNGdJQ0FnYVdZZ0tDRmtaWEIwYUNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvYVhNdWRYTmxSR1Z3ZEdoeklEMGdkSEoxWlR0Y2JpQWdmU3hjYmx4dUlDQmpiR0Z6YzJsbWVWTmxlSEJ5T2lCbWRXNWpkR2x2YmloelpYaHdjaWtnZTF4dUlDQWdJR3hsZENCcGMxTnBiWEJzWlNBOUlFRlRWQzVvWld4d1pYSnpMbk5wYlhCc1pVbGtLSE5sZUhCeUxuQmhkR2dwTzF4dVhHNGdJQ0FnYkdWMElHbHpRbXh2WTJ0UVlYSmhiU0E5SUdselUybHRjR3hsSUNZbUlDRWhkR2hwY3k1aWJHOWphMUJoY21GdFNXNWtaWGdvYzJWNGNISXVjR0YwYUM1d1lYSjBjMXN3WFNrN1hHNWNiaUFnSUNBdkx5QmhJRzExYzNSaFkyaGxJR2x6SUdGdUlHVnNhV2RwWW14bElHaGxiSEJsY2lCcFpqcGNiaUFnSUNBdkx5QXFJR2wwY3lCcFpDQnBjeUJ6YVcxd2JHVWdLR0VnYzJsdVoyeGxJSEJoY25Rc0lHNXZkQ0JnZEdocGMyQWdiM0lnWUM0dVlDbGNiaUFnSUNCc1pYUWdhWE5JWld4d1pYSWdQU0FoYVhOQ2JHOWphMUJoY21GdElDWW1JRUZUVkM1b1pXeHdaWEp6TG1obGJIQmxja1Y0Y0hKbGMzTnBiMjRvYzJWNGNISXBPMXh1WEc0Z0lDQWdMeThnYVdZZ1lTQnRkWE4wWVdOb1pTQnBjeUJoYmlCbGJHbG5hV0pzWlNCb1pXeHdaWElnWW5WMElHNXZkQ0JoSUdSbFptbHVhWFJsWEc0Z0lDQWdMeThnYUdWc2NHVnlMQ0JwZENCcGN5QmhiV0pwWjNWdmRYTXNJR0Z1WkNCM2FXeHNJR0psSUhKbGMyOXNkbVZrSUdsdUlHRWdiR0YwWlhKY2JpQWdJQ0F2THlCd1lYTnpJRzl5SUdGMElISjFiblJwYldVdVhHNGdJQ0FnYkdWMElHbHpSV3hwWjJsaWJHVWdQU0FoYVhOQ2JHOWphMUJoY21GdElDWW1JQ2hwYzBobGJIQmxjaUI4ZkNCcGMxTnBiWEJzWlNrN1hHNWNiaUFnSUNBdkx5QnBaaUJoYldKcFozVnZkWE1zSUhkbElHTmhiaUJ3YjNOemFXSnNlU0J5WlhOdmJIWmxJSFJvWlNCaGJXSnBaM1ZwZEhrZ2JtOTNYRzRnSUNBZ0x5OGdRVzRnWld4cFoybGliR1VnYUdWc2NHVnlJR2x6SUc5dVpTQjBhR0YwSUdSdlpYTWdibTkwSUdoaGRtVWdZU0JqYjIxd2JHVjRJSEJoZEdnc0lHa3VaUzRnWUhSb2FYTXVabTl2WUN3Z1lDNHVMMlp2YjJBZ1pYUmpMbHh1SUNBZ0lHbG1JQ2hwYzBWc2FXZHBZbXhsSUNZbUlDRnBjMGhsYkhCbGNpa2dlMXh1SUNBZ0lDQWdiR1YwSUc1aGJXVWdQU0J6Wlhod2NpNXdZWFJvTG5CaGNuUnpXekJkTEZ4dUlDQWdJQ0FnSUNCdmNIUnBiMjV6SUQwZ2RHaHBjeTV2Y0hScGIyNXpPMXh1SUNBZ0lDQWdhV1lnS0c5d2RHbHZibk11YTI1dmQyNUlaV3h3WlhKelcyNWhiV1ZkS1NCN1hHNGdJQ0FnSUNBZ0lHbHpTR1ZzY0dWeUlEMGdkSEoxWlR0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2IzQjBhVzl1Y3k1cmJtOTNia2hsYkhCbGNuTlBibXg1S1NCN1hHNGdJQ0FnSUNBZ0lHbHpSV3hwWjJsaWJHVWdQU0JtWVd4elpUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9hWE5JWld4d1pYSXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQW5hR1ZzY0dWeUp6dGNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tHbHpSV3hwWjJsaWJHVXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQW5ZVzFpYVdkMWIzVnpKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUNkemFXMXdiR1VuTzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCd2RYTm9VR0Z5WVcxek9pQm1kVzVqZEdsdmJpaHdZWEpoYlhNcElIdGNiaUFnSUNCbWIzSWdLR3hsZENCcElEMGdNQ3dnYkNBOUlIQmhjbUZ0Y3k1c1pXNW5kR2c3SUdrZ1BDQnNPeUJwS3lzcElIdGNiaUFnSUNBZ0lIUm9hWE11Y0hWemFGQmhjbUZ0S0hCaGNtRnRjMXRwWFNrN1hHNGdJQ0FnZlZ4dUlDQjlMRnh1WEc0Z0lIQjFjMmhRWVhKaGJUb2dablZ1WTNScGIyNG9kbUZzS1NCN1hHNGdJQ0FnYkdWMElIWmhiSFZsSUQwZ2RtRnNMblpoYkhWbElDRTlJRzUxYkd3Z1B5QjJZV3d1ZG1Gc2RXVWdPaUIyWVd3dWIzSnBaMmx1WVd3Z2ZId2dKeWM3WEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTV6ZEhKcGJtZFFZWEpoYlhNcElIdGNiaUFnSUNBZ0lHbG1JQ2gyWVd4MVpTNXlaWEJzWVdObEtTQjdYRzRnSUNBZ0lDQWdJSFpoYkhWbElEMGdkbUZzZFdVdWNtVndiR0ZqWlNndlhpaGNYQzQvWEZ3dVhGd3ZLU292Wnl3Z0p5Y3BMbkpsY0d4aFkyVW9MMXhjTHk5bkxDQW5MaWNwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9kbUZzTG1SbGNIUm9LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZV1JrUkdWd2RHZ29kbUZzTG1SbGNIUm9LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFJvYVhNdWIzQmpiMlJsS0NkblpYUkRiMjUwWlhoMEp5d2dkbUZzTG1SbGNIUm9JSHg4SURBcE8xeHVJQ0FnSUNBZ2RHaHBjeTV2Y0dOdlpHVW9KM0IxYzJoVGRISnBibWRRWVhKaGJTY3NJSFpoYkhWbExDQjJZV3d1ZEhsd1pTazdYRzVjYmlBZ0lDQWdJR2xtSUNoMllXd3VkSGx3WlNBOVBUMGdKMU4xWWtWNGNISmxjM05wYjI0bktTQjdYRzRnSUNBZ0lDQWdJQzh2SUZOMVlrVjRjSEpsYzNOcGIyNXpJR2RsZENCbGRtRnNkV0YwWldRZ1lXNWtJSEJoYzNObFpDQnBibHh1SUNBZ0lDQWdJQ0F2THlCcGJpQnpkSEpwYm1jZ2NHRnlZVzF6SUcxdlpHVXVYRzRnSUNBZ0lDQWdJSFJvYVhNdVlXTmpaWEIwS0haaGJDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TG5SeVlXTnJTV1J6S1NCN1hHNGdJQ0FnSUNBZ0lHeGxkQ0JpYkc5amExQmhjbUZ0U1c1a1pYZzdYRzRnSUNBZ0lDQWdJR2xtSUNoMllXd3VjR0Z5ZEhNZ0ppWWdJVUZUVkM1b1pXeHdaWEp6TG5OamIzQmxaRWxrS0haaGJDa2dKaVlnSVhaaGJDNWtaWEIwYUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJR0pzYjJOclVHRnlZVzFKYm1SbGVDQTlJSFJvYVhNdVlteHZZMnRRWVhKaGJVbHVaR1Y0S0haaGJDNXdZWEowYzFzd1hTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYVdZZ0tHSnNiMk5yVUdGeVlXMUpibVJsZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJR3hsZENCaWJHOWphMUJoY21GdFEyaHBiR1FnUFNCMllXd3VjR0Z5ZEhNdWMyeHBZMlVvTVNrdWFtOXBiaWduTGljcE8xeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWIzQmpiMlJsS0Nkd2RYTm9TV1FuTENBblFteHZZMnRRWVhKaGJTY3NJR0pzYjJOclVHRnlZVzFKYm1SbGVDd2dZbXh2WTJ0UVlYSmhiVU5vYVd4a0tUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0IyWVd4MVpTQTlJSFpoYkM1dmNtbG5hVzVoYkNCOGZDQjJZV3gxWlR0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVXVjbVZ3YkdGalpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1VnUFNCMllXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpTZ3ZYblJvYVhNb1B6cGNYQzU4SkNrdkxDQW5KeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdMbkpsY0d4aFkyVW9MMTVjWEM1Y1hDOHZMQ0FuSnlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnTG5KbGNHeGhZMlVvTDE1Y1hDNGtMeXdnSnljcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11YjNCamIyUmxLQ2R3ZFhOb1NXUW5MQ0IyWVd3dWRIbHdaU3dnZG1Gc2RXVXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0IwYUdsekxtRmpZMlZ3ZENoMllXd3BPMXh1SUNBZ0lIMWNiaUFnZlN4Y2JseHVJQ0J6WlhSMWNFWjFiR3hOZFhOMFlXTm9aVkJoY21GdGN6b2dablZ1WTNScGIyNG9jMlY0Y0hJc0lIQnliMmR5WVcwc0lHbHVkbVZ5YzJVc0lHOXRhWFJGYlhCMGVTa2dlMXh1SUNBZ0lHeGxkQ0J3WVhKaGJYTWdQU0J6Wlhod2NpNXdZWEpoYlhNN1hHNGdJQ0FnZEdocGN5NXdkWE5vVUdGeVlXMXpLSEJoY21GdGN5azdYRzVjYmlBZ0lDQjBhR2x6TG05d1kyOWtaU2duY0hWemFGQnliMmR5WVcwbkxDQndjbTluY21GdEtUdGNiaUFnSUNCMGFHbHpMbTl3WTI5a1pTZ25jSFZ6YUZCeWIyZHlZVzBuTENCcGJuWmxjbk5sS1R0Y2JseHVJQ0FnSUdsbUlDaHpaWGh3Y2k1b1lYTm9LU0I3WEc0Z0lDQWdJQ0IwYUdsekxtRmpZMlZ3ZENoelpYaHdjaTVvWVhOb0tUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnZEdocGN5NXZjR052WkdVb0oyVnRjSFI1U0dGemFDY3NJRzl0YVhSRmJYQjBlU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlIQmhjbUZ0Y3p0Y2JpQWdmU3hjYmx4dUlDQmliRzlqYTFCaGNtRnRTVzVrWlhnNklHWjFibU4wYVc5dUtHNWhiV1VwSUh0Y2JpQWdJQ0JtYjNJZ0tGeHVJQ0FnSUNBZ2JHVjBJR1JsY0hSb0lEMGdNQ3dnYkdWdUlEMGdkR2hwY3k1dmNIUnBiMjV6TG1Kc2IyTnJVR0Z5WVcxekxteGxibWQwYUR0Y2JpQWdJQ0FnSUdSbGNIUm9JRHdnYkdWdU8xeHVJQ0FnSUNBZ1pHVndkR2dySzF4dUlDQWdJQ2tnZTF4dUlDQWdJQ0FnYkdWMElHSnNiMk5yVUdGeVlXMXpJRDBnZEdocGN5NXZjSFJwYjI1ekxtSnNiMk5yVUdGeVlXMXpXMlJsY0hSb1hTeGNiaUFnSUNBZ0lDQWdjR0Z5WVcwZ1BTQmliRzlqYTFCaGNtRnRjeUFtSmlCcGJtUmxlRTltS0dKc2IyTnJVR0Z5WVcxekxDQnVZVzFsS1R0Y2JpQWdJQ0FnSUdsbUlDaGliRzlqYTFCaGNtRnRjeUFtSmlCd1lYSmhiU0ErUFNBd0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmJaR1Z3ZEdnc0lIQmhjbUZ0WFR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjA3WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCd2NtVmpiMjF3YVd4bEtHbHVjSFYwTENCdmNIUnBiMjV6TENCbGJuWXBJSHRjYmlBZ2FXWWdLRnh1SUNBZ0lHbHVjSFYwSUQwOUlHNTFiR3dnZkh4Y2JpQWdJQ0FvZEhsd1pXOW1JR2x1Y0hWMElDRTlQU0FuYzNSeWFXNW5KeUFtSmlCcGJuQjFkQzUwZVhCbElDRTlQU0FuVUhKdlozSmhiU2NwWEc0Z0lDa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZlR05sY0hScGIyNG9YRzRnSUNBZ0lDQW5XVzkxSUcxMWMzUWdjR0Z6Y3lCaElITjBjbWx1WnlCdmNpQklZVzVrYkdWaVlYSnpJRUZUVkNCMGJ5QklZVzVrYkdWaVlYSnpMbkJ5WldOdmJYQnBiR1V1SUZsdmRTQndZWE56WldRZ0p5QXJYRzRnSUNBZ0lDQWdJR2x1Y0hWMFhHNGdJQ0FnS1R0Y2JpQWdmVnh1WEc0Z0lHOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1eklIeDhJSHQ5TzF4dUlDQnBaaUFvSVNnblpHRjBZU2NnYVc0Z2IzQjBhVzl1Y3lrcElIdGNiaUFnSUNCdmNIUnBiMjV6TG1SaGRHRWdQU0IwY25WbE8xeHVJQ0I5WEc0Z0lHbG1JQ2h2Y0hScGIyNXpMbU52YlhCaGRDa2dlMXh1SUNBZ0lHOXdkR2x2Ym5NdWRYTmxSR1Z3ZEdoeklEMGdkSEoxWlR0Y2JpQWdmVnh1WEc0Z0lHeGxkQ0JoYzNRZ1BTQmxibll1Y0dGeWMyVW9hVzV3ZFhRc0lHOXdkR2x2Ym5NcExGeHVJQ0FnSUdWdWRtbHliMjV0Wlc1MElEMGdibVYzSUdWdWRpNURiMjF3YVd4bGNpZ3BMbU52YlhCcGJHVW9ZWE4wTENCdmNIUnBiMjV6S1R0Y2JpQWdjbVYwZFhKdUlHNWxkeUJsYm5ZdVNtRjJZVk5qY21sd2RFTnZiWEJwYkdWeUtDa3VZMjl0Y0dsc1pTaGxiblpwY205dWJXVnVkQ3dnYjNCMGFXOXVjeWs3WEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpiMjF3YVd4bEtHbHVjSFYwTENCdmNIUnBiMjV6SUQwZ2UzMHNJR1Z1ZGlrZ2UxeHVJQ0JwWmlBb1hHNGdJQ0FnYVc1d2RYUWdQVDBnYm5Wc2JDQjhmRnh1SUNBZ0lDaDBlWEJsYjJZZ2FXNXdkWFFnSVQwOUlDZHpkSEpwYm1jbklDWW1JR2x1Y0hWMExuUjVjR1VnSVQwOUlDZFFjbTluY21GdEp5bGNiaUFnS1NCN1hHNGdJQ0FnZEdoeWIzY2dibVYzSUVWNFkyVndkR2x2YmloY2JpQWdJQ0FnSUNkWmIzVWdiWFZ6ZENCd1lYTnpJR0VnYzNSeWFXNW5JRzl5SUVoaGJtUnNaV0poY25NZ1FWTlVJSFJ2SUVoaGJtUnNaV0poY25NdVkyOXRjR2xzWlM0Z1dXOTFJSEJoYzNObFpDQW5JQ3RjYmlBZ0lDQWdJQ0FnYVc1d2RYUmNiaUFnSUNBcE8xeHVJQ0I5WEc1Y2JpQWdiM0IwYVc5dWN5QTlJR1Y0ZEdWdVpDaDdmU3dnYjNCMGFXOXVjeWs3WEc0Z0lHbG1JQ2doS0Nka1lYUmhKeUJwYmlCdmNIUnBiMjV6S1NrZ2UxeHVJQ0FnSUc5d2RHbHZibk11WkdGMFlTQTlJSFJ5ZFdVN1hHNGdJSDFjYmlBZ2FXWWdLRzl3ZEdsdmJuTXVZMjl0Y0dGMEtTQjdYRzRnSUNBZ2IzQjBhVzl1Y3k1MWMyVkVaWEIwYUhNZ1BTQjBjblZsTzF4dUlDQjlYRzVjYmlBZ2JHVjBJR052YlhCcGJHVmtPMXh1WEc0Z0lHWjFibU4wYVc5dUlHTnZiWEJwYkdWSmJuQjFkQ2dwSUh0Y2JpQWdJQ0JzWlhRZ1lYTjBJRDBnWlc1MkxuQmhjbk5sS0dsdWNIVjBMQ0J2Y0hScGIyNXpLU3hjYmlBZ0lDQWdJR1Z1ZG1seWIyNXRaVzUwSUQwZ2JtVjNJR1Z1ZGk1RGIyMXdhV3hsY2lncExtTnZiWEJwYkdVb1lYTjBMQ0J2Y0hScGIyNXpLU3hjYmlBZ0lDQWdJSFJsYlhCc1lYUmxVM0JsWXlBOUlHNWxkeUJsYm5ZdVNtRjJZVk5qY21sd2RFTnZiWEJwYkdWeUtDa3VZMjl0Y0dsc1pTaGNiaUFnSUNBZ0lDQWdaVzUyYVhKdmJtMWxiblFzWEc0Z0lDQWdJQ0FnSUc5d2RHbHZibk1zWEc0Z0lDQWdJQ0FnSUhWdVpHVm1hVzVsWkN4Y2JpQWdJQ0FnSUNBZ2RISjFaVnh1SUNBZ0lDQWdLVHRjYmlBZ0lDQnlaWFIxY200Z1pXNTJMblJsYlhCc1lYUmxLSFJsYlhCc1lYUmxVM0JsWXlrN1hHNGdJSDFjYmx4dUlDQXZMeUJVWlcxd2JHRjBaU0JwY3lCdmJteDVJR052YlhCcGJHVmtJRzl1SUdacGNuTjBJSFZ6WlNCaGJtUWdZMkZqYUdWa0lHRm1kR1Z5SUhSb1lYUWdjRzlwYm5RdVhHNGdJR1oxYm1OMGFXOXVJSEpsZENoamIyNTBaWGgwTENCbGVHVmpUM0IwYVc5dWN5a2dlMXh1SUNBZ0lHbG1JQ2doWTI5dGNHbHNaV1FwSUh0Y2JpQWdJQ0FnSUdOdmJYQnBiR1ZrSUQwZ1kyOXRjR2xzWlVsdWNIVjBLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCamIyMXdhV3hsWkM1allXeHNLSFJvYVhNc0lHTnZiblJsZUhRc0lHVjRaV05QY0hScGIyNXpLVHRjYmlBZ2ZWeHVJQ0J5WlhRdVgzTmxkSFZ3SUQwZ1puVnVZM1JwYjI0b2MyVjBkWEJQY0hScGIyNXpLU0I3WEc0Z0lDQWdhV1lnS0NGamIyMXdhV3hsWkNrZ2UxeHVJQ0FnSUNBZ1kyOXRjR2xzWldRZ1BTQmpiMjF3YVd4bFNXNXdkWFFvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHTnZiWEJwYkdWa0xsOXpaWFIxY0NoelpYUjFjRTl3ZEdsdmJuTXBPMXh1SUNCOU8xeHVJQ0J5WlhRdVgyTm9hV3hrSUQwZ1puVnVZM1JwYjI0b2FTd2daR0YwWVN3Z1lteHZZMnRRWVhKaGJYTXNJR1JsY0hSb2N5a2dlMXh1SUNBZ0lHbG1JQ2doWTI5dGNHbHNaV1FwSUh0Y2JpQWdJQ0FnSUdOdmJYQnBiR1ZrSUQwZ1kyOXRjR2xzWlVsdWNIVjBLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCamIyMXdhV3hsWkM1ZlkyaHBiR1FvYVN3Z1pHRjBZU3dnWW14dlkydFFZWEpoYlhNc0lHUmxjSFJvY3lrN1hHNGdJSDA3WEc0Z0lISmxkSFZ5YmlCeVpYUTdYRzU5WEc1Y2JtWjFibU4wYVc5dUlHRnlaMFZ4ZFdGc2N5aGhMQ0JpS1NCN1hHNGdJR2xtSUNoaElEMDlQU0JpS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNGdJSDFjYmx4dUlDQnBaaUFvYVhOQmNuSmhlU2hoS1NBbUppQnBjMEZ5Y21GNUtHSXBJQ1ltSUdFdWJHVnVaM1JvSUQwOVBTQmlMbXhsYm1kMGFDa2dlMXh1SUNBZ0lHWnZjaUFvYkdWMElHa2dQU0F3T3lCcElEd2dZUzVzWlc1bmRHZzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ2FXWWdLQ0ZoY21kRmNYVmhiSE1vWVZ0cFhTd2dZbHRwWFNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZWeHVmVnh1WEc1bWRXNWpkR2x2YmlCMGNtRnVjMlp2Y20xTWFYUmxjbUZzVkc5UVlYUm9LSE5sZUhCeUtTQjdYRzRnSUdsbUlDZ2hjMlY0Y0hJdWNHRjBhQzV3WVhKMGN5a2dlMXh1SUNBZ0lHeGxkQ0JzYVhSbGNtRnNJRDBnYzJWNGNISXVjR0YwYUR0Y2JpQWdJQ0F2THlCRFlYTjBhVzVuSUhSdklITjBjbWx1WnlCb1pYSmxJSFJ2SUcxaGEyVWdabUZzYzJVZ1lXNWtJREFnYkdsMFpYSmhiQ0IyWVd4MVpYTWdjR3hoZVNCdWFXTmxiSGtnZDJsMGFDQjBhR1VnY21WemRGeHVJQ0FnSUM4dklHOW1JSFJvWlNCemVYTjBaVzB1WEc0Z0lDQWdjMlY0Y0hJdWNHRjBhQ0E5SUh0Y2JpQWdJQ0FnSUhSNWNHVTZJQ2RRWVhSb1JYaHdjbVZ6YzJsdmJpY3NYRzRnSUNBZ0lDQmtZWFJoT2lCbVlXeHpaU3hjYmlBZ0lDQWdJR1JsY0hSb09pQXdMRnh1SUNBZ0lDQWdjR0Z5ZEhNNklGdHNhWFJsY21Gc0xtOXlhV2RwYm1Gc0lDc2dKeWRkTEZ4dUlDQWdJQ0FnYjNKcFoybHVZV3c2SUd4cGRHVnlZV3d1YjNKcFoybHVZV3dnS3lBbkp5eGNiaUFnSUNBZ0lHeHZZem9nYkdsMFpYSmhiQzVzYjJOY2JpQWdJQ0I5TzF4dUlDQjlYRzU5WEc0aVhYMD1cbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbi8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblxudmFyIF9iYXNlID0gcmVxdWlyZSgnLi4vYmFzZScpO1xuXG52YXIgX2V4Y2VwdGlvbiA9IHJlcXVpcmUoJy4uL2V4Y2VwdGlvbicpO1xuXG52YXIgX2V4Y2VwdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxudmFyIF9jb2RlR2VuID0gcmVxdWlyZSgnLi9jb2RlLWdlbicpO1xuXG52YXIgX2NvZGVHZW4yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY29kZUdlbik7XG5cbmZ1bmN0aW9uIExpdGVyYWwodmFsdWUpIHtcbiAgdGhpcy52YWx1ZSA9IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBKYXZhU2NyaXB0Q29tcGlsZXIoKSB7fVxuXG5KYXZhU2NyaXB0Q29tcGlsZXIucHJvdG90eXBlID0ge1xuICAvLyBQVUJMSUMgQVBJOiBZb3UgY2FuIG92ZXJyaWRlIHRoZXNlIG1ldGhvZHMgaW4gYSBzdWJjbGFzcyB0byBwcm92aWRlXG4gIC8vIGFsdGVybmF0aXZlIGNvbXBpbGVkIGZvcm1zIGZvciBuYW1lIGxvb2t1cCBhbmQgYnVmZmVyaW5nIHNlbWFudGljc1xuICBuYW1lTG9va3VwOiBmdW5jdGlvbiBuYW1lTG9va3VwKHBhcmVudCwgbmFtZSAvKiwgIHR5cGUgKi8pIHtcbiAgICByZXR1cm4gdGhpcy5pbnRlcm5hbE5hbWVMb29rdXAocGFyZW50LCBuYW1lKTtcbiAgfSxcbiAgZGVwdGhlZExvb2t1cDogZnVuY3Rpb24gZGVwdGhlZExvb2t1cChuYW1lKSB7XG4gICAgcmV0dXJuIFt0aGlzLmFsaWFzYWJsZSgnY29udGFpbmVyLmxvb2t1cCcpLCAnKGRlcHRocywgJywgSlNPTi5zdHJpbmdpZnkobmFtZSksICcpJ107XG4gIH0sXG5cbiAgY29tcGlsZXJJbmZvOiBmdW5jdGlvbiBjb21waWxlckluZm8oKSB7XG4gICAgdmFyIHJldmlzaW9uID0gX2Jhc2UuQ09NUElMRVJfUkVWSVNJT04sXG4gICAgICAgIHZlcnNpb25zID0gX2Jhc2UuUkVWSVNJT05fQ0hBTkdFU1tyZXZpc2lvbl07XG4gICAgcmV0dXJuIFtyZXZpc2lvbiwgdmVyc2lvbnNdO1xuICB9LFxuXG4gIGFwcGVuZFRvQnVmZmVyOiBmdW5jdGlvbiBhcHBlbmRUb0J1ZmZlcihzb3VyY2UsIGxvY2F0aW9uLCBleHBsaWNpdCkge1xuICAgIC8vIEZvcmNlIGEgc291cmNlIGFzIHRoaXMgc2ltcGxpZmllcyB0aGUgbWVyZ2UgbG9naWMuXG4gICAgaWYgKCFfdXRpbHMuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICBzb3VyY2UgPSBbc291cmNlXTtcbiAgICB9XG4gICAgc291cmNlID0gdGhpcy5zb3VyY2Uud3JhcChzb3VyY2UsIGxvY2F0aW9uKTtcblxuICAgIGlmICh0aGlzLmVudmlyb25tZW50LmlzU2ltcGxlKSB7XG4gICAgICByZXR1cm4gWydyZXR1cm4gJywgc291cmNlLCAnOyddO1xuICAgIH0gZWxzZSBpZiAoZXhwbGljaXQpIHtcbiAgICAgIC8vIFRoaXMgaXMgYSBjYXNlIHdoZXJlIHRoZSBidWZmZXIgb3BlcmF0aW9uIG9jY3VycyBhcyBhIGNoaWxkIG9mIGFub3RoZXJcbiAgICAgIC8vIGNvbnN0cnVjdCwgZ2VuZXJhbGx5IGJyYWNlcy4gV2UgaGF2ZSB0byBleHBsaWNpdGx5IG91dHB1dCB0aGVzZSBidWZmZXJcbiAgICAgIC8vIG9wZXJhdGlvbnMgdG8gZW5zdXJlIHRoYXQgdGhlIGVtaXR0ZWQgY29kZSBnb2VzIGluIHRoZSBjb3JyZWN0IGxvY2F0aW9uLlxuICAgICAgcmV0dXJuIFsnYnVmZmVyICs9ICcsIHNvdXJjZSwgJzsnXTtcbiAgICB9IGVsc2Uge1xuICAgICAgc291cmNlLmFwcGVuZFRvQnVmZmVyID0gdHJ1ZTtcbiAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfVxuICB9LFxuXG4gIGluaXRpYWxpemVCdWZmZXI6IGZ1bmN0aW9uIGluaXRpYWxpemVCdWZmZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVvdGVkU3RyaW5nKCcnKTtcbiAgfSxcbiAgLy8gRU5EIFBVQkxJQyBBUElcbiAgaW50ZXJuYWxOYW1lTG9va3VwOiBmdW5jdGlvbiBpbnRlcm5hbE5hbWVMb29rdXAocGFyZW50LCBuYW1lKSB7XG4gICAgdGhpcy5sb29rdXBQcm9wZXJ0eUZ1bmN0aW9uSXNVc2VkID0gdHJ1ZTtcbiAgICByZXR1cm4gWydsb29rdXBQcm9wZXJ0eSgnLCBwYXJlbnQsICcsJywgSlNPTi5zdHJpbmdpZnkobmFtZSksICcpJ107XG4gIH0sXG5cbiAgbG9va3VwUHJvcGVydHlGdW5jdGlvbklzVXNlZDogZmFsc2UsXG5cbiAgY29tcGlsZTogZnVuY3Rpb24gY29tcGlsZShlbnZpcm9ubWVudCwgb3B0aW9ucywgY29udGV4dCwgYXNPYmplY3QpIHtcbiAgICB0aGlzLmVudmlyb25tZW50ID0gZW52aXJvbm1lbnQ7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB0aGlzLnN0cmluZ1BhcmFtcyA9IHRoaXMub3B0aW9ucy5zdHJpbmdQYXJhbXM7XG4gICAgdGhpcy50cmFja0lkcyA9IHRoaXMub3B0aW9ucy50cmFja0lkcztcbiAgICB0aGlzLnByZWNvbXBpbGUgPSAhYXNPYmplY3Q7XG5cbiAgICB0aGlzLm5hbWUgPSB0aGlzLmVudmlyb25tZW50Lm5hbWU7XG4gICAgdGhpcy5pc0NoaWxkID0gISFjb250ZXh0O1xuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQgfHwge1xuICAgICAgZGVjb3JhdG9yczogW10sXG4gICAgICBwcm9ncmFtczogW10sXG4gICAgICBlbnZpcm9ubWVudHM6IFtdXG4gICAgfTtcblxuICAgIHRoaXMucHJlYW1ibGUoKTtcblxuICAgIHRoaXMuc3RhY2tTbG90ID0gMDtcbiAgICB0aGlzLnN0YWNrVmFycyA9IFtdO1xuICAgIHRoaXMuYWxpYXNlcyA9IHt9O1xuICAgIHRoaXMucmVnaXN0ZXJzID0geyBsaXN0OiBbXSB9O1xuICAgIHRoaXMuaGFzaGVzID0gW107XG4gICAgdGhpcy5jb21waWxlU3RhY2sgPSBbXTtcbiAgICB0aGlzLmlubGluZVN0YWNrID0gW107XG4gICAgdGhpcy5ibG9ja1BhcmFtcyA9IFtdO1xuXG4gICAgdGhpcy5jb21waWxlQ2hpbGRyZW4oZW52aXJvbm1lbnQsIG9wdGlvbnMpO1xuXG4gICAgdGhpcy51c2VEZXB0aHMgPSB0aGlzLnVzZURlcHRocyB8fCBlbnZpcm9ubWVudC51c2VEZXB0aHMgfHwgZW52aXJvbm1lbnQudXNlRGVjb3JhdG9ycyB8fCB0aGlzLm9wdGlvbnMuY29tcGF0O1xuICAgIHRoaXMudXNlQmxvY2tQYXJhbXMgPSB0aGlzLnVzZUJsb2NrUGFyYW1zIHx8IGVudmlyb25tZW50LnVzZUJsb2NrUGFyYW1zO1xuXG4gICAgdmFyIG9wY29kZXMgPSBlbnZpcm9ubWVudC5vcGNvZGVzLFxuICAgICAgICBvcGNvZGUgPSB1bmRlZmluZWQsXG4gICAgICAgIGZpcnN0TG9jID0gdW5kZWZpbmVkLFxuICAgICAgICBpID0gdW5kZWZpbmVkLFxuICAgICAgICBsID0gdW5kZWZpbmVkO1xuXG4gICAgZm9yIChpID0gMCwgbCA9IG9wY29kZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBvcGNvZGUgPSBvcGNvZGVzW2ldO1xuXG4gICAgICB0aGlzLnNvdXJjZS5jdXJyZW50TG9jYXRpb24gPSBvcGNvZGUubG9jO1xuICAgICAgZmlyc3RMb2MgPSBmaXJzdExvYyB8fCBvcGNvZGUubG9jO1xuICAgICAgdGhpc1tvcGNvZGUub3Bjb2RlXS5hcHBseSh0aGlzLCBvcGNvZGUuYXJncyk7XG4gICAgfVxuXG4gICAgLy8gRmx1c2ggYW55IHRyYWlsaW5nIGNvbnRlbnQgdGhhdCBtaWdodCBiZSBwZW5kaW5nLlxuICAgIHRoaXMuc291cmNlLmN1cnJlbnRMb2NhdGlvbiA9IGZpcnN0TG9jO1xuICAgIHRoaXMucHVzaFNvdXJjZSgnJyk7XG5cbiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICAgIGlmICh0aGlzLnN0YWNrU2xvdCB8fCB0aGlzLmlubGluZVN0YWNrLmxlbmd0aCB8fCB0aGlzLmNvbXBpbGVTdGFjay5sZW5ndGgpIHtcbiAgICAgIHRocm93IG5ldyBfZXhjZXB0aW9uMlsnZGVmYXVsdCddKCdDb21waWxlIGNvbXBsZXRlZCB3aXRoIGNvbnRlbnQgbGVmdCBvbiBzdGFjaycpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5kZWNvcmF0b3JzLmlzRW1wdHkoKSkge1xuICAgICAgdGhpcy51c2VEZWNvcmF0b3JzID0gdHJ1ZTtcblxuICAgICAgdGhpcy5kZWNvcmF0b3JzLnByZXBlbmQoWyd2YXIgZGVjb3JhdG9ycyA9IGNvbnRhaW5lci5kZWNvcmF0b3JzLCAnLCB0aGlzLmxvb2t1cFByb3BlcnR5RnVuY3Rpb25WYXJEZWNsYXJhdGlvbigpLCAnO1xcbiddKTtcbiAgICAgIHRoaXMuZGVjb3JhdG9ycy5wdXNoKCdyZXR1cm4gZm47Jyk7XG5cbiAgICAgIGlmIChhc09iamVjdCkge1xuICAgICAgICB0aGlzLmRlY29yYXRvcnMgPSBGdW5jdGlvbi5hcHBseSh0aGlzLCBbJ2ZuJywgJ3Byb3BzJywgJ2NvbnRhaW5lcicsICdkZXB0aDAnLCAnZGF0YScsICdibG9ja1BhcmFtcycsICdkZXB0aHMnLCB0aGlzLmRlY29yYXRvcnMubWVyZ2UoKV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5kZWNvcmF0b3JzLnByZXBlbmQoJ2Z1bmN0aW9uKGZuLCBwcm9wcywgY29udGFpbmVyLCBkZXB0aDAsIGRhdGEsIGJsb2NrUGFyYW1zLCBkZXB0aHMpIHtcXG4nKTtcbiAgICAgICAgdGhpcy5kZWNvcmF0b3JzLnB1c2goJ31cXG4nKTtcbiAgICAgICAgdGhpcy5kZWNvcmF0b3JzID0gdGhpcy5kZWNvcmF0b3JzLm1lcmdlKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9ycyA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICB2YXIgZm4gPSB0aGlzLmNyZWF0ZUZ1bmN0aW9uQ29udGV4dChhc09iamVjdCk7XG4gICAgaWYgKCF0aGlzLmlzQ2hpbGQpIHtcbiAgICAgIHZhciByZXQgPSB7XG4gICAgICAgIGNvbXBpbGVyOiB0aGlzLmNvbXBpbGVySW5mbygpLFxuICAgICAgICBtYWluOiBmblxuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMuZGVjb3JhdG9ycykge1xuICAgICAgICByZXQubWFpbl9kID0gdGhpcy5kZWNvcmF0b3JzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNhbWVsY2FzZVxuICAgICAgICByZXQudXNlRGVjb3JhdG9ycyA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBfY29udGV4dCA9IHRoaXMuY29udGV4dDtcbiAgICAgIHZhciBwcm9ncmFtcyA9IF9jb250ZXh0LnByb2dyYW1zO1xuICAgICAgdmFyIGRlY29yYXRvcnMgPSBfY29udGV4dC5kZWNvcmF0b3JzO1xuXG4gICAgICBmb3IgKGkgPSAwLCBsID0gcHJvZ3JhbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChwcm9ncmFtc1tpXSkge1xuICAgICAgICAgIHJldFtpXSA9IHByb2dyYW1zW2ldO1xuICAgICAgICAgIGlmIChkZWNvcmF0b3JzW2ldKSB7XG4gICAgICAgICAgICByZXRbaSArICdfZCddID0gZGVjb3JhdG9yc1tpXTtcbiAgICAgICAgICAgIHJldC51c2VEZWNvcmF0b3JzID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuZW52aXJvbm1lbnQudXNlUGFydGlhbCkge1xuICAgICAgICByZXQudXNlUGFydGlhbCA9IHRydWU7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmRhdGEpIHtcbiAgICAgICAgcmV0LnVzZURhdGEgPSB0cnVlO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMudXNlRGVwdGhzKSB7XG4gICAgICAgIHJldC51c2VEZXB0aHMgPSB0cnVlO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMudXNlQmxvY2tQYXJhbXMpIHtcbiAgICAgICAgcmV0LnVzZUJsb2NrUGFyYW1zID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY29tcGF0KSB7XG4gICAgICAgIHJldC5jb21wYXQgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWFzT2JqZWN0KSB7XG4gICAgICAgIHJldC5jb21waWxlciA9IEpTT04uc3RyaW5naWZ5KHJldC5jb21waWxlcik7XG5cbiAgICAgICAgdGhpcy5zb3VyY2UuY3VycmVudExvY2F0aW9uID0geyBzdGFydDogeyBsaW5lOiAxLCBjb2x1bW46IDAgfSB9O1xuICAgICAgICByZXQgPSB0aGlzLm9iamVjdExpdGVyYWwocmV0KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5zcmNOYW1lKSB7XG4gICAgICAgICAgcmV0ID0gcmV0LnRvU3RyaW5nV2l0aFNvdXJjZU1hcCh7IGZpbGU6IG9wdGlvbnMuZGVzdE5hbWUgfSk7XG4gICAgICAgICAgcmV0Lm1hcCA9IHJldC5tYXAgJiYgcmV0Lm1hcC50b1N0cmluZygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldCA9IHJldC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXQuY29tcGlsZXJPcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmV0O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZm47XG4gICAgfVxuICB9LFxuXG4gIHByZWFtYmxlOiBmdW5jdGlvbiBwcmVhbWJsZSgpIHtcbiAgICAvLyB0cmFjayB0aGUgbGFzdCBjb250ZXh0IHB1c2hlZCBpbnRvIHBsYWNlIHRvIGFsbG93IHNraXBwaW5nIHRoZVxuICAgIC8vIGdldENvbnRleHQgb3Bjb2RlIHdoZW4gaXQgd291bGQgYmUgYSBub29wXG4gICAgdGhpcy5sYXN0Q29udGV4dCA9IDA7XG4gICAgdGhpcy5zb3VyY2UgPSBuZXcgX2NvZGVHZW4yWydkZWZhdWx0J10odGhpcy5vcHRpb25zLnNyY05hbWUpO1xuICAgIHRoaXMuZGVjb3JhdG9ycyA9IG5ldyBfY29kZUdlbjJbJ2RlZmF1bHQnXSh0aGlzLm9wdGlvbnMuc3JjTmFtZSk7XG4gIH0sXG5cbiAgY3JlYXRlRnVuY3Rpb25Db250ZXh0OiBmdW5jdGlvbiBjcmVhdGVGdW5jdGlvbkNvbnRleHQoYXNPYmplY3QpIHtcbiAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciB2YXJEZWNsYXJhdGlvbnMgPSAnJztcblxuICAgIHZhciBsb2NhbHMgPSB0aGlzLnN0YWNrVmFycy5jb25jYXQodGhpcy5yZWdpc3RlcnMubGlzdCk7XG4gICAgaWYgKGxvY2Fscy5sZW5ndGggPiAwKSB7XG4gICAgICB2YXJEZWNsYXJhdGlvbnMgKz0gJywgJyArIGxvY2Fscy5qb2luKCcsICcpO1xuICAgIH1cblxuICAgIC8vIEdlbmVyYXRlIG1pbmltaXplciBhbGlhcyBtYXBwaW5nc1xuICAgIC8vXG4gICAgLy8gV2hlbiB1c2luZyB0cnVlIFNvdXJjZU5vZGVzLCB0aGlzIHdpbGwgdXBkYXRlIGFsbCByZWZlcmVuY2VzIHRvIHRoZSBnaXZlbiBhbGlhc1xuICAgIC8vIGFzIHRoZSBzb3VyY2Ugbm9kZXMgYXJlIHJldXNlZCBpbiBzaXR1LiBGb3IgdGhlIG5vbi1zb3VyY2Ugbm9kZSBjb21waWxhdGlvbiBtb2RlLFxuICAgIC8vIGFsaWFzZXMgd2lsbCBub3QgYmUgdXNlZCwgYnV0IHRoaXMgY2FzZSBpcyBhbHJlYWR5IGJlaW5nIHJ1biBvbiB0aGUgY2xpZW50IGFuZFxuICAgIC8vIHdlIGFyZW4ndCBjb25jZXJuIGFib3V0IG1pbmltaXppbmcgdGhlIHRlbXBsYXRlIHNpemUuXG4gICAgdmFyIGFsaWFzQ291bnQgPSAwO1xuICAgIE9iamVjdC5rZXlzKHRoaXMuYWxpYXNlcykuZm9yRWFjaChmdW5jdGlvbiAoYWxpYXMpIHtcbiAgICAgIHZhciBub2RlID0gX3RoaXMuYWxpYXNlc1thbGlhc107XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLnJlZmVyZW5jZUNvdW50ID4gMSkge1xuICAgICAgICB2YXJEZWNsYXJhdGlvbnMgKz0gJywgYWxpYXMnICsgKythbGlhc0NvdW50ICsgJz0nICsgYWxpYXM7XG4gICAgICAgIG5vZGUuY2hpbGRyZW5bMF0gPSAnYWxpYXMnICsgYWxpYXNDb3VudDtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmICh0aGlzLmxvb2t1cFByb3BlcnR5RnVuY3Rpb25Jc1VzZWQpIHtcbiAgICAgIHZhckRlY2xhcmF0aW9ucyArPSAnLCAnICsgdGhpcy5sb29rdXBQcm9wZXJ0eUZ1bmN0aW9uVmFyRGVjbGFyYXRpb24oKTtcbiAgICB9XG5cbiAgICB2YXIgcGFyYW1zID0gWydjb250YWluZXInLCAnZGVwdGgwJywgJ2hlbHBlcnMnLCAncGFydGlhbHMnLCAnZGF0YSddO1xuXG4gICAgaWYgKHRoaXMudXNlQmxvY2tQYXJhbXMgfHwgdGhpcy51c2VEZXB0aHMpIHtcbiAgICAgIHBhcmFtcy5wdXNoKCdibG9ja1BhcmFtcycpO1xuICAgIH1cbiAgICBpZiAodGhpcy51c2VEZXB0aHMpIHtcbiAgICAgIHBhcmFtcy5wdXNoKCdkZXB0aHMnKTtcbiAgICB9XG5cbiAgICAvLyBQZXJmb3JtIGEgc2Vjb25kIHBhc3Mgb3ZlciB0aGUgb3V0cHV0IHRvIG1lcmdlIGNvbnRlbnQgd2hlbiBwb3NzaWJsZVxuICAgIHZhciBzb3VyY2UgPSB0aGlzLm1lcmdlU291cmNlKHZhckRlY2xhcmF0aW9ucyk7XG5cbiAgICBpZiAoYXNPYmplY3QpIHtcbiAgICAgIHBhcmFtcy5wdXNoKHNvdXJjZSk7XG5cbiAgICAgIHJldHVybiBGdW5jdGlvbi5hcHBseSh0aGlzLCBwYXJhbXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5zb3VyY2Uud3JhcChbJ2Z1bmN0aW9uKCcsIHBhcmFtcy5qb2luKCcsJyksICcpIHtcXG4gICcsIHNvdXJjZSwgJ30nXSk7XG4gICAgfVxuICB9LFxuICBtZXJnZVNvdXJjZTogZnVuY3Rpb24gbWVyZ2VTb3VyY2UodmFyRGVjbGFyYXRpb25zKSB7XG4gICAgdmFyIGlzU2ltcGxlID0gdGhpcy5lbnZpcm9ubWVudC5pc1NpbXBsZSxcbiAgICAgICAgYXBwZW5kT25seSA9ICF0aGlzLmZvcmNlQnVmZmVyLFxuICAgICAgICBhcHBlbmRGaXJzdCA9IHVuZGVmaW5lZCxcbiAgICAgICAgc291cmNlU2VlbiA9IHVuZGVmaW5lZCxcbiAgICAgICAgYnVmZmVyU3RhcnQgPSB1bmRlZmluZWQsXG4gICAgICAgIGJ1ZmZlckVuZCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnNvdXJjZS5lYWNoKGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgICBpZiAobGluZS5hcHBlbmRUb0J1ZmZlcikge1xuICAgICAgICBpZiAoYnVmZmVyU3RhcnQpIHtcbiAgICAgICAgICBsaW5lLnByZXBlbmQoJyAgKyAnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBidWZmZXJTdGFydCA9IGxpbmU7XG4gICAgICAgIH1cbiAgICAgICAgYnVmZmVyRW5kID0gbGluZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChidWZmZXJTdGFydCkge1xuICAgICAgICAgIGlmICghc291cmNlU2Vlbikge1xuICAgICAgICAgICAgYXBwZW5kRmlyc3QgPSB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBidWZmZXJTdGFydC5wcmVwZW5kKCdidWZmZXIgKz0gJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJ1ZmZlckVuZC5hZGQoJzsnKTtcbiAgICAgICAgICBidWZmZXJTdGFydCA9IGJ1ZmZlckVuZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHNvdXJjZVNlZW4gPSB0cnVlO1xuICAgICAgICBpZiAoIWlzU2ltcGxlKSB7XG4gICAgICAgICAgYXBwZW5kT25seSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoYXBwZW5kT25seSkge1xuICAgICAgaWYgKGJ1ZmZlclN0YXJ0KSB7XG4gICAgICAgIGJ1ZmZlclN0YXJ0LnByZXBlbmQoJ3JldHVybiAnKTtcbiAgICAgICAgYnVmZmVyRW5kLmFkZCgnOycpO1xuICAgICAgfSBlbHNlIGlmICghc291cmNlU2Vlbikge1xuICAgICAgICB0aGlzLnNvdXJjZS5wdXNoKCdyZXR1cm4gXCJcIjsnKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyRGVjbGFyYXRpb25zICs9ICcsIGJ1ZmZlciA9ICcgKyAoYXBwZW5kRmlyc3QgPyAnJyA6IHRoaXMuaW5pdGlhbGl6ZUJ1ZmZlcigpKTtcblxuICAgICAgaWYgKGJ1ZmZlclN0YXJ0KSB7XG4gICAgICAgIGJ1ZmZlclN0YXJ0LnByZXBlbmQoJ3JldHVybiBidWZmZXIgKyAnKTtcbiAgICAgICAgYnVmZmVyRW5kLmFkZCgnOycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zb3VyY2UucHVzaCgncmV0dXJuIGJ1ZmZlcjsnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodmFyRGVjbGFyYXRpb25zKSB7XG4gICAgICB0aGlzLnNvdXJjZS5wcmVwZW5kKCd2YXIgJyArIHZhckRlY2xhcmF0aW9ucy5zdWJzdHJpbmcoMikgKyAoYXBwZW5kRmlyc3QgPyAnJyA6ICc7XFxuJykpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnNvdXJjZS5tZXJnZSgpO1xuICB9LFxuXG4gIGxvb2t1cFByb3BlcnR5RnVuY3Rpb25WYXJEZWNsYXJhdGlvbjogZnVuY3Rpb24gbG9va3VwUHJvcGVydHlGdW5jdGlvblZhckRlY2xhcmF0aW9uKCkge1xuICAgIHJldHVybiAnXFxuICAgICAgbG9va3VwUHJvcGVydHkgPSBjb250YWluZXIubG9va3VwUHJvcGVydHkgfHwgZnVuY3Rpb24ocGFyZW50LCBwcm9wZXJ0eU5hbWUpIHtcXG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocGFyZW50LCBwcm9wZXJ0eU5hbWUpKSB7XFxuICAgICAgICAgIHJldHVybiBwYXJlbnRbcHJvcGVydHlOYW1lXTtcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcXG4gICAgfVxcbiAgICAnLnRyaW0oKTtcbiAgfSxcblxuICAvLyBbYmxvY2tWYWx1ZV1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogaGFzaCwgaW52ZXJzZSwgcHJvZ3JhbSwgdmFsdWVcbiAgLy8gT24gc3RhY2ssIGFmdGVyOiByZXR1cm4gdmFsdWUgb2YgYmxvY2tIZWxwZXJNaXNzaW5nXG4gIC8vXG4gIC8vIFRoZSBwdXJwb3NlIG9mIHRoaXMgb3Bjb2RlIGlzIHRvIHRha2UgYSBibG9jayBvZiB0aGUgZm9ybVxuICAvLyBge3sjdGhpcy5mb299fS4uLnt7L3RoaXMuZm9vfX1gLCByZXNvbHZlIHRoZSB2YWx1ZSBvZiBgZm9vYCwgYW5kXG4gIC8vIHJlcGxhY2UgaXQgb24gdGhlIHN0YWNrIHdpdGggdGhlIHJlc3VsdCBvZiBwcm9wZXJseVxuICAvLyBpbnZva2luZyBibG9ja0hlbHBlck1pc3NpbmcuXG4gIGJsb2NrVmFsdWU6IGZ1bmN0aW9uIGJsb2NrVmFsdWUobmFtZSkge1xuICAgIHZhciBibG9ja0hlbHBlck1pc3NpbmcgPSB0aGlzLmFsaWFzYWJsZSgnY29udGFpbmVyLmhvb2tzLmJsb2NrSGVscGVyTWlzc2luZycpLFxuICAgICAgICBwYXJhbXMgPSBbdGhpcy5jb250ZXh0TmFtZSgwKV07XG4gICAgdGhpcy5zZXR1cEhlbHBlckFyZ3MobmFtZSwgMCwgcGFyYW1zKTtcblxuICAgIHZhciBibG9ja05hbWUgPSB0aGlzLnBvcFN0YWNrKCk7XG4gICAgcGFyYW1zLnNwbGljZSgxLCAwLCBibG9ja05hbWUpO1xuXG4gICAgdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChibG9ja0hlbHBlck1pc3NpbmcsICdjYWxsJywgcGFyYW1zKSk7XG4gIH0sXG5cbiAgLy8gW2FtYmlndW91c0Jsb2NrVmFsdWVdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IGhhc2gsIGludmVyc2UsIHByb2dyYW0sIHZhbHVlXG4gIC8vIENvbXBpbGVyIHZhbHVlLCBiZWZvcmU6IGxhc3RIZWxwZXI9dmFsdWUgb2YgbGFzdCBmb3VuZCBoZWxwZXIsIGlmIGFueVxuICAvLyBPbiBzdGFjaywgYWZ0ZXIsIGlmIG5vIGxhc3RIZWxwZXI6IHNhbWUgYXMgW2Jsb2NrVmFsdWVdXG4gIC8vIE9uIHN0YWNrLCBhZnRlciwgaWYgbGFzdEhlbHBlcjogdmFsdWVcbiAgYW1iaWd1b3VzQmxvY2tWYWx1ZTogZnVuY3Rpb24gYW1iaWd1b3VzQmxvY2tWYWx1ZSgpIHtcbiAgICAvLyBXZSdyZSBiZWluZyBhIGJpdCBjaGVla3kgYW5kIHJldXNpbmcgdGhlIG9wdGlvbnMgdmFsdWUgZnJvbSB0aGUgcHJpb3IgZXhlY1xuICAgIHZhciBibG9ja0hlbHBlck1pc3NpbmcgPSB0aGlzLmFsaWFzYWJsZSgnY29udGFpbmVyLmhvb2tzLmJsb2NrSGVscGVyTWlzc2luZycpLFxuICAgICAgICBwYXJhbXMgPSBbdGhpcy5jb250ZXh0TmFtZSgwKV07XG4gICAgdGhpcy5zZXR1cEhlbHBlckFyZ3MoJycsIDAsIHBhcmFtcywgdHJ1ZSk7XG5cbiAgICB0aGlzLmZsdXNoSW5saW5lKCk7XG5cbiAgICB2YXIgY3VycmVudCA9IHRoaXMudG9wU3RhY2soKTtcbiAgICBwYXJhbXMuc3BsaWNlKDEsIDAsIGN1cnJlbnQpO1xuXG4gICAgdGhpcy5wdXNoU291cmNlKFsnaWYgKCEnLCB0aGlzLmxhc3RIZWxwZXIsICcpIHsgJywgY3VycmVudCwgJyA9ICcsIHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChibG9ja0hlbHBlck1pc3NpbmcsICdjYWxsJywgcGFyYW1zKSwgJ30nXSk7XG4gIH0sXG5cbiAgLy8gW2FwcGVuZENvbnRlbnRdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IC4uLlxuICAvLyBPbiBzdGFjaywgYWZ0ZXI6IC4uLlxuICAvL1xuICAvLyBBcHBlbmRzIHRoZSBzdHJpbmcgdmFsdWUgb2YgYGNvbnRlbnRgIHRvIHRoZSBjdXJyZW50IGJ1ZmZlclxuICBhcHBlbmRDb250ZW50OiBmdW5jdGlvbiBhcHBlbmRDb250ZW50KGNvbnRlbnQpIHtcbiAgICBpZiAodGhpcy5wZW5kaW5nQ29udGVudCkge1xuICAgICAgY29udGVudCA9IHRoaXMucGVuZGluZ0NvbnRlbnQgKyBjb250ZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnBlbmRpbmdMb2NhdGlvbiA9IHRoaXMuc291cmNlLmN1cnJlbnRMb2NhdGlvbjtcbiAgICB9XG5cbiAgICB0aGlzLnBlbmRpbmdDb250ZW50ID0gY29udGVudDtcbiAgfSxcblxuICAvLyBbYXBwZW5kXVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiB2YWx1ZSwgLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogLi4uXG4gIC8vXG4gIC8vIENvZXJjZXMgYHZhbHVlYCB0byBhIFN0cmluZyBhbmQgYXBwZW5kcyBpdCB0byB0aGUgY3VycmVudCBidWZmZXIuXG4gIC8vXG4gIC8vIElmIGB2YWx1ZWAgaXMgdHJ1dGh5LCBvciAwLCBpdCBpcyBjb2VyY2VkIGludG8gYSBzdHJpbmcgYW5kIGFwcGVuZGVkXG4gIC8vIE90aGVyd2lzZSwgdGhlIGVtcHR5IHN0cmluZyBpcyBhcHBlbmRlZFxuICBhcHBlbmQ6IGZ1bmN0aW9uIGFwcGVuZCgpIHtcbiAgICBpZiAodGhpcy5pc0lubGluZSgpKSB7XG4gICAgICB0aGlzLnJlcGxhY2VTdGFjayhmdW5jdGlvbiAoY3VycmVudCkge1xuICAgICAgICByZXR1cm4gWycgIT0gbnVsbCA/ICcsIGN1cnJlbnQsICcgOiBcIlwiJ107XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5wdXNoU291cmNlKHRoaXMuYXBwZW5kVG9CdWZmZXIodGhpcy5wb3BTdGFjaygpKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhbCA9IHRoaXMucG9wU3RhY2soKTtcbiAgICAgIHRoaXMucHVzaFNvdXJjZShbJ2lmICgnLCBsb2NhbCwgJyAhPSBudWxsKSB7ICcsIHRoaXMuYXBwZW5kVG9CdWZmZXIobG9jYWwsIHVuZGVmaW5lZCwgdHJ1ZSksICcgfSddKTtcbiAgICAgIGlmICh0aGlzLmVudmlyb25tZW50LmlzU2ltcGxlKSB7XG4gICAgICAgIHRoaXMucHVzaFNvdXJjZShbJ2Vsc2UgeyAnLCB0aGlzLmFwcGVuZFRvQnVmZmVyKFwiJydcIiwgdW5kZWZpbmVkLCB0cnVlKSwgJyB9J10pO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICAvLyBbYXBwZW5kRXNjYXBlZF1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogdmFsdWUsIC4uLlxuICAvLyBPbiBzdGFjaywgYWZ0ZXI6IC4uLlxuICAvL1xuICAvLyBFc2NhcGUgYHZhbHVlYCBhbmQgYXBwZW5kIGl0IHRvIHRoZSBidWZmZXJcbiAgYXBwZW5kRXNjYXBlZDogZnVuY3Rpb24gYXBwZW5kRXNjYXBlZCgpIHtcbiAgICB0aGlzLnB1c2hTb3VyY2UodGhpcy5hcHBlbmRUb0J1ZmZlcihbdGhpcy5hbGlhc2FibGUoJ2NvbnRhaW5lci5lc2NhcGVFeHByZXNzaW9uJyksICcoJywgdGhpcy5wb3BTdGFjaygpLCAnKSddKSk7XG4gIH0sXG5cbiAgLy8gW2dldENvbnRleHRdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IC4uLlxuICAvLyBPbiBzdGFjaywgYWZ0ZXI6IC4uLlxuICAvLyBDb21waWxlciB2YWx1ZSwgYWZ0ZXI6IGxhc3RDb250ZXh0PWRlcHRoXG4gIC8vXG4gIC8vIFNldCB0aGUgdmFsdWUgb2YgdGhlIGBsYXN0Q29udGV4dGAgY29tcGlsZXIgdmFsdWUgdG8gdGhlIGRlcHRoXG4gIGdldENvbnRleHQ6IGZ1bmN0aW9uIGdldENvbnRleHQoZGVwdGgpIHtcbiAgICB0aGlzLmxhc3RDb250ZXh0ID0gZGVwdGg7XG4gIH0sXG5cbiAgLy8gW3B1c2hDb250ZXh0XVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiBjdXJyZW50Q29udGV4dCwgLi4uXG4gIC8vXG4gIC8vIFB1c2hlcyB0aGUgdmFsdWUgb2YgdGhlIGN1cnJlbnQgY29udGV4dCBvbnRvIHRoZSBzdGFjay5cbiAgcHVzaENvbnRleHQ6IGZ1bmN0aW9uIHB1c2hDb250ZXh0KCkge1xuICAgIHRoaXMucHVzaFN0YWNrTGl0ZXJhbCh0aGlzLmNvbnRleHROYW1lKHRoaXMubGFzdENvbnRleHQpKTtcbiAgfSxcblxuICAvLyBbbG9va3VwT25Db250ZXh0XVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiBjdXJyZW50Q29udGV4dFtuYW1lXSwgLi4uXG4gIC8vXG4gIC8vIExvb2tzIHVwIHRoZSB2YWx1ZSBvZiBgbmFtZWAgb24gdGhlIGN1cnJlbnQgY29udGV4dCBhbmQgcHVzaGVzXG4gIC8vIGl0IG9udG8gdGhlIHN0YWNrLlxuICBsb29rdXBPbkNvbnRleHQ6IGZ1bmN0aW9uIGxvb2t1cE9uQ29udGV4dChwYXJ0cywgZmFsc3ksIHN0cmljdCwgc2NvcGVkKSB7XG4gICAgdmFyIGkgPSAwO1xuXG4gICAgaWYgKCFzY29wZWQgJiYgdGhpcy5vcHRpb25zLmNvbXBhdCAmJiAhdGhpcy5sYXN0Q29udGV4dCkge1xuICAgICAgLy8gVGhlIGRlcHRoZWQgcXVlcnkgaXMgZXhwZWN0ZWQgdG8gaGFuZGxlIHRoZSB1bmRlZmluZWQgbG9naWMgZm9yIHRoZSByb290IGxldmVsIHRoYXRcbiAgICAgIC8vIGlzIGltcGxlbWVudGVkIGJlbG93LCBzbyB3ZSBldmFsdWF0ZSB0aGF0IGRpcmVjdGx5IGluIGNvbXBhdCBtb2RlXG4gICAgICB0aGlzLnB1c2godGhpcy5kZXB0aGVkTG9va3VwKHBhcnRzW2krK10pKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wdXNoQ29udGV4dCgpO1xuICAgIH1cblxuICAgIHRoaXMucmVzb2x2ZVBhdGgoJ2NvbnRleHQnLCBwYXJ0cywgaSwgZmFsc3ksIHN0cmljdCk7XG4gIH0sXG5cbiAgLy8gW2xvb2t1cEJsb2NrUGFyYW1dXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IC4uLlxuICAvLyBPbiBzdGFjaywgYWZ0ZXI6IGJsb2NrUGFyYW1bbmFtZV0sIC4uLlxuICAvL1xuICAvLyBMb29rcyB1cCB0aGUgdmFsdWUgb2YgYHBhcnRzYCBvbiB0aGUgZ2l2ZW4gYmxvY2sgcGFyYW0gYW5kIHB1c2hlc1xuICAvLyBpdCBvbnRvIHRoZSBzdGFjay5cbiAgbG9va3VwQmxvY2tQYXJhbTogZnVuY3Rpb24gbG9va3VwQmxvY2tQYXJhbShibG9ja1BhcmFtSWQsIHBhcnRzKSB7XG4gICAgdGhpcy51c2VCbG9ja1BhcmFtcyA9IHRydWU7XG5cbiAgICB0aGlzLnB1c2goWydibG9ja1BhcmFtc1snLCBibG9ja1BhcmFtSWRbMF0sICddWycsIGJsb2NrUGFyYW1JZFsxXSwgJ10nXSk7XG4gICAgdGhpcy5yZXNvbHZlUGF0aCgnY29udGV4dCcsIHBhcnRzLCAxKTtcbiAgfSxcblxuICAvLyBbbG9va3VwRGF0YV1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogZGF0YSwgLi4uXG4gIC8vXG4gIC8vIFB1c2ggdGhlIGRhdGEgbG9va3VwIG9wZXJhdG9yXG4gIGxvb2t1cERhdGE6IGZ1bmN0aW9uIGxvb2t1cERhdGEoZGVwdGgsIHBhcnRzLCBzdHJpY3QpIHtcbiAgICBpZiAoIWRlcHRoKSB7XG4gICAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwoJ2RhdGEnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wdXNoU3RhY2tMaXRlcmFsKCdjb250YWluZXIuZGF0YShkYXRhLCAnICsgZGVwdGggKyAnKScpO1xuICAgIH1cblxuICAgIHRoaXMucmVzb2x2ZVBhdGgoJ2RhdGEnLCBwYXJ0cywgMCwgdHJ1ZSwgc3RyaWN0KTtcbiAgfSxcblxuICByZXNvbHZlUGF0aDogZnVuY3Rpb24gcmVzb2x2ZVBhdGgodHlwZSwgcGFydHMsIGksIGZhbHN5LCBzdHJpY3QpIHtcbiAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuXG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnN0cmljdCB8fCB0aGlzLm9wdGlvbnMuYXNzdW1lT2JqZWN0cykge1xuICAgICAgdGhpcy5wdXNoKHN0cmljdExvb2t1cCh0aGlzLm9wdGlvbnMuc3RyaWN0ICYmIHN0cmljdCwgdGhpcywgcGFydHMsIHR5cGUpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgbGVuID0gcGFydHMubGVuZ3RoO1xuICAgIGZvciAoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuICAgICAgdGhpcy5yZXBsYWNlU3RhY2soZnVuY3Rpb24gKGN1cnJlbnQpIHtcbiAgICAgICAgdmFyIGxvb2t1cCA9IF90aGlzMi5uYW1lTG9va3VwKGN1cnJlbnQsIHBhcnRzW2ldLCB0eXBlKTtcbiAgICAgICAgLy8gV2Ugd2FudCB0byBlbnN1cmUgdGhhdCB6ZXJvIGFuZCBmYWxzZSBhcmUgaGFuZGxlZCBwcm9wZXJseSBpZiB0aGUgY29udGV4dCAoZmFsc3kgZmxhZylcbiAgICAgICAgLy8gbmVlZHMgdG8gaGF2ZSB0aGUgc3BlY2lhbCBoYW5kbGluZyBmb3IgdGhlc2UgdmFsdWVzLlxuICAgICAgICBpZiAoIWZhbHN5KSB7XG4gICAgICAgICAgcmV0dXJuIFsnICE9IG51bGwgPyAnLCBsb29rdXAsICcgOiAnLCBjdXJyZW50XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2Ugd2UgY2FuIHVzZSBnZW5lcmljIGZhbHN5IGhhbmRsaW5nXG4gICAgICAgICAgcmV0dXJuIFsnICYmICcsIGxvb2t1cF07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cbiAgICB9XG4gIH0sXG5cbiAgLy8gW3Jlc29sdmVQb3NzaWJsZUxhbWJkYV1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogdmFsdWUsIC4uLlxuICAvLyBPbiBzdGFjaywgYWZ0ZXI6IHJlc29sdmVkIHZhbHVlLCAuLi5cbiAgLy9cbiAgLy8gSWYgdGhlIGB2YWx1ZWAgaXMgYSBsYW1iZGEsIHJlcGxhY2UgaXQgb24gdGhlIHN0YWNrIGJ5XG4gIC8vIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGxhbWJkYVxuICByZXNvbHZlUG9zc2libGVMYW1iZGE6IGZ1bmN0aW9uIHJlc29sdmVQb3NzaWJsZUxhbWJkYSgpIHtcbiAgICB0aGlzLnB1c2goW3RoaXMuYWxpYXNhYmxlKCdjb250YWluZXIubGFtYmRhJyksICcoJywgdGhpcy5wb3BTdGFjaygpLCAnLCAnLCB0aGlzLmNvbnRleHROYW1lKDApLCAnKSddKTtcbiAgfSxcblxuICAvLyBbcHVzaFN0cmluZ1BhcmFtXVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiBzdHJpbmcsIGN1cnJlbnRDb250ZXh0LCAuLi5cbiAgLy9cbiAgLy8gVGhpcyBvcGNvZGUgaXMgZGVzaWduZWQgZm9yIHVzZSBpbiBzdHJpbmcgbW9kZSwgd2hpY2hcbiAgLy8gcHJvdmlkZXMgdGhlIHN0cmluZyB2YWx1ZSBvZiBhIHBhcmFtZXRlciBhbG9uZyB3aXRoIGl0c1xuICAvLyBkZXB0aCByYXRoZXIgdGhhbiByZXNvbHZpbmcgaXQgaW1tZWRpYXRlbHkuXG4gIHB1c2hTdHJpbmdQYXJhbTogZnVuY3Rpb24gcHVzaFN0cmluZ1BhcmFtKHN0cmluZywgdHlwZSkge1xuICAgIHRoaXMucHVzaENvbnRleHQoKTtcbiAgICB0aGlzLnB1c2hTdHJpbmcodHlwZSk7XG5cbiAgICAvLyBJZiBpdCdzIGEgc3ViZXhwcmVzc2lvbiwgdGhlIHN0cmluZyByZXN1bHRcbiAgICAvLyB3aWxsIGJlIHB1c2hlZCBhZnRlciB0aGlzIG9wY29kZS5cbiAgICBpZiAodHlwZSAhPT0gJ1N1YkV4cHJlc3Npb24nKSB7XG4gICAgICBpZiAodHlwZW9mIHN0cmluZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhpcy5wdXNoU3RyaW5nKHN0cmluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwoc3RyaW5nKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgZW1wdHlIYXNoOiBmdW5jdGlvbiBlbXB0eUhhc2gob21pdEVtcHR5KSB7XG4gICAgaWYgKHRoaXMudHJhY2tJZHMpIHtcbiAgICAgIHRoaXMucHVzaCgne30nKTsgLy8gaGFzaElkc1xuICAgIH1cbiAgICBpZiAodGhpcy5zdHJpbmdQYXJhbXMpIHtcbiAgICAgIHRoaXMucHVzaCgne30nKTsgLy8gaGFzaENvbnRleHRzXG4gICAgICB0aGlzLnB1c2goJ3t9Jyk7IC8vIGhhc2hUeXBlc1xuICAgIH1cbiAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwob21pdEVtcHR5ID8gJ3VuZGVmaW5lZCcgOiAne30nKTtcbiAgfSxcbiAgcHVzaEhhc2g6IGZ1bmN0aW9uIHB1c2hIYXNoKCkge1xuICAgIGlmICh0aGlzLmhhc2gpIHtcbiAgICAgIHRoaXMuaGFzaGVzLnB1c2godGhpcy5oYXNoKTtcbiAgICB9XG4gICAgdGhpcy5oYXNoID0geyB2YWx1ZXM6IHt9LCB0eXBlczogW10sIGNvbnRleHRzOiBbXSwgaWRzOiBbXSB9O1xuICB9LFxuICBwb3BIYXNoOiBmdW5jdGlvbiBwb3BIYXNoKCkge1xuICAgIHZhciBoYXNoID0gdGhpcy5oYXNoO1xuICAgIHRoaXMuaGFzaCA9IHRoaXMuaGFzaGVzLnBvcCgpO1xuXG4gICAgaWYgKHRoaXMudHJhY2tJZHMpIHtcbiAgICAgIHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwoaGFzaC5pZHMpKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RyaW5nUGFyYW1zKSB7XG4gICAgICB0aGlzLnB1c2godGhpcy5vYmplY3RMaXRlcmFsKGhhc2guY29udGV4dHMpKTtcbiAgICAgIHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwoaGFzaC50eXBlcykpO1xuICAgIH1cblxuICAgIHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwoaGFzaC52YWx1ZXMpKTtcbiAgfSxcblxuICAvLyBbcHVzaFN0cmluZ11cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogcXVvdGVkU3RyaW5nKHN0cmluZyksIC4uLlxuICAvL1xuICAvLyBQdXNoIGEgcXVvdGVkIHZlcnNpb24gb2YgYHN0cmluZ2Agb250byB0aGUgc3RhY2tcbiAgcHVzaFN0cmluZzogZnVuY3Rpb24gcHVzaFN0cmluZyhzdHJpbmcpIHtcbiAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwodGhpcy5xdW90ZWRTdHJpbmcoc3RyaW5nKSk7XG4gIH0sXG5cbiAgLy8gW3B1c2hMaXRlcmFsXVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiB2YWx1ZSwgLi4uXG4gIC8vXG4gIC8vIFB1c2hlcyBhIHZhbHVlIG9udG8gdGhlIHN0YWNrLiBUaGlzIG9wZXJhdGlvbiBwcmV2ZW50c1xuICAvLyB0aGUgY29tcGlsZXIgZnJvbSBjcmVhdGluZyBhIHRlbXBvcmFyeSB2YXJpYWJsZSB0byBob2xkXG4gIC8vIGl0LlxuICBwdXNoTGl0ZXJhbDogZnVuY3Rpb24gcHVzaExpdGVyYWwodmFsdWUpIHtcbiAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwodmFsdWUpO1xuICB9LFxuXG4gIC8vIFtwdXNoUHJvZ3JhbV1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogcHJvZ3JhbShndWlkKSwgLi4uXG4gIC8vXG4gIC8vIFB1c2ggYSBwcm9ncmFtIGV4cHJlc3Npb24gb250byB0aGUgc3RhY2suIFRoaXMgdGFrZXNcbiAgLy8gYSBjb21waWxlLXRpbWUgZ3VpZCBhbmQgY29udmVydHMgaXQgaW50byBhIHJ1bnRpbWUtYWNjZXNzaWJsZVxuICAvLyBleHByZXNzaW9uLlxuICBwdXNoUHJvZ3JhbTogZnVuY3Rpb24gcHVzaFByb2dyYW0oZ3VpZCkge1xuICAgIGlmIChndWlkICE9IG51bGwpIHtcbiAgICAgIHRoaXMucHVzaFN0YWNrTGl0ZXJhbCh0aGlzLnByb2dyYW1FeHByZXNzaW9uKGd1aWQpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wdXNoU3RhY2tMaXRlcmFsKG51bGwpO1xuICAgIH1cbiAgfSxcblxuICAvLyBbcmVnaXN0ZXJEZWNvcmF0b3JdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IGhhc2gsIHByb2dyYW0sIHBhcmFtcy4uLiwgLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogLi4uXG4gIC8vXG4gIC8vIFBvcHMgb2ZmIHRoZSBkZWNvcmF0b3IncyBwYXJhbWV0ZXJzLCBpbnZva2VzIHRoZSBkZWNvcmF0b3IsXG4gIC8vIGFuZCBpbnNlcnRzIHRoZSBkZWNvcmF0b3IgaW50byB0aGUgZGVjb3JhdG9ycyBsaXN0LlxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24gcmVnaXN0ZXJEZWNvcmF0b3IocGFyYW1TaXplLCBuYW1lKSB7XG4gICAgdmFyIGZvdW5kRGVjb3JhdG9yID0gdGhpcy5uYW1lTG9va3VwKCdkZWNvcmF0b3JzJywgbmFtZSwgJ2RlY29yYXRvcicpLFxuICAgICAgICBvcHRpb25zID0gdGhpcy5zZXR1cEhlbHBlckFyZ3MobmFtZSwgcGFyYW1TaXplKTtcblxuICAgIHRoaXMuZGVjb3JhdG9ycy5wdXNoKFsnZm4gPSAnLCB0aGlzLmRlY29yYXRvcnMuZnVuY3Rpb25DYWxsKGZvdW5kRGVjb3JhdG9yLCAnJywgWydmbicsICdwcm9wcycsICdjb250YWluZXInLCBvcHRpb25zXSksICcgfHwgZm47J10pO1xuICB9LFxuXG4gIC8vIFtpbnZva2VIZWxwZXJdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IGhhc2gsIGludmVyc2UsIHByb2dyYW0sIHBhcmFtcy4uLiwgLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogcmVzdWx0IG9mIGhlbHBlciBpbnZvY2F0aW9uXG4gIC8vXG4gIC8vIFBvcHMgb2ZmIHRoZSBoZWxwZXIncyBwYXJhbWV0ZXJzLCBpbnZva2VzIHRoZSBoZWxwZXIsXG4gIC8vIGFuZCBwdXNoZXMgdGhlIGhlbHBlcidzIHJldHVybiB2YWx1ZSBvbnRvIHRoZSBzdGFjay5cbiAgLy9cbiAgLy8gSWYgdGhlIGhlbHBlciBpcyBub3QgZm91bmQsIGBoZWxwZXJNaXNzaW5nYCBpcyBjYWxsZWQuXG4gIGludm9rZUhlbHBlcjogZnVuY3Rpb24gaW52b2tlSGVscGVyKHBhcmFtU2l6ZSwgbmFtZSwgaXNTaW1wbGUpIHtcbiAgICB2YXIgbm9uSGVscGVyID0gdGhpcy5wb3BTdGFjaygpLFxuICAgICAgICBoZWxwZXIgPSB0aGlzLnNldHVwSGVscGVyKHBhcmFtU2l6ZSwgbmFtZSk7XG5cbiAgICB2YXIgcG9zc2libGVGdW5jdGlvbkNhbGxzID0gW107XG5cbiAgICBpZiAoaXNTaW1wbGUpIHtcbiAgICAgIC8vIGRpcmVjdCBjYWxsIHRvIGhlbHBlclxuICAgICAgcG9zc2libGVGdW5jdGlvbkNhbGxzLnB1c2goaGVscGVyLm5hbWUpO1xuICAgIH1cbiAgICAvLyBjYWxsIGEgZnVuY3Rpb24gZnJvbSB0aGUgaW5wdXQgb2JqZWN0XG4gICAgcG9zc2libGVGdW5jdGlvbkNhbGxzLnB1c2gobm9uSGVscGVyKTtcbiAgICBpZiAoIXRoaXMub3B0aW9ucy5zdHJpY3QpIHtcbiAgICAgIHBvc3NpYmxlRnVuY3Rpb25DYWxscy5wdXNoKHRoaXMuYWxpYXNhYmxlKCdjb250YWluZXIuaG9va3MuaGVscGVyTWlzc2luZycpKTtcbiAgICB9XG5cbiAgICB2YXIgZnVuY3Rpb25Mb29rdXBDb2RlID0gWycoJywgdGhpcy5pdGVtc1NlcGFyYXRlZEJ5KHBvc3NpYmxlRnVuY3Rpb25DYWxscywgJ3x8JyksICcpJ107XG4gICAgdmFyIGZ1bmN0aW9uQ2FsbCA9IHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChmdW5jdGlvbkxvb2t1cENvZGUsICdjYWxsJywgaGVscGVyLmNhbGxQYXJhbXMpO1xuICAgIHRoaXMucHVzaChmdW5jdGlvbkNhbGwpO1xuICB9LFxuXG4gIGl0ZW1zU2VwYXJhdGVkQnk6IGZ1bmN0aW9uIGl0ZW1zU2VwYXJhdGVkQnkoaXRlbXMsIHNlcGFyYXRvcikge1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICByZXN1bHQucHVzaChpdGVtc1swXSk7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0LnB1c2goc2VwYXJhdG9yLCBpdGVtc1tpXSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sXG4gIC8vIFtpbnZva2VLbm93bkhlbHBlcl1cbiAgLy9cbiAgLy8gT24gc3RhY2ssIGJlZm9yZTogaGFzaCwgaW52ZXJzZSwgcHJvZ3JhbSwgcGFyYW1zLi4uLCAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiByZXN1bHQgb2YgaGVscGVyIGludm9jYXRpb25cbiAgLy9cbiAgLy8gVGhpcyBvcGVyYXRpb24gaXMgdXNlZCB3aGVuIHRoZSBoZWxwZXIgaXMga25vd24gdG8gZXhpc3QsXG4gIC8vIHNvIGEgYGhlbHBlck1pc3NpbmdgIGZhbGxiYWNrIGlzIG5vdCByZXF1aXJlZC5cbiAgaW52b2tlS25vd25IZWxwZXI6IGZ1bmN0aW9uIGludm9rZUtub3duSGVscGVyKHBhcmFtU2l6ZSwgbmFtZSkge1xuICAgIHZhciBoZWxwZXIgPSB0aGlzLnNldHVwSGVscGVyKHBhcmFtU2l6ZSwgbmFtZSk7XG4gICAgdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChoZWxwZXIubmFtZSwgJ2NhbGwnLCBoZWxwZXIuY2FsbFBhcmFtcykpO1xuICB9LFxuXG4gIC8vIFtpbnZva2VBbWJpZ3VvdXNdXG4gIC8vXG4gIC8vIE9uIHN0YWNrLCBiZWZvcmU6IGhhc2gsIGludmVyc2UsIHByb2dyYW0sIHBhcmFtcy4uLiwgLi4uXG4gIC8vIE9uIHN0YWNrLCBhZnRlcjogcmVzdWx0IG9mIGRpc2FtYmlndWF0aW9uXG4gIC8vXG4gIC8vIFRoaXMgb3BlcmF0aW9uIGlzIHVzZWQgd2hlbiBhbiBleHByZXNzaW9uIGxpa2UgYHt7Zm9vfX1gXG4gIC8vIGlzIHByb3ZpZGVkLCBidXQgd2UgZG9uJ3Qga25vdyBhdCBjb21waWxlLXRpbWUgd2hldGhlciBpdFxuICAvLyBpcyBhIGhlbHBlciBvciBhIHBhdGguXG4gIC8vXG4gIC8vIFRoaXMgb3BlcmF0aW9uIGVtaXRzIG1vcmUgY29kZSB0aGFuIHRoZSBvdGhlciBvcHRpb25zLFxuICAvLyBhbmQgY2FuIGJlIGF2b2lkZWQgYnkgcGFzc2luZyB0aGUgYGtub3duSGVscGVyc2AgYW5kXG4gIC8vIGBrbm93bkhlbHBlcnNPbmx5YCBmbGFncyBhdCBjb21waWxlLXRpbWUuXG4gIGludm9rZUFtYmlndW91czogZnVuY3Rpb24gaW52b2tlQW1iaWd1b3VzKG5hbWUsIGhlbHBlckNhbGwpIHtcbiAgICB0aGlzLnVzZVJlZ2lzdGVyKCdoZWxwZXInKTtcblxuICAgIHZhciBub25IZWxwZXIgPSB0aGlzLnBvcFN0YWNrKCk7XG5cbiAgICB0aGlzLmVtcHR5SGFzaCgpO1xuICAgIHZhciBoZWxwZXIgPSB0aGlzLnNldHVwSGVscGVyKDAsIG5hbWUsIGhlbHBlckNhbGwpO1xuXG4gICAgdmFyIGhlbHBlck5hbWUgPSB0aGlzLmxhc3RIZWxwZXIgPSB0aGlzLm5hbWVMb29rdXAoJ2hlbHBlcnMnLCBuYW1lLCAnaGVscGVyJyk7XG5cbiAgICB2YXIgbG9va3VwID0gWycoJywgJyhoZWxwZXIgPSAnLCBoZWxwZXJOYW1lLCAnIHx8ICcsIG5vbkhlbHBlciwgJyknXTtcbiAgICBpZiAoIXRoaXMub3B0aW9ucy5zdHJpY3QpIHtcbiAgICAgIGxvb2t1cFswXSA9ICcoaGVscGVyID0gJztcbiAgICAgIGxvb2t1cC5wdXNoKCcgIT0gbnVsbCA/IGhlbHBlciA6ICcsIHRoaXMuYWxpYXNhYmxlKCdjb250YWluZXIuaG9va3MuaGVscGVyTWlzc2luZycpKTtcbiAgICB9XG5cbiAgICB0aGlzLnB1c2goWycoJywgbG9va3VwLCBoZWxwZXIucGFyYW1zSW5pdCA/IFsnKSwoJywgaGVscGVyLnBhcmFtc0luaXRdIDogW10sICcpLCcsICcodHlwZW9mIGhlbHBlciA9PT0gJywgdGhpcy5hbGlhc2FibGUoJ1wiZnVuY3Rpb25cIicpLCAnID8gJywgdGhpcy5zb3VyY2UuZnVuY3Rpb25DYWxsKCdoZWxwZXInLCAnY2FsbCcsIGhlbHBlci5jYWxsUGFyYW1zKSwgJyA6IGhlbHBlcikpJ10pO1xuICB9LFxuXG4gIC8vIFtpbnZva2VQYXJ0aWFsXVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiBjb250ZXh0LCAuLi5cbiAgLy8gT24gc3RhY2sgYWZ0ZXI6IHJlc3VsdCBvZiBwYXJ0aWFsIGludm9jYXRpb25cbiAgLy9cbiAgLy8gVGhpcyBvcGVyYXRpb24gcG9wcyBvZmYgYSBjb250ZXh0LCBpbnZva2VzIGEgcGFydGlhbCB3aXRoIHRoYXQgY29udGV4dCxcbiAgLy8gYW5kIHB1c2hlcyB0aGUgcmVzdWx0IG9mIHRoZSBpbnZvY2F0aW9uIGJhY2suXG4gIGludm9rZVBhcnRpYWw6IGZ1bmN0aW9uIGludm9rZVBhcnRpYWwoaXNEeW5hbWljLCBuYW1lLCBpbmRlbnQpIHtcbiAgICB2YXIgcGFyYW1zID0gW10sXG4gICAgICAgIG9wdGlvbnMgPSB0aGlzLnNldHVwUGFyYW1zKG5hbWUsIDEsIHBhcmFtcyk7XG5cbiAgICBpZiAoaXNEeW5hbWljKSB7XG4gICAgICBuYW1lID0gdGhpcy5wb3BTdGFjaygpO1xuICAgICAgZGVsZXRlIG9wdGlvbnMubmFtZTtcbiAgICB9XG5cbiAgICBpZiAoaW5kZW50KSB7XG4gICAgICBvcHRpb25zLmluZGVudCA9IEpTT04uc3RyaW5naWZ5KGluZGVudCk7XG4gICAgfVxuICAgIG9wdGlvbnMuaGVscGVycyA9ICdoZWxwZXJzJztcbiAgICBvcHRpb25zLnBhcnRpYWxzID0gJ3BhcnRpYWxzJztcbiAgICBvcHRpb25zLmRlY29yYXRvcnMgPSAnY29udGFpbmVyLmRlY29yYXRvcnMnO1xuXG4gICAgaWYgKCFpc0R5bmFtaWMpIHtcbiAgICAgIHBhcmFtcy51bnNoaWZ0KHRoaXMubmFtZUxvb2t1cCgncGFydGlhbHMnLCBuYW1lLCAncGFydGlhbCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyYW1zLnVuc2hpZnQobmFtZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5jb21wYXQpIHtcbiAgICAgIG9wdGlvbnMuZGVwdGhzID0gJ2RlcHRocyc7XG4gICAgfVxuICAgIG9wdGlvbnMgPSB0aGlzLm9iamVjdExpdGVyYWwob3B0aW9ucyk7XG4gICAgcGFyYW1zLnB1c2gob3B0aW9ucyk7XG5cbiAgICB0aGlzLnB1c2godGhpcy5zb3VyY2UuZnVuY3Rpb25DYWxsKCdjb250YWluZXIuaW52b2tlUGFydGlhbCcsICcnLCBwYXJhbXMpKTtcbiAgfSxcblxuICAvLyBbYXNzaWduVG9IYXNoXVxuICAvL1xuICAvLyBPbiBzdGFjaywgYmVmb3JlOiB2YWx1ZSwgLi4uLCBoYXNoLCAuLi5cbiAgLy8gT24gc3RhY2ssIGFmdGVyOiAuLi4sIGhhc2gsIC4uLlxuICAvL1xuICAvLyBQb3BzIGEgdmFsdWUgb2ZmIHRoZSBzdGFjayBhbmQgYXNzaWducyBpdCB0byB0aGUgY3VycmVudCBoYXNoXG4gIGFzc2lnblRvSGFzaDogZnVuY3Rpb24gYXNzaWduVG9IYXNoKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHRoaXMucG9wU3RhY2soKSxcbiAgICAgICAgY29udGV4dCA9IHVuZGVmaW5lZCxcbiAgICAgICAgdHlwZSA9IHVuZGVmaW5lZCxcbiAgICAgICAgaWQgPSB1bmRlZmluZWQ7XG5cbiAgICBpZiAodGhpcy50cmFja0lkcykge1xuICAgICAgaWQgPSB0aGlzLnBvcFN0YWNrKCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnN0cmluZ1BhcmFtcykge1xuICAgICAgdHlwZSA9IHRoaXMucG9wU3RhY2soKTtcbiAgICAgIGNvbnRleHQgPSB0aGlzLnBvcFN0YWNrKCk7XG4gICAgfVxuXG4gICAgdmFyIGhhc2ggPSB0aGlzLmhhc2g7XG4gICAgaWYgKGNvbnRleHQpIHtcbiAgICAgIGhhc2guY29udGV4dHNba2V5XSA9IGNvbnRleHQ7XG4gICAgfVxuICAgIGlmICh0eXBlKSB7XG4gICAgICBoYXNoLnR5cGVzW2tleV0gPSB0eXBlO1xuICAgIH1cbiAgICBpZiAoaWQpIHtcbiAgICAgIGhhc2guaWRzW2tleV0gPSBpZDtcbiAgICB9XG4gICAgaGFzaC52YWx1ZXNba2V5XSA9IHZhbHVlO1xuICB9LFxuXG4gIHB1c2hJZDogZnVuY3Rpb24gcHVzaElkKHR5cGUsIG5hbWUsIGNoaWxkKSB7XG4gICAgaWYgKHR5cGUgPT09ICdCbG9ja1BhcmFtJykge1xuICAgICAgdGhpcy5wdXNoU3RhY2tMaXRlcmFsKCdibG9ja1BhcmFtc1snICsgbmFtZVswXSArICddLnBhdGhbJyArIG5hbWVbMV0gKyAnXScgKyAoY2hpbGQgPyAnICsgJyArIEpTT04uc3RyaW5naWZ5KCcuJyArIGNoaWxkKSA6ICcnKSk7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnUGF0aEV4cHJlc3Npb24nKSB7XG4gICAgICB0aGlzLnB1c2hTdHJpbmcobmFtZSk7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnU3ViRXhwcmVzc2lvbicpIHtcbiAgICAgIHRoaXMucHVzaFN0YWNrTGl0ZXJhbCgndHJ1ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnB1c2hTdGFja0xpdGVyYWwoJ251bGwnKTtcbiAgICB9XG4gIH0sXG5cbiAgLy8gSEVMUEVSU1xuXG4gIGNvbXBpbGVyOiBKYXZhU2NyaXB0Q29tcGlsZXIsXG5cbiAgY29tcGlsZUNoaWxkcmVuOiBmdW5jdGlvbiBjb21waWxlQ2hpbGRyZW4oZW52aXJvbm1lbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBlbnZpcm9ubWVudC5jaGlsZHJlbixcbiAgICAgICAgY2hpbGQgPSB1bmRlZmluZWQsXG4gICAgICAgIGNvbXBpbGVyID0gdW5kZWZpbmVkO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgICBjb21waWxlciA9IG5ldyB0aGlzLmNvbXBpbGVyKCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbmV3LWNhcFxuXG4gICAgICB2YXIgZXhpc3RpbmcgPSB0aGlzLm1hdGNoRXhpc3RpbmdQcm9ncmFtKGNoaWxkKTtcblxuICAgICAgaWYgKGV4aXN0aW5nID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5jb250ZXh0LnByb2dyYW1zLnB1c2goJycpOyAvLyBQbGFjZWhvbGRlciB0byBwcmV2ZW50IG5hbWUgY29uZmxpY3RzIGZvciBuZXN0ZWQgY2hpbGRyZW5cbiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5jb250ZXh0LnByb2dyYW1zLmxlbmd0aDtcbiAgICAgICAgY2hpbGQuaW5kZXggPSBpbmRleDtcbiAgICAgICAgY2hpbGQubmFtZSA9ICdwcm9ncmFtJyArIGluZGV4O1xuICAgICAgICB0aGlzLmNvbnRleHQucHJvZ3JhbXNbaW5kZXhdID0gY29tcGlsZXIuY29tcGlsZShjaGlsZCwgb3B0aW9ucywgdGhpcy5jb250ZXh0LCAhdGhpcy5wcmVjb21waWxlKTtcbiAgICAgICAgdGhpcy5jb250ZXh0LmRlY29yYXRvcnNbaW5kZXhdID0gY29tcGlsZXIuZGVjb3JhdG9ycztcbiAgICAgICAgdGhpcy5jb250ZXh0LmVudmlyb25tZW50c1tpbmRleF0gPSBjaGlsZDtcblxuICAgICAgICB0aGlzLnVzZURlcHRocyA9IHRoaXMudXNlRGVwdGhzIHx8IGNvbXBpbGVyLnVzZURlcHRocztcbiAgICAgICAgdGhpcy51c2VCbG9ja1BhcmFtcyA9IHRoaXMudXNlQmxvY2tQYXJhbXMgfHwgY29tcGlsZXIudXNlQmxvY2tQYXJhbXM7XG4gICAgICAgIGNoaWxkLnVzZURlcHRocyA9IHRoaXMudXNlRGVwdGhzO1xuICAgICAgICBjaGlsZC51c2VCbG9ja1BhcmFtcyA9IHRoaXMudXNlQmxvY2tQYXJhbXM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjaGlsZC5pbmRleCA9IGV4aXN0aW5nLmluZGV4O1xuICAgICAgICBjaGlsZC5uYW1lID0gJ3Byb2dyYW0nICsgZXhpc3RpbmcuaW5kZXg7XG5cbiAgICAgICAgdGhpcy51c2VEZXB0aHMgPSB0aGlzLnVzZURlcHRocyB8fCBleGlzdGluZy51c2VEZXB0aHM7XG4gICAgICAgIHRoaXMudXNlQmxvY2tQYXJhbXMgPSB0aGlzLnVzZUJsb2NrUGFyYW1zIHx8IGV4aXN0aW5nLnVzZUJsb2NrUGFyYW1zO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgbWF0Y2hFeGlzdGluZ1Byb2dyYW06IGZ1bmN0aW9uIG1hdGNoRXhpc3RpbmdQcm9ncmFtKGNoaWxkKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRoaXMuY29udGV4dC5lbnZpcm9ubWVudHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIHZhciBlbnZpcm9ubWVudCA9IHRoaXMuY29udGV4dC5lbnZpcm9ubWVudHNbaV07XG4gICAgICBpZiAoZW52aXJvbm1lbnQgJiYgZW52aXJvbm1lbnQuZXF1YWxzKGNoaWxkKSkge1xuICAgICAgICByZXR1cm4gZW52aXJvbm1lbnQ7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIHByb2dyYW1FeHByZXNzaW9uOiBmdW5jdGlvbiBwcm9ncmFtRXhwcmVzc2lvbihndWlkKSB7XG4gICAgdmFyIGNoaWxkID0gdGhpcy5lbnZpcm9ubWVudC5jaGlsZHJlbltndWlkXSxcbiAgICAgICAgcHJvZ3JhbVBhcmFtcyA9IFtjaGlsZC5pbmRleCwgJ2RhdGEnLCBjaGlsZC5ibG9ja1BhcmFtc107XG5cbiAgICBpZiAodGhpcy51c2VCbG9ja1BhcmFtcyB8fCB0aGlzLnVzZURlcHRocykge1xuICAgICAgcHJvZ3JhbVBhcmFtcy5wdXNoKCdibG9ja1BhcmFtcycpO1xuICAgIH1cbiAgICBpZiAodGhpcy51c2VEZXB0aHMpIHtcbiAgICAgIHByb2dyYW1QYXJhbXMucHVzaCgnZGVwdGhzJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuICdjb250YWluZXIucHJvZ3JhbSgnICsgcHJvZ3JhbVBhcmFtcy5qb2luKCcsICcpICsgJyknO1xuICB9LFxuXG4gIHVzZVJlZ2lzdGVyOiBmdW5jdGlvbiB1c2VSZWdpc3RlcihuYW1lKSB7XG4gICAgaWYgKCF0aGlzLnJlZ2lzdGVyc1tuYW1lXSkge1xuICAgICAgdGhpcy5yZWdpc3RlcnNbbmFtZV0gPSB0cnVlO1xuICAgICAgdGhpcy5yZWdpc3RlcnMubGlzdC5wdXNoKG5hbWUpO1xuICAgIH1cbiAgfSxcblxuICBwdXNoOiBmdW5jdGlvbiBwdXNoKGV4cHIpIHtcbiAgICBpZiAoIShleHByIGluc3RhbmNlb2YgTGl0ZXJhbCkpIHtcbiAgICAgIGV4cHIgPSB0aGlzLnNvdXJjZS53cmFwKGV4cHIpO1xuICAgIH1cblxuICAgIHRoaXMuaW5saW5lU3RhY2sucHVzaChleHByKTtcbiAgICByZXR1cm4gZXhwcjtcbiAgfSxcblxuICBwdXNoU3RhY2tMaXRlcmFsOiBmdW5jdGlvbiBwdXNoU3RhY2tMaXRlcmFsKGl0ZW0pIHtcbiAgICB0aGlzLnB1c2gobmV3IExpdGVyYWwoaXRlbSkpO1xuICB9LFxuXG4gIHB1c2hTb3VyY2U6IGZ1bmN0aW9uIHB1c2hTb3VyY2Uoc291cmNlKSB7XG4gICAgaWYgKHRoaXMucGVuZGluZ0NvbnRlbnQpIHtcbiAgICAgIHRoaXMuc291cmNlLnB1c2godGhpcy5hcHBlbmRUb0J1ZmZlcih0aGlzLnNvdXJjZS5xdW90ZWRTdHJpbmcodGhpcy5wZW5kaW5nQ29udGVudCksIHRoaXMucGVuZGluZ0xvY2F0aW9uKSk7XG4gICAgICB0aGlzLnBlbmRpbmdDb250ZW50ID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmIChzb3VyY2UpIHtcbiAgICAgIHRoaXMuc291cmNlLnB1c2goc291cmNlKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVwbGFjZVN0YWNrOiBmdW5jdGlvbiByZXBsYWNlU3RhY2soY2FsbGJhY2spIHtcbiAgICB2YXIgcHJlZml4ID0gWycoJ10sXG4gICAgICAgIHN0YWNrID0gdW5kZWZpbmVkLFxuICAgICAgICBjcmVhdGVkU3RhY2sgPSB1bmRlZmluZWQsXG4gICAgICAgIHVzZWRMaXRlcmFsID0gdW5kZWZpbmVkO1xuXG4gICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICBpZiAoIXRoaXMuaXNJbmxpbmUoKSkge1xuICAgICAgdGhyb3cgbmV3IF9leGNlcHRpb24yWydkZWZhdWx0J10oJ3JlcGxhY2VTdGFjayBvbiBub24taW5saW5lJyk7XG4gICAgfVxuXG4gICAgLy8gV2Ugd2FudCB0byBtZXJnZSB0aGUgaW5saW5lIHN0YXRlbWVudCBpbnRvIHRoZSByZXBsYWNlbWVudCBzdGF0ZW1lbnQgdmlhICcsJ1xuICAgIHZhciB0b3AgPSB0aGlzLnBvcFN0YWNrKHRydWUpO1xuXG4gICAgaWYgKHRvcCBpbnN0YW5jZW9mIExpdGVyYWwpIHtcbiAgICAgIC8vIExpdGVyYWxzIGRvIG5vdCBuZWVkIHRvIGJlIGlubGluZWRcbiAgICAgIHN0YWNrID0gW3RvcC52YWx1ZV07XG4gICAgICBwcmVmaXggPSBbJygnLCBzdGFja107XG4gICAgICB1c2VkTGl0ZXJhbCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEdldCBvciBjcmVhdGUgdGhlIGN1cnJlbnQgc3RhY2sgbmFtZSBmb3IgdXNlIGJ5IHRoZSBpbmxpbmVcbiAgICAgIGNyZWF0ZWRTdGFjayA9IHRydWU7XG4gICAgICB2YXIgX25hbWUgPSB0aGlzLmluY3JTdGFjaygpO1xuXG4gICAgICBwcmVmaXggPSBbJygoJywgdGhpcy5wdXNoKF9uYW1lKSwgJyA9ICcsIHRvcCwgJyknXTtcbiAgICAgIHN0YWNrID0gdGhpcy50b3BTdGFjaygpO1xuICAgIH1cblxuICAgIHZhciBpdGVtID0gY2FsbGJhY2suY2FsbCh0aGlzLCBzdGFjayk7XG5cbiAgICBpZiAoIXVzZWRMaXRlcmFsKSB7XG4gICAgICB0aGlzLnBvcFN0YWNrKCk7XG4gICAgfVxuICAgIGlmIChjcmVhdGVkU3RhY2spIHtcbiAgICAgIHRoaXMuc3RhY2tTbG90LS07XG4gICAgfVxuICAgIHRoaXMucHVzaChwcmVmaXguY29uY2F0KGl0ZW0sICcpJykpO1xuICB9LFxuXG4gIGluY3JTdGFjazogZnVuY3Rpb24gaW5jclN0YWNrKCkge1xuICAgIHRoaXMuc3RhY2tTbG90Kys7XG4gICAgaWYgKHRoaXMuc3RhY2tTbG90ID4gdGhpcy5zdGFja1ZhcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLnN0YWNrVmFycy5wdXNoKCdzdGFjaycgKyB0aGlzLnN0YWNrU2xvdCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnRvcFN0YWNrTmFtZSgpO1xuICB9LFxuICB0b3BTdGFja05hbWU6IGZ1bmN0aW9uIHRvcFN0YWNrTmFtZSgpIHtcbiAgICByZXR1cm4gJ3N0YWNrJyArIHRoaXMuc3RhY2tTbG90O1xuICB9LFxuICBmbHVzaElubGluZTogZnVuY3Rpb24gZmx1c2hJbmxpbmUoKSB7XG4gICAgdmFyIGlubGluZVN0YWNrID0gdGhpcy5pbmxpbmVTdGFjaztcbiAgICB0aGlzLmlubGluZVN0YWNrID0gW107XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGlubGluZVN0YWNrLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICB2YXIgZW50cnkgPSBpbmxpbmVTdGFja1tpXTtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGVudHJ5IGluc3RhbmNlb2YgTGl0ZXJhbCkge1xuICAgICAgICB0aGlzLmNvbXBpbGVTdGFjay5wdXNoKGVudHJ5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBzdGFjayA9IHRoaXMuaW5jclN0YWNrKCk7XG4gICAgICAgIHRoaXMucHVzaFNvdXJjZShbc3RhY2ssICcgPSAnLCBlbnRyeSwgJzsnXSk7XG4gICAgICAgIHRoaXMuY29tcGlsZVN0YWNrLnB1c2goc3RhY2spO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgaXNJbmxpbmU6IGZ1bmN0aW9uIGlzSW5saW5lKCkge1xuICAgIHJldHVybiB0aGlzLmlubGluZVN0YWNrLmxlbmd0aDtcbiAgfSxcblxuICBwb3BTdGFjazogZnVuY3Rpb24gcG9wU3RhY2sod3JhcHBlZCkge1xuICAgIHZhciBpbmxpbmUgPSB0aGlzLmlzSW5saW5lKCksXG4gICAgICAgIGl0ZW0gPSAoaW5saW5lID8gdGhpcy5pbmxpbmVTdGFjayA6IHRoaXMuY29tcGlsZVN0YWNrKS5wb3AoKTtcblxuICAgIGlmICghd3JhcHBlZCAmJiBpdGVtIGluc3RhbmNlb2YgTGl0ZXJhbCkge1xuICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghaW5saW5lKSB7XG4gICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgIGlmICghdGhpcy5zdGFja1Nsb3QpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbJ2RlZmF1bHQnXSgnSW52YWxpZCBzdGFjayBwb3AnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YWNrU2xvdC0tO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuICB9LFxuXG4gIHRvcFN0YWNrOiBmdW5jdGlvbiB0b3BTdGFjaygpIHtcbiAgICB2YXIgc3RhY2sgPSB0aGlzLmlzSW5saW5lKCkgPyB0aGlzLmlubGluZVN0YWNrIDogdGhpcy5jb21waWxlU3RhY2ssXG4gICAgICAgIGl0ZW0gPSBzdGFja1tzdGFjay5sZW5ndGggLSAxXTtcblxuICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdGVtIGluc3RhbmNlb2YgTGl0ZXJhbCkge1xuICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgfSxcblxuICBjb250ZXh0TmFtZTogZnVuY3Rpb24gY29udGV4dE5hbWUoY29udGV4dCkge1xuICAgIGlmICh0aGlzLnVzZURlcHRocyAmJiBjb250ZXh0KSB7XG4gICAgICByZXR1cm4gJ2RlcHRoc1snICsgY29udGV4dCArICddJztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICdkZXB0aCcgKyBjb250ZXh0O1xuICAgIH1cbiAgfSxcblxuICBxdW90ZWRTdHJpbmc6IGZ1bmN0aW9uIHF1b3RlZFN0cmluZyhzdHIpIHtcbiAgICByZXR1cm4gdGhpcy5zb3VyY2UucXVvdGVkU3RyaW5nKHN0cik7XG4gIH0sXG5cbiAgb2JqZWN0TGl0ZXJhbDogZnVuY3Rpb24gb2JqZWN0TGl0ZXJhbChvYmopIHtcbiAgICByZXR1cm4gdGhpcy5zb3VyY2Uub2JqZWN0TGl0ZXJhbChvYmopO1xuICB9LFxuXG4gIGFsaWFzYWJsZTogZnVuY3Rpb24gYWxpYXNhYmxlKG5hbWUpIHtcbiAgICB2YXIgcmV0ID0gdGhpcy5hbGlhc2VzW25hbWVdO1xuICAgIGlmIChyZXQpIHtcbiAgICAgIHJldC5yZWZlcmVuY2VDb3VudCsrO1xuICAgICAgcmV0dXJuIHJldDtcbiAgICB9XG5cbiAgICByZXQgPSB0aGlzLmFsaWFzZXNbbmFtZV0gPSB0aGlzLnNvdXJjZS53cmFwKG5hbWUpO1xuICAgIHJldC5hbGlhc2FibGUgPSB0cnVlO1xuICAgIHJldC5yZWZlcmVuY2VDb3VudCA9IDE7XG5cbiAgICByZXR1cm4gcmV0O1xuICB9LFxuXG4gIHNldHVwSGVscGVyOiBmdW5jdGlvbiBzZXR1cEhlbHBlcihwYXJhbVNpemUsIG5hbWUsIGJsb2NrSGVscGVyKSB7XG4gICAgdmFyIHBhcmFtcyA9IFtdLFxuICAgICAgICBwYXJhbXNJbml0ID0gdGhpcy5zZXR1cEhlbHBlckFyZ3MobmFtZSwgcGFyYW1TaXplLCBwYXJhbXMsIGJsb2NrSGVscGVyKTtcbiAgICB2YXIgZm91bmRIZWxwZXIgPSB0aGlzLm5hbWVMb29rdXAoJ2hlbHBlcnMnLCBuYW1lLCAnaGVscGVyJyksXG4gICAgICAgIGNhbGxDb250ZXh0ID0gdGhpcy5hbGlhc2FibGUodGhpcy5jb250ZXh0TmFtZSgwKSArICcgIT0gbnVsbCA/ICcgKyB0aGlzLmNvbnRleHROYW1lKDApICsgJyA6IChjb250YWluZXIubnVsbENvbnRleHQgfHwge30pJyk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgICBwYXJhbXNJbml0OiBwYXJhbXNJbml0LFxuICAgICAgbmFtZTogZm91bmRIZWxwZXIsXG4gICAgICBjYWxsUGFyYW1zOiBbY2FsbENvbnRleHRdLmNvbmNhdChwYXJhbXMpXG4gICAgfTtcbiAgfSxcblxuICBzZXR1cFBhcmFtczogZnVuY3Rpb24gc2V0dXBQYXJhbXMoaGVscGVyLCBwYXJhbVNpemUsIHBhcmFtcykge1xuICAgIHZhciBvcHRpb25zID0ge30sXG4gICAgICAgIGNvbnRleHRzID0gW10sXG4gICAgICAgIHR5cGVzID0gW10sXG4gICAgICAgIGlkcyA9IFtdLFxuICAgICAgICBvYmplY3RBcmdzID0gIXBhcmFtcyxcbiAgICAgICAgcGFyYW0gPSB1bmRlZmluZWQ7XG5cbiAgICBpZiAob2JqZWN0QXJncykge1xuICAgICAgcGFyYW1zID0gW107XG4gICAgfVxuXG4gICAgb3B0aW9ucy5uYW1lID0gdGhpcy5xdW90ZWRTdHJpbmcoaGVscGVyKTtcbiAgICBvcHRpb25zLmhhc2ggPSB0aGlzLnBvcFN0YWNrKCk7XG5cbiAgICBpZiAodGhpcy50cmFja0lkcykge1xuICAgICAgb3B0aW9ucy5oYXNoSWRzID0gdGhpcy5wb3BTdGFjaygpO1xuICAgIH1cbiAgICBpZiAodGhpcy5zdHJpbmdQYXJhbXMpIHtcbiAgICAgIG9wdGlvbnMuaGFzaFR5cGVzID0gdGhpcy5wb3BTdGFjaygpO1xuICAgICAgb3B0aW9ucy5oYXNoQ29udGV4dHMgPSB0aGlzLnBvcFN0YWNrKCk7XG4gICAgfVxuXG4gICAgdmFyIGludmVyc2UgPSB0aGlzLnBvcFN0YWNrKCksXG4gICAgICAgIHByb2dyYW0gPSB0aGlzLnBvcFN0YWNrKCk7XG5cbiAgICAvLyBBdm9pZCBzZXR0aW5nIGZuIGFuZCBpbnZlcnNlIGlmIG5laXRoZXIgYXJlIHNldC4gVGhpcyBhbGxvd3NcbiAgICAvLyBoZWxwZXJzIHRvIGRvIGEgY2hlY2sgZm9yIGBpZiAob3B0aW9ucy5mbilgXG4gICAgaWYgKHByb2dyYW0gfHwgaW52ZXJzZSkge1xuICAgICAgb3B0aW9ucy5mbiA9IHByb2dyYW0gfHwgJ2NvbnRhaW5lci5ub29wJztcbiAgICAgIG9wdGlvbnMuaW52ZXJzZSA9IGludmVyc2UgfHwgJ2NvbnRhaW5lci5ub29wJztcbiAgICB9XG5cbiAgICAvLyBUaGUgcGFyYW1ldGVycyBnbyBvbiB0byB0aGUgc3RhY2sgaW4gb3JkZXIgKG1ha2luZyBzdXJlIHRoYXQgdGhleSBhcmUgZXZhbHVhdGVkIGluIG9yZGVyKVxuICAgIC8vIHNvIHdlIG5lZWQgdG8gcG9wIHRoZW0gb2ZmIHRoZSBzdGFjayBpbiByZXZlcnNlIG9yZGVyXG4gICAgdmFyIGkgPSBwYXJhbVNpemU7XG4gICAgd2hpbGUgKGktLSkge1xuICAgICAgcGFyYW0gPSB0aGlzLnBvcFN0YWNrKCk7XG4gICAgICBwYXJhbXNbaV0gPSBwYXJhbTtcblxuICAgICAgaWYgKHRoaXMudHJhY2tJZHMpIHtcbiAgICAgICAgaWRzW2ldID0gdGhpcy5wb3BTdGFjaygpO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMuc3RyaW5nUGFyYW1zKSB7XG4gICAgICAgIHR5cGVzW2ldID0gdGhpcy5wb3BTdGFjaygpO1xuICAgICAgICBjb250ZXh0c1tpXSA9IHRoaXMucG9wU3RhY2soKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAob2JqZWN0QXJncykge1xuICAgICAgb3B0aW9ucy5hcmdzID0gdGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheShwYXJhbXMpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRyYWNrSWRzKSB7XG4gICAgICBvcHRpb25zLmlkcyA9IHRoaXMuc291cmNlLmdlbmVyYXRlQXJyYXkoaWRzKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuc3RyaW5nUGFyYW1zKSB7XG4gICAgICBvcHRpb25zLnR5cGVzID0gdGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheSh0eXBlcyk7XG4gICAgICBvcHRpb25zLmNvbnRleHRzID0gdGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheShjb250ZXh0cyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kYXRhKSB7XG4gICAgICBvcHRpb25zLmRhdGEgPSAnZGF0YSc7XG4gICAgfVxuICAgIGlmICh0aGlzLnVzZUJsb2NrUGFyYW1zKSB7XG4gICAgICBvcHRpb25zLmJsb2NrUGFyYW1zID0gJ2Jsb2NrUGFyYW1zJztcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnM7XG4gIH0sXG5cbiAgc2V0dXBIZWxwZXJBcmdzOiBmdW5jdGlvbiBzZXR1cEhlbHBlckFyZ3MoaGVscGVyLCBwYXJhbVNpemUsIHBhcmFtcywgdXNlUmVnaXN0ZXIpIHtcbiAgICB2YXIgb3B0aW9ucyA9IHRoaXMuc2V0dXBQYXJhbXMoaGVscGVyLCBwYXJhbVNpemUsIHBhcmFtcyk7XG4gICAgb3B0aW9ucy5sb2MgPSBKU09OLnN0cmluZ2lmeSh0aGlzLnNvdXJjZS5jdXJyZW50TG9jYXRpb24pO1xuICAgIG9wdGlvbnMgPSB0aGlzLm9iamVjdExpdGVyYWwob3B0aW9ucyk7XG4gICAgaWYgKHVzZVJlZ2lzdGVyKSB7XG4gICAgICB0aGlzLnVzZVJlZ2lzdGVyKCdvcHRpb25zJyk7XG4gICAgICBwYXJhbXMucHVzaCgnb3B0aW9ucycpO1xuICAgICAgcmV0dXJuIFsnb3B0aW9ucz0nLCBvcHRpb25zXTtcbiAgICB9IGVsc2UgaWYgKHBhcmFtcykge1xuICAgICAgcGFyYW1zLnB1c2gob3B0aW9ucyk7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbiAgfVxufTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlc2VydmVkV29yZHMgPSAoJ2JyZWFrIGVsc2UgbmV3IHZhcicgKyAnIGNhc2UgZmluYWxseSByZXR1cm4gdm9pZCcgKyAnIGNhdGNoIGZvciBzd2l0Y2ggd2hpbGUnICsgJyBjb250aW51ZSBmdW5jdGlvbiB0aGlzIHdpdGgnICsgJyBkZWZhdWx0IGlmIHRocm93JyArICcgZGVsZXRlIGluIHRyeScgKyAnIGRvIGluc3RhbmNlb2YgdHlwZW9mJyArICcgYWJzdHJhY3QgZW51bSBpbnQgc2hvcnQnICsgJyBib29sZWFuIGV4cG9ydCBpbnRlcmZhY2Ugc3RhdGljJyArICcgYnl0ZSBleHRlbmRzIGxvbmcgc3VwZXInICsgJyBjaGFyIGZpbmFsIG5hdGl2ZSBzeW5jaHJvbml6ZWQnICsgJyBjbGFzcyBmbG9hdCBwYWNrYWdlIHRocm93cycgKyAnIGNvbnN0IGdvdG8gcHJpdmF0ZSB0cmFuc2llbnQnICsgJyBkZWJ1Z2dlciBpbXBsZW1lbnRzIHByb3RlY3RlZCB2b2xhdGlsZScgKyAnIGRvdWJsZSBpbXBvcnQgcHVibGljIGxldCB5aWVsZCBhd2FpdCcgKyAnIG51bGwgdHJ1ZSBmYWxzZScpLnNwbGl0KCcgJyk7XG5cbiAgdmFyIGNvbXBpbGVyV29yZHMgPSBKYXZhU2NyaXB0Q29tcGlsZXIuUkVTRVJWRURfV09SRFMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMCwgbCA9IHJlc2VydmVkV29yZHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgY29tcGlsZXJXb3Jkc1tyZXNlcnZlZFdvcmRzW2ldXSA9IHRydWU7XG4gIH1cbn0pKCk7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgTWF5IGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgdmVyc2lvblxuICovXG5KYXZhU2NyaXB0Q29tcGlsZXIuaXNWYWxpZEphdmFTY3JpcHRWYXJpYWJsZU5hbWUgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gIUphdmFTY3JpcHRDb21waWxlci5SRVNFUlZFRF9XT1JEU1tuYW1lXSAmJiAvXlthLXpBLVpfJF1bMC05YS16QS1aXyRdKiQvLnRlc3QobmFtZSk7XG59O1xuXG5mdW5jdGlvbiBzdHJpY3RMb29rdXAocmVxdWlyZVRlcm1pbmFsLCBjb21waWxlciwgcGFydHMsIHR5cGUpIHtcbiAgdmFyIHN0YWNrID0gY29tcGlsZXIucG9wU3RhY2soKSxcbiAgICAgIGkgPSAwLFxuICAgICAgbGVuID0gcGFydHMubGVuZ3RoO1xuICBpZiAocmVxdWlyZVRlcm1pbmFsKSB7XG4gICAgbGVuLS07XG4gIH1cblxuICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgc3RhY2sgPSBjb21waWxlci5uYW1lTG9va3VwKHN0YWNrLCBwYXJ0c1tpXSwgdHlwZSk7XG4gIH1cblxuICBpZiAocmVxdWlyZVRlcm1pbmFsKSB7XG4gICAgcmV0dXJuIFtjb21waWxlci5hbGlhc2FibGUoJ2NvbnRhaW5lci5zdHJpY3QnKSwgJygnLCBzdGFjaywgJywgJywgY29tcGlsZXIucXVvdGVkU3RyaW5nKHBhcnRzW2ldKSwgJywgJywgSlNPTi5zdHJpbmdpZnkoY29tcGlsZXIuc291cmNlLmN1cnJlbnRMb2NhdGlvbiksICcgKSddO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdGFjaztcbiAgfVxufVxuXG5leHBvcnRzWydkZWZhdWx0J10gPSBKYXZhU2NyaXB0Q29tcGlsZXI7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1THk0dUx5NHVMMnhwWWk5b1lXNWtiR1ZpWVhKekwyTnZiWEJwYkdWeUwycGhkbUZ6WTNKcGNIUXRZMjl0Y0dsc1pYSXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN096dHZRa0ZCYjBRc1UwRkJVenM3ZVVKQlEzWkRMR05CUVdNN096czdjVUpCUTFvc1ZVRkJWVHM3ZFVKQlEyUXNXVUZCV1RzN096dEJRVVZvUXl4VFFVRlRMRTlCUVU4c1EwRkJReXhMUVVGTExFVkJRVVU3UVVGRGRFSXNUVUZCU1N4RFFVRkRMRXRCUVVzc1IwRkJSeXhMUVVGTExFTkJRVU03UTBGRGNFSTdPMEZCUlVRc1UwRkJVeXhyUWtGQmEwSXNSMEZCUnl4RlFVRkZPenRCUVVWb1F5eHJRa0ZCYTBJc1EwRkJReXhUUVVGVExFZEJRVWM3T3p0QlFVYzNRaXhaUVVGVkxFVkJRVVVzYjBKQlFWTXNUVUZCVFN4RlFVRkZMRWxCUVVrc1pVRkJaVHRCUVVNNVF5eFhRVUZQTEVsQlFVa3NRMEZCUXl4clFrRkJhMElzUTBGQlF5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN1IwRkRPVU03UVVGRFJDeGxRVUZoTEVWQlFVVXNkVUpCUVZNc1NVRkJTU3hGUVVGRk8wRkJRelZDTEZkQlFVOHNRMEZEVEN4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExHdENRVUZyUWl4RFFVRkRMRVZCUTJ4RExGZEJRVmNzUlVGRFdDeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhGUVVOd1FpeEhRVUZITEVOQlEwb3NRMEZCUXp0SFFVTklPenRCUVVWRUxHTkJRVmtzUlVGQlJTeDNRa0ZCVnp0QlFVTjJRaXhSUVVGTkxGRkJRVkVzTUVKQlFXOUNPMUZCUTJoRExGRkJRVkVzUjBGQlJ5eDFRa0ZCYVVJc1VVRkJVU3hEUVVGRExFTkJRVU03UVVGRGVFTXNWMEZCVHl4RFFVRkRMRkZCUVZFc1JVRkJSU3hSUVVGUkxFTkJRVU1zUTBGQlF6dEhRVU0zUWpzN1FVRkZSQ3huUWtGQll5eEZRVUZGTEhkQ1FVRlRMRTFCUVUwc1JVRkJSU3hSUVVGUkxFVkJRVVVzVVVGQlVTeEZRVUZGT3p0QlFVVnVSQ3hSUVVGSkxFTkJRVU1zWlVGQlVTeE5RVUZOTEVOQlFVTXNSVUZCUlR0QlFVTndRaXhaUVVGTkxFZEJRVWNzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0TFFVTnVRanRCUVVORUxGVkJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzVVVGQlVTeERRVUZETEVOQlFVTTdPMEZCUlRWRExGRkJRVWtzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4UlFVRlJMRVZCUVVVN1FVRkROMElzWVVGQlR5eERRVUZETEZOQlFWTXNSVUZCUlN4TlFVRk5MRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU03UzBGRGFrTXNUVUZCVFN4SlFVRkpMRkZCUVZFc1JVRkJSVHM3T3p0QlFVbHVRaXhoUVVGUExFTkJRVU1zV1VGQldTeEZRVUZGTEUxQlFVMHNSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJRenRMUVVOd1F5eE5RVUZOTzBGQlEwd3NXVUZCVFN4RFFVRkRMR05CUVdNc1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRE4wSXNZVUZCVHl4TlFVRk5MRU5CUVVNN1MwRkRaanRIUVVOR096dEJRVVZFTEd0Q1FVRm5RaXhGUVVGRkxEUkNRVUZYTzBGQlF6TkNMRmRCUVU4c1NVRkJTU3hEUVVGRExGbEJRVmtzUTBGQlF5eEZRVUZGTEVOQlFVTXNRMEZCUXp0SFFVTTVRanM3UVVGRlJDeHZRa0ZCYTBJc1JVRkJSU3cwUWtGQlV5eE5RVUZOTEVWQlFVVXNTVUZCU1N4RlFVRkZPMEZCUTNwRExGRkJRVWtzUTBGQlF5dzBRa0ZCTkVJc1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRGVrTXNWMEZCVHl4RFFVRkRMR2xDUVVGcFFpeEZRVUZGTEUxQlFVMHNSVUZCUlN4SFFVRkhMRVZCUVVVc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJRenRIUVVOd1JUczdRVUZGUkN3NFFrRkJORUlzUlVGQlJTeExRVUZMT3p0QlFVVnVReXhUUVVGUExFVkJRVVVzYVVKQlFWTXNWMEZCVnl4RlFVRkZMRTlCUVU4c1JVRkJSU3hQUVVGUExFVkJRVVVzVVVGQlVTeEZRVUZGTzBGQlEzcEVMRkZCUVVrc1EwRkJReXhYUVVGWExFZEJRVWNzVjBGQlZ5eERRVUZETzBGQlF5OUNMRkZCUVVrc1EwRkJReXhQUVVGUExFZEJRVWNzVDBGQlR5eERRVUZETzBGQlEzWkNMRkZCUVVrc1EwRkJReXhaUVVGWkxFZEJRVWNzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4WlFVRlpMRU5CUVVNN1FVRkRPVU1zVVVGQlNTeERRVUZETEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF6dEJRVU4wUXl4UlFVRkpMRU5CUVVNc1ZVRkJWU3hIUVVGSExFTkJRVU1zVVVGQlVTeERRVUZET3p0QlFVVTFRaXhSUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1NVRkJTU3hEUVVGRE8wRkJRMnhETEZGQlFVa3NRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJReXhEUVVGRExFOUJRVThzUTBGQlF6dEJRVU42UWl4UlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFOUJRVThzU1VGQlNUdEJRVU40UWl4blFrRkJWU3hGUVVGRkxFVkJRVVU3UVVGRFpDeGpRVUZSTEVWQlFVVXNSVUZCUlR0QlFVTmFMR3RDUVVGWkxFVkJRVVVzUlVGQlJUdExRVU5xUWl4RFFVRkRPenRCUVVWR0xGRkJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXpzN1FVRkZhRUlzVVVGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1FVRkRia0lzVVVGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4RlFVRkZMRU5CUVVNN1FVRkRjRUlzVVVGQlNTeERRVUZETEU5QlFVOHNSMEZCUnl4RlFVRkZMRU5CUVVNN1FVRkRiRUlzVVVGQlNTeERRVUZETEZOQlFWTXNSMEZCUnl4RlFVRkZMRWxCUVVrc1JVRkJSU3hGUVVGRkxFVkJRVVVzUTBGQlF6dEJRVU01UWl4UlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU5xUWl4UlFVRkpMRU5CUVVNc1dVRkJXU3hIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU4yUWl4UlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFVkJRVVVzUTBGQlF6dEJRVU4wUWl4UlFVRkpMRU5CUVVNc1YwRkJWeXhIUVVGSExFVkJRVVVzUTBGQlF6czdRVUZGZEVJc1VVRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eFhRVUZYTEVWQlFVVXNUMEZCVHl4RFFVRkRMRU5CUVVNN08wRkJSVE5ETEZGQlFVa3NRMEZCUXl4VFFVRlRMRWRCUTFvc1NVRkJTU3hEUVVGRExGTkJRVk1zU1VGRFpDeFhRVUZYTEVOQlFVTXNVMEZCVXl4SlFVTnlRaXhYUVVGWExFTkJRVU1zWVVGQllTeEpRVU42UWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF6dEJRVU4wUWl4UlFVRkpMRU5CUVVNc1kwRkJZeXhIUVVGSExFbEJRVWtzUTBGQlF5eGpRVUZqTEVsQlFVa3NWMEZCVnl4RFFVRkRMR05CUVdNc1EwRkJRenM3UVVGRmVFVXNVVUZCU1N4UFFVRlBMRWRCUVVjc1YwRkJWeXhEUVVGRExFOUJRVTg3VVVGREwwSXNUVUZCVFN4WlFVRkJPMUZCUTA0c1VVRkJVU3haUVVGQk8xRkJRMUlzUTBGQlF5eFpRVUZCTzFGQlEwUXNRMEZCUXl4WlFVRkJMRU5CUVVNN08wRkJSVW9zVTBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4RlFVRkZMRU5CUVVNc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3UVVGRE1VTXNXVUZCVFN4SFFVRkhMRTlCUVU4c1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6czdRVUZGY0VJc1ZVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eGxRVUZsTEVkQlFVY3NUVUZCVFN4RFFVRkRMRWRCUVVjc1EwRkJRenRCUVVONlF5eGpRVUZSTEVkQlFVY3NVVUZCVVN4SlFVRkpMRTFCUVUwc1EwRkJReXhIUVVGSExFTkJRVU03UVVGRGJFTXNWVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU01UXpzN08wRkJSMFFzVVVGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4bFFVRmxMRWRCUVVjc1VVRkJVU3hEUVVGRE8wRkJRM1pETEZGQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkJSU3hEUVVGRExFTkJRVU03T3p0QlFVZHdRaXhSUVVGSkxFbEJRVWtzUTBGQlF5eFRRVUZUTEVsQlFVa3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhOUVVGTkxFbEJRVWtzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4TlFVRk5MRVZCUVVVN1FVRkRla1VzV1VGQlRTd3lRa0ZCWXl3NFEwRkJPRU1zUTBGQlF5eERRVUZETzB0QlEzSkZPenRCUVVWRUxGRkJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRTlCUVU4c1JVRkJSU3hGUVVGRk8wRkJRemxDTEZWQlFVa3NRMEZCUXl4aFFVRmhMRWRCUVVjc1NVRkJTU3hEUVVGRE96dEJRVVV4UWl4VlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVU4wUWl4NVEwRkJlVU1zUlVGRGVrTXNTVUZCU1N4RFFVRkRMRzlEUVVGdlF5eEZRVUZGTEVWQlF6TkRMRXRCUVVzc1EwRkRUaXhEUVVGRExFTkJRVU03UVVGRFNDeFZRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zUTBGQlF6czdRVUZGYmtNc1ZVRkJTU3hSUVVGUkxFVkJRVVU3UVVGRFdpeFpRVUZKTEVOQlFVTXNWVUZCVlN4SFFVRkhMRkZCUVZFc1EwRkJReXhMUVVGTExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlEzSkRMRWxCUVVrc1JVRkRTaXhQUVVGUExFVkJRMUFzVjBGQlZ5eEZRVU5ZTEZGQlFWRXNSVUZEVWl4TlFVRk5MRVZCUTA0c1lVRkJZU3hGUVVOaUxGRkJRVkVzUlVGRFVpeEpRVUZKTEVOQlFVTXNWVUZCVlN4RFFVRkRMRXRCUVVzc1JVRkJSU3hEUVVONFFpeERRVUZETEVOQlFVTTdUMEZEU2l4TlFVRk5PMEZCUTB3c1dVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eFBRVUZQTEVOQlEzSkNMSFZGUVVGMVJTeERRVU40UlN4RFFVRkRPMEZCUTBZc1dVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1FVRkROVUlzV1VGQlNTeERRVUZETEZWQlFWVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFdEJRVXNzUlVGQlJTeERRVUZETzA5QlF6TkRPMHRCUTBZc1RVRkJUVHRCUVVOTUxGVkJRVWtzUTBGQlF5eFZRVUZWTEVkQlFVY3NVMEZCVXl4RFFVRkRPMHRCUXpkQ096dEJRVVZFTEZGQlFVa3NSVUZCUlN4SFFVRkhMRWxCUVVrc1EwRkJReXh4UWtGQmNVSXNRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJRenRCUVVNNVF5eFJRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1JVRkJSVHRCUVVOcVFpeFZRVUZKTEVkQlFVY3NSMEZCUnp0QlFVTlNMR2RDUVVGUkxFVkJRVVVzU1VGQlNTeERRVUZETEZsQlFWa3NSVUZCUlR0QlFVTTNRaXhaUVVGSkxFVkJRVVVzUlVGQlJUdFBRVU5VTEVOQlFVTTdPMEZCUlVZc1ZVRkJTU3hKUVVGSkxFTkJRVU1zVlVGQlZTeEZRVUZGTzBGQlEyNUNMRmRCUVVjc1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXp0QlFVTTNRaXhYUVVGSExFTkJRVU1zWVVGQllTeEhRVUZITEVsQlFVa3NRMEZCUXp0UFFVTXhRanM3Y1VKQlJUaENMRWxCUVVrc1EwRkJReXhQUVVGUE8xVkJRWEpETEZGQlFWRXNXVUZCVWl4UlFVRlJPMVZCUVVVc1ZVRkJWU3haUVVGV0xGVkJRVlU3TzBGQlF6RkNMRmRCUVVzc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUXpORExGbEJRVWtzVVVGQlVTeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZPMEZCUTJZc1lVRkJSeXhEUVVGRExFTkJRVU1zUTBGQlF5eEhRVUZITEZGQlFWRXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRCUVVOeVFpeGpRVUZKTEZWQlFWVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSVHRCUVVOcVFpeGxRVUZITEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhIUVVGSExGVkJRVlVzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTTVRaXhsUVVGSExFTkJRVU1zWVVGQllTeEhRVUZITEVsQlFVa3NRMEZCUXp0WFFVTXhRanRUUVVOR08wOUJRMFk3TzBGQlJVUXNWVUZCU1N4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGVkJRVlVzUlVGQlJUdEJRVU12UWl4WFFVRkhMRU5CUVVNc1ZVRkJWU3hIUVVGSExFbEJRVWtzUTBGQlF6dFBRVU4yUWp0QlFVTkVMRlZCUVVrc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVWQlFVVTdRVUZEY2tJc1YwRkJSeXhEUVVGRExFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTTdUMEZEY0VJN1FVRkRSQ3hWUVVGSkxFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdRVUZEYkVJc1YwRkJSeXhEUVVGRExGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTTdUMEZEZEVJN1FVRkRSQ3hWUVVGSkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVTdRVUZEZGtJc1YwRkJSeXhEUVVGRExHTkJRV01zUjBGQlJ5eEpRVUZKTEVOQlFVTTdUMEZETTBJN1FVRkRSQ3hWUVVGSkxFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4RlFVRkZPMEZCUTNaQ0xGZEJRVWNzUTBGQlF5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRPMDlCUTI1Q096dEJRVVZFTEZWQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVN1FVRkRZaXhYUVVGSExFTkJRVU1zVVVGQlVTeEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZET3p0QlFVVTFReXhaUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEdWQlFXVXNSMEZCUnl4RlFVRkZMRXRCUVVzc1JVRkJSU3hGUVVGRkxFbEJRVWtzUlVGQlJTeERRVUZETEVWQlFVVXNUVUZCVFN4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU03UVVGRGFFVXNWMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhoUVVGaExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdPMEZCUlRsQ0xGbEJRVWtzVDBGQlR5eERRVUZETEU5QlFVOHNSVUZCUlR0QlFVTnVRaXhoUVVGSExFZEJRVWNzUjBGQlJ5eERRVUZETEhGQ1FVRnhRaXhEUVVGRExFVkJRVVVzU1VGQlNTeEZRVUZGTEU5QlFVOHNRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJReXhEUVVGRE8wRkJRelZFTEdGQlFVY3NRMEZCUXl4SFFVRkhMRWRCUVVjc1IwRkJSeXhEUVVGRExFZEJRVWNzU1VGQlNTeEhRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8xTkJRM3BETEUxQlFVMDdRVUZEVEN4aFFVRkhMRWRCUVVjc1IwRkJSeXhEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETzFOQlEzUkNPMDlCUTBZc1RVRkJUVHRCUVVOTUxGZEJRVWNzUTBGQlF5eGxRVUZsTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJRenRQUVVOd1F6czdRVUZGUkN4aFFVRlBMRWRCUVVjc1EwRkJRenRMUVVOYUxFMUJRVTA3UVVGRFRDeGhRVUZQTEVWQlFVVXNRMEZCUXp0TFFVTllPMGRCUTBZN08wRkJSVVFzVlVGQlVTeEZRVUZGTEc5Q1FVRlhPenM3UVVGSGJrSXNVVUZCU1N4RFFVRkRMRmRCUVZjc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRGNrSXNVVUZCU1N4RFFVRkRMRTFCUVUwc1IwRkJSeXg1UWtGQldTeEpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRTlCUVU4c1EwRkJReXhEUVVGRE8wRkJRMmhFTEZGQlFVa3NRMEZCUXl4VlFVRlZMRWRCUVVjc2VVSkJRVmtzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRIUVVOeVJEczdRVUZGUkN4MVFrRkJjVUlzUlVGQlJTd3JRa0ZCVXl4UlFVRlJMRVZCUVVVN096czdPMEZCUTNoRExGRkJRVWtzWlVGQlpTeEhRVUZITEVWQlFVVXNRMEZCUXpzN1FVRkZla0lzVVVGQlNTeE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRk5CUVZNc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVONFJDeFJRVUZKTEUxQlFVMHNRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhGUVVGRk8wRkJRM0pDTEhGQ1FVRmxMRWxCUVVrc1NVRkJTU3hIUVVGSExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRU5CUVVNN1MwRkROME03T3pzN096czdPMEZCVVVRc1VVRkJTU3hWUVVGVkxFZEJRVWNzUTBGQlF5eERRVUZETzBGQlEyNUNMRlZCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGQkxFdEJRVXNzUlVGQlNUdEJRVU42UXl4VlFVRkpMRWxCUVVrc1IwRkJSeXhOUVVGTExFOUJRVThzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0QlFVTXZRaXhWUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZSTEVsQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1IwRkJSeXhEUVVGRExFVkJRVVU3UVVGRE5VTXNkVUpCUVdVc1NVRkJTU3hUUVVGVExFZEJRVWNzUlVGQlJTeFZRVUZWTEVkQlFVY3NSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJRenRCUVVNeFJDeFpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExFOUJRVThzUjBGQlJ5eFZRVUZWTEVOQlFVTTdUMEZEZWtNN1MwRkRSaXhEUVVGRExFTkJRVU03TzBGQlJVZ3NVVUZCU1N4SlFVRkpMRU5CUVVNc05FSkJRVFJDTEVWQlFVVTdRVUZEY2tNc2NVSkJRV1VzU1VGQlNTeEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRzlEUVVGdlF5eEZRVUZGTEVOQlFVTTdTMEZEZGtVN08wRkJSVVFzVVVGQlNTeE5RVUZOTEVkQlFVY3NRMEZCUXl4WFFVRlhMRVZCUVVVc1VVRkJVU3hGUVVGRkxGTkJRVk1zUlVGQlJTeFZRVUZWTEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN08wRkJSWEJGTEZGQlFVa3NTVUZCU1N4RFFVRkRMR05CUVdNc1NVRkJTU3hKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTzBGQlEzcERMRmxCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVOQlFVTTdTMEZETlVJN1FVRkRSQ3hSUVVGSkxFbEJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdRVUZEYkVJc1dVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eFJRVUZSTEVOQlFVTXNRMEZCUXp0TFFVTjJRanM3TzBGQlIwUXNVVUZCU1N4TlFVRk5MRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUTBGQlF5eGxRVUZsTEVOQlFVTXNRMEZCUXpzN1FVRkZMME1zVVVGQlNTeFJRVUZSTEVWQlFVVTdRVUZEV2l4WlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZET3p0QlFVVndRaXhoUVVGUExGRkJRVkVzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8wdEJRM0pETEUxQlFVMDdRVUZEVEN4aFFVRlBMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlEzUkNMRmRCUVZjc1JVRkRXQ3hOUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4RlFVTm9RaXhUUVVGVExFVkJRMVFzVFVGQlRTeEZRVU5PTEVkQlFVY3NRMEZEU2l4RFFVRkRMRU5CUVVNN1MwRkRTanRIUVVOR08wRkJRMFFzWVVGQlZ5eEZRVUZGTEhGQ1FVRlRMR1ZCUVdVc1JVRkJSVHRCUVVOeVF5eFJRVUZKTEZGQlFWRXNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGRkJRVkU3VVVGRGRFTXNWVUZCVlN4SFFVRkhMRU5CUVVNc1NVRkJTU3hEUVVGRExGZEJRVmM3VVVGRE9VSXNWMEZCVnl4WlFVRkJPMUZCUTFnc1ZVRkJWU3haUVVGQk8xRkJRMVlzVjBGQlZ5eFpRVUZCTzFGQlExZ3NVMEZCVXl4WlFVRkJMRU5CUVVNN1FVRkRXaXhSUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4VlFVRkJMRWxCUVVrc1JVRkJTVHRCUVVOMlFpeFZRVUZKTEVsQlFVa3NRMEZCUXl4alFVRmpMRVZCUVVVN1FVRkRka0lzV1VGQlNTeFhRVUZYTEVWQlFVVTdRVUZEWml4alFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzFOQlEzUkNMRTFCUVUwN1FVRkRUQ3h4UWtGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUXp0VFFVTndRanRCUVVORUxHbENRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRPMDlCUTJ4Q0xFMUJRVTA3UVVGRFRDeFpRVUZKTEZkQlFWY3NSVUZCUlR0QlFVTm1MR05CUVVrc1EwRkJReXhWUVVGVkxFVkJRVVU3UVVGRFppeDFRa0ZCVnl4SFFVRkhMRWxCUVVrc1EwRkJRenRYUVVOd1FpeE5RVUZOTzBGQlEwd3NkVUpCUVZjc1EwRkJReXhQUVVGUExFTkJRVU1zV1VGQldTeERRVUZETEVOQlFVTTdWMEZEYmtNN1FVRkRSQ3h0UWtGQlV5eERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOdVFpeHhRa0ZCVnl4SFFVRkhMRk5CUVZNc1IwRkJSeXhUUVVGVExFTkJRVU03VTBGRGNrTTdPMEZCUlVRc2EwSkJRVlVzUjBGQlJ5eEpRVUZKTEVOQlFVTTdRVUZEYkVJc1dVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5pTEc5Q1FVRlZMRWRCUVVjc1MwRkJTeXhEUVVGRE8xTkJRM0JDTzA5QlEwWTdTMEZEUml4RFFVRkRMRU5CUVVNN08wRkJSVWdzVVVGQlNTeFZRVUZWTEVWQlFVVTdRVUZEWkN4VlFVRkpMRmRCUVZjc1JVRkJSVHRCUVVObUxHMUNRVUZYTEVOQlFVTXNUMEZCVHl4RFFVRkRMRk5CUVZNc1EwRkJReXhEUVVGRE8wRkJReTlDTEdsQ1FVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzA5QlEzQkNMRTFCUVUwc1NVRkJTU3hEUVVGRExGVkJRVlVzUlVGQlJUdEJRVU4wUWl4WlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNRMEZCUXp0UFFVTm9RenRMUVVOR0xFMUJRVTA3UVVGRFRDeHhRa0ZCWlN4SlFVTmlMR0ZCUVdFc1NVRkJTU3hYUVVGWExFZEJRVWNzUlVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4blFrRkJaMElzUlVGQlJTeERRVUZCTEVGQlFVTXNRMEZCUXpzN1FVRkZMMFFzVlVGQlNTeFhRVUZYTEVWQlFVVTdRVUZEWml4dFFrRkJWeXhEUVVGRExFOUJRVThzUTBGQlF5eHJRa0ZCYTBJc1EwRkJReXhEUVVGRE8wRkJRM2hETEdsQ1FVRlRMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZETzA5QlEzQkNMRTFCUVUwN1FVRkRUQ3haUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4blFrRkJaMElzUTBGQlF5eERRVUZETzA5QlEzQkRPMHRCUTBZN08wRkJSVVFzVVVGQlNTeGxRVUZsTEVWQlFVVTdRVUZEYmtJc1ZVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFBRVUZQTEVOQlEycENMRTFCUVUwc1IwRkJSeXhsUVVGbExFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTXNRMEZCUXl4SlFVRkpMRmRCUVZjc1IwRkJSeXhGUVVGRkxFZEJRVWNzUzBGQlN5eERRVUZCTEVGQlFVTXNRMEZEYmtVc1EwRkJRenRMUVVOSU96dEJRVVZFTEZkQlFVOHNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhMUVVGTExFVkJRVVVzUTBGQlF6dEhRVU0xUWpzN1FVRkZSQ3h6UTBGQmIwTXNSVUZCUlN4blJFRkJWenRCUVVNdlF5eFhRVUZQTERaUVFVOU1MRWxCUVVrc1JVRkJSU3hEUVVGRE8wZEJRMVk3T3pzN096czdPenM3TzBGQlYwUXNXVUZCVlN4RlFVRkZMRzlDUVVGVExFbEJRVWtzUlVGQlJUdEJRVU42UWl4UlFVRkpMR3RDUVVGclFpeEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRU5CUTI1RExHOURRVUZ2UXl4RFFVTnlRenRSUVVORUxFMUJRVTBzUjBGQlJ5eERRVUZETEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dEJRVU5xUXl4UlFVRkpMRU5CUVVNc1pVRkJaU3hEUVVGRExFbEJRVWtzUlVGQlJTeERRVUZETEVWQlFVVXNUVUZCVFN4RFFVRkRMRU5CUVVNN08wRkJSWFJETEZGQlFVa3NVMEZCVXl4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dEJRVU5vUXl4VlFVRk5MRU5CUVVNc1RVRkJUU3hEUVVGRExFTkJRVU1zUlVGQlJTeERRVUZETEVWQlFVVXNVMEZCVXl4RFFVRkRMRU5CUVVNN08wRkJSUzlDTEZGQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eFpRVUZaTEVOQlFVTXNhMEpCUVd0Q0xFVkJRVVVzVFVGQlRTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1IwRkRla1U3T3pzN096czdPMEZCVVVRc2NVSkJRVzFDTEVWQlFVVXNLMEpCUVZjN08wRkJSVGxDTEZGQlFVa3NhMEpCUVd0Q0xFZEJRVWNzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZEYmtNc2IwTkJRVzlETEVOQlEzSkRPMUZCUTBRc1RVRkJUU3hIUVVGSExFTkJRVU1zU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRMnBETEZGQlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1JVRkJSU3hGUVVGRkxFTkJRVU1zUlVGQlJTeE5RVUZOTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNN08wRkJSVEZETEZGQlFVa3NRMEZCUXl4WFFVRlhMRVZCUVVVc1EwRkJRenM3UVVGRmJrSXNVVUZCU1N4UFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeERRVUZETzBGQlF6bENMRlZCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenM3UVVGRk4wSXNVVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVOa0xFOUJRVThzUlVGRFVDeEpRVUZKTEVOQlFVTXNWVUZCVlN4RlFVTm1MRTFCUVUwc1JVRkRUaXhQUVVGUExFVkJRMUFzUzBGQlN5eEZRVU5NTEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1dVRkJXU3hEUVVGRExHdENRVUZyUWl4RlFVRkZMRTFCUVUwc1JVRkJSU3hOUVVGTkxFTkJRVU1zUlVGRE5VUXNSMEZCUnl4RFFVTktMRU5CUVVNc1EwRkJRenRIUVVOS096czdPenM3T3p0QlFWRkVMR1ZCUVdFc1JVRkJSU3gxUWtGQlV5eFBRVUZQTEVWQlFVVTdRVUZETDBJc1VVRkJTU3hKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlEzWkNMR0ZCUVU4c1IwRkJSeXhKUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEU5QlFVOHNRMEZCUXp0TFFVTjZReXhOUVVGTk8wRkJRMHdzVlVGQlNTeERRVUZETEdWQlFXVXNSMEZCUnl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExHVkJRV1VzUTBGQlF6dExRVU53UkRzN1FVRkZSQ3hSUVVGSkxFTkJRVU1zWTBGQll5eEhRVUZITEU5QlFVOHNRMEZCUXp0SFFVTXZRanM3T3pzN096czdPenM3UVVGWFJDeFJRVUZOTEVWQlFVVXNhMEpCUVZjN1FVRkRha0lzVVVGQlNTeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRVZCUVVVN1FVRkRia0lzVlVGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4VlFVRkJMRTlCUVU4N1pVRkJTU3hEUVVGRExHRkJRV0VzUlVGQlJTeFBRVUZQTEVWQlFVVXNUMEZCVHl4RFFVRkRPMDlCUVVFc1EwRkJReXhEUVVGRE96dEJRVVZvUlN4VlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVGRExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTXNTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRExFTkJRVU1zUTBGQlF6dExRVU4yUkN4TlFVRk5PMEZCUTB3c1ZVRkJTU3hMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRPMEZCUXpWQ0xGVkJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZEWkN4TlFVRk5MRVZCUTA0c1MwRkJTeXhGUVVOTUxHTkJRV01zUlVGRFpDeEpRVUZKTEVOQlFVTXNZMEZCWXl4RFFVRkRMRXRCUVVzc1JVRkJSU3hUUVVGVExFVkJRVVVzU1VGQlNTeERRVUZETEVWQlF6TkRMRWxCUVVrc1EwRkRUQ3hEUVVGRExFTkJRVU03UVVGRFNDeFZRVUZKTEVsQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1VVRkJVU3hGUVVGRk8wRkJRemRDTEZsQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1EwRkRaQ3hUUVVGVExFVkJRMVFzU1VGQlNTeERRVUZETEdOQlFXTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1UwRkJVeXhGUVVGRkxFbEJRVWtzUTBGQlF5eEZRVU14UXl4SlFVRkpMRU5CUTB3c1EwRkJReXhEUVVGRE8wOUJRMG83UzBGRFJqdEhRVU5HT3pzN096czdPenRCUVZGRUxHVkJRV0VzUlVGQlJTeDVRa0ZCVnp0QlFVTjRRaXhSUVVGSkxFTkJRVU1zVlVGQlZTeERRVU5pTEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUVVNc1EwRkRiRUlzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl3MFFrRkJORUlzUTBGQlF5eEZRVU0xUXl4SFFVRkhMRVZCUTBnc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJTeEZRVU5tTEVkQlFVY3NRMEZEU2l4RFFVRkRMRU5CUTBnc1EwRkJRenRIUVVOSU96czdPenM3T3pzN1FVRlRSQ3haUVVGVkxFVkJRVVVzYjBKQlFWTXNTMEZCU3l4RlFVRkZPMEZCUXpGQ0xGRkJRVWtzUTBGQlF5eFhRVUZYTEVkQlFVY3NTMEZCU3l4RFFVRkRPMGRCUXpGQ096czdPenM3T3p0QlFWRkVMR0ZCUVZjc1JVRkJSU3gxUWtGQlZ6dEJRVU4wUWl4UlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEVOQlFVTXNRMEZCUXp0SFFVTXpSRHM3T3pzN096czdPMEZCVTBRc2FVSkJRV1VzUlVGQlJTeDVRa0ZCVXl4TFFVRkxMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUlVGQlJTeE5RVUZOTEVWQlFVVTdRVUZEZEVRc1VVRkJTU3hEUVVGRExFZEJRVWNzUTBGQlF5eERRVUZET3p0QlFVVldMRkZCUVVrc1EwRkJReXhOUVVGTkxFbEJRVWtzU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVjBGQlZ5eEZRVUZGT3pzN1FVRkhka1FzVlVGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1lVRkJZU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVWQlFVVXNRMEZCUXl4RFFVRkRMRU5CUVVNc1EwRkJRenRMUVVNelF5eE5RVUZOTzBGQlEwd3NWVUZCU1N4RFFVRkRMRmRCUVZjc1JVRkJSU3hEUVVGRE8wdEJRM0JDT3p0QlFVVkVMRkZCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFMUJRVTBzUTBGQlF5eERRVUZETzBkQlEzUkVPenM3T3pzN096czdRVUZUUkN4clFrRkJaMElzUlVGQlJTd3dRa0ZCVXl4WlFVRlpMRVZCUVVVc1MwRkJTeXhGUVVGRk8wRkJRemxETEZGQlFVa3NRMEZCUXl4alFVRmpMRWRCUVVjc1NVRkJTU3hEUVVGRE96dEJRVVV6UWl4UlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU1zWTBGQll5eEZRVUZGTEZsQlFWa3NRMEZCUXl4RFFVRkRMRU5CUVVNc1JVRkJSU3hKUVVGSkxFVkJRVVVzV1VGQldTeERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRGVrVXNVVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhUUVVGVExFVkJRVVVzUzBGQlN5eEZRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGRCUTNaRE96czdPenM3T3p0QlFWRkVMRmxCUVZVc1JVRkJSU3h2UWtGQlV5eExRVUZMTEVWQlFVVXNTMEZCU3l4RlFVRkZMRTFCUVUwc1JVRkJSVHRCUVVONlF5eFJRVUZKTEVOQlFVTXNTMEZCU3l4RlFVRkZPMEZCUTFZc1ZVRkJTU3hEUVVGRExHZENRVUZuUWl4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRE8wdEJReTlDTEUxQlFVMDdRVUZEVEN4VlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNkVUpCUVhWQ0xFZEJRVWNzUzBGQlN5eEhRVUZITEVkQlFVY3NRMEZCUXl4RFFVRkRPMHRCUXpsRU96dEJRVVZFTEZGQlFVa3NRMEZCUXl4WFFVRlhMRU5CUVVNc1RVRkJUU3hGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETEVWQlFVVXNTVUZCU1N4RlFVRkZMRTFCUVUwc1EwRkJReXhEUVVGRE8wZEJRMnhFT3p0QlFVVkVMR0ZCUVZjc1JVRkJSU3h4UWtGQlV5eEpRVUZKTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNc1JVRkJSU3hMUVVGTExFVkJRVVVzVFVGQlRTeEZRVUZGT3pzN096dEJRVU51UkN4UlFVRkpMRWxCUVVrc1EwRkJReXhQUVVGUExFTkJRVU1zVFVGQlRTeEpRVUZKTEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1lVRkJZU3hGUVVGRk8wRkJRM0pFTEZWQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNUVUZCVFN4SlFVRkpMRTFCUVUwc1JVRkJSU3hKUVVGSkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRNVVVzWVVGQlR6dExRVU5TT3p0QlFVVkVMRkZCUVVrc1IwRkJSeXhIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZOTEVOQlFVTTdRVUZEZGtJc1YwRkJUeXhEUVVGRExFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPenRCUVVWdVFpeFZRVUZKTEVOQlFVTXNXVUZCV1N4RFFVRkRMRlZCUVVFc1QwRkJUeXhGUVVGSk8wRkJRek5DTEZsQlFVa3NUVUZCVFN4SFFVRkhMRTlCUVVzc1ZVRkJWU3hEUVVGRExFOUJRVThzUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU03T3p0QlFVZDBSQ3haUVVGSkxFTkJRVU1zUzBGQlN5eEZRVUZGTzBGQlExWXNhVUpCUVU4c1EwRkJReXhoUVVGaExFVkJRVVVzVFVGQlRTeEZRVUZGTEV0QlFVc3NSVUZCUlN4UFFVRlBMRU5CUVVNc1EwRkJRenRUUVVOb1JDeE5RVUZOT3p0QlFVVk1MR2xDUVVGUExFTkJRVU1zVFVGQlRTeEZRVUZGTEUxQlFVMHNRMEZCUXl4RFFVRkRPMU5CUTNwQ08wOUJRMFlzUTBGQlF5eERRVUZET3p0TFFVVktPMGRCUTBZN096czdPenM3T3p0QlFWTkVMSFZDUVVGeFFpeEZRVUZGTEdsRFFVRlhPMEZCUTJoRExGRkJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZEVWl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVGRExHdENRVUZyUWl4RFFVRkRMRVZCUTJ4RExFZEJRVWNzUlVGRFNDeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRVZCUTJZc1NVRkJTU3hGUVVOS0xFbEJRVWtzUTBGQlF5eFhRVUZYTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUTI1Q0xFZEJRVWNzUTBGRFNpeERRVUZETEVOQlFVTTdSMEZEU2pzN096czdPenM3T3p0QlFWVkVMR2xDUVVGbExFVkJRVVVzZVVKQlFWTXNUVUZCVFN4RlFVRkZMRWxCUVVrc1JVRkJSVHRCUVVOMFF5eFJRVUZKTEVOQlFVTXNWMEZCVnl4RlFVRkZMRU5CUVVNN1FVRkRia0lzVVVGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJRenM3T3p0QlFVbDBRaXhSUVVGSkxFbEJRVWtzUzBGQlN5eGxRVUZsTEVWQlFVVTdRVUZETlVJc1ZVRkJTU3hQUVVGUExFMUJRVTBzUzBGQlN5eFJRVUZSTEVWQlFVVTdRVUZET1VJc1dVRkJTU3hEUVVGRExGVkJRVlVzUTBGQlF5eE5RVUZOTEVOQlFVTXNRMEZCUXp0UFFVTjZRaXhOUVVGTk8wRkJRMHdzV1VGQlNTeERRVUZETEdkQ1FVRm5RaXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzA5QlF5OUNPMHRCUTBZN1IwRkRSanM3UVVGRlJDeFhRVUZUTEVWQlFVVXNiVUpCUVZNc1UwRkJVeXhGUVVGRk8wRkJRemRDTEZGQlFVa3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSVHRCUVVOcVFpeFZRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE8wdEJRMnBDTzBGQlEwUXNVVUZCU1N4SlFVRkpMRU5CUVVNc1dVRkJXU3hGUVVGRk8wRkJRM0pDTEZWQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGFFSXNWVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU5xUWp0QlFVTkVMRkZCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZCUXl4VFFVRlRMRWRCUVVjc1YwRkJWeXhIUVVGSExFbEJRVWtzUTBGQlF5eERRVUZETzBkQlEzWkVPMEZCUTBRc1ZVRkJVU3hGUVVGRkxHOUNRVUZYTzBGQlEyNUNMRkZCUVVrc1NVRkJTU3hEUVVGRExFbEJRVWtzUlVGQlJUdEJRVU5pTEZWQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZCUXp0TFFVTTNRanRCUVVORUxGRkJRVWtzUTBGQlF5eEpRVUZKTEVkQlFVY3NSVUZCUlN4TlFVRk5MRVZCUVVVc1JVRkJSU3hGUVVGRkxFdEJRVXNzUlVGQlJTeEZRVUZGTEVWQlFVVXNVVUZCVVN4RlFVRkZMRVZCUVVVc1JVRkJSU3hIUVVGSExFVkJRVVVzUlVGQlJTeEZRVUZGTEVOQlFVTTdSMEZET1VRN1FVRkRSQ3hUUVVGUExFVkJRVVVzYlVKQlFWYzdRVUZEYkVJc1VVRkJTU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTnlRaXhSUVVGSkxFTkJRVU1zU1VGQlNTeEhRVUZITEVsQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU03TzBGQlJUbENMRkZCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5xUWl4VlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UzBGRGVrTTdRVUZEUkN4UlFVRkpMRWxCUVVrc1EwRkJReXhaUVVGWkxFVkJRVVU3UVVGRGNrSXNWVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zWVVGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1EwRkJReXhEUVVGRE8wRkJRemRETEZWQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eEpRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNc1EwRkJRenRMUVVNelF6czdRVUZGUkN4UlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhEUVVGRExFTkJRVU03UjBGRE5VTTdPenM3T3pzN08wRkJVVVFzV1VGQlZTeEZRVUZGTEc5Q1FVRlRMRTFCUVUwc1JVRkJSVHRCUVVNelFpeFJRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJReXhEUVVGRE8wZEJRMnhFT3pzN096czdPenM3TzBGQlZVUXNZVUZCVnl4RlFVRkZMSEZDUVVGVExFdEJRVXNzUlVGQlJUdEJRVU16UWl4UlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1IwRkRPVUk3T3pzN096czdPenM3UVVGVlJDeGhRVUZYTEVWQlFVVXNjVUpCUVZNc1NVRkJTU3hGUVVGRk8wRkJRekZDTEZGQlFVa3NTVUZCU1N4SlFVRkpMRWxCUVVrc1JVRkJSVHRCUVVOb1FpeFZRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zU1VGQlNTeERRVUZETEdsQ1FVRnBRaXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdTMEZEY2tRc1RVRkJUVHRCUVVOTUxGVkJRVWtzUTBGQlF5eG5Ra0ZCWjBJc1EwRkJReXhKUVVGSkxFTkJRVU1zUTBGQlF6dExRVU0zUWp0SFFVTkdPenM3T3pzN096czdRVUZUUkN4dFFrRkJhVUlzUlVGQlFTd3lRa0ZCUXl4VFFVRlRMRVZCUVVVc1NVRkJTU3hGUVVGRk8wRkJRMnBETEZGQlFVa3NZMEZCWXl4SFFVRkhMRWxCUVVrc1EwRkJReXhWUVVGVkxFTkJRVU1zV1VGQldTeEZRVUZGTEVsQlFVa3NSVUZCUlN4WFFVRlhMRU5CUVVNN1VVRkRia1VzVDBGQlR5eEhRVUZITEVsQlFVa3NRMEZCUXl4bFFVRmxMRU5CUVVNc1NVRkJTU3hGUVVGRkxGTkJRVk1zUTBGQlF5eERRVUZET3p0QlFVVnNSQ3hSUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVTnVRaXhQUVVGUExFVkJRMUFzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZCUXl4WlFVRlpMRU5CUVVNc1kwRkJZeXhGUVVGRkxFVkJRVVVzUlVGQlJTeERRVU12UXl4SlFVRkpMRVZCUTBvc1QwRkJUeXhGUVVOUUxGZEJRVmNzUlVGRFdDeFBRVUZQTEVOQlExSXNRMEZCUXl4RlFVTkdMRk5CUVZNc1EwRkRWaXhEUVVGRExFTkJRVU03UjBGRFNqczdPenM3T3pzN096czdRVUZYUkN4alFVRlpMRVZCUVVVc2MwSkJRVk1zVTBGQlV5eEZRVUZGTEVsQlFVa3NSVUZCUlN4UlFVRlJMRVZCUVVVN1FVRkRhRVFzVVVGQlNTeFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSVHRSUVVNM1FpeE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRmRCUVZjc1EwRkJReXhUUVVGVExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTTdPMEZCUlRkRExGRkJRVWtzY1VKQlFYRkNMRWRCUVVjc1JVRkJSU3hEUVVGRE96dEJRVVV2UWl4UlFVRkpMRkZCUVZFc1JVRkJSVHM3UVVGRldpd3lRa0ZCY1VJc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNwRE96dEJRVVZFTEhsQ1FVRnhRaXhEUVVGRExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNRMEZCUXp0QlFVTjBReXhSUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVVN1FVRkRlRUlzTWtKQlFYRkNMRU5CUVVNc1NVRkJTU3hEUVVONFFpeEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMQ3RDUVVFclFpeERRVUZETEVOQlEyaEVMRU5CUVVNN1MwRkRTRHM3UVVGRlJDeFJRVUZKTEd0Q1FVRnJRaXhIUVVGSExFTkJRM1pDTEVkQlFVY3NSVUZEU0N4SlFVRkpMRU5CUVVNc1owSkJRV2RDTEVOQlFVTXNjVUpCUVhGQ0xFVkJRVVVzU1VGQlNTeERRVUZETEVWQlEyeEVMRWRCUVVjc1EwRkRTaXhEUVVGRE8wRkJRMFlzVVVGQlNTeFpRVUZaTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhaUVVGWkxFTkJRM3BETEd0Q1FVRnJRaXhGUVVOc1FpeE5RVUZOTEVWQlEwNHNUVUZCVFN4RFFVRkRMRlZCUVZVc1EwRkRiRUlzUTBGQlF6dEJRVU5HTEZGQlFVa3NRMEZCUXl4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU03UjBGRGVrSTdPMEZCUlVRc2EwSkJRV2RDTEVWQlFVVXNNRUpCUVZNc1MwRkJTeXhGUVVGRkxGTkJRVk1zUlVGQlJUdEJRVU16UXl4UlFVRkpMRTFCUVUwc1IwRkJSeXhGUVVGRkxFTkJRVU03UVVGRGFFSXNWVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0QlFVTjBRaXhUUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4RFFVRkRMRWRCUVVjc1MwRkJTeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTnlReXhaUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6dExRVU5zUXp0QlFVTkVMRmRCUVU4c1RVRkJUU3hEUVVGRE8wZEJRMlk3T3pzN096czdPMEZCVVVRc2JVSkJRV2xDTEVWQlFVVXNNa0pCUVZNc1UwRkJVeXhGUVVGRkxFbEJRVWtzUlVGQlJUdEJRVU16UXl4UlFVRkpMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zVjBGQlZ5eERRVUZETEZOQlFWTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRCUVVNdlF5eFJRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zV1VGQldTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRVZCUVVVc1RVRkJUU3hGUVVGRkxFMUJRVTBzUTBGQlF5eFZRVUZWTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGRCUXpkRk96czdPenM3T3pzN096czdPenRCUVdORUxHbENRVUZsTEVWQlFVVXNlVUpCUVZNc1NVRkJTU3hGUVVGRkxGVkJRVlVzUlVGQlJUdEJRVU14UXl4UlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGRkJRVkVzUTBGQlF5eERRVUZET3p0QlFVVXpRaXhSUVVGSkxGTkJRVk1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN08wRkJSV2hETEZGQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRenRCUVVOcVFpeFJRVUZKTEUxQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExFTkJRVU1zUlVGQlJTeEpRVUZKTEVWQlFVVXNWVUZCVlN4RFFVRkRMRU5CUVVNN08wRkJSVzVFTEZGQlFVa3NWVUZCVlN4SFFVRkpMRWxCUVVrc1EwRkJReXhWUVVGVkxFZEJRVWNzU1VGQlNTeERRVUZETEZWQlFWVXNRMEZEYWtRc1UwRkJVeXhGUVVOVUxFbEJRVWtzUlVGRFNpeFJRVUZSTEVOQlExUXNRVUZCUXl4RFFVRkRPenRCUVVWSUxGRkJRVWtzVFVGQlRTeEhRVUZITEVOQlFVTXNSMEZCUnl4RlFVRkZMRmxCUVZrc1JVRkJSU3hWUVVGVkxFVkJRVVVzVFVGQlRTeEZRVUZGTEZOQlFWTXNSVUZCUlN4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOeVJTeFJRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhOUVVGTkxFVkJRVVU3UVVGRGVFSXNXVUZCVFN4RFFVRkRMRU5CUVVNc1EwRkJReXhIUVVGSExGbEJRVmtzUTBGQlF6dEJRVU42UWl4WlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVOVUxITkNRVUZ6UWl4RlFVTjBRaXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEN0Q1FVRXJRaXhEUVVGRExFTkJRMmhFTEVOQlFVTTdTMEZEU0RzN1FVRkZSQ3hSUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlExSXNSMEZCUnl4RlFVTklMRTFCUVUwc1JVRkRUaXhOUVVGTkxFTkJRVU1zVlVGQlZTeEhRVUZITEVOQlFVTXNTMEZCU3l4RlFVRkZMRTFCUVUwc1EwRkJReXhWUVVGVkxFTkJRVU1zUjBGQlJ5eEZRVUZGTEVWQlEyNUVMRWxCUVVrc1JVRkRTaXh4UWtGQmNVSXNSVUZEY2tJc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eFpRVUZaTEVOQlFVTXNSVUZETlVJc1MwRkJTeXhGUVVOTUxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hOUVVGTkxFVkJRVVVzVFVGQlRTeERRVUZETEZWQlFWVXNRMEZCUXl4RlFVTTNSQ3hoUVVGaExFTkJRMlFzUTBGQlF5eERRVUZETzBkQlEwbzdPenM3T3pzN096dEJRVk5FTEdWQlFXRXNSVUZCUlN4MVFrRkJVeXhUUVVGVExFVkJRVVVzU1VGQlNTeEZRVUZGTEUxQlFVMHNSVUZCUlR0QlFVTXZReXhSUVVGSkxFMUJRVTBzUjBGQlJ5eEZRVUZGTzFGQlEySXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhYUVVGWExFTkJRVU1zU1VGQlNTeEZRVUZGTEVOQlFVTXNSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkJRenM3UVVGRk9VTXNVVUZCU1N4VFFVRlRMRVZCUVVVN1FVRkRZaXhWUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRPMEZCUTNaQ0xHRkJRVThzVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXp0TFFVTnlRanM3UVVGRlJDeFJRVUZKTEUxQlFVMHNSVUZCUlR0QlFVTldMR0ZCUVU4c1EwRkJReXhOUVVGTkxFZEJRVWNzU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkJRenRMUVVONlF6dEJRVU5FTEZkQlFVOHNRMEZCUXl4UFFVRlBMRWRCUVVjc1UwRkJVeXhEUVVGRE8wRkJRelZDTEZkQlFVOHNRMEZCUXl4UlFVRlJMRWRCUVVjc1ZVRkJWU3hEUVVGRE8wRkJRemxDTEZkQlFVOHNRMEZCUXl4VlFVRlZMRWRCUVVjc2MwSkJRWE5DTEVOQlFVTTdPMEZCUlRWRExGRkJRVWtzUTBGQlF5eFRRVUZUTEVWQlFVVTdRVUZEWkN4WlFVRk5MRU5CUVVNc1QwRkJUeXhEUVVGRExFbEJRVWtzUTBGQlF5eFZRVUZWTEVOQlFVTXNWVUZCVlN4RlFVRkZMRWxCUVVrc1JVRkJSU3hUUVVGVExFTkJRVU1zUTBGQlF5eERRVUZETzB0QlF6bEVMRTFCUVUwN1FVRkRUQ3haUVVGTkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMHRCUTNSQ096dEJRVVZFTEZGQlFVa3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhOUVVGTkxFVkJRVVU3UVVGRGRrSXNZVUZCVHl4RFFVRkRMRTFCUVUwc1IwRkJSeXhSUVVGUkxFTkJRVU03UzBGRE0wSTdRVUZEUkN4WFFVRlBMRWRCUVVjc1NVRkJTU3hEUVVGRExHRkJRV0VzUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXp0QlFVTjBReXhWUVVGTkxFTkJRVU1zU1VGQlNTeERRVUZETEU5QlFVOHNRMEZCUXl4RFFVRkRPenRCUVVWeVFpeFJRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zV1VGQldTeERRVUZETEhsQ1FVRjVRaXhGUVVGRkxFVkJRVVVzUlVGQlJTeE5RVUZOTEVOQlFVTXNRMEZCUXl4RFFVRkRPMGRCUXpWRk96czdPenM3T3p0QlFWRkVMR05CUVZrc1JVRkJSU3h6UWtGQlV5eEhRVUZITEVWQlFVVTdRVUZETVVJc1VVRkJTU3hMUVVGTExFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlR0UlFVTjZRaXhQUVVGUExGbEJRVUU3VVVGRFVDeEpRVUZKTEZsQlFVRTdVVUZEU2l4RlFVRkZMRmxCUVVFc1EwRkJRenM3UVVGRlRDeFJRVUZKTEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVN1FVRkRha0lzVVVGQlJTeEhRVUZITEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRMUVVOMFFqdEJRVU5FTEZGQlFVa3NTVUZCU1N4RFFVRkRMRmxCUVZrc1JVRkJSVHRCUVVOeVFpeFZRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8wRkJRM1pDTEdGQlFVOHNSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03UzBGRE0wSTdPMEZCUlVRc1VVRkJTU3hKUVVGSkxFZEJRVWNzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXp0QlFVTnlRaXhSUVVGSkxFOUJRVThzUlVGQlJUdEJRVU5ZTEZWQlFVa3NRMEZCUXl4UlFVRlJMRU5CUVVNc1IwRkJSeXhEUVVGRExFZEJRVWNzVDBGQlR5eERRVUZETzB0QlF6bENPMEZCUTBRc1VVRkJTU3hKUVVGSkxFVkJRVVU3UVVGRFVpeFZRVUZKTEVOQlFVTXNTMEZCU3l4RFFVRkRMRWRCUVVjc1EwRkJReXhIUVVGSExFbEJRVWtzUTBGQlF6dExRVU40UWp0QlFVTkVMRkZCUVVrc1JVRkJSU3hGUVVGRk8wRkJRMDRzVlVGQlNTeERRVUZETEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhGUVVGRkxFTkJRVU03UzBGRGNFSTdRVUZEUkN4UlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFZEJRVWNzUTBGQlF5eEhRVUZITEV0QlFVc3NRMEZCUXp0SFFVTXhRanM3UVVGRlJDeFJRVUZOTEVWQlFVVXNaMEpCUVZNc1NVRkJTU3hGUVVGRkxFbEJRVWtzUlVGQlJTeExRVUZMTEVWQlFVVTdRVUZEYkVNc1VVRkJTU3hKUVVGSkxFdEJRVXNzV1VGQldTeEZRVUZGTzBGQlEzcENMRlZCUVVrc1EwRkJReXhuUWtGQlowSXNRMEZEYmtJc1kwRkJZeXhIUVVOYUxFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZEVUN4VFFVRlRMRWRCUTFRc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF5eEhRVU5RTEVkQlFVY3NTVUZEUml4TFFVRkxMRWRCUVVjc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTXNSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJReXhIUVVGSExFVkJRVVVzUTBGQlFTeEJRVUZETEVOQlEzSkVMRU5CUVVNN1MwRkRTQ3hOUVVGTkxFbEJRVWtzU1VGQlNTeExRVUZMTEdkQ1FVRm5RaXhGUVVGRk8wRkJRM0JETEZWQlFVa3NRMEZCUXl4VlFVRlZMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UzBGRGRrSXNUVUZCVFN4SlFVRkpMRWxCUVVrc1MwRkJTeXhsUVVGbExFVkJRVVU3UVVGRGJrTXNWVUZCU1N4RFFVRkRMR2RDUVVGblFpeERRVUZETEUxQlFVMHNRMEZCUXl4RFFVRkRPMHRCUXk5Q0xFMUJRVTA3UVVGRFRDeFZRVUZKTEVOQlFVTXNaMEpCUVdkQ0xFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdTMEZETDBJN1IwRkRSanM3T3p0QlFVbEVMRlZCUVZFc1JVRkJSU3hyUWtGQmEwSTdPMEZCUlRWQ0xHbENRVUZsTEVWQlFVVXNlVUpCUVZNc1YwRkJWeXhGUVVGRkxFOUJRVThzUlVGQlJUdEJRVU01UXl4UlFVRkpMRkZCUVZFc1IwRkJSeXhYUVVGWExFTkJRVU1zVVVGQlVUdFJRVU5xUXl4TFFVRkxMRmxCUVVFN1VVRkRUQ3hSUVVGUkxGbEJRVUVzUTBGQlF6czdRVUZGV0N4VFFVRkxMRWxCUVVrc1EwRkJReXhIUVVGSExFTkJRVU1zUlVGQlJTeERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFZEJRVWNzUTBGQlF5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUXk5RExGZEJRVXNzUjBGQlJ5eFJRVUZSTEVOQlFVTXNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkRjRUlzWTBGQlVTeEhRVUZITEVsQlFVa3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRE96dEJRVVV2UWl4VlFVRkpMRkZCUVZFc1IwRkJSeXhKUVVGSkxFTkJRVU1zYjBKQlFXOUNMRU5CUVVNc1MwRkJTeXhEUVVGRExFTkJRVU03TzBGQlJXaEVMRlZCUVVrc1VVRkJVU3hKUVVGSkxFbEJRVWtzUlVGQlJUdEJRVU53UWl4WlFVRkpMRU5CUVVNc1QwRkJUeXhEUVVGRExGRkJRVkVzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1FVRkRMMElzV1VGQlNTeExRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhSUVVGUkxFTkJRVU1zVFVGQlRTeERRVUZETzBGQlEzcERMR0ZCUVVzc1EwRkJReXhMUVVGTExFZEJRVWNzUzBGQlN5eERRVUZETzBGQlEzQkNMR0ZCUVVzc1EwRkJReXhKUVVGSkxFZEJRVWNzVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUXp0QlFVTXZRaXhaUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEZGQlFWRXNRMEZCUXl4TFFVRkxMRU5CUVVNc1IwRkJSeXhSUVVGUkxFTkJRVU1zVDBGQlR5eERRVU0zUXl4TFFVRkxMRVZCUTB3c1QwRkJUeXhGUVVOUUxFbEJRVWtzUTBGQlF5eFBRVUZQTEVWQlExb3NRMEZCUXl4SlFVRkpMRU5CUVVNc1ZVRkJWU3hEUVVOcVFpeERRVUZETzBGQlEwWXNXVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhWUVVGVkxFTkJRVU1zUzBGQlN5eERRVUZETEVkQlFVY3NVVUZCVVN4RFFVRkRMRlZCUVZVc1EwRkJRenRCUVVOeVJDeFpRVUZKTEVOQlFVTXNUMEZCVHl4RFFVRkRMRmxCUVZrc1EwRkJReXhMUVVGTExFTkJRVU1zUjBGQlJ5eExRVUZMTEVOQlFVTTdPMEZCUlhwRExGbEJRVWtzUTBGQlF5eFRRVUZUTEVkQlFVY3NTVUZCU1N4RFFVRkRMRk5CUVZNc1NVRkJTU3hSUVVGUkxFTkJRVU1zVTBGQlV5eERRVUZETzBGQlEzUkVMRmxCUVVrc1EwRkJReXhqUVVGakxFZEJRVWNzU1VGQlNTeERRVUZETEdOQlFXTXNTVUZCU1N4UlFVRlJMRU5CUVVNc1kwRkJZeXhEUVVGRE8wRkJRM0pGTEdGQlFVc3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF6dEJRVU5xUXl4aFFVRkxMRU5CUVVNc1kwRkJZeXhIUVVGSExFbEJRVWtzUTBGQlF5eGpRVUZqTEVOQlFVTTdUMEZETlVNc1RVRkJUVHRCUVVOTUxHRkJRVXNzUTBGQlF5eExRVUZMTEVkQlFVY3NVVUZCVVN4RFFVRkRMRXRCUVVzc1EwRkJRenRCUVVNM1FpeGhRVUZMTEVOQlFVTXNTVUZCU1N4SFFVRkhMRk5CUVZNc1IwRkJSeXhSUVVGUkxFTkJRVU1zUzBGQlN5eERRVUZET3p0QlFVVjRReXhaUVVGSkxFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXl4VFFVRlRMRWxCUVVrc1VVRkJVU3hEUVVGRExGTkJRVk1zUTBGQlF6dEJRVU4wUkN4WlFVRkpMRU5CUVVNc1kwRkJZeXhIUVVGSExFbEJRVWtzUTBGQlF5eGpRVUZqTEVsQlFVa3NVVUZCVVN4RFFVRkRMR05CUVdNc1EwRkJRenRQUVVOMFJUdExRVU5HTzBkQlEwWTdRVUZEUkN4elFrRkJiMElzUlVGQlJTdzRRa0ZCVXl4TFFVRkxMRVZCUVVVN1FVRkRjRU1zVTBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eFBRVUZQTEVOQlFVTXNXVUZCV1N4RFFVRkRMRTFCUVUwc1JVRkJSU3hEUVVGRExFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTXNSVUZCUlN4RlFVRkZPMEZCUTNCRkxGVkJRVWtzVjBGQlZ5eEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1dVRkJXU3hEUVVGRExFTkJRVU1zUTBGQlF5eERRVUZETzBGQlF5OURMRlZCUVVrc1YwRkJWeXhKUVVGSkxGZEJRVmNzUTBGQlF5eE5RVUZOTEVOQlFVTXNTMEZCU3l4RFFVRkRMRVZCUVVVN1FVRkROVU1zWlVGQlR5eFhRVUZYTEVOQlFVTTdUMEZEY0VJN1MwRkRSanRIUVVOR096dEJRVVZFTEcxQ1FVRnBRaXhGUVVGRkxESkNRVUZUTEVsQlFVa3NSVUZCUlR0QlFVTm9ReXhSUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRkZCUVZFc1EwRkJReXhKUVVGSkxFTkJRVU03VVVGRGVrTXNZVUZCWVN4SFFVRkhMRU5CUVVNc1MwRkJTeXhEUVVGRExFdEJRVXNzUlVGQlJTeE5RVUZOTEVWQlFVVXNTMEZCU3l4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRE96dEJRVVV6UkN4UlFVRkpMRWxCUVVrc1EwRkJReXhqUVVGakxFbEJRVWtzU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlR0QlFVTjZReXh0UWtGQllTeERRVUZETEVsQlFVa3NRMEZCUXl4aFFVRmhMRU5CUVVNc1EwRkJRenRMUVVOdVF6dEJRVU5FTEZGQlFVa3NTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSVHRCUVVOc1FpeHRRa0ZCWVN4RFFVRkRMRWxCUVVrc1EwRkJReXhSUVVGUkxFTkJRVU1zUTBGQlF6dExRVU01UWpzN1FVRkZSQ3hYUVVGUExHOUNRVUZ2UWl4SFFVRkhMR0ZCUVdFc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVkQlFVY3NSMEZCUnl4RFFVRkRPMGRCUXpsRU96dEJRVVZFTEdGQlFWY3NSVUZCUlN4eFFrRkJVeXhKUVVGSkxFVkJRVVU3UVVGRE1VSXNVVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zU1VGQlNTeERRVUZETEVWQlFVVTdRVUZEZWtJc1ZVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNN1FVRkROVUlzVlVGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETzB0QlEyaERPMGRCUTBZN08wRkJSVVFzVFVGQlNTeEZRVUZGTEdOQlFWTXNTVUZCU1N4RlFVRkZPMEZCUTI1Q0xGRkJRVWtzUlVGQlJTeEpRVUZKTEZsQlFWa3NUMEZCVHl4RFFVRkJMRUZCUVVNc1JVRkJSVHRCUVVNNVFpeFZRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEVOQlFVTTdTMEZETDBJN08wRkJSVVFzVVVGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRE5VSXNWMEZCVHl4SlFVRkpMRU5CUVVNN1IwRkRZanM3UVVGRlJDeHJRa0ZCWjBJc1JVRkJSU3d3UWtGQlV5eEpRVUZKTEVWQlFVVTdRVUZETDBJc1VVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1EwRkJReXhEUVVGRE8wZEJRemxDT3p0QlFVVkVMRmxCUVZVc1JVRkJSU3h2UWtGQlV5eE5RVUZOTEVWQlFVVTdRVUZETTBJc1VVRkJTU3hKUVVGSkxFTkJRVU1zWTBGQll5eEZRVUZGTzBGQlEzWkNMRlZCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeERRVU5rTEVsQlFVa3NRMEZCUXl4alFVRmpMRU5CUTJwQ0xFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNXVUZCV1N4RFFVRkRMRWxCUVVrc1EwRkJReXhqUVVGakxFTkJRVU1zUlVGRE4wTXNTVUZCU1N4RFFVRkRMR1ZCUVdVc1EwRkRja0lzUTBGRFJpeERRVUZETzBGQlEwWXNWVUZCU1N4RFFVRkRMR05CUVdNc1IwRkJSeXhUUVVGVExFTkJRVU03UzBGRGFrTTdPMEZCUlVRc1VVRkJTU3hOUVVGTkxFVkJRVVU3UVVGRFZpeFZRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF6dExRVU14UWp0SFFVTkdPenRCUVVWRUxHTkJRVmtzUlVGQlJTeHpRa0ZCVXl4UlFVRlJMRVZCUVVVN1FVRkRMMElzVVVGQlNTeE5RVUZOTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNN1VVRkRhRUlzUzBGQlN5eFpRVUZCTzFGQlEwd3NXVUZCV1N4WlFVRkJPMUZCUTFvc1YwRkJWeXhaUVVGQkxFTkJRVU03T3p0QlFVZGtMRkZCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTEVWQlFVVTdRVUZEY0VJc1dVRkJUU3d5UWtGQll5dzBRa0ZCTkVJc1EwRkJReXhEUVVGRE8wdEJRMjVFT3pzN1FVRkhSQ3hSUVVGSkxFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RFFVRkRMRWxCUVVrc1EwRkJReXhEUVVGRE96dEJRVVU1UWl4UlFVRkpMRWRCUVVjc1dVRkJXU3hQUVVGUExFVkJRVVU3TzBGQlJURkNMRmRCUVVzc1IwRkJSeXhEUVVGRExFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNRMEZCUXp0QlFVTndRaXhaUVVGTkxFZEJRVWNzUTBGQlF5eEhRVUZITEVWQlFVVXNTMEZCU3l4RFFVRkRMRU5CUVVNN1FVRkRkRUlzYVVKQlFWY3NSMEZCUnl4SlFVRkpMRU5CUVVNN1MwRkRjRUlzVFVGQlRUczdRVUZGVEN4clFrRkJXU3hIUVVGSExFbEJRVWtzUTBGQlF6dEJRVU53UWl4VlFVRkpMRXRCUVVrc1IwRkJSeXhKUVVGSkxFTkJRVU1zVTBGQlV5eEZRVUZGTEVOQlFVTTdPMEZCUlRWQ0xGbEJRVTBzUjBGQlJ5eERRVUZETEVsQlFVa3NSVUZCUlN4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVWtzUTBGQlF5eEZRVUZGTEV0QlFVc3NSVUZCUlN4SFFVRkhMRVZCUVVVc1IwRkJSeXhEUVVGRExFTkJRVU03UVVGRGJFUXNWMEZCU3l4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dExRVU42UWpzN1FVRkZSQ3hSUVVGSkxFbEJRVWtzUjBGQlJ5eFJRVUZSTEVOQlFVTXNTVUZCU1N4RFFVRkRMRWxCUVVrc1JVRkJSU3hMUVVGTExFTkJRVU1zUTBGQlF6czdRVUZGZEVNc1VVRkJTU3hEUVVGRExGZEJRVmNzUlVGQlJUdEJRVU5vUWl4VlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03UzBGRGFrSTdRVUZEUkN4UlFVRkpMRmxCUVZrc1JVRkJSVHRCUVVOb1FpeFZRVUZKTEVOQlFVTXNVMEZCVXl4RlFVRkZMRU5CUVVNN1MwRkRiRUk3UVVGRFJDeFJRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFTkJRVU1zU1VGQlNTeEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1IwRkRja003TzBGQlJVUXNWMEZCVXl4RlFVRkZMSEZDUVVGWE8wRkJRM0JDTEZGQlFVa3NRMEZCUXl4VFFVRlRMRVZCUVVVc1EwRkJRenRCUVVOcVFpeFJRVUZKTEVsQlFVa3NRMEZCUXl4VFFVRlRMRWRCUVVjc1NVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eE5RVUZOTEVWQlFVVTdRVUZETVVNc1ZVRkJTU3hEUVVGRExGTkJRVk1zUTBGQlF5eEpRVUZKTEVOQlFVTXNUMEZCVHl4SFFVRkhMRWxCUVVrc1EwRkJReXhUUVVGVExFTkJRVU1zUTBGQlF6dExRVU12UXp0QlFVTkVMRmRCUVU4c1NVRkJTU3hEUVVGRExGbEJRVmtzUlVGQlJTeERRVUZETzBkQlF6VkNPMEZCUTBRc1kwRkJXU3hGUVVGRkxIZENRVUZYTzBGQlEzWkNMRmRCUVU4c1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF5eFRRVUZUTEVOQlFVTTdSMEZEYWtNN1FVRkRSQ3hoUVVGWExFVkJRVVVzZFVKQlFWYzdRVUZEZEVJc1VVRkJTU3hYUVVGWExFZEJRVWNzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXp0QlFVTnVReXhSUVVGSkxFTkJRVU1zVjBGQlZ5eEhRVUZITEVWQlFVVXNRMEZCUXp0QlFVTjBRaXhUUVVGTExFbEJRVWtzUTBGQlF5eEhRVUZITEVOQlFVTXNSVUZCUlN4SFFVRkhMRWRCUVVjc1YwRkJWeXhEUVVGRExFMUJRVTBzUlVGQlJTeERRVUZETEVkQlFVY3NSMEZCUnl4RlFVRkZMRU5CUVVNc1JVRkJSU3hGUVVGRk8wRkJRM1JFTEZWQlFVa3NTMEZCU3l4SFFVRkhMRmRCUVZjc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF6czdRVUZGTTBJc1ZVRkJTU3hMUVVGTExGbEJRVmtzVDBGQlR5eEZRVUZGTzBGQlF6VkNMRmxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVU1zU1VGQlNTeERRVUZETEV0QlFVc3NRMEZCUXl4RFFVRkRPMDlCUXk5Q0xFMUJRVTA3UVVGRFRDeFpRVUZKTEV0QlFVc3NSMEZCUnl4SlFVRkpMRU5CUVVNc1UwRkJVeXhGUVVGRkxFTkJRVU03UVVGRE4wSXNXVUZCU1N4RFFVRkRMRlZCUVZVc1EwRkJReXhEUVVGRExFdEJRVXNzUlVGQlJTeExRVUZMTEVWQlFVVXNTMEZCU3l4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UVVGRE5VTXNXVUZCU1N4RFFVRkRMRmxCUVZrc1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTTdUMEZETDBJN1MwRkRSanRIUVVOR08wRkJRMFFzVlVGQlVTeEZRVUZGTEc5Q1FVRlhPMEZCUTI1Q0xGZEJRVThzU1VGQlNTeERRVUZETEZkQlFWY3NRMEZCUXl4TlFVRk5MRU5CUVVNN1IwRkRhRU03TzBGQlJVUXNWVUZCVVN4RlFVRkZMR3RDUVVGVExFOUJRVThzUlVGQlJUdEJRVU14UWl4UlFVRkpMRTFCUVUwc1IwRkJSeXhKUVVGSkxFTkJRVU1zVVVGQlVTeEZRVUZGTzFGQlF6RkNMRWxCUVVrc1IwRkJSeXhEUVVGRExFMUJRVTBzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4SFFVRkhMRWxCUVVrc1EwRkJReXhaUVVGWkxFTkJRVUVzUTBGQlJTeEhRVUZITEVWQlFVVXNRMEZCUXpzN1FVRkZMMFFzVVVGQlNTeERRVUZETEU5QlFVOHNTVUZCU1N4SlFVRkpMRmxCUVZrc1QwRkJUeXhGUVVGRk8wRkJRM1pETEdGQlFVOHNTVUZCU1N4RFFVRkRMRXRCUVVzc1EwRkJRenRMUVVOdVFpeE5RVUZOTzBGQlEwd3NWVUZCU1N4RFFVRkRMRTFCUVUwc1JVRkJSVHM3UVVGRldDeFpRVUZKTEVOQlFVTXNTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSVHRCUVVOdVFpeG5Ra0ZCVFN3eVFrRkJZeXh0UWtGQmJVSXNRMEZCUXl4RFFVRkRPMU5CUXpGRE8wRkJRMFFzV1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlN4RFFVRkRPMDlCUTJ4Q08wRkJRMFFzWVVGQlR5eEpRVUZKTEVOQlFVTTdTMEZEWWp0SFFVTkdPenRCUVVWRUxGVkJRVkVzUlVGQlJTeHZRa0ZCVnp0QlFVTnVRaXhSUVVGSkxFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRWRCUVVjc1NVRkJTU3hEUVVGRExGZEJRVmNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNXVUZCV1R0UlFVTm9SU3hKUVVGSkxFZEJRVWNzUzBGQlN5eERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03T3p0QlFVZHFReXhSUVVGSkxFbEJRVWtzV1VGQldTeFBRVUZQTEVWQlFVVTdRVUZETTBJc1lVRkJUeXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETzB0QlEyNUNMRTFCUVUwN1FVRkRUQ3hoUVVGUExFbEJRVWtzUTBGQlF6dExRVU5pTzBkQlEwWTdPMEZCUlVRc1lVRkJWeXhGUVVGRkxIRkNRVUZUTEU5QlFVOHNSVUZCUlR0QlFVTTNRaXhSUVVGSkxFbEJRVWtzUTBGQlF5eFRRVUZUTEVsQlFVa3NUMEZCVHl4RlFVRkZPMEZCUXpkQ0xHRkJRVThzVTBGQlV5eEhRVUZITEU5QlFVOHNSMEZCUnl4SFFVRkhMRU5CUVVNN1MwRkRiRU1zVFVGQlRUdEJRVU5NTEdGQlFVOHNUMEZCVHl4SFFVRkhMRTlCUVU4c1EwRkJRenRMUVVNeFFqdEhRVU5HT3p0QlFVVkVMR05CUVZrc1JVRkJSU3h6UWtGQlV5eEhRVUZITEVWQlFVVTdRVUZETVVJc1YwRkJUeXhKUVVGSkxFTkJRVU1zVFVGQlRTeERRVUZETEZsQlFWa3NRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRIUVVOMFF6czdRVUZGUkN4bFFVRmhMRVZCUVVVc2RVSkJRVk1zUjBGQlJ5eEZRVUZGTzBGQlF6TkNMRmRCUVU4c1NVRkJTU3hEUVVGRExFMUJRVTBzUTBGQlF5eGhRVUZoTEVOQlFVTXNSMEZCUnl4RFFVRkRMRU5CUVVNN1IwRkRka003TzBGQlJVUXNWMEZCVXl4RlFVRkZMRzFDUVVGVExFbEJRVWtzUlVGQlJUdEJRVU40UWl4UlFVRkpMRWRCUVVjc1IwRkJSeXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVsQlFVa3NRMEZCUXl4RFFVRkRPMEZCUXpkQ0xGRkJRVWtzUjBGQlJ5eEZRVUZGTzBGQlExQXNVMEZCUnl4RFFVRkRMR05CUVdNc1JVRkJSU3hEUVVGRE8wRkJRM0pDTEdGQlFVOHNSMEZCUnl4RFFVRkRPMHRCUTFvN08wRkJSVVFzVDBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEUxQlFVMHNRMEZCUXl4SlFVRkpMRU5CUVVNc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGJFUXNUMEZCUnl4RFFVRkRMRk5CUVZNc1IwRkJSeXhKUVVGSkxFTkJRVU03UVVGRGNrSXNUMEZCUnl4RFFVRkRMR05CUVdNc1IwRkJSeXhEUVVGRExFTkJRVU03TzBGQlJYWkNMRmRCUVU4c1IwRkJSeXhEUVVGRE8wZEJRMW83TzBGQlJVUXNZVUZCVnl4RlFVRkZMSEZDUVVGVExGTkJRVk1zUlVGQlJTeEpRVUZKTEVWQlFVVXNWMEZCVnl4RlFVRkZPMEZCUTJ4RUxGRkJRVWtzVFVGQlRTeEhRVUZITEVWQlFVVTdVVUZEWWl4VlFVRlZMRWRCUVVjc1NVRkJTU3hEUVVGRExHVkJRV1VzUTBGQlF5eEpRVUZKTEVWQlFVVXNVMEZCVXl4RlFVRkZMRTFCUVUwc1JVRkJSU3hYUVVGWExFTkJRVU1zUTBGQlF6dEJRVU14UlN4UlFVRkpMRmRCUVZjc1IwRkJSeXhKUVVGSkxFTkJRVU1zVlVGQlZTeERRVUZETEZOQlFWTXNSVUZCUlN4SlFVRkpMRVZCUVVVc1VVRkJVU3hEUVVGRE8xRkJRekZFTEZkQlFWY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1UwRkJVeXhEUVVOMlFpeEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRU5CUVVNc1EwRkJReXh0UWtGQll5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVTnNSQ3hEUVVGRExFTkJRMFlzYzBOQlEwWXNRMEZCUXpzN1FVRkZTaXhYUVVGUE8wRkJRMHdzV1VGQlRTeEZRVUZGTEUxQlFVMDdRVUZEWkN4blFrRkJWU3hGUVVGRkxGVkJRVlU3UVVGRGRFSXNWVUZCU1N4RlFVRkZMRmRCUVZjN1FVRkRha0lzWjBKQlFWVXNSVUZCUlN4RFFVRkRMRmRCUVZjc1EwRkJReXhEUVVGRExFMUJRVTBzUTBGQlF5eE5RVUZOTEVOQlFVTTdTMEZEZWtNc1EwRkJRenRIUVVOSU96dEJRVVZFTEdGQlFWY3NSVUZCUlN4eFFrRkJVeXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEUxQlFVMHNSVUZCUlR0QlFVTXZReXhSUVVGSkxFOUJRVThzUjBGQlJ5eEZRVUZGTzFGQlEyUXNVVUZCVVN4SFFVRkhMRVZCUVVVN1VVRkRZaXhMUVVGTExFZEJRVWNzUlVGQlJUdFJRVU5XTEVkQlFVY3NSMEZCUnl4RlFVRkZPMUZCUTFJc1ZVRkJWU3hIUVVGSExFTkJRVU1zVFVGQlRUdFJRVU53UWl4TFFVRkxMRmxCUVVFc1EwRkJRenM3UVVGRlVpeFJRVUZKTEZWQlFWVXNSVUZCUlR0QlFVTmtMRmxCUVUwc1IwRkJSeXhGUVVGRkxFTkJRVU03UzBGRFlqczdRVUZGUkN4WFFVRlBMRU5CUVVNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNUVUZCVFN4RFFVRkRMRU5CUVVNN1FVRkRla01zVjBGQlR5eERRVUZETEVsQlFVa3NSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03TzBGQlJTOUNMRkZCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5xUWl4aFFVRlBMRU5CUVVNc1QwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF5eFJRVUZSTEVWQlFVVXNRMEZCUXp0TFFVTnVRenRCUVVORUxGRkJRVWtzU1VGQlNTeERRVUZETEZsQlFWa3NSVUZCUlR0QlFVTnlRaXhoUVVGUExFTkJRVU1zVTBGQlV5eEhRVUZITEVsQlFVa3NRMEZCUXl4UlFVRlJMRVZCUVVVc1EwRkJRenRCUVVOd1F5eGhRVUZQTEVOQlFVTXNXVUZCV1N4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGUkxFVkJRVVVzUTBGQlF6dExRVU40UXpzN1FVRkZSQ3hSUVVGSkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZPMUZCUXpOQ0xFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN096czdRVUZKTlVJc1VVRkJTU3hQUVVGUExFbEJRVWtzVDBGQlR5eEZRVUZGTzBGQlEzUkNMR0ZCUVU4c1EwRkJReXhGUVVGRkxFZEJRVWNzVDBGQlR5eEpRVUZKTEdkQ1FVRm5RaXhEUVVGRE8wRkJRM3BETEdGQlFVOHNRMEZCUXl4UFFVRlBMRWRCUVVjc1QwRkJUeXhKUVVGSkxHZENRVUZuUWl4RFFVRkRPMHRCUXk5RE96czdPMEZCU1VRc1VVRkJTU3hEUVVGRExFZEJRVWNzVTBGQlV5eERRVUZETzBGQlEyeENMRmRCUVU4c1EwRkJReXhGUVVGRkxFVkJRVVU3UVVGRFZpeFhRVUZMTEVkQlFVY3NTVUZCU1N4RFFVRkRMRkZCUVZFc1JVRkJSU3hEUVVGRE8wRkJRM2hDTEZsQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNc1IwRkJSeXhMUVVGTExFTkJRVU03TzBGQlJXeENMRlZCUVVrc1NVRkJTU3hEUVVGRExGRkJRVkVzUlVGQlJUdEJRVU5xUWl4WFFVRkhMRU5CUVVNc1EwRkJReXhEUVVGRExFZEJRVWNzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RFFVRkRPMDlCUXpGQ08wRkJRMFFzVlVGQlNTeEpRVUZKTEVOQlFVTXNXVUZCV1N4RlFVRkZPMEZCUTNKQ0xHRkJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSMEZCUnl4SlFVRkpMRU5CUVVNc1VVRkJVU3hGUVVGRkxFTkJRVU03UVVGRE0wSXNaMEpCUVZFc1EwRkJReXhEUVVGRExFTkJRVU1zUjBGQlJ5eEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZMRU5CUVVNN1QwRkRMMEk3UzBGRFJqczdRVUZGUkN4UlFVRkpMRlZCUVZVc1JVRkJSVHRCUVVOa0xHRkJRVThzUTBGQlF5eEpRVUZKTEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhoUVVGaExFTkJRVU1zVFVGQlRTeERRVUZETEVOQlFVTTdTMEZEYkVRN08wRkJSVVFzVVVGQlNTeEpRVUZKTEVOQlFVTXNVVUZCVVN4RlFVRkZPMEZCUTJwQ0xHRkJRVThzUTBGQlF5eEhRVUZITEVkQlFVY3NTVUZCU1N4RFFVRkRMRTFCUVUwc1EwRkJReXhoUVVGaExFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTTdTMEZET1VNN1FVRkRSQ3hSUVVGSkxFbEJRVWtzUTBGQlF5eFpRVUZaTEVWQlFVVTdRVUZEY2tJc1lVRkJUeXhEUVVGRExFdEJRVXNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RFFVRkRMR0ZCUVdFc1EwRkJReXhMUVVGTExFTkJRVU1zUTBGQlF6dEJRVU5xUkN4aFFVRlBMRU5CUVVNc1VVRkJVU3hIUVVGSExFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNZVUZCWVN4RFFVRkRMRkZCUVZFc1EwRkJReXhEUVVGRE8wdEJRM2hFT3p0QlFVVkVMRkZCUVVrc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eEpRVUZKTEVWQlFVVTdRVUZEY2tJc1lVRkJUeXhEUVVGRExFbEJRVWtzUjBGQlJ5eE5RVUZOTEVOQlFVTTdTMEZEZGtJN1FVRkRSQ3hSUVVGSkxFbEJRVWtzUTBGQlF5eGpRVUZqTEVWQlFVVTdRVUZEZGtJc1lVRkJUeXhEUVVGRExGZEJRVmNzUjBGQlJ5eGhRVUZoTEVOQlFVTTdTMEZEY2tNN1FVRkRSQ3hYUVVGUExFOUJRVThzUTBGQlF6dEhRVU5vUWpzN1FVRkZSQ3hwUWtGQlpTeEZRVUZGTEhsQ1FVRlRMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeEZRVUZGTEZkQlFWY3NSVUZCUlR0QlFVTm9SU3hSUVVGSkxFOUJRVThzUjBGQlJ5eEpRVUZKTEVOQlFVTXNWMEZCVnl4RFFVRkRMRTFCUVUwc1JVRkJSU3hUUVVGVExFVkJRVVVzVFVGQlRTeERRVUZETEVOQlFVTTdRVUZETVVRc1YwRkJUeXhEUVVGRExFZEJRVWNzUjBGQlJ5eEpRVUZKTEVOQlFVTXNVMEZCVXl4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zWlVGQlpTeERRVUZETEVOQlFVTTdRVUZETVVRc1YwRkJUeXhIUVVGSExFbEJRVWtzUTBGQlF5eGhRVUZoTEVOQlFVTXNUMEZCVHl4RFFVRkRMRU5CUVVNN1FVRkRkRU1zVVVGQlNTeFhRVUZYTEVWQlFVVTdRVUZEWml4VlFVRkpMRU5CUVVNc1YwRkJWeXhEUVVGRExGTkJRVk1zUTBGQlF5eERRVUZETzBGQlF6VkNMRmxCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVTBGQlV5eERRVUZETEVOQlFVTTdRVUZEZGtJc1lVRkJUeXhEUVVGRExGVkJRVlVzUlVGQlJTeFBRVUZQTEVOQlFVTXNRMEZCUXp0TFFVTTVRaXhOUVVGTkxFbEJRVWtzVFVGQlRTeEZRVUZGTzBGQlEycENMRmxCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zVDBGQlR5eERRVUZETEVOQlFVTTdRVUZEY2tJc1lVRkJUeXhGUVVGRkxFTkJRVU03UzBGRFdDeE5RVUZOTzBGQlEwd3NZVUZCVHl4UFFVRlBMRU5CUVVNN1MwRkRhRUk3UjBGRFJqdERRVU5HTEVOQlFVTTdPMEZCUlVZc1EwRkJReXhaUVVGWE8wRkJRMVlzVFVGQlRTeGhRVUZoTEVkQlFVY3NRMEZEY0VJc2IwSkJRVzlDTEVkQlEzQkNMREpDUVVFeVFpeEhRVU16UWl4NVFrRkJlVUlzUjBGRGVrSXNPRUpCUVRoQ0xFZEJRemxDTEcxQ1FVRnRRaXhIUVVOdVFpeG5Ra0ZCWjBJc1IwRkRhRUlzZFVKQlFYVkNMRWRCUTNaQ0xEQkNRVUV3UWl4SFFVTXhRaXhyUTBGQmEwTXNSMEZEYkVNc01FSkJRVEJDTEVkQlF6RkNMR2xEUVVGcFF5eEhRVU5xUXl3MlFrRkJOa0lzUjBGRE4wSXNLMEpCUVN0Q0xFZEJReTlDTEhsRFFVRjVReXhIUVVONlF5eDFRMEZCZFVNc1IwRkRka01zYTBKQlFXdENMRU5CUVVFc1EwRkRiRUlzUzBGQlN5eERRVUZETEVkQlFVY3NRMEZCUXl4RFFVRkRPenRCUVVWaUxFMUJRVTBzWVVGQllTeEhRVUZKTEd0Q1FVRnJRaXhEUVVGRExHTkJRV01zUjBGQlJ5eEZRVUZGTEVGQlFVTXNRMEZCUXpzN1FVRkZMMFFzVDBGQlN5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1EwRkJReXhIUVVGSExHRkJRV0VzUTBGQlF5eE5RVUZOTEVWQlFVVXNRMEZCUXl4SFFVRkhMRU5CUVVNc1JVRkJSU3hEUVVGRExFVkJRVVVzUlVGQlJUdEJRVU53UkN4cFFrRkJZU3hEUVVGRExHRkJRV0VzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJRenRIUVVONFF6dERRVU5HTEVOQlFVRXNSVUZCUnl4RFFVRkRPenM3T3p0QlFVdE1MR3RDUVVGclFpeERRVUZETERaQ1FVRTJRaXhIUVVGSExGVkJRVk1zU1VGQlNTeEZRVUZGTzBGQlEyaEZMRk5CUTBVc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4alFVRmpMRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRM2hETERSQ1FVRTBRaXhEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNRMEZEZGtNN1EwRkRTQ3hEUVVGRE96dEJRVVZHTEZOQlFWTXNXVUZCV1N4RFFVRkRMR1ZCUVdVc1JVRkJSU3hSUVVGUkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVsQlFVa3NSVUZCUlR0QlFVTTFSQ3hOUVVGSkxFdEJRVXNzUjBGQlJ5eFJRVUZSTEVOQlFVTXNVVUZCVVN4RlFVRkZPMDFCUXpkQ0xFTkJRVU1zUjBGQlJ5eERRVUZETzAxQlEwd3NSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFTkJRVU03UVVGRGNrSXNUVUZCU1N4bFFVRmxMRVZCUVVVN1FVRkRia0lzVDBGQlJ5eEZRVUZGTEVOQlFVTTdSMEZEVURzN1FVRkZSQ3hUUVVGUExFTkJRVU1zUjBGQlJ5eEhRVUZITEVWQlFVVXNRMEZCUXl4RlFVRkZMRVZCUVVVN1FVRkRia0lzVTBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4VlFVRlZMRU5CUVVNc1MwRkJTeXhGUVVGRkxFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNSVUZCUlN4SlFVRkpMRU5CUVVNc1EwRkJRenRIUVVOd1JEczdRVUZGUkN4TlFVRkpMR1ZCUVdVc1JVRkJSVHRCUVVOdVFpeFhRVUZQTEVOQlEwd3NVVUZCVVN4RFFVRkRMRk5CUVZNc1EwRkJReXhyUWtGQmEwSXNRMEZCUXl4RlFVTjBReXhIUVVGSExFVkJRMGdzUzBGQlN5eEZRVU5NTEVsQlFVa3NSVUZEU2l4UlFVRlJMRU5CUVVNc1dVRkJXU3hEUVVGRExFdEJRVXNzUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVTXZRaXhKUVVGSkxFVkJRMG9zU1VGQlNTeERRVUZETEZOQlFWTXNRMEZCUXl4UlFVRlJMRU5CUVVNc1RVRkJUU3hEUVVGRExHVkJRV1VzUTBGQlF5eEZRVU12UXl4SlFVRkpMRU5CUTB3c1EwRkJRenRIUVVOSUxFMUJRVTA3UVVGRFRDeFhRVUZQTEV0QlFVc3NRMEZCUXp0SFFVTmtPME5CUTBZN08zRkNRVVZqTEd0Q1FVRnJRaUlzSW1acGJHVWlPaUpxWVhaaGMyTnlhWEIwTFdOdmJYQnBiR1Z5TG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElIc2dRMDlOVUVsTVJWSmZVa1ZXU1ZOSlQwNHNJRkpGVmtsVFNVOU9YME5JUVU1SFJWTWdmU0JtY205dElDY3VMaTlpWVhObEp6dGNibWx0Y0c5eWRDQkZlR05sY0hScGIyNGdabkp2YlNBbkxpNHZaWGhqWlhCMGFXOXVKenRjYm1sdGNHOXlkQ0I3SUdselFYSnlZWGtnZlNCbWNtOXRJQ2N1TGk5MWRHbHNjeWM3WEc1cGJYQnZjblFnUTI5a1pVZGxiaUJtY205dElDY3VMMk52WkdVdFoyVnVKenRjYmx4dVpuVnVZM1JwYjI0Z1RHbDBaWEpoYkNoMllXeDFaU2tnZTF4dUlDQjBhR2x6TG5aaGJIVmxJRDBnZG1Gc2RXVTdYRzU5WEc1Y2JtWjFibU4wYVc5dUlFcGhkbUZUWTNKcGNIUkRiMjF3YVd4bGNpZ3BJSHQ5WEc1Y2JrcGhkbUZUWTNKcGNIUkRiMjF3YVd4bGNpNXdjbTkwYjNSNWNHVWdQU0I3WEc0Z0lDOHZJRkJWUWt4SlF5QkJVRWs2SUZsdmRTQmpZVzRnYjNabGNuSnBaR1VnZEdobGMyVWdiV1YwYUc5a2N5QnBiaUJoSUhOMVltTnNZWE56SUhSdklIQnliM1pwWkdWY2JpQWdMeThnWVd4MFpYSnVZWFJwZG1VZ1kyOXRjR2xzWldRZ1ptOXliWE1nWm05eUlHNWhiV1VnYkc5dmEzVndJR0Z1WkNCaWRXWm1aWEpwYm1jZ2MyVnRZVzUwYVdOelhHNGdJRzVoYldWTWIyOXJkWEE2SUdaMWJtTjBhVzl1S0hCaGNtVnVkQ3dnYm1GdFpTQXZLaXdnSUhSNWNHVWdLaThwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxjbTVoYkU1aGJXVk1iMjlyZFhBb2NHRnlaVzUwTENCdVlXMWxLVHRjYmlBZ2ZTeGNiaUFnWkdWd2RHaGxaRXh2YjJ0MWNEb2dablZ1WTNScGIyNG9ibUZ0WlNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJiWEc0Z0lDQWdJQ0IwYUdsekxtRnNhV0Z6WVdKc1pTZ25ZMjl1ZEdGcGJtVnlMbXh2YjJ0MWNDY3BMRnh1SUNBZ0lDQWdKeWhrWlhCMGFITXNJQ2NzWEc0Z0lDQWdJQ0JLVTA5T0xuTjBjbWx1WjJsbWVTaHVZVzFsS1N4Y2JpQWdJQ0FnSUNjcEoxeHVJQ0FnSUYwN1hHNGdJSDBzWEc1Y2JpQWdZMjl0Y0dsc1pYSkpibVp2T2lCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNCamIyNXpkQ0J5WlhacGMybHZiaUE5SUVOUFRWQkpURVZTWDFKRlZrbFRTVTlPTEZ4dUlDQWdJQ0FnZG1WeWMybHZibk1nUFNCU1JWWkpVMGxQVGw5RFNFRk9SMFZUVzNKbGRtbHphVzl1WFR0Y2JpQWdJQ0J5WlhSMWNtNGdXM0psZG1semFXOXVMQ0IyWlhKemFXOXVjMTA3WEc0Z0lIMHNYRzVjYmlBZ1lYQndaVzVrVkc5Q2RXWm1aWEk2SUdaMWJtTjBhVzl1S0hOdmRYSmpaU3dnYkc5allYUnBiMjRzSUdWNGNHeHBZMmwwS1NCN1hHNGdJQ0FnTHk4Z1JtOXlZMlVnWVNCemIzVnlZMlVnWVhNZ2RHaHBjeUJ6YVcxd2JHbG1hV1Z6SUhSb1pTQnRaWEpuWlNCc2IyZHBZeTVjYmlBZ0lDQnBaaUFvSVdselFYSnlZWGtvYzI5MWNtTmxLU2tnZTF4dUlDQWdJQ0FnYzI5MWNtTmxJRDBnVzNOdmRYSmpaVjA3WEc0Z0lDQWdmVnh1SUNBZ0lITnZkWEpqWlNBOUlIUm9hWE11YzI5MWNtTmxMbmR5WVhBb2MyOTFjbU5sTENCc2IyTmhkR2x2YmlrN1hHNWNiaUFnSUNCcFppQW9kR2hwY3k1bGJuWnBjbTl1YldWdWRDNXBjMU5wYlhCc1pTa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlGc25jbVYwZFhKdUlDY3NJSE52ZFhKalpTd2dKenNuWFR0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0dWNGNHeHBZMmwwS1NCN1hHNGdJQ0FnSUNBdkx5QlVhR2x6SUdseklHRWdZMkZ6WlNCM2FHVnlaU0IwYUdVZ1luVm1abVZ5SUc5d1pYSmhkR2x2YmlCdlkyTjFjbk1nWVhNZ1lTQmphR2xzWkNCdlppQmhibTkwYUdWeVhHNGdJQ0FnSUNBdkx5QmpiMjV6ZEhKMVkzUXNJR2RsYm1WeVlXeHNlU0JpY21GalpYTXVJRmRsSUdoaGRtVWdkRzhnWlhod2JHbGphWFJzZVNCdmRYUndkWFFnZEdobGMyVWdZblZtWm1WeVhHNGdJQ0FnSUNBdkx5QnZjR1Z5WVhScGIyNXpJSFJ2SUdWdWMzVnlaU0IwYUdGMElIUm9aU0JsYldsMGRHVmtJR052WkdVZ1oyOWxjeUJwYmlCMGFHVWdZMjl5Y21WamRDQnNiMk5oZEdsdmJpNWNiaUFnSUNBZ0lISmxkSFZ5YmlCYkoySjFabVpsY2lBclBTQW5MQ0J6YjNWeVkyVXNJQ2M3SjEwN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSE52ZFhKalpTNWhjSEJsYm1SVWIwSjFabVpsY2lBOUlIUnlkV1U3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdjMjkxY21ObE8xeHVJQ0FnSUgxY2JpQWdmU3hjYmx4dUlDQnBibWwwYVdGc2FYcGxRblZtWm1WeU9pQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTV4ZFc5MFpXUlRkSEpwYm1jb0p5Y3BPMXh1SUNCOUxGeHVJQ0F2THlCRlRrUWdVRlZDVEVsRElFRlFTVnh1SUNCcGJuUmxjbTVoYkU1aGJXVk1iMjlyZFhBNklHWjFibU4wYVc5dUtIQmhjbVZ1ZEN3Z2JtRnRaU2tnZTF4dUlDQWdJSFJvYVhNdWJHOXZhM1Z3VUhKdmNHVnlkSGxHZFc1amRHbHZia2x6VlhObFpDQTlJSFJ5ZFdVN1hHNGdJQ0FnY21WMGRYSnVJRnNuYkc5dmEzVndVSEp2Y0dWeWRIa29KeXdnY0dGeVpXNTBMQ0FuTENjc0lFcFRUMDR1YzNSeWFXNW5hV1o1S0c1aGJXVXBMQ0FuS1NkZE8xeHVJQ0I5TEZ4dVhHNGdJR3h2YjJ0MWNGQnliM0JsY25SNVJuVnVZM1JwYjI1SmMxVnpaV1E2SUdaaGJITmxMRnh1WEc0Z0lHTnZiWEJwYkdVNklHWjFibU4wYVc5dUtHVnVkbWx5YjI1dFpXNTBMQ0J2Y0hScGIyNXpMQ0JqYjI1MFpYaDBMQ0JoYzA5aWFtVmpkQ2tnZTF4dUlDQWdJSFJvYVhNdVpXNTJhWEp2Ym0xbGJuUWdQU0JsYm5acGNtOXViV1Z1ZER0Y2JpQWdJQ0IwYUdsekxtOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1ek8xeHVJQ0FnSUhSb2FYTXVjM1J5YVc1blVHRnlZVzF6SUQwZ2RHaHBjeTV2Y0hScGIyNXpMbk4wY21sdVoxQmhjbUZ0Y3p0Y2JpQWdJQ0IwYUdsekxuUnlZV05yU1dSeklEMGdkR2hwY3k1dmNIUnBiMjV6TG5SeVlXTnJTV1J6TzF4dUlDQWdJSFJvYVhNdWNISmxZMjl0Y0dsc1pTQTlJQ0ZoYzA5aWFtVmpkRHRjYmx4dUlDQWdJSFJvYVhNdWJtRnRaU0E5SUhSb2FYTXVaVzUyYVhKdmJtMWxiblF1Ym1GdFpUdGNiaUFnSUNCMGFHbHpMbWx6UTJocGJHUWdQU0FoSVdOdmJuUmxlSFE3WEc0Z0lDQWdkR2hwY3k1amIyNTBaWGgwSUQwZ1kyOXVkR1Y0ZENCOGZDQjdYRzRnSUNBZ0lDQmtaV052Y21GMGIzSnpPaUJiWFN4Y2JpQWdJQ0FnSUhCeWIyZHlZVzF6T2lCYlhTeGNiaUFnSUNBZ0lHVnVkbWx5YjI1dFpXNTBjem9nVzExY2JpQWdJQ0I5TzF4dVhHNGdJQ0FnZEdocGN5NXdjbVZoYldKc1pTZ3BPMXh1WEc0Z0lDQWdkR2hwY3k1emRHRmphMU5zYjNRZ1BTQXdPMXh1SUNBZ0lIUm9hWE11YzNSaFkydFdZWEp6SUQwZ1cxMDdYRzRnSUNBZ2RHaHBjeTVoYkdsaGMyVnpJRDBnZTMwN1hHNGdJQ0FnZEdocGN5NXlaV2RwYzNSbGNuTWdQU0I3SUd4cGMzUTZJRnRkSUgwN1hHNGdJQ0FnZEdocGN5NW9ZWE5vWlhNZ1BTQmJYVHRjYmlBZ0lDQjBhR2x6TG1OdmJYQnBiR1ZUZEdGamF5QTlJRnRkTzF4dUlDQWdJSFJvYVhNdWFXNXNhVzVsVTNSaFkyc2dQU0JiWFR0Y2JpQWdJQ0IwYUdsekxtSnNiMk5yVUdGeVlXMXpJRDBnVzEwN1hHNWNiaUFnSUNCMGFHbHpMbU52YlhCcGJHVkRhR2xzWkhKbGJpaGxiblpwY205dWJXVnVkQ3dnYjNCMGFXOXVjeWs3WEc1Y2JpQWdJQ0IwYUdsekxuVnpaVVJsY0hSb2N5QTlYRzRnSUNBZ0lDQjBhR2x6TG5WelpVUmxjSFJvY3lCOGZGeHVJQ0FnSUNBZ1pXNTJhWEp2Ym0xbGJuUXVkWE5sUkdWd2RHaHpJSHg4WEc0Z0lDQWdJQ0JsYm5acGNtOXViV1Z1ZEM1MWMyVkVaV052Y21GMGIzSnpJSHg4WEc0Z0lDQWdJQ0IwYUdsekxtOXdkR2x2Ym5NdVkyOXRjR0YwTzF4dUlDQWdJSFJvYVhNdWRYTmxRbXh2WTJ0UVlYSmhiWE1nUFNCMGFHbHpMblZ6WlVKc2IyTnJVR0Z5WVcxeklIeDhJR1Z1ZG1seWIyNXRaVzUwTG5WelpVSnNiMk5yVUdGeVlXMXpPMXh1WEc0Z0lDQWdiR1YwSUc5d1kyOWtaWE1nUFNCbGJuWnBjbTl1YldWdWRDNXZjR052WkdWekxGeHVJQ0FnSUNBZ2IzQmpiMlJsTEZ4dUlDQWdJQ0FnWm1seWMzUk1iMk1zWEc0Z0lDQWdJQ0JwTEZ4dUlDQWdJQ0FnYkR0Y2JseHVJQ0FnSUdadmNpQW9hU0E5SURBc0lHd2dQU0J2Y0dOdlpHVnpMbXhsYm1kMGFEc2dhU0E4SUd3N0lHa3JLeWtnZTF4dUlDQWdJQ0FnYjNCamIyUmxJRDBnYjNCamIyUmxjMXRwWFR0Y2JseHVJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVXVZM1Z5Y21WdWRFeHZZMkYwYVc5dUlEMGdiM0JqYjJSbExteHZZenRjYmlBZ0lDQWdJR1pwY25OMFRHOWpJRDBnWm1seWMzUk1iMk1nZkh3Z2IzQmpiMlJsTG14dll6dGNiaUFnSUNBZ0lIUm9hWE5iYjNCamIyUmxMbTl3WTI5a1pWMHVZWEJ3Ykhrb2RHaHBjeXdnYjNCamIyUmxMbUZ5WjNNcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFWnNkWE5vSUdGdWVTQjBjbUZwYkdsdVp5QmpiMjUwWlc1MElIUm9ZWFFnYldsbmFIUWdZbVVnY0dWdVpHbHVaeTVjYmlBZ0lDQjBhR2x6TG5OdmRYSmpaUzVqZFhKeVpXNTBURzlqWVhScGIyNGdQU0JtYVhKemRFeHZZenRjYmlBZ0lDQjBhR2x6TG5CMWMyaFRiM1Z5WTJVb0p5Y3BPMXh1WEc0Z0lDQWdMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJRzVsZUhRZ0tpOWNiaUFnSUNCcFppQW9kR2hwY3k1emRHRmphMU5zYjNRZ2ZId2dkR2hwY3k1cGJteHBibVZUZEdGamF5NXNaVzVuZEdnZ2ZId2dkR2hwY3k1amIyMXdhV3hsVTNSaFkyc3ViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWGhqWlhCMGFXOXVLQ2REYjIxd2FXeGxJR052YlhCc1pYUmxaQ0IzYVhSb0lHTnZiblJsYm5RZ2JHVm1kQ0J2YmlCemRHRmpheWNwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNnaGRHaHBjeTVrWldOdmNtRjBiM0p6TG1selJXMXdkSGtvS1NrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTUxYzJWRVpXTnZjbUYwYjNKeklEMGdkSEoxWlR0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVrWldOdmNtRjBiM0p6TG5CeVpYQmxibVFvVzF4dUlDQWdJQ0FnSUNBbmRtRnlJR1JsWTI5eVlYUnZjbk1nUFNCamIyNTBZV2x1WlhJdVpHVmpiM0poZEc5eWN5d2dKeXhjYmlBZ0lDQWdJQ0FnZEdocGN5NXNiMjlyZFhCUWNtOXdaWEowZVVaMWJtTjBhVzl1Vm1GeVJHVmpiR0Z5WVhScGIyNG9LU3hjYmlBZ0lDQWdJQ0FnSnp0Y1hHNG5YRzRnSUNBZ0lDQmRLVHRjYmlBZ0lDQWdJSFJvYVhNdVpHVmpiM0poZEc5eWN5NXdkWE5vS0NkeVpYUjFjbTRnWm00N0p5azdYRzVjYmlBZ0lDQWdJR2xtSUNoaGMwOWlhbVZqZENrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1SbFkyOXlZWFJ2Y25NZ1BTQkdkVzVqZEdsdmJpNWhjSEJzZVNoMGFHbHpMQ0JiWEc0Z0lDQWdJQ0FnSUNBZ0oyWnVKeXhjYmlBZ0lDQWdJQ0FnSUNBbmNISnZjSE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDZGpiMjUwWVdsdVpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNka1pYQjBhREFuTEZ4dUlDQWdJQ0FnSUNBZ0lDZGtZWFJoSnl4Y2JpQWdJQ0FnSUNBZ0lDQW5ZbXh2WTJ0UVlYSmhiWE1uTEZ4dUlDQWdJQ0FnSUNBZ0lDZGtaWEIwYUhNbkxGeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpHVmpiM0poZEc5eWN5NXRaWEpuWlNncFhHNGdJQ0FnSUNBZ0lGMHBPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1a1pXTnZjbUYwYjNKekxuQnlaWEJsYm1Rb1hHNGdJQ0FnSUNBZ0lDQWdKMloxYm1OMGFXOXVLR1p1TENCd2NtOXdjeXdnWTI5dWRHRnBibVZ5TENCa1pYQjBhREFzSUdSaGRHRXNJR0pzYjJOclVHRnlZVzF6TENCa1pYQjBhSE1wSUh0Y1hHNG5YRzRnSUNBZ0lDQWdJQ2s3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaR1ZqYjNKaGRHOXljeTV3ZFhOb0tDZDlYRnh1SnlrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WkdWamIzSmhkRzl5Y3lBOUlIUm9hWE11WkdWamIzSmhkRzl5Y3k1dFpYSm5aU2dwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQjBhR2x6TG1SbFkyOXlZWFJ2Y25NZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JHVjBJR1p1SUQwZ2RHaHBjeTVqY21WaGRHVkdkVzVqZEdsdmJrTnZiblJsZUhRb1lYTlBZbXBsWTNRcE8xeHVJQ0FnSUdsbUlDZ2hkR2hwY3k1cGMwTm9hV3hrS1NCN1hHNGdJQ0FnSUNCc1pYUWdjbVYwSUQwZ2UxeHVJQ0FnSUNBZ0lDQmpiMjF3YVd4bGNqb2dkR2hwY3k1amIyMXdhV3hsY2tsdVptOG9LU3hjYmlBZ0lDQWdJQ0FnYldGcGJqb2dabTVjYmlBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TG1SbFkyOXlZWFJ2Y25NcElIdGNiaUFnSUNBZ0lDQWdjbVYwTG0xaGFXNWZaQ0E5SUhSb2FYTXVaR1ZqYjNKaGRHOXljenNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0YkdsdVpTQmpZVzFsYkdOaGMyVmNiaUFnSUNBZ0lDQWdjbVYwTG5WelpVUmxZMjl5WVhSdmNuTWdQU0IwY25WbE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnNaWFFnZXlCd2NtOW5jbUZ0Y3l3Z1pHVmpiM0poZEc5eWN5QjlJRDBnZEdocGN5NWpiMjUwWlhoME8xeHVJQ0FnSUNBZ1ptOXlJQ2hwSUQwZ01Dd2diQ0E5SUhCeWIyZHlZVzF6TG14bGJtZDBhRHNnYVNBOElHdzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvY0hKdlozSmhiWE5iYVYwcElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSYmFWMGdQU0J3Y205bmNtRnRjMXRwWFR0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvWkdWamIzSmhkRzl5YzF0cFhTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBXMmtnS3lBblgyUW5YU0E5SUdSbFkyOXlZWFJ2Y25OYmFWMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUXVkWE5sUkdWamIzSmhkRzl5Y3lBOUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbVZ1ZG1seWIyNXRaVzUwTG5WelpWQmhjblJwWVd3cElIdGNiaUFnSUNBZ0lDQWdjbVYwTG5WelpWQmhjblJwWVd3Z1BTQjBjblZsTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11YjNCMGFXOXVjeTVrWVhSaEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEM1MWMyVkVZWFJoSUQwZ2RISjFaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMblZ6WlVSbGNIUm9jeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUXVkWE5sUkdWd2RHaHpJRDBnZEhKMVpUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxuVnpaVUpzYjJOclVHRnlZVzF6S1NCN1hHNGdJQ0FnSUNBZ0lISmxkQzUxYzJWQ2JHOWphMUJoY21GdGN5QTlJSFJ5ZFdVN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1dmNIUnBiMjV6TG1OdmJYQmhkQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUXVZMjl0Y0dGMElEMGdkSEoxWlR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2FXWWdLQ0ZoYzA5aWFtVmpkQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUXVZMjl0Y0dsc1pYSWdQU0JLVTA5T0xuTjBjbWx1WjJsbWVTaHlaWFF1WTI5dGNHbHNaWElwTzF4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzI5MWNtTmxMbU4xY25KbGJuUk1iMk5oZEdsdmJpQTlJSHNnYzNSaGNuUTZJSHNnYkdsdVpUb2dNU3dnWTI5c2RXMXVPaUF3SUgwZ2ZUdGNiaUFnSUNBZ0lDQWdjbVYwSUQwZ2RHaHBjeTV2WW1wbFkzUk1hWFJsY21Gc0tISmxkQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTXVjM0pqVG1GdFpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRDQTlJSEpsZEM1MGIxTjBjbWx1WjFkcGRHaFRiM1Z5WTJWTllYQW9leUJtYVd4bE9pQnZjSFJwYjI1ekxtUmxjM1JPWVcxbElIMHBPMXh1SUNBZ0lDQWdJQ0FnSUhKbGRDNXRZWEFnUFNCeVpYUXViV0Z3SUNZbUlISmxkQzV0WVhBdWRHOVRkSEpwYm1jb0tUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhRZ1BTQnlaWFF1ZEc5VGRISnBibWNvS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBMbU52YlhCcGJHVnlUM0IwYVc5dWN5QTlJSFJvYVhNdWIzQjBhVzl1Y3p0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUhKbGREdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1p1TzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCd2NtVmhiV0pzWlRvZ1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0x5OGdkSEpoWTJzZ2RHaGxJR3hoYzNRZ1kyOXVkR1Y0ZENCd2RYTm9aV1FnYVc1MGJ5QndiR0ZqWlNCMGJ5QmhiR3h2ZHlCemEybHdjR2x1WnlCMGFHVmNiaUFnSUNBdkx5Qm5aWFJEYjI1MFpYaDBJRzl3WTI5a1pTQjNhR1Z1SUdsMElIZHZkV3hrSUdKbElHRWdibTl2Y0Z4dUlDQWdJSFJvYVhNdWJHRnpkRU52Ym5SbGVIUWdQU0F3TzF4dUlDQWdJSFJvYVhNdWMyOTFjbU5sSUQwZ2JtVjNJRU52WkdWSFpXNG9kR2hwY3k1dmNIUnBiMjV6TG5OeVkwNWhiV1VwTzF4dUlDQWdJSFJvYVhNdVpHVmpiM0poZEc5eWN5QTlJRzVsZHlCRGIyUmxSMlZ1S0hSb2FYTXViM0IwYVc5dWN5NXpjbU5PWVcxbEtUdGNiaUFnZlN4Y2JseHVJQ0JqY21WaGRHVkdkVzVqZEdsdmJrTnZiblJsZUhRNklHWjFibU4wYVc5dUtHRnpUMkpxWldOMEtTQjdYRzRnSUNBZ2JHVjBJSFpoY2tSbFkyeGhjbUYwYVc5dWN5QTlJQ2NuTzF4dVhHNGdJQ0FnYkdWMElHeHZZMkZzY3lBOUlIUm9hWE11YzNSaFkydFdZWEp6TG1OdmJtTmhkQ2gwYUdsekxuSmxaMmx6ZEdWeWN5NXNhWE4wS1R0Y2JpQWdJQ0JwWmlBb2JHOWpZV3h6TG14bGJtZDBhQ0ErSURBcElIdGNiaUFnSUNBZ0lIWmhja1JsWTJ4aGNtRjBhVzl1Y3lBclBTQW5MQ0FuSUNzZ2JHOWpZV3h6TG1wdmFXNG9KeXdnSnlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1IyVnVaWEpoZEdVZ2JXbHVhVzFwZW1WeUlHRnNhV0Z6SUcxaGNIQnBibWR6WEc0Z0lDQWdMeTljYmlBZ0lDQXZMeUJYYUdWdUlIVnphVzVuSUhSeWRXVWdVMjkxY21ObFRtOWtaWE1zSUhSb2FYTWdkMmxzYkNCMWNHUmhkR1VnWVd4c0lISmxabVZ5Wlc1alpYTWdkRzhnZEdobElHZHBkbVZ1SUdGc2FXRnpYRzRnSUNBZ0x5OGdZWE1nZEdobElITnZkWEpqWlNCdWIyUmxjeUJoY21VZ2NtVjFjMlZrSUdsdUlITnBkSFV1SUVadmNpQjBhR1VnYm05dUxYTnZkWEpqWlNCdWIyUmxJR052YlhCcGJHRjBhVzl1SUcxdlpHVXNYRzRnSUNBZ0x5OGdZV3hwWVhObGN5QjNhV3hzSUc1dmRDQmlaU0IxYzJWa0xDQmlkWFFnZEdocGN5QmpZWE5sSUdseklHRnNjbVZoWkhrZ1ltVnBibWNnY25WdUlHOXVJSFJvWlNCamJHbGxiblFnWVc1a1hHNGdJQ0FnTHk4Z2QyVWdZWEpsYmlkMElHTnZibU5sY200Z1lXSnZkWFFnYldsdWFXMXBlbWx1WnlCMGFHVWdkR1Z0Y0d4aGRHVWdjMmw2WlM1Y2JpQWdJQ0JzWlhRZ1lXeHBZWE5EYjNWdWRDQTlJREE3WEc0Z0lDQWdUMkpxWldOMExtdGxlWE1vZEdocGN5NWhiR2xoYzJWektTNW1iM0pGWVdOb0tHRnNhV0Z6SUQwK0lIdGNiaUFnSUNBZ0lHeGxkQ0J1YjJSbElEMGdkR2hwY3k1aGJHbGhjMlZ6VzJGc2FXRnpYVHRjYmlBZ0lDQWdJR2xtSUNodWIyUmxMbU5vYVd4a2NtVnVJQ1ltSUc1dlpHVXVjbVZtWlhKbGJtTmxRMjkxYm5RZ1BpQXhLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNrUmxZMnhoY21GMGFXOXVjeUFyUFNBbkxDQmhiR2xoY3ljZ0t5QXJLMkZzYVdGelEyOTFiblFnS3lBblBTY2dLeUJoYkdsaGN6dGNiaUFnSUNBZ0lDQWdibTlrWlM1amFHbHNaSEpsYmxzd1hTQTlJQ2RoYkdsaGN5Y2dLeUJoYkdsaGMwTnZkVzUwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBwTzF4dVhHNGdJQ0FnYVdZZ0tIUm9hWE11Ykc5dmEzVndVSEp2Y0dWeWRIbEdkVzVqZEdsdmJrbHpWWE5sWkNrZ2UxeHVJQ0FnSUNBZ2RtRnlSR1ZqYkdGeVlYUnBiMjV6SUNzOUlDY3NJQ2NnS3lCMGFHbHpMbXh2YjJ0MWNGQnliM0JsY25SNVJuVnVZM1JwYjI1V1lYSkVaV05zWVhKaGRHbHZiaWdwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR3hsZENCd1lYSmhiWE1nUFNCYkoyTnZiblJoYVc1bGNpY3NJQ2RrWlhCMGFEQW5MQ0FuYUdWc2NHVnljeWNzSUNkd1lYSjBhV0ZzY3ljc0lDZGtZWFJoSjEwN1hHNWNiaUFnSUNCcFppQW9kR2hwY3k1MWMyVkNiRzlqYTFCaGNtRnRjeUI4ZkNCMGFHbHpMblZ6WlVSbGNIUm9jeWtnZTF4dUlDQWdJQ0FnY0dGeVlXMXpMbkIxYzJnb0oySnNiMk5yVUdGeVlXMXpKeWs3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2gwYUdsekxuVnpaVVJsY0hSb2N5a2dlMXh1SUNBZ0lDQWdjR0Z5WVcxekxuQjFjMmdvSjJSbGNIUm9jeWNwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUZCbGNtWnZjbTBnWVNCelpXTnZibVFnY0dGemN5QnZkbVZ5SUhSb1pTQnZkWFJ3ZFhRZ2RHOGdiV1Z5WjJVZ1kyOXVkR1Z1ZENCM2FHVnVJSEJ2YzNOcFlteGxYRzRnSUNBZ2JHVjBJSE52ZFhKalpTQTlJSFJvYVhNdWJXVnlaMlZUYjNWeVkyVW9kbUZ5UkdWamJHRnlZWFJwYjI1ektUdGNibHh1SUNBZ0lHbG1JQ2hoYzA5aWFtVmpkQ2tnZTF4dUlDQWdJQ0FnY0dGeVlXMXpMbkIxYzJnb2MyOTFjbU5sS1R0Y2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUVaMWJtTjBhVzl1TG1Gd2NHeDVLSFJvYVhNc0lIQmhjbUZ0Y3lrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5OdmRYSmpaUzUzY21Gd0tGdGNiaUFnSUNBZ0lDQWdKMloxYm1OMGFXOXVLQ2NzWEc0Z0lDQWdJQ0FnSUhCaGNtRnRjeTVxYjJsdUtDY3NKeWtzWEc0Z0lDQWdJQ0FnSUNjcElIdGNYRzRnSUNjc1hHNGdJQ0FnSUNBZ0lITnZkWEpqWlN4Y2JpQWdJQ0FnSUNBZ0ozMG5YRzRnSUNBZ0lDQmRLVHRjYmlBZ0lDQjlYRzRnSUgwc1hHNGdJRzFsY21kbFUyOTFjbU5sT2lCbWRXNWpkR2x2YmloMllYSkVaV05zWVhKaGRHbHZibk1wSUh0Y2JpQWdJQ0JzWlhRZ2FYTlRhVzF3YkdVZ1BTQjBhR2x6TG1WdWRtbHliMjV0Wlc1MExtbHpVMmx0Y0d4bExGeHVJQ0FnSUNBZ1lYQndaVzVrVDI1c2VTQTlJQ0YwYUdsekxtWnZjbU5sUW5WbVptVnlMRnh1SUNBZ0lDQWdZWEJ3Wlc1a1JtbHljM1FzWEc0Z0lDQWdJQ0J6YjNWeVkyVlRaV1Z1TEZ4dUlDQWdJQ0FnWW5WbVptVnlVM1JoY25Rc1hHNGdJQ0FnSUNCaWRXWm1aWEpGYm1RN1hHNGdJQ0FnZEdocGN5NXpiM1Z5WTJVdVpXRmphQ2hzYVc1bElEMCtJSHRjYmlBZ0lDQWdJR2xtSUNoc2FXNWxMbUZ3Y0dWdVpGUnZRblZtWm1WeUtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoaWRXWm1aWEpUZEdGeWRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUd4cGJtVXVjSEpsY0dWdVpDZ25JQ0FySUNjcE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJR0oxWm1abGNsTjBZWEowSUQwZ2JHbHVaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCaWRXWm1aWEpGYm1RZ1BTQnNhVzVsTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHSjFabVpsY2xOMFlYSjBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLQ0Z6YjNWeVkyVlRaV1Z1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoY0hCbGJtUkdhWEp6ZENBOUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0oxWm1abGNsTjBZWEowTG5CeVpYQmxibVFvSjJKMVptWmxjaUFyUFNBbktUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ1luVm1abVZ5Ulc1a0xtRmtaQ2duT3ljcE8xeHVJQ0FnSUNBZ0lDQWdJR0oxWm1abGNsTjBZWEowSUQwZ1luVm1abVZ5Ulc1a0lEMGdkVzVrWldacGJtVmtPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2MyOTFjbU5sVTJWbGJpQTlJSFJ5ZFdVN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doYVhOVGFXMXdiR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmhjSEJsYm1SUGJteDVJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVHRjYmx4dUlDQWdJR2xtSUNoaGNIQmxibVJQYm14NUtTQjdYRzRnSUNBZ0lDQnBaaUFvWW5WbVptVnlVM1JoY25RcElIdGNiaUFnSUNBZ0lDQWdZblZtWm1WeVUzUmhjblF1Y0hKbGNHVnVaQ2duY21WMGRYSnVJQ2NwTzF4dUlDQWdJQ0FnSUNCaWRXWm1aWEpGYm1RdVlXUmtLQ2M3SnlrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tDRnpiM1Z5WTJWVFpXVnVLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMjkxY21ObExuQjFjMmdvSjNKbGRIVnliaUJjSWx3aU95Y3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCMllYSkVaV05zWVhKaGRHbHZibk1nS3oxY2JpQWdJQ0FnSUNBZ0p5d2dZblZtWm1WeUlEMGdKeUFySUNoaGNIQmxibVJHYVhKemRDQS9JQ2NuSURvZ2RHaHBjeTVwYm1sMGFXRnNhWHBsUW5WbVptVnlLQ2twTzF4dVhHNGdJQ0FnSUNCcFppQW9ZblZtWm1WeVUzUmhjblFwSUh0Y2JpQWdJQ0FnSUNBZ1luVm1abVZ5VTNSaGNuUXVjSEpsY0dWdVpDZ25jbVYwZFhKdUlHSjFabVpsY2lBcklDY3BPMXh1SUNBZ0lDQWdJQ0JpZFdabVpYSkZibVF1WVdSa0tDYzdKeWs3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0IwYUdsekxuTnZkWEpqWlM1d2RYTm9LQ2R5WlhSMWNtNGdZblZtWm1WeU95Y3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gyWVhKRVpXTnNZWEpoZEdsdmJuTXBJSHRjYmlBZ0lDQWdJSFJvYVhNdWMyOTFjbU5sTG5CeVpYQmxibVFvWEc0Z0lDQWdJQ0FnSUNkMllYSWdKeUFySUhaaGNrUmxZMnhoY21GMGFXOXVjeTV6ZFdKemRISnBibWNvTWlrZ0t5QW9ZWEJ3Wlc1a1JtbHljM1FnUHlBbkp5QTZJQ2M3WEZ4dUp5bGNiaUFnSUNBZ0lDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMjkxY21ObExtMWxjbWRsS0NrN1hHNGdJSDBzWEc1Y2JpQWdiRzl2YTNWd1VISnZjR1Z5ZEhsR2RXNWpkR2x2YmxaaGNrUmxZMnhoY21GMGFXOXVPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdZRnh1SUNBZ0lDQWdiRzl2YTNWd1VISnZjR1Z5ZEhrZ1BTQmpiMjUwWVdsdVpYSXViRzl2YTNWd1VISnZjR1Z5ZEhrZ2ZId2dablZ1WTNScGIyNG9jR0Z5Wlc1MExDQndjbTl3WlhKMGVVNWhiV1VwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrdVkyRnNiQ2h3WVhKbGJuUXNJSEJ5YjNCbGNuUjVUbUZ0WlNrcElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MFczQnliM0JsY25SNVRtRnRaVjA3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhWdVpHVm1hVzVsWkZ4dUlDQWdJSDFjYmlBZ0lDQmdMblJ5YVcwb0tUdGNiaUFnZlN4Y2JseHVJQ0F2THlCYllteHZZMnRXWVd4MVpWMWNiaUFnTHk5Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdKbFptOXlaVG9nYUdGemFDd2dhVzUyWlhKelpTd2djSEp2WjNKaGJTd2dkbUZzZFdWY2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdGbWRHVnlPaUJ5WlhSMWNtNGdkbUZzZFdVZ2IyWWdZbXh2WTJ0SVpXeHdaWEpOYVhOemFXNW5YRzRnSUM4dlhHNGdJQzh2SUZSb1pTQndkWEp3YjNObElHOW1JSFJvYVhNZ2IzQmpiMlJsSUdseklIUnZJSFJoYTJVZ1lTQmliRzlqYXlCdlppQjBhR1VnWm05eWJWeHVJQ0F2THlCZ2Uzc2pkR2hwY3k1bWIyOTlmUzR1TG50N0wzUm9hWE11Wm05dmZYMWdMQ0J5WlhOdmJIWmxJSFJvWlNCMllXeDFaU0J2WmlCZ1ptOXZZQ3dnWVc1a1hHNGdJQzh2SUhKbGNHeGhZMlVnYVhRZ2IyNGdkR2hsSUhOMFlXTnJJSGRwZEdnZ2RHaGxJSEpsYzNWc2RDQnZaaUJ3Y205d1pYSnNlVnh1SUNBdkx5QnBiblp2YTJsdVp5QmliRzlqYTBobGJIQmxjazFwYzNOcGJtY3VYRzRnSUdKc2IyTnJWbUZzZFdVNklHWjFibU4wYVc5dUtHNWhiV1VwSUh0Y2JpQWdJQ0JzWlhRZ1lteHZZMnRJWld4d1pYSk5hWE56YVc1bklEMGdkR2hwY3k1aGJHbGhjMkZpYkdVb1hHNGdJQ0FnSUNBZ0lDZGpiMjUwWVdsdVpYSXVhRzl2YTNNdVlteHZZMnRJWld4d1pYSk5hWE56YVc1bkoxeHVJQ0FnSUNBZ0tTeGNiaUFnSUNBZ0lIQmhjbUZ0Y3lBOUlGdDBhR2x6TG1OdmJuUmxlSFJPWVcxbEtEQXBYVHRjYmlBZ0lDQjBhR2x6TG5ObGRIVndTR1ZzY0dWeVFYSm5jeWh1WVcxbExDQXdMQ0J3WVhKaGJYTXBPMXh1WEc0Z0lDQWdiR1YwSUdKc2IyTnJUbUZ0WlNBOUlIUm9hWE11Y0c5d1UzUmhZMnNvS1R0Y2JpQWdJQ0J3WVhKaGJYTXVjM0JzYVdObEtERXNJREFzSUdKc2IyTnJUbUZ0WlNrN1hHNWNiaUFnSUNCMGFHbHpMbkIxYzJnb2RHaHBjeTV6YjNWeVkyVXVablZ1WTNScGIyNURZV3hzS0dKc2IyTnJTR1ZzY0dWeVRXbHpjMmx1Wnl3Z0oyTmhiR3duTENCd1lYSmhiWE1wS1R0Y2JpQWdmU3hjYmx4dUlDQXZMeUJiWVcxaWFXZDFiM1Z6UW14dlkydFdZV3gxWlYxY2JpQWdMeTljYmlBZ0x5OGdUMjRnYzNSaFkyc3NJR0psWm05eVpUb2dhR0Z6YUN3Z2FXNTJaWEp6WlN3Z2NISnZaM0poYlN3Z2RtRnNkV1ZjYmlBZ0x5OGdRMjl0Y0dsc1pYSWdkbUZzZFdVc0lHSmxabTl5WlRvZ2JHRnpkRWhsYkhCbGNqMTJZV3gxWlNCdlppQnNZWE4wSUdadmRXNWtJR2hsYkhCbGNpd2dhV1lnWVc1NVhHNGdJQzh2SUU5dUlITjBZV05yTENCaFpuUmxjaXdnYVdZZ2JtOGdiR0Z6ZEVobGJIQmxjam9nYzJGdFpTQmhjeUJiWW14dlkydFdZV3gxWlYxY2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdGbWRHVnlMQ0JwWmlCc1lYTjBTR1ZzY0dWeU9pQjJZV3gxWlZ4dUlDQmhiV0pwWjNWdmRYTkNiRzlqYTFaaGJIVmxPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0F2THlCWFpTZHlaU0JpWldsdVp5QmhJR0pwZENCamFHVmxhM2tnWVc1a0lISmxkWE5wYm1jZ2RHaGxJRzl3ZEdsdmJuTWdkbUZzZFdVZ1puSnZiU0IwYUdVZ2NISnBiM0lnWlhobFkxeHVJQ0FnSUd4bGRDQmliRzlqYTBobGJIQmxjazFwYzNOcGJtY2dQU0IwYUdsekxtRnNhV0Z6WVdKc1pTaGNiaUFnSUNBZ0lDQWdKMk52Ym5SaGFXNWxjaTVvYjI5cmN5NWliRzlqYTBobGJIQmxjazFwYzNOcGJtY25YRzRnSUNBZ0lDQXBMRnh1SUNBZ0lDQWdjR0Z5WVcxeklEMGdXM1JvYVhNdVkyOXVkR1Y0ZEU1aGJXVW9NQ2xkTzF4dUlDQWdJSFJvYVhNdWMyVjBkWEJJWld4d1pYSkJjbWR6S0NjbkxDQXdMQ0J3WVhKaGJYTXNJSFJ5ZFdVcE8xeHVYRzRnSUNBZ2RHaHBjeTVtYkhWemFFbHViR2x1WlNncE8xeHVYRzRnSUNBZ2JHVjBJR04xY25KbGJuUWdQU0IwYUdsekxuUnZjRk4wWVdOcktDazdYRzRnSUNBZ2NHRnlZVzF6TG5Od2JHbGpaU2d4TENBd0xDQmpkWEp5Wlc1MEtUdGNibHh1SUNBZ0lIUm9hWE11Y0hWemFGTnZkWEpqWlNoYlhHNGdJQ0FnSUNBbmFXWWdLQ0VuTEZ4dUlDQWdJQ0FnZEdocGN5NXNZWE4wU0dWc2NHVnlMRnh1SUNBZ0lDQWdKeWtnZXlBbkxGeHVJQ0FnSUNBZ1kzVnljbVZ1ZEN4Y2JpQWdJQ0FnSUNjZ1BTQW5MRnh1SUNBZ0lDQWdkR2hwY3k1emIzVnlZMlV1Wm5WdVkzUnBiMjVEWVd4c0tHSnNiMk5yU0dWc2NHVnlUV2x6YzJsdVp5d2dKMk5oYkd3bkxDQndZWEpoYlhNcExGeHVJQ0FnSUNBZ0ozMG5YRzRnSUNBZ1hTazdYRzRnSUgwc1hHNWNiaUFnTHk4Z1cyRndjR1Z1WkVOdmJuUmxiblJkWEc0Z0lDOHZYRzRnSUM4dklFOXVJSE4wWVdOckxDQmlaV1p2Y21VNklDNHVMbHh1SUNBdkx5QlBiaUJ6ZEdGamF5d2dZV1owWlhJNklDNHVMbHh1SUNBdkwxeHVJQ0F2THlCQmNIQmxibVJ6SUhSb1pTQnpkSEpwYm1jZ2RtRnNkV1VnYjJZZ1lHTnZiblJsYm5SZ0lIUnZJSFJvWlNCamRYSnlaVzUwSUdKMVptWmxjbHh1SUNCaGNIQmxibVJEYjI1MFpXNTBPaUJtZFc1amRHbHZiaWhqYjI1MFpXNTBLU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVjR1Z1WkdsdVowTnZiblJsYm5RcElIdGNiaUFnSUNBZ0lHTnZiblJsYm5RZ1BTQjBhR2x6TG5CbGJtUnBibWREYjI1MFpXNTBJQ3NnWTI5dWRHVnVkRHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV3Wlc1a2FXNW5URzlqWVhScGIyNGdQU0IwYUdsekxuTnZkWEpqWlM1amRYSnlaVzUwVEc5allYUnBiMjQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkR2hwY3k1d1pXNWthVzVuUTI5dWRHVnVkQ0E5SUdOdmJuUmxiblE3WEc0Z0lIMHNYRzVjYmlBZ0x5OGdXMkZ3Y0dWdVpGMWNiaUFnTHk5Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdKbFptOXlaVG9nZG1Gc2RXVXNJQzR1TGx4dUlDQXZMeUJQYmlCemRHRmpheXdnWVdaMFpYSTZJQzR1TGx4dUlDQXZMMXh1SUNBdkx5QkRiMlZ5WTJWeklHQjJZV3gxWldBZ2RHOGdZU0JUZEhKcGJtY2dZVzVrSUdGd2NHVnVaSE1nYVhRZ2RHOGdkR2hsSUdOMWNuSmxiblFnWW5WbVptVnlMbHh1SUNBdkwxeHVJQ0F2THlCSlppQmdkbUZzZFdWZ0lHbHpJSFJ5ZFhSb2VTd2diM0lnTUN3Z2FYUWdhWE1nWTI5bGNtTmxaQ0JwYm5SdklHRWdjM1J5YVc1bklHRnVaQ0JoY0hCbGJtUmxaRnh1SUNBdkx5QlBkR2hsY25kcGMyVXNJSFJvWlNCbGJYQjBlU0J6ZEhKcGJtY2dhWE1nWVhCd1pXNWtaV1JjYmlBZ1lYQndaVzVrT2lCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNCcFppQW9kR2hwY3k1cGMwbHViR2x1WlNncEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG5KbGNHeGhZMlZUZEdGamF5aGpkWEp5Wlc1MElEMCtJRnNuSUNFOUlHNTFiR3dnUHlBbkxDQmpkWEp5Wlc1MExDQW5JRG9nWENKY0lpZGRLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NXdkWE5vVTI5MWNtTmxLSFJvYVhNdVlYQndaVzVrVkc5Q2RXWm1aWElvZEdocGN5NXdiM0JUZEdGamF5Z3BLU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHeGxkQ0JzYjJOaGJDQTlJSFJvYVhNdWNHOXdVM1JoWTJzb0tUdGNiaUFnSUNBZ0lIUm9hWE11Y0hWemFGTnZkWEpqWlNoYlhHNGdJQ0FnSUNBZ0lDZHBaaUFvSnl4Y2JpQWdJQ0FnSUNBZ2JHOWpZV3dzWEc0Z0lDQWdJQ0FnSUNjZ0lUMGdiblZzYkNrZ2V5QW5MRnh1SUNBZ0lDQWdJQ0IwYUdsekxtRndjR1Z1WkZSdlFuVm1abVZ5S0d4dlkyRnNMQ0IxYm1SbFptbHVaV1FzSUhSeWRXVXBMRnh1SUNBZ0lDQWdJQ0FuSUgwblhHNGdJQ0FnSUNCZEtUdGNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxtVnVkbWx5YjI1dFpXNTBMbWx6VTJsdGNHeGxLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjSFZ6YUZOdmRYSmpaU2hiWEc0Z0lDQWdJQ0FnSUNBZ0oyVnNjMlVnZXlBbkxGeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlYQndaVzVrVkc5Q2RXWm1aWElvWENJbkoxd2lMQ0IxYm1SbFptbHVaV1FzSUhSeWRXVXBMRnh1SUNBZ0lDQWdJQ0FnSUNjZ2ZTZGNiaUFnSUNBZ0lDQWdYU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOUxGeHVYRzRnSUM4dklGdGhjSEJsYm1SRmMyTmhjR1ZrWFZ4dUlDQXZMMXh1SUNBdkx5QlBiaUJ6ZEdGamF5d2dZbVZtYjNKbE9pQjJZV3gxWlN3Z0xpNHVYRzRnSUM4dklFOXVJSE4wWVdOckxDQmhablJsY2pvZ0xpNHVYRzRnSUM4dlhHNGdJQzh2SUVWelkyRndaU0JnZG1Gc2RXVmdJR0Z1WkNCaGNIQmxibVFnYVhRZ2RHOGdkR2hsSUdKMVptWmxjbHh1SUNCaGNIQmxibVJGYzJOaGNHVmtPaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0IwYUdsekxuQjFjMmhUYjNWeVkyVW9YRzRnSUNBZ0lDQjBhR2x6TG1Gd2NHVnVaRlJ2UW5WbVptVnlLRnRjYmlBZ0lDQWdJQ0FnZEdocGN5NWhiR2xoYzJGaWJHVW9KMk52Ym5SaGFXNWxjaTVsYzJOaGNHVkZlSEJ5WlhOemFXOXVKeWtzWEc0Z0lDQWdJQ0FnSUNjb0p5eGNiaUFnSUNBZ0lDQWdkR2hwY3k1d2IzQlRkR0ZqYXlncExGeHVJQ0FnSUNBZ0lDQW5LU2RjYmlBZ0lDQWdJRjBwWEc0Z0lDQWdLVHRjYmlBZ2ZTeGNibHh1SUNBdkx5QmJaMlYwUTI5dWRHVjRkRjFjYmlBZ0x5OWNiaUFnTHk4Z1QyNGdjM1JoWTJzc0lHSmxabTl5WlRvZ0xpNHVYRzRnSUM4dklFOXVJSE4wWVdOckxDQmhablJsY2pvZ0xpNHVYRzRnSUM4dklFTnZiWEJwYkdWeUlIWmhiSFZsTENCaFpuUmxjam9nYkdGemRFTnZiblJsZUhROVpHVndkR2hjYmlBZ0x5OWNiaUFnTHk4Z1UyVjBJSFJvWlNCMllXeDFaU0J2WmlCMGFHVWdZR3hoYzNSRGIyNTBaWGgwWUNCamIyMXdhV3hsY2lCMllXeDFaU0IwYnlCMGFHVWdaR1Z3ZEdoY2JpQWdaMlYwUTI5dWRHVjRkRG9nWm5WdVkzUnBiMjRvWkdWd2RHZ3BJSHRjYmlBZ0lDQjBhR2x6TG14aGMzUkRiMjUwWlhoMElEMGdaR1Z3ZEdnN1hHNGdJSDBzWEc1Y2JpQWdMeThnVzNCMWMyaERiMjUwWlhoMFhWeHVJQ0F2TDF4dUlDQXZMeUJQYmlCemRHRmpheXdnWW1WbWIzSmxPaUF1TGk1Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdGbWRHVnlPaUJqZFhKeVpXNTBRMjl1ZEdWNGRDd2dMaTR1WEc0Z0lDOHZYRzRnSUM4dklGQjFjMmhsY3lCMGFHVWdkbUZzZFdVZ2IyWWdkR2hsSUdOMWNuSmxiblFnWTI5dWRHVjRkQ0J2Ym5SdklIUm9aU0J6ZEdGamF5NWNiaUFnY0hWemFFTnZiblJsZUhRNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lIUm9hWE11Y0hWemFGTjBZV05yVEdsMFpYSmhiQ2gwYUdsekxtTnZiblJsZUhST1lXMWxLSFJvYVhNdWJHRnpkRU52Ym5SbGVIUXBLVHRjYmlBZ2ZTeGNibHh1SUNBdkx5QmJiRzl2YTNWd1QyNURiMjUwWlhoMFhWeHVJQ0F2TDF4dUlDQXZMeUJQYmlCemRHRmpheXdnWW1WbWIzSmxPaUF1TGk1Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdGbWRHVnlPaUJqZFhKeVpXNTBRMjl1ZEdWNGRGdHVZVzFsWFN3Z0xpNHVYRzRnSUM4dlhHNGdJQzh2SUV4dmIydHpJSFZ3SUhSb1pTQjJZV3gxWlNCdlppQmdibUZ0WldBZ2IyNGdkR2hsSUdOMWNuSmxiblFnWTI5dWRHVjRkQ0JoYm1RZ2NIVnphR1Z6WEc0Z0lDOHZJR2wwSUc5dWRHOGdkR2hsSUhOMFlXTnJMbHh1SUNCc2IyOXJkWEJQYmtOdmJuUmxlSFE2SUdaMWJtTjBhVzl1S0hCaGNuUnpMQ0JtWVd4emVTd2djM1J5YVdOMExDQnpZMjl3WldRcElIdGNiaUFnSUNCc1pYUWdhU0E5SURBN1hHNWNiaUFnSUNCcFppQW9JWE5qYjNCbFpDQW1KaUIwYUdsekxtOXdkR2x2Ym5NdVkyOXRjR0YwSUNZbUlDRjBhR2x6TG14aGMzUkRiMjUwWlhoMEtTQjdYRzRnSUNBZ0lDQXZMeUJVYUdVZ1pHVndkR2hsWkNCeGRXVnllU0JwY3lCbGVIQmxZM1JsWkNCMGJ5Qm9ZVzVrYkdVZ2RHaGxJSFZ1WkdWbWFXNWxaQ0JzYjJkcFl5Qm1iM0lnZEdobElISnZiM1FnYkdWMlpXd2dkR2hoZEZ4dUlDQWdJQ0FnTHk4Z2FYTWdhVzF3YkdWdFpXNTBaV1FnWW1Wc2IzY3NJSE52SUhkbElHVjJZV3gxWVhSbElIUm9ZWFFnWkdseVpXTjBiSGtnYVc0Z1kyOXRjR0YwSUcxdlpHVmNiaUFnSUNBZ0lIUm9hWE11Y0hWemFDaDBhR2x6TG1SbGNIUm9aV1JNYjI5cmRYQW9jR0Z5ZEhOYmFTc3JYU2twTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQjBhR2x6TG5CMWMyaERiMjUwWlhoMEtDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHBjeTV5WlhOdmJIWmxVR0YwYUNnblkyOXVkR1Y0ZENjc0lIQmhjblJ6TENCcExDQm1ZV3h6ZVN3Z2MzUnlhV04wS1R0Y2JpQWdmU3hjYmx4dUlDQXZMeUJiYkc5dmEzVndRbXh2WTJ0UVlYSmhiVjFjYmlBZ0x5OWNiaUFnTHk4Z1QyNGdjM1JoWTJzc0lHSmxabTl5WlRvZ0xpNHVYRzRnSUM4dklFOXVJSE4wWVdOckxDQmhablJsY2pvZ1lteHZZMnRRWVhKaGJWdHVZVzFsWFN3Z0xpNHVYRzRnSUM4dlhHNGdJQzh2SUV4dmIydHpJSFZ3SUhSb1pTQjJZV3gxWlNCdlppQmdjR0Z5ZEhOZ0lHOXVJSFJvWlNCbmFYWmxiaUJpYkc5amF5QndZWEpoYlNCaGJtUWdjSFZ6YUdWelhHNGdJQzh2SUdsMElHOXVkRzhnZEdobElITjBZV05yTGx4dUlDQnNiMjlyZFhCQ2JHOWphMUJoY21GdE9pQm1kVzVqZEdsdmJpaGliRzlqYTFCaGNtRnRTV1FzSUhCaGNuUnpLU0I3WEc0Z0lDQWdkR2hwY3k1MWMyVkNiRzlqYTFCaGNtRnRjeUE5SUhSeWRXVTdYRzVjYmlBZ0lDQjBhR2x6TG5CMWMyZ29XeWRpYkc5amExQmhjbUZ0YzFzbkxDQmliRzlqYTFCaGNtRnRTV1JiTUYwc0lDZGRXeWNzSUdKc2IyTnJVR0Z5WVcxSlpGc3hYU3dnSjEwblhTazdYRzRnSUNBZ2RHaHBjeTV5WlhOdmJIWmxVR0YwYUNnblkyOXVkR1Y0ZENjc0lIQmhjblJ6TENBeEtUdGNiaUFnZlN4Y2JseHVJQ0F2THlCYmJHOXZhM1Z3UkdGMFlWMWNiaUFnTHk5Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdKbFptOXlaVG9nTGk0dVhHNGdJQzh2SUU5dUlITjBZV05yTENCaFpuUmxjam9nWkdGMFlTd2dMaTR1WEc0Z0lDOHZYRzRnSUM4dklGQjFjMmdnZEdobElHUmhkR0VnYkc5dmEzVndJRzl3WlhKaGRHOXlYRzRnSUd4dmIydDFjRVJoZEdFNklHWjFibU4wYVc5dUtHUmxjSFJvTENCd1lYSjBjeXdnYzNSeWFXTjBLU0I3WEc0Z0lDQWdhV1lnS0NGa1pYQjBhQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NXdkWE5vVTNSaFkydE1hWFJsY21Gc0tDZGtZWFJoSnlrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSFJvYVhNdWNIVnphRk4wWVdOclRHbDBaWEpoYkNnblkyOXVkR0ZwYm1WeUxtUmhkR0VvWkdGMFlTd2dKeUFySUdSbGNIUm9JQ3NnSnlrbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbkpsYzI5c2RtVlFZWFJvS0Nka1lYUmhKeXdnY0dGeWRITXNJREFzSUhSeWRXVXNJSE4wY21samRDazdYRzRnSUgwc1hHNWNiaUFnY21WemIyeDJaVkJoZEdnNklHWjFibU4wYVc5dUtIUjVjR1VzSUhCaGNuUnpMQ0JwTENCbVlXeHplU3dnYzNSeWFXTjBLU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NXpkSEpwWTNRZ2ZId2dkR2hwY3k1dmNIUnBiMjV6TG1GemMzVnRaVTlpYW1WamRITXBJSHRjYmlBZ0lDQWdJSFJvYVhNdWNIVnphQ2h6ZEhKcFkzUk1iMjlyZFhBb2RHaHBjeTV2Y0hScGIyNXpMbk4wY21samRDQW1KaUJ6ZEhKcFkzUXNJSFJvYVhNc0lIQmhjblJ6TENCMGVYQmxLU2s3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JHVjBJR3hsYmlBOUlIQmhjblJ6TG14bGJtZDBhRHRjYmlBZ0lDQm1iM0lnS0RzZ2FTQThJR3hsYmpzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0F2S2lCbGMyeHBiblF0WkdsellXSnNaU0J1Ynkxc2IyOXdMV1oxYm1NZ0tpOWNiaUFnSUNBZ0lIUm9hWE11Y21Wd2JHRmpaVk4wWVdOcktHTjFjbkpsYm5RZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JzWlhRZ2JHOXZhM1Z3SUQwZ2RHaHBjeTV1WVcxbFRHOXZhM1Z3S0dOMWNuSmxiblFzSUhCaGNuUnpXMmxkTENCMGVYQmxLVHRjYmlBZ0lDQWdJQ0FnTHk4Z1YyVWdkMkZ1ZENCMGJ5Qmxibk4xY21VZ2RHaGhkQ0I2WlhKdklHRnVaQ0JtWVd4elpTQmhjbVVnYUdGdVpHeGxaQ0J3Y205d1pYSnNlU0JwWmlCMGFHVWdZMjl1ZEdWNGRDQW9abUZzYzNrZ1pteGhaeWxjYmlBZ0lDQWdJQ0FnTHk4Z2JtVmxaSE1nZEc4Z2FHRjJaU0IwYUdVZ2MzQmxZMmxoYkNCb1lXNWtiR2x1WnlCbWIzSWdkR2hsYzJVZ2RtRnNkV1Z6TGx4dUlDQWdJQ0FnSUNCcFppQW9JV1poYkhONUtTQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnNuSUNFOUlHNTFiR3dnUHlBbkxDQnNiMjlyZFhBc0lDY2dPaUFuTENCamRYSnlaVzUwWFR0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJQZEdobGNuZHBjMlVnZDJVZ1kyRnVJSFZ6WlNCblpXNWxjbWxqSUdaaGJITjVJR2hoYm1Sc2FXNW5YRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnNuSUNZbUlDY3NJR3h2YjJ0MWNGMDdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnTHlvZ1pYTnNhVzUwTFdWdVlXSnNaU0J1Ynkxc2IyOXdMV1oxYm1NZ0tpOWNiaUFnSUNCOVhHNGdJSDBzWEc1Y2JpQWdMeThnVzNKbGMyOXNkbVZRYjNOemFXSnNaVXhoYldKa1lWMWNiaUFnTHk5Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdKbFptOXlaVG9nZG1Gc2RXVXNJQzR1TGx4dUlDQXZMeUJQYmlCemRHRmpheXdnWVdaMFpYSTZJSEpsYzI5c2RtVmtJSFpoYkhWbExDQXVMaTVjYmlBZ0x5OWNiaUFnTHk4Z1NXWWdkR2hsSUdCMllXeDFaV0FnYVhNZ1lTQnNZVzFpWkdFc0lISmxjR3hoWTJVZ2FYUWdiMjRnZEdobElITjBZV05ySUdKNVhHNGdJQzh2SUhSb1pTQnlaWFIxY200Z2RtRnNkV1VnYjJZZ2RHaGxJR3hoYldKa1lWeHVJQ0J5WlhOdmJIWmxVRzl6YzJsaWJHVk1ZVzFpWkdFNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lIUm9hWE11Y0hWemFDaGJYRzRnSUNBZ0lDQjBhR2x6TG1Gc2FXRnpZV0pzWlNnblkyOXVkR0ZwYm1WeUxteGhiV0prWVNjcExGeHVJQ0FnSUNBZ0p5Z25MRnh1SUNBZ0lDQWdkR2hwY3k1d2IzQlRkR0ZqYXlncExGeHVJQ0FnSUNBZ0p5d2dKeXhjYmlBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEU1aGJXVW9NQ2tzWEc0Z0lDQWdJQ0FuS1NkY2JpQWdJQ0JkS1R0Y2JpQWdmU3hjYmx4dUlDQXZMeUJiY0hWemFGTjBjbWx1WjFCaGNtRnRYVnh1SUNBdkwxeHVJQ0F2THlCUGJpQnpkR0ZqYXl3Z1ltVm1iM0psT2lBdUxpNWNiaUFnTHk4Z1QyNGdjM1JoWTJzc0lHRm1kR1Z5T2lCemRISnBibWNzSUdOMWNuSmxiblJEYjI1MFpYaDBMQ0F1TGk1Y2JpQWdMeTljYmlBZ0x5OGdWR2hwY3lCdmNHTnZaR1VnYVhNZ1pHVnphV2R1WldRZ1ptOXlJSFZ6WlNCcGJpQnpkSEpwYm1jZ2JXOWtaU3dnZDJocFkyaGNiaUFnTHk4Z2NISnZkbWxrWlhNZ2RHaGxJSE4wY21sdVp5QjJZV3gxWlNCdlppQmhJSEJoY21GdFpYUmxjaUJoYkc5dVp5QjNhWFJvSUdsMGMxeHVJQ0F2THlCa1pYQjBhQ0J5WVhSb1pYSWdkR2hoYmlCeVpYTnZiSFpwYm1jZ2FYUWdhVzF0WldScFlYUmxiSGt1WEc0Z0lIQjFjMmhUZEhKcGJtZFFZWEpoYlRvZ1puVnVZM1JwYjI0b2MzUnlhVzVuTENCMGVYQmxLU0I3WEc0Z0lDQWdkR2hwY3k1d2RYTm9RMjl1ZEdWNGRDZ3BPMXh1SUNBZ0lIUm9hWE11Y0hWemFGTjBjbWx1WnloMGVYQmxLVHRjYmx4dUlDQWdJQzh2SUVsbUlHbDBKM01nWVNCemRXSmxlSEJ5WlhOemFXOXVMQ0IwYUdVZ2MzUnlhVzVuSUhKbGMzVnNkRnh1SUNBZ0lDOHZJSGRwYkd3Z1ltVWdjSFZ6YUdWa0lHRm1kR1Z5SUhSb2FYTWdiM0JqYjJSbExseHVJQ0FnSUdsbUlDaDBlWEJsSUNFOVBTQW5VM1ZpUlhod2NtVnpjMmx2YmljcElIdGNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdjM1J5YVc1bklEMDlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbkIxYzJoVGRISnBibWNvYzNSeWFXNW5LVHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNIVnphRk4wWVdOclRHbDBaWEpoYkNoemRISnBibWNwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCbGJYQjBlVWhoYzJnNklHWjFibU4wYVc5dUtHOXRhWFJGYlhCMGVTa2dlMXh1SUNBZ0lHbG1JQ2gwYUdsekxuUnlZV05yU1dSektTQjdYRzRnSUNBZ0lDQjBhR2x6TG5CMWMyZ29KM3Q5SnlrN0lDOHZJR2hoYzJoSlpITmNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIUm9hWE11YzNSeWFXNW5VR0Z5WVcxektTQjdYRzRnSUNBZ0lDQjBhR2x6TG5CMWMyZ29KM3Q5SnlrN0lDOHZJR2hoYzJoRGIyNTBaWGgwYzF4dUlDQWdJQ0FnZEdocGN5NXdkWE5vS0NkN2ZTY3BPeUF2THlCb1lYTm9WSGx3WlhOY2JpQWdJQ0I5WEc0Z0lDQWdkR2hwY3k1d2RYTm9VM1JoWTJ0TWFYUmxjbUZzS0c5dGFYUkZiWEIwZVNBL0lDZDFibVJsWm1sdVpXUW5JRG9nSjN0OUp5azdYRzRnSUgwc1hHNGdJSEIxYzJoSVlYTm9PaUJtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0JwWmlBb2RHaHBjeTVvWVhOb0tTQjdYRzRnSUNBZ0lDQjBhR2x6TG1oaGMyaGxjeTV3ZFhOb0tIUm9hWE11YUdGemFDazdYRzRnSUNBZ2ZWeHVJQ0FnSUhSb2FYTXVhR0Z6YUNBOUlIc2dkbUZzZFdWek9pQjdmU3dnZEhsd1pYTTZJRnRkTENCamIyNTBaWGgwY3pvZ1cxMHNJR2xrY3pvZ1cxMGdmVHRjYmlBZ2ZTeGNiaUFnY0c5d1NHRnphRG9nWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnYkdWMElHaGhjMmdnUFNCMGFHbHpMbWhoYzJnN1hHNGdJQ0FnZEdocGN5NW9ZWE5vSUQwZ2RHaHBjeTVvWVhOb1pYTXVjRzl3S0NrN1hHNWNiaUFnSUNCcFppQW9kR2hwY3k1MGNtRmphMGxrY3lrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV3ZFhOb0tIUm9hWE11YjJKcVpXTjBUR2wwWlhKaGJDaG9ZWE5vTG1sa2N5a3BPMXh1SUNBZ0lIMWNiaUFnSUNCcFppQW9kR2hwY3k1emRISnBibWRRWVhKaGJYTXBJSHRjYmlBZ0lDQWdJSFJvYVhNdWNIVnphQ2gwYUdsekxtOWlhbVZqZEV4cGRHVnlZV3dvYUdGemFDNWpiMjUwWlhoMGN5a3BPMXh1SUNBZ0lDQWdkR2hwY3k1d2RYTm9LSFJvYVhNdWIySnFaV04wVEdsMFpYSmhiQ2hvWVhOb0xuUjVjR1Z6S1NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdocGN5NXdkWE5vS0hSb2FYTXViMkpxWldOMFRHbDBaWEpoYkNob1lYTm9MblpoYkhWbGN5a3BPMXh1SUNCOUxGeHVYRzRnSUM4dklGdHdkWE5vVTNSeWFXNW5YVnh1SUNBdkwxeHVJQ0F2THlCUGJpQnpkR0ZqYXl3Z1ltVm1iM0psT2lBdUxpNWNiaUFnTHk4Z1QyNGdjM1JoWTJzc0lHRm1kR1Z5T2lCeGRXOTBaV1JUZEhKcGJtY29jM1J5YVc1bktTd2dMaTR1WEc0Z0lDOHZYRzRnSUM4dklGQjFjMmdnWVNCeGRXOTBaV1FnZG1WeWMybHZiaUJ2WmlCZ2MzUnlhVzVuWUNCdmJuUnZJSFJvWlNCemRHRmphMXh1SUNCd2RYTm9VM1J5YVc1bk9pQm1kVzVqZEdsdmJpaHpkSEpwYm1jcElIdGNiaUFnSUNCMGFHbHpMbkIxYzJoVGRHRmphMHhwZEdWeVlXd29kR2hwY3k1eGRXOTBaV1JUZEhKcGJtY29jM1J5YVc1bktTazdYRzRnSUgwc1hHNWNiaUFnTHk4Z1czQjFjMmhNYVhSbGNtRnNYVnh1SUNBdkwxeHVJQ0F2THlCUGJpQnpkR0ZqYXl3Z1ltVm1iM0psT2lBdUxpNWNiaUFnTHk4Z1QyNGdjM1JoWTJzc0lHRm1kR1Z5T2lCMllXeDFaU3dnTGk0dVhHNGdJQzh2WEc0Z0lDOHZJRkIxYzJobGN5QmhJSFpoYkhWbElHOXVkRzhnZEdobElITjBZV05yTGlCVWFHbHpJRzl3WlhKaGRHbHZiaUJ3Y21WMlpXNTBjMXh1SUNBdkx5QjBhR1VnWTI5dGNHbHNaWElnWm5KdmJTQmpjbVZoZEdsdVp5QmhJSFJsYlhCdmNtRnllU0IyWVhKcFlXSnNaU0IwYnlCb2IyeGtYRzRnSUM4dklHbDBMbHh1SUNCd2RYTm9UR2wwWlhKaGJEb2dablZ1WTNScGIyNG9kbUZzZFdVcElIdGNiaUFnSUNCMGFHbHpMbkIxYzJoVGRHRmphMHhwZEdWeVlXd29kbUZzZFdVcE8xeHVJQ0I5TEZ4dVhHNGdJQzh2SUZ0d2RYTm9VSEp2WjNKaGJWMWNiaUFnTHk5Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdKbFptOXlaVG9nTGk0dVhHNGdJQzh2SUU5dUlITjBZV05yTENCaFpuUmxjam9nY0hKdlozSmhiU2huZFdsa0tTd2dMaTR1WEc0Z0lDOHZYRzRnSUM4dklGQjFjMmdnWVNCd2NtOW5jbUZ0SUdWNGNISmxjM05wYjI0Z2IyNTBieUIwYUdVZ2MzUmhZMnN1SUZSb2FYTWdkR0ZyWlhOY2JpQWdMeThnWVNCamIyMXdhV3hsTFhScGJXVWdaM1ZwWkNCaGJtUWdZMjl1ZG1WeWRITWdhWFFnYVc1MGJ5QmhJSEoxYm5ScGJXVXRZV05qWlhOemFXSnNaVnh1SUNBdkx5QmxlSEJ5WlhOemFXOXVMbHh1SUNCd2RYTm9VSEp2WjNKaGJUb2dablZ1WTNScGIyNG9aM1ZwWkNrZ2UxeHVJQ0FnSUdsbUlDaG5kV2xrSUNFOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVjSFZ6YUZOMFlXTnJUR2wwWlhKaGJDaDBhR2x6TG5CeWIyZHlZVzFGZUhCeVpYTnphVzl1S0dkMWFXUXBLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV3ZFhOb1UzUmhZMnRNYVhSbGNtRnNLRzUxYkd3cE8xeHVJQ0FnSUgxY2JpQWdmU3hjYmx4dUlDQXZMeUJiY21WbmFYTjBaWEpFWldOdmNtRjBiM0pkWEc0Z0lDOHZYRzRnSUM4dklFOXVJSE4wWVdOckxDQmlaV1p2Y21VNklHaGhjMmdzSUhCeWIyZHlZVzBzSUhCaGNtRnRjeTR1TGl3Z0xpNHVYRzRnSUM4dklFOXVJSE4wWVdOckxDQmhablJsY2pvZ0xpNHVYRzRnSUM4dlhHNGdJQzh2SUZCdmNITWdiMlptSUhSb1pTQmtaV052Y21GMGIzSW5jeUJ3WVhKaGJXVjBaWEp6TENCcGJuWnZhMlZ6SUhSb1pTQmtaV052Y21GMGIzSXNYRzRnSUM4dklHRnVaQ0JwYm5ObGNuUnpJSFJvWlNCa1pXTnZjbUYwYjNJZ2FXNTBieUIwYUdVZ1pHVmpiM0poZEc5eWN5QnNhWE4wTGx4dUlDQnlaV2RwYzNSbGNrUmxZMjl5WVhSdmNpaHdZWEpoYlZOcGVtVXNJRzVoYldVcElIdGNiaUFnSUNCc1pYUWdabTkxYm1SRVpXTnZjbUYwYjNJZ1BTQjBhR2x6TG01aGJXVk1iMjlyZFhBb0oyUmxZMjl5WVhSdmNuTW5MQ0J1WVcxbExDQW5aR1ZqYjNKaGRHOXlKeWtzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpJRDBnZEdocGN5NXpaWFIxY0VobGJIQmxja0Z5WjNNb2JtRnRaU3dnY0dGeVlXMVRhWHBsS1R0Y2JseHVJQ0FnSUhSb2FYTXVaR1ZqYjNKaGRHOXljeTV3ZFhOb0tGdGNiaUFnSUNBZ0lDZG1iaUE5SUNjc1hHNGdJQ0FnSUNCMGFHbHpMbVJsWTI5eVlYUnZjbk11Wm5WdVkzUnBiMjVEWVd4c0tHWnZkVzVrUkdWamIzSmhkRzl5TENBbkp5d2dXMXh1SUNBZ0lDQWdJQ0FuWm00bkxGeHVJQ0FnSUNBZ0lDQW5jSEp2Y0hNbkxGeHVJQ0FnSUNBZ0lDQW5ZMjl1ZEdGcGJtVnlKeXhjYmlBZ0lDQWdJQ0FnYjNCMGFXOXVjMXh1SUNBZ0lDQWdYU2tzWEc0Z0lDQWdJQ0FuSUh4OElHWnVPeWRjYmlBZ0lDQmRLVHRjYmlBZ2ZTeGNibHh1SUNBdkx5QmJhVzUyYjJ0bFNHVnNjR1Z5WFZ4dUlDQXZMMXh1SUNBdkx5QlBiaUJ6ZEdGamF5d2dZbVZtYjNKbE9pQm9ZWE5vTENCcGJuWmxjbk5sTENCd2NtOW5jbUZ0TENCd1lYSmhiWE11TGk0c0lDNHVMbHh1SUNBdkx5QlBiaUJ6ZEdGamF5d2dZV1owWlhJNklISmxjM1ZzZENCdlppQm9aV3h3WlhJZ2FXNTJiMk5oZEdsdmJseHVJQ0F2TDF4dUlDQXZMeUJRYjNCeklHOW1aaUIwYUdVZ2FHVnNjR1Z5SjNNZ2NHRnlZVzFsZEdWeWN5d2dhVzUyYjJ0bGN5QjBhR1VnYUdWc2NHVnlMRnh1SUNBdkx5QmhibVFnY0hWemFHVnpJSFJvWlNCb1pXeHdaWEluY3lCeVpYUjFjbTRnZG1Gc2RXVWdiMjUwYnlCMGFHVWdjM1JoWTJzdVhHNGdJQzh2WEc0Z0lDOHZJRWxtSUhSb1pTQm9aV3h3WlhJZ2FYTWdibTkwSUdadmRXNWtMQ0JnYUdWc2NHVnlUV2x6YzJsdVoyQWdhWE1nWTJGc2JHVmtMbHh1SUNCcGJuWnZhMlZJWld4d1pYSTZJR1oxYm1OMGFXOXVLSEJoY21GdFUybDZaU3dnYm1GdFpTd2dhWE5UYVcxd2JHVXBJSHRjYmlBZ0lDQnNaWFFnYm05dVNHVnNjR1Z5SUQwZ2RHaHBjeTV3YjNCVGRHRmpheWdwTEZ4dUlDQWdJQ0FnYUdWc2NHVnlJRDBnZEdocGN5NXpaWFIxY0VobGJIQmxjaWh3WVhKaGJWTnBlbVVzSUc1aGJXVXBPMXh1WEc0Z0lDQWdiR1YwSUhCdmMzTnBZbXhsUm5WdVkzUnBiMjVEWVd4c2N5QTlJRnRkTzF4dVhHNGdJQ0FnYVdZZ0tHbHpVMmx0Y0d4bEtTQjdYRzRnSUNBZ0lDQXZMeUJrYVhKbFkzUWdZMkZzYkNCMGJ5Qm9aV3h3WlhKY2JpQWdJQ0FnSUhCdmMzTnBZbXhsUm5WdVkzUnBiMjVEWVd4c2N5NXdkWE5vS0dobGJIQmxjaTV1WVcxbEtUdGNiaUFnSUNCOVhHNGdJQ0FnTHk4Z1kyRnNiQ0JoSUdaMWJtTjBhVzl1SUdaeWIyMGdkR2hsSUdsdWNIVjBJRzlpYW1WamRGeHVJQ0FnSUhCdmMzTnBZbXhsUm5WdVkzUnBiMjVEWVd4c2N5NXdkWE5vS0c1dmJraGxiSEJsY2lrN1hHNGdJQ0FnYVdZZ0tDRjBhR2x6TG05d2RHbHZibk11YzNSeWFXTjBLU0I3WEc0Z0lDQWdJQ0J3YjNOemFXSnNaVVoxYm1OMGFXOXVRMkZzYkhNdWNIVnphQ2hjYmlBZ0lDQWdJQ0FnZEdocGN5NWhiR2xoYzJGaWJHVW9KMk52Ym5SaGFXNWxjaTVvYjI5cmN5NW9aV3h3WlhKTmFYTnphVzVuSnlsY2JpQWdJQ0FnSUNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYkdWMElHWjFibU4wYVc5dVRHOXZhM1Z3UTI5a1pTQTlJRnRjYmlBZ0lDQWdJQ2NvSnl4Y2JpQWdJQ0FnSUhSb2FYTXVhWFJsYlhOVFpYQmhjbUYwWldSQ2VTaHdiM056YVdKc1pVWjFibU4wYVc5dVEyRnNiSE1zSUNkOGZDY3BMRnh1SUNBZ0lDQWdKeWtuWEc0Z0lDQWdYVHRjYmlBZ0lDQnNaWFFnWm5WdVkzUnBiMjVEWVd4c0lEMGdkR2hwY3k1emIzVnlZMlV1Wm5WdVkzUnBiMjVEWVd4c0tGeHVJQ0FnSUNBZ1puVnVZM1JwYjI1TWIyOXJkWEJEYjJSbExGeHVJQ0FnSUNBZ0oyTmhiR3duTEZ4dUlDQWdJQ0FnYUdWc2NHVnlMbU5oYkd4UVlYSmhiWE5jYmlBZ0lDQXBPMXh1SUNBZ0lIUm9hWE11Y0hWemFDaG1kVzVqZEdsdmJrTmhiR3dwTzF4dUlDQjlMRnh1WEc0Z0lHbDBaVzF6VTJWd1lYSmhkR1ZrUW5rNklHWjFibU4wYVc5dUtHbDBaVzF6TENCelpYQmhjbUYwYjNJcElIdGNiaUFnSUNCc1pYUWdjbVZ6ZFd4MElEMGdXMTA3WEc0Z0lDQWdjbVZ6ZFd4MExuQjFjMmdvYVhSbGJYTmJNRjBwTzF4dUlDQWdJR1p2Y2lBb2JHVjBJR2tnUFNBeE95QnBJRHdnYVhSbGJYTXViR1Z1WjNSb095QnBLeXNwSUh0Y2JpQWdJQ0FnSUhKbGMzVnNkQzV3ZFhOb0tITmxjR0Z5WVhSdmNpd2dhWFJsYlhOYmFWMHBPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnY21WemRXeDBPMXh1SUNCOUxGeHVJQ0F2THlCYmFXNTJiMnRsUzI1dmQyNUlaV3h3WlhKZFhHNGdJQzh2WEc0Z0lDOHZJRTl1SUhOMFlXTnJMQ0JpWldadmNtVTZJR2hoYzJnc0lHbHVkbVZ5YzJVc0lIQnliMmR5WVcwc0lIQmhjbUZ0Y3k0dUxpd2dMaTR1WEc0Z0lDOHZJRTl1SUhOMFlXTnJMQ0JoWm5SbGNqb2djbVZ6ZFd4MElHOW1JR2hsYkhCbGNpQnBiblp2WTJGMGFXOXVYRzRnSUM4dlhHNGdJQzh2SUZSb2FYTWdiM0JsY21GMGFXOXVJR2x6SUhWelpXUWdkMmhsYmlCMGFHVWdhR1ZzY0dWeUlHbHpJR3R1YjNkdUlIUnZJR1Y0YVhOMExGeHVJQ0F2THlCemJ5QmhJR0JvWld4d1pYSk5hWE56YVc1bllDQm1ZV3hzWW1GamF5QnBjeUJ1YjNRZ2NtVnhkV2x5WldRdVhHNGdJR2x1ZG05clpVdHViM2R1U0dWc2NHVnlPaUJtZFc1amRHbHZiaWh3WVhKaGJWTnBlbVVzSUc1aGJXVXBJSHRjYmlBZ0lDQnNaWFFnYUdWc2NHVnlJRDBnZEdocGN5NXpaWFIxY0VobGJIQmxjaWh3WVhKaGJWTnBlbVVzSUc1aGJXVXBPMXh1SUNBZ0lIUm9hWE11Y0hWemFDaDBhR2x6TG5OdmRYSmpaUzVtZFc1amRHbHZia05oYkd3b2FHVnNjR1Z5TG01aGJXVXNJQ2RqWVd4c0p5d2dhR1ZzY0dWeUxtTmhiR3hRWVhKaGJYTXBLVHRjYmlBZ2ZTeGNibHh1SUNBdkx5QmJhVzUyYjJ0bFFXMWlhV2QxYjNWelhWeHVJQ0F2TDF4dUlDQXZMeUJQYmlCemRHRmpheXdnWW1WbWIzSmxPaUJvWVhOb0xDQnBiblpsY25ObExDQndjbTluY21GdExDQndZWEpoYlhNdUxpNHNJQzR1TGx4dUlDQXZMeUJQYmlCemRHRmpheXdnWVdaMFpYSTZJSEpsYzNWc2RDQnZaaUJrYVhOaGJXSnBaM1ZoZEdsdmJseHVJQ0F2TDF4dUlDQXZMeUJVYUdseklHOXdaWEpoZEdsdmJpQnBjeUIxYzJWa0lIZG9aVzRnWVc0Z1pYaHdjbVZ6YzJsdmJpQnNhV3RsSUdCN2UyWnZiMzE5WUZ4dUlDQXZMeUJwY3lCd2NtOTJhV1JsWkN3Z1luVjBJSGRsSUdSdmJpZDBJR3R1YjNjZ1lYUWdZMjl0Y0dsc1pTMTBhVzFsSUhkb1pYUm9aWElnYVhSY2JpQWdMeThnYVhNZ1lTQm9aV3h3WlhJZ2IzSWdZU0J3WVhSb0xseHVJQ0F2TDF4dUlDQXZMeUJVYUdseklHOXdaWEpoZEdsdmJpQmxiV2wwY3lCdGIzSmxJR052WkdVZ2RHaGhiaUIwYUdVZ2IzUm9aWElnYjNCMGFXOXVjeXhjYmlBZ0x5OGdZVzVrSUdOaGJpQmlaU0JoZG05cFpHVmtJR0o1SUhCaGMzTnBibWNnZEdobElHQnJibTkzYmtobGJIQmxjbk5nSUdGdVpGeHVJQ0F2THlCZ2EyNXZkMjVJWld4d1pYSnpUMjVzZVdBZ1pteGhaM01nWVhRZ1kyOXRjR2xzWlMxMGFXMWxMbHh1SUNCcGJuWnZhMlZCYldKcFozVnZkWE02SUdaMWJtTjBhVzl1S0c1aGJXVXNJR2hsYkhCbGNrTmhiR3dwSUh0Y2JpQWdJQ0IwYUdsekxuVnpaVkpsWjJsemRHVnlLQ2RvWld4d1pYSW5LVHRjYmx4dUlDQWdJR3hsZENCdWIyNUlaV3h3WlhJZ1BTQjBhR2x6TG5CdmNGTjBZV05yS0NrN1hHNWNiaUFnSUNCMGFHbHpMbVZ0Y0hSNVNHRnphQ2dwTzF4dUlDQWdJR3hsZENCb1pXeHdaWElnUFNCMGFHbHpMbk5sZEhWd1NHVnNjR1Z5S0RBc0lHNWhiV1VzSUdobGJIQmxja05oYkd3cE8xeHVYRzRnSUNBZ2JHVjBJR2hsYkhCbGNrNWhiV1VnUFNBb2RHaHBjeTVzWVhOMFNHVnNjR1Z5SUQwZ2RHaHBjeTV1WVcxbFRHOXZhM1Z3S0Z4dUlDQWdJQ0FnSjJobGJIQmxjbk1uTEZ4dUlDQWdJQ0FnYm1GdFpTeGNiaUFnSUNBZ0lDZG9aV3h3WlhJblhHNGdJQ0FnS1NrN1hHNWNiaUFnSUNCc1pYUWdiRzl2YTNWd0lEMGdXeWNvSnl3Z0p5aG9aV3h3WlhJZ1BTQW5MQ0JvWld4d1pYSk9ZVzFsTENBbklIeDhJQ2NzSUc1dmJraGxiSEJsY2l3Z0p5a25YVHRjYmlBZ0lDQnBaaUFvSVhSb2FYTXViM0IwYVc5dWN5NXpkSEpwWTNRcElIdGNiaUFnSUNBZ0lHeHZiMnQxY0Zzd1hTQTlJQ2NvYUdWc2NHVnlJRDBnSnp0Y2JpQWdJQ0FnSUd4dmIydDFjQzV3ZFhOb0tGeHVJQ0FnSUNBZ0lDQW5JQ0U5SUc1MWJHd2dQeUJvWld4d1pYSWdPaUFuTEZ4dUlDQWdJQ0FnSUNCMGFHbHpMbUZzYVdGellXSnNaU2duWTI5dWRHRnBibVZ5TG1odmIydHpMbWhsYkhCbGNrMXBjM05wYm1jbktWeHVJQ0FnSUNBZ0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbkIxYzJnb1cxeHVJQ0FnSUNBZ0p5Z25MRnh1SUNBZ0lDQWdiRzl2YTNWd0xGeHVJQ0FnSUNBZ2FHVnNjR1Z5TG5CaGNtRnRjMGx1YVhRZ1B5QmJKeWtzS0Njc0lHaGxiSEJsY2k1d1lYSmhiWE5KYm1sMFhTQTZJRnRkTEZ4dUlDQWdJQ0FnSnlrc0p5eGNiaUFnSUNBZ0lDY29kSGx3Wlc5bUlHaGxiSEJsY2lBOVBUMGdKeXhjYmlBZ0lDQWdJSFJvYVhNdVlXeHBZWE5oWW14bEtDZGNJbVoxYm1OMGFXOXVYQ0luS1N4Y2JpQWdJQ0FnSUNjZ1B5QW5MRnh1SUNBZ0lDQWdkR2hwY3k1emIzVnlZMlV1Wm5WdVkzUnBiMjVEWVd4c0tDZG9aV3h3WlhJbkxDQW5ZMkZzYkNjc0lHaGxiSEJsY2k1allXeHNVR0Z5WVcxektTeGNiaUFnSUNBZ0lDY2dPaUJvWld4d1pYSXBLU2RjYmlBZ0lDQmRLVHRjYmlBZ2ZTeGNibHh1SUNBdkx5QmJhVzUyYjJ0bFVHRnlkR2xoYkYxY2JpQWdMeTljYmlBZ0x5OGdUMjRnYzNSaFkyc3NJR0psWm05eVpUb2dZMjl1ZEdWNGRDd2dMaTR1WEc0Z0lDOHZJRTl1SUhOMFlXTnJJR0ZtZEdWeU9pQnlaWE4xYkhRZ2IyWWdjR0Z5ZEdsaGJDQnBiblp2WTJGMGFXOXVYRzRnSUM4dlhHNGdJQzh2SUZSb2FYTWdiM0JsY21GMGFXOXVJSEJ2Y0hNZ2IyWm1JR0VnWTI5dWRHVjRkQ3dnYVc1MmIydGxjeUJoSUhCaGNuUnBZV3dnZDJsMGFDQjBhR0YwSUdOdmJuUmxlSFFzWEc0Z0lDOHZJR0Z1WkNCd2RYTm9aWE1nZEdobElISmxjM1ZzZENCdlppQjBhR1VnYVc1MmIyTmhkR2x2YmlCaVlXTnJMbHh1SUNCcGJuWnZhMlZRWVhKMGFXRnNPaUJtZFc1amRHbHZiaWhwYzBSNWJtRnRhV01zSUc1aGJXVXNJR2x1WkdWdWRDa2dlMXh1SUNBZ0lHeGxkQ0J3WVhKaGJYTWdQU0JiWFN4Y2JpQWdJQ0FnSUc5d2RHbHZibk1nUFNCMGFHbHpMbk5sZEhWd1VHRnlZVzF6S0c1aGJXVXNJREVzSUhCaGNtRnRjeWs3WEc1Y2JpQWdJQ0JwWmlBb2FYTkVlVzVoYldsaktTQjdYRzRnSUNBZ0lDQnVZVzFsSUQwZ2RHaHBjeTV3YjNCVGRHRmpheWdwTzF4dUlDQWdJQ0FnWkdWc1pYUmxJRzl3ZEdsdmJuTXVibUZ0WlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2FXNWtaVzUwS1NCN1hHNGdJQ0FnSUNCdmNIUnBiMjV6TG1sdVpHVnVkQ0E5SUVwVFQwNHVjM1J5YVc1bmFXWjVLR2x1WkdWdWRDazdYRzRnSUNBZ2ZWeHVJQ0FnSUc5d2RHbHZibk11YUdWc2NHVnljeUE5SUNkb1pXeHdaWEp6Snp0Y2JpQWdJQ0J2Y0hScGIyNXpMbkJoY25ScFlXeHpJRDBnSjNCaGNuUnBZV3h6Snp0Y2JpQWdJQ0J2Y0hScGIyNXpMbVJsWTI5eVlYUnZjbk1nUFNBblkyOXVkR0ZwYm1WeUxtUmxZMjl5WVhSdmNuTW5PMXh1WEc0Z0lDQWdhV1lnS0NGcGMwUjVibUZ0YVdNcElIdGNiaUFnSUNBZ0lIQmhjbUZ0Y3k1MWJuTm9hV1owS0hSb2FYTXVibUZ0WlV4dmIydDFjQ2duY0dGeWRHbGhiSE1uTENCdVlXMWxMQ0FuY0dGeWRHbGhiQ2NwS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdjR0Z5WVcxekxuVnVjMmhwWm5Rb2JtRnRaU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NWpiMjF3WVhRcElIdGNiaUFnSUNBZ0lHOXdkR2x2Ym5NdVpHVndkR2h6SUQwZ0oyUmxjSFJvY3ljN1hHNGdJQ0FnZlZ4dUlDQWdJRzl3ZEdsdmJuTWdQU0IwYUdsekxtOWlhbVZqZEV4cGRHVnlZV3dvYjNCMGFXOXVjeWs3WEc0Z0lDQWdjR0Z5WVcxekxuQjFjMmdvYjNCMGFXOXVjeWs3WEc1Y2JpQWdJQ0IwYUdsekxuQjFjMmdvZEdocGN5NXpiM1Z5WTJVdVpuVnVZM1JwYjI1RFlXeHNLQ2RqYjI1MFlXbHVaWEl1YVc1MmIydGxVR0Z5ZEdsaGJDY3NJQ2NuTENCd1lYSmhiWE1wS1R0Y2JpQWdmU3hjYmx4dUlDQXZMeUJiWVhOemFXZHVWRzlJWVhOb1hWeHVJQ0F2TDF4dUlDQXZMeUJQYmlCemRHRmpheXdnWW1WbWIzSmxPaUIyWVd4MVpTd2dMaTR1TENCb1lYTm9MQ0F1TGk1Y2JpQWdMeThnVDI0Z2MzUmhZMnNzSUdGbWRHVnlPaUF1TGk0c0lHaGhjMmdzSUM0dUxseHVJQ0F2TDF4dUlDQXZMeUJRYjNCeklHRWdkbUZzZFdVZ2IyWm1JSFJvWlNCemRHRmpheUJoYm1RZ1lYTnphV2R1Y3lCcGRDQjBieUIwYUdVZ1kzVnljbVZ1ZENCb1lYTm9YRzRnSUdGemMybG5ibFJ2U0dGemFEb2dablZ1WTNScGIyNG9hMlY1S1NCN1hHNGdJQ0FnYkdWMElIWmhiSFZsSUQwZ2RHaHBjeTV3YjNCVGRHRmpheWdwTEZ4dUlDQWdJQ0FnWTI5dWRHVjRkQ3hjYmlBZ0lDQWdJSFI1Y0dVc1hHNGdJQ0FnSUNCcFpEdGNibHh1SUNBZ0lHbG1JQ2gwYUdsekxuUnlZV05yU1dSektTQjdYRzRnSUNBZ0lDQnBaQ0E5SUhSb2FYTXVjRzl3VTNSaFkyc29LVHRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLSFJvYVhNdWMzUnlhVzVuVUdGeVlXMXpLU0I3WEc0Z0lDQWdJQ0IwZVhCbElEMGdkR2hwY3k1d2IzQlRkR0ZqYXlncE8xeHVJQ0FnSUNBZ1kyOXVkR1Y0ZENBOUlIUm9hWE11Y0c5d1UzUmhZMnNvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ2FHRnphQ0E5SUhSb2FYTXVhR0Z6YUR0Y2JpQWdJQ0JwWmlBb1kyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ2FHRnphQzVqYjI1MFpYaDBjMXRyWlhsZElEMGdZMjl1ZEdWNGREdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIUjVjR1VwSUh0Y2JpQWdJQ0FnSUdoaGMyZ3VkSGx3WlhOYmEyVjVYU0E5SUhSNWNHVTdYRzRnSUNBZ2ZWeHVJQ0FnSUdsbUlDaHBaQ2tnZTF4dUlDQWdJQ0FnYUdGemFDNXBaSE5iYTJWNVhTQTlJR2xrTzF4dUlDQWdJSDFjYmlBZ0lDQm9ZWE5vTG5aaGJIVmxjMXRyWlhsZElEMGdkbUZzZFdVN1hHNGdJSDBzWEc1Y2JpQWdjSFZ6YUVsa09pQm1kVzVqZEdsdmJpaDBlWEJsTENCdVlXMWxMQ0JqYUdsc1pDa2dlMXh1SUNBZ0lHbG1JQ2gwZVhCbElEMDlQU0FuUW14dlkydFFZWEpoYlNjcElIdGNiaUFnSUNBZ0lIUm9hWE11Y0hWemFGTjBZV05yVEdsMFpYSmhiQ2hjYmlBZ0lDQWdJQ0FnSjJKc2IyTnJVR0Z5WVcxeld5Y2dLMXh1SUNBZ0lDQWdJQ0FnSUc1aGJXVmJNRjBnSzF4dUlDQWdJQ0FnSUNBZ0lDZGRMbkJoZEdoYkp5QXJYRzRnSUNBZ0lDQWdJQ0FnYm1GdFpWc3hYU0FyWEc0Z0lDQWdJQ0FnSUNBZ0oxMG5JQ3RjYmlBZ0lDQWdJQ0FnSUNBb1kyaHBiR1FnUHlBbklDc2dKeUFySUVwVFQwNHVjM1J5YVc1bmFXWjVLQ2N1SnlBcklHTm9hV3hrS1NBNklDY25LVnh1SUNBZ0lDQWdLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFI1Y0dVZ1BUMDlJQ2RRWVhSb1JYaHdjbVZ6YzJsdmJpY3BJSHRjYmlBZ0lDQWdJSFJvYVhNdWNIVnphRk4wY21sdVp5aHVZVzFsS1R0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVWdQVDA5SUNkVGRXSkZlSEJ5WlhOemFXOXVKeWtnZTF4dUlDQWdJQ0FnZEdocGN5NXdkWE5vVTNSaFkydE1hWFJsY21Gc0tDZDBjblZsSnlrN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSFJvYVhNdWNIVnphRk4wWVdOclRHbDBaWEpoYkNnbmJuVnNiQ2NwTzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNBdkx5QklSVXhRUlZKVFhHNWNiaUFnWTI5dGNHbHNaWEk2SUVwaGRtRlRZM0pwY0hSRGIyMXdhV3hsY2l4Y2JseHVJQ0JqYjIxd2FXeGxRMmhwYkdSeVpXNDZJR1oxYm1OMGFXOXVLR1Z1ZG1seWIyNXRaVzUwTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnYkdWMElHTm9hV3hrY21WdUlEMGdaVzUyYVhKdmJtMWxiblF1WTJocGJHUnlaVzRzWEc0Z0lDQWdJQ0JqYUdsc1pDeGNiaUFnSUNBZ0lHTnZiWEJwYkdWeU8xeHVYRzRnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREFzSUd3Z1BTQmphR2xzWkhKbGJpNXNaVzVuZEdnN0lHa2dQQ0JzT3lCcEt5c3BJSHRjYmlBZ0lDQWdJR05vYVd4a0lEMGdZMmhwYkdSeVpXNWJhVjA3WEc0Z0lDQWdJQ0JqYjIxd2FXeGxjaUE5SUc1bGR5QjBhR2x6TG1OdmJYQnBiR1Z5S0NrN0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXeHBibVVnYm1WM0xXTmhjRnh1WEc0Z0lDQWdJQ0JzWlhRZ1pYaHBjM1JwYm1jZ1BTQjBhR2x6TG0xaGRHTm9SWGhwYzNScGJtZFFjbTluY21GdEtHTm9hV3hrS1R0Y2JseHVJQ0FnSUNBZ2FXWWdLR1Y0YVhOMGFXNW5JRDA5SUc1MWJHd3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjUwWlhoMExuQnliMmR5WVcxekxuQjFjMmdvSnljcE95QXZMeUJRYkdGalpXaHZiR1JsY2lCMGJ5QndjbVYyWlc1MElHNWhiV1VnWTI5dVpteHBZM1J6SUdadmNpQnVaWE4wWldRZ1kyaHBiR1J5Wlc1Y2JpQWdJQ0FnSUNBZ2JHVjBJR2x1WkdWNElEMGdkR2hwY3k1amIyNTBaWGgwTG5CeWIyZHlZVzF6TG14bGJtZDBhRHRjYmlBZ0lDQWdJQ0FnWTJocGJHUXVhVzVrWlhnZ1BTQnBibVJsZUR0Y2JpQWdJQ0FnSUNBZ1kyaHBiR1F1Ym1GdFpTQTlJQ2R3Y205bmNtRnRKeUFySUdsdVpHVjRPMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiblJsZUhRdWNISnZaM0poYlhOYmFXNWtaWGhkSUQwZ1kyOXRjR2xzWlhJdVkyOXRjR2xzWlNoY2JpQWdJQ0FnSUNBZ0lDQmphR2xzWkN4Y2JpQWdJQ0FnSUNBZ0lDQnZjSFJwYjI1ekxGeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEN4Y2JpQWdJQ0FnSUNBZ0lDQWhkR2hwY3k1d2NtVmpiMjF3YVd4bFhHNGdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEM1a1pXTnZjbUYwYjNKelcybHVaR1Y0WFNBOUlHTnZiWEJwYkdWeUxtUmxZMjl5WVhSdmNuTTdYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR1Y0ZEM1bGJuWnBjbTl1YldWdWRITmJhVzVrWlhoZElEMGdZMmhwYkdRN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1MWMyVkVaWEIwYUhNZ1BTQjBhR2x6TG5WelpVUmxjSFJvY3lCOGZDQmpiMjF3YVd4bGNpNTFjMlZFWlhCMGFITTdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRYTmxRbXh2WTJ0UVlYSmhiWE1nUFNCMGFHbHpMblZ6WlVKc2IyTnJVR0Z5WVcxeklIeDhJR052YlhCcGJHVnlMblZ6WlVKc2IyTnJVR0Z5WVcxek8xeHVJQ0FnSUNBZ0lDQmphR2xzWkM1MWMyVkVaWEIwYUhNZ1BTQjBhR2x6TG5WelpVUmxjSFJvY3p0Y2JpQWdJQ0FnSUNBZ1kyaHBiR1F1ZFhObFFteHZZMnRRWVhKaGJYTWdQU0IwYUdsekxuVnpaVUpzYjJOclVHRnlZVzF6TzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnWTJocGJHUXVhVzVrWlhnZ1BTQmxlR2x6ZEdsdVp5NXBibVJsZUR0Y2JpQWdJQ0FnSUNBZ1kyaHBiR1F1Ym1GdFpTQTlJQ2R3Y205bmNtRnRKeUFySUdWNGFYTjBhVzVuTG1sdVpHVjRPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkWE5sUkdWd2RHaHpJRDBnZEdocGN5NTFjMlZFWlhCMGFITWdmSHdnWlhocGMzUnBibWN1ZFhObFJHVndkR2h6TzF4dUlDQWdJQ0FnSUNCMGFHbHpMblZ6WlVKc2IyTnJVR0Z5WVcxeklEMGdkR2hwY3k1MWMyVkNiRzlqYTFCaGNtRnRjeUI4ZkNCbGVHbHpkR2x1Wnk1MWMyVkNiRzlqYTFCaGNtRnRjenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgwc1hHNGdJRzFoZEdOb1JYaHBjM1JwYm1kUWNtOW5jbUZ0T2lCbWRXNWpkR2x2YmloamFHbHNaQ2tnZTF4dUlDQWdJR1p2Y2lBb2JHVjBJR2tnUFNBd0xDQnNaVzRnUFNCMGFHbHpMbU52Ym5SbGVIUXVaVzUyYVhKdmJtMWxiblJ6TG14bGJtZDBhRHNnYVNBOElHeGxianNnYVNzcktTQjdYRzRnSUNBZ0lDQnNaWFFnWlc1MmFYSnZibTFsYm5RZ1BTQjBhR2x6TG1OdmJuUmxlSFF1Wlc1MmFYSnZibTFsYm5SelcybGRPMXh1SUNBZ0lDQWdhV1lnS0dWdWRtbHliMjV0Wlc1MElDWW1JR1Z1ZG1seWIyNXRaVzUwTG1WeGRXRnNjeWhqYUdsc1pDa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1Z1ZG1seWIyNXRaVzUwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCd2NtOW5jbUZ0Ulhod2NtVnpjMmx2YmpvZ1puVnVZM1JwYjI0b1ozVnBaQ2tnZTF4dUlDQWdJR3hsZENCamFHbHNaQ0E5SUhSb2FYTXVaVzUyYVhKdmJtMWxiblF1WTJocGJHUnlaVzViWjNWcFpGMHNYRzRnSUNBZ0lDQndjbTluY21GdFVHRnlZVzF6SUQwZ1cyTm9hV3hrTG1sdVpHVjRMQ0FuWkdGMFlTY3NJR05vYVd4a0xtSnNiMk5yVUdGeVlXMXpYVHRjYmx4dUlDQWdJR2xtSUNoMGFHbHpMblZ6WlVKc2IyTnJVR0Z5WVcxeklIeDhJSFJvYVhNdWRYTmxSR1Z3ZEdoektTQjdYRzRnSUNBZ0lDQndjbTluY21GdFVHRnlZVzF6TG5CMWMyZ29KMkpzYjJOclVHRnlZVzF6SnlrN1hHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNoMGFHbHpMblZ6WlVSbGNIUm9jeWtnZTF4dUlDQWdJQ0FnY0hKdlozSmhiVkJoY21GdGN5NXdkWE5vS0Nka1pYQjBhSE1uS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdKMk52Ym5SaGFXNWxjaTV3Y205bmNtRnRLQ2NnS3lCd2NtOW5jbUZ0VUdGeVlXMXpMbXB2YVc0b0p5d2dKeWtnS3lBbktTYzdYRzRnSUgwc1hHNWNiaUFnZFhObFVtVm5hWE4wWlhJNklHWjFibU4wYVc5dUtHNWhiV1VwSUh0Y2JpQWdJQ0JwWmlBb0lYUm9hWE11Y21WbmFYTjBaWEp6VzI1aGJXVmRLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuSmxaMmx6ZEdWeWMxdHVZVzFsWFNBOUlIUnlkV1U3WEc0Z0lDQWdJQ0IwYUdsekxuSmxaMmx6ZEdWeWN5NXNhWE4wTG5CMWMyZ29ibUZ0WlNrN1hHNGdJQ0FnZlZ4dUlDQjlMRnh1WEc0Z0lIQjFjMmc2SUdaMWJtTjBhVzl1S0dWNGNISXBJSHRjYmlBZ0lDQnBaaUFvSVNobGVIQnlJR2x1YzNSaGJtTmxiMllnVEdsMFpYSmhiQ2twSUh0Y2JpQWdJQ0FnSUdWNGNISWdQU0IwYUdsekxuTnZkWEpqWlM1M2NtRndLR1Y0Y0hJcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhSb2FYTXVhVzVzYVc1bFUzUmhZMnN1Y0hWemFDaGxlSEJ5S1R0Y2JpQWdJQ0J5WlhSMWNtNGdaWGh3Y2p0Y2JpQWdmU3hjYmx4dUlDQndkWE5vVTNSaFkydE1hWFJsY21Gc09pQm1kVzVqZEdsdmJpaHBkR1Z0S1NCN1hHNGdJQ0FnZEdocGN5NXdkWE5vS0c1bGR5Qk1hWFJsY21Gc0tHbDBaVzBwS1R0Y2JpQWdmU3hjYmx4dUlDQndkWE5vVTI5MWNtTmxPaUJtZFc1amRHbHZiaWh6YjNWeVkyVXBJSHRjYmlBZ0lDQnBaaUFvZEdocGN5NXdaVzVrYVc1blEyOXVkR1Z1ZENrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVXVjSFZ6YUNoY2JpQWdJQ0FnSUNBZ2RHaHBjeTVoY0hCbGJtUlViMEoxWm1abGNpaGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxuTnZkWEpqWlM1eGRXOTBaV1JUZEhKcGJtY29kR2hwY3k1d1pXNWthVzVuUTI5dWRHVnVkQ2tzWEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Wlc1a2FXNW5URzlqWVhScGIyNWNiaUFnSUNBZ0lDQWdLVnh1SUNBZ0lDQWdLVHRjYmlBZ0lDQWdJSFJvYVhNdWNHVnVaR2x1WjBOdmJuUmxiblFnUFNCMWJtUmxabWx1WldRN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tITnZkWEpqWlNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVXVjSFZ6YUNoemIzVnlZMlVwTzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCeVpYQnNZV05sVTNSaFkyczZJR1oxYm1OMGFXOXVLR05oYkd4aVlXTnJLU0I3WEc0Z0lDQWdiR1YwSUhCeVpXWnBlQ0E5SUZzbktDZGRMRnh1SUNBZ0lDQWdjM1JoWTJzc1hHNGdJQ0FnSUNCamNtVmhkR1ZrVTNSaFkyc3NYRzRnSUNBZ0lDQjFjMlZrVEdsMFpYSmhiRHRjYmx4dUlDQWdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0J1WlhoMElDb3ZYRzRnSUNBZ2FXWWdLQ0YwYUdsekxtbHpTVzVzYVc1bEtDa3BJSHRjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGZUdObGNIUnBiMjRvSjNKbGNHeGhZMlZUZEdGamF5QnZiaUJ1YjI0dGFXNXNhVzVsSnlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1YyVWdkMkZ1ZENCMGJ5QnRaWEpuWlNCMGFHVWdhVzVzYVc1bElITjBZWFJsYldWdWRDQnBiblJ2SUhSb1pTQnlaWEJzWVdObGJXVnVkQ0J6ZEdGMFpXMWxiblFnZG1saElDY3NKMXh1SUNBZ0lHeGxkQ0IwYjNBZ1BTQjBhR2x6TG5CdmNGTjBZV05yS0hSeWRXVXBPMXh1WEc0Z0lDQWdhV1lnS0hSdmNDQnBibk4wWVc1alpXOW1JRXhwZEdWeVlXd3BJSHRjYmlBZ0lDQWdJQzh2SUV4cGRHVnlZV3h6SUdSdklHNXZkQ0J1WldWa0lIUnZJR0psSUdsdWJHbHVaV1JjYmlBZ0lDQWdJSE4wWVdOcklEMGdXM1J2Y0M1MllXeDFaVjA3WEc0Z0lDQWdJQ0J3Y21WbWFYZ2dQU0JiSnlnbkxDQnpkR0ZqYTEwN1hHNGdJQ0FnSUNCMWMyVmtUR2wwWlhKaGJDQTlJSFJ5ZFdVN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQzh2SUVkbGRDQnZjaUJqY21WaGRHVWdkR2hsSUdOMWNuSmxiblFnYzNSaFkyc2dibUZ0WlNCbWIzSWdkWE5sSUdKNUlIUm9aU0JwYm14cGJtVmNiaUFnSUNBZ0lHTnlaV0YwWldSVGRHRmpheUE5SUhSeWRXVTdYRzRnSUNBZ0lDQnNaWFFnYm1GdFpTQTlJSFJvYVhNdWFXNWpjbE4wWVdOcktDazdYRzVjYmlBZ0lDQWdJSEJ5WldacGVDQTlJRnNuS0NnbkxDQjBhR2x6TG5CMWMyZ29ibUZ0WlNrc0lDY2dQU0FuTENCMGIzQXNJQ2NwSjEwN1hHNGdJQ0FnSUNCemRHRmpheUE5SUhSb2FYTXVkRzl3VTNSaFkyc29LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnNaWFFnYVhSbGJTQTlJR05oYkd4aVlXTnJMbU5oYkd3b2RHaHBjeXdnYzNSaFkyc3BPMXh1WEc0Z0lDQWdhV1lnS0NGMWMyVmtUR2wwWlhKaGJDa2dlMXh1SUNBZ0lDQWdkR2hwY3k1d2IzQlRkR0ZqYXlncE8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb1kzSmxZWFJsWkZOMFlXTnJLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuTjBZV05yVTJ4dmRDMHRPMXh1SUNBZ0lIMWNiaUFnSUNCMGFHbHpMbkIxYzJnb2NISmxabWw0TG1OdmJtTmhkQ2hwZEdWdExDQW5LU2NwS1R0Y2JpQWdmU3hjYmx4dUlDQnBibU55VTNSaFkyczZJR1oxYm1OMGFXOXVLQ2tnZTF4dUlDQWdJSFJvYVhNdWMzUmhZMnRUYkc5MEt5czdYRzRnSUNBZ2FXWWdLSFJvYVhNdWMzUmhZMnRUYkc5MElENGdkR2hwY3k1emRHRmphMVpoY25NdWJHVnVaM1JvS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbk4wWVdOclZtRnljeTV3ZFhOb0tDZHpkR0ZqYXljZ0t5QjBhR2x6TG5OMFlXTnJVMnh2ZENrN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TG5SdmNGTjBZV05yVG1GdFpTZ3BPMXh1SUNCOUxGeHVJQ0IwYjNCVGRHRmphMDVoYldVNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lISmxkSFZ5YmlBbmMzUmhZMnNuSUNzZ2RHaHBjeTV6ZEdGamExTnNiM1E3WEc0Z0lIMHNYRzRnSUdac2RYTm9TVzVzYVc1bE9pQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQnNaWFFnYVc1c2FXNWxVM1JoWTJzZ1BTQjBhR2x6TG1sdWJHbHVaVk4wWVdOck8xeHVJQ0FnSUhSb2FYTXVhVzVzYVc1bFUzUmhZMnNnUFNCYlhUdGNiaUFnSUNCbWIzSWdLR3hsZENCcElEMGdNQ3dnYkdWdUlEMGdhVzVzYVc1bFUzUmhZMnN1YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNBZ0lHeGxkQ0JsYm5SeWVTQTlJR2x1YkdsdVpWTjBZV05yVzJsZE8xeHVJQ0FnSUNBZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHbG1JQ292WEc0Z0lDQWdJQ0JwWmlBb1pXNTBjbmtnYVc1emRHRnVZMlZ2WmlCTWFYUmxjbUZzS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WTI5dGNHbHNaVk4wWVdOckxuQjFjMmdvWlc1MGNua3BPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdiR1YwSUhOMFlXTnJJRDBnZEdocGN5NXBibU55VTNSaFkyc29LVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NXdkWE5vVTI5MWNtTmxLRnR6ZEdGamF5d2dKeUE5SUNjc0lHVnVkSEo1TENBbk95ZGRLVHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjF3YVd4bFUzUmhZMnN1Y0hWemFDaHpkR0ZqYXlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlMRnh1SUNCcGMwbHViR2x1WlRvZ1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzVzYVc1bFUzUmhZMnN1YkdWdVozUm9PMXh1SUNCOUxGeHVYRzRnSUhCdmNGTjBZV05yT2lCbWRXNWpkR2x2YmloM2NtRndjR1ZrS1NCN1hHNGdJQ0FnYkdWMElHbHViR2x1WlNBOUlIUm9hWE11YVhOSmJteHBibVVvS1N4Y2JpQWdJQ0FnSUdsMFpXMGdQU0FvYVc1c2FXNWxJRDhnZEdocGN5NXBibXhwYm1WVGRHRmpheUE2SUhSb2FYTXVZMjl0Y0dsc1pWTjBZV05yS1M1d2IzQW9LVHRjYmx4dUlDQWdJR2xtSUNnaGQzSmhjSEJsWkNBbUppQnBkR1Z0SUdsdWMzUmhibU5sYjJZZ1RHbDBaWEpoYkNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdsMFpXMHVkbUZzZFdVN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJR2xtSUNnaGFXNXNhVzVsS1NCN1hHNGdJQ0FnSUNBZ0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQnVaWGgwSUNvdlhHNGdJQ0FnSUNBZ0lHbG1JQ2doZEdocGN5NXpkR0ZqYTFOc2IzUXBJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYaGpaWEIwYVc5dUtDZEpiblpoYkdsa0lITjBZV05ySUhCdmNDY3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjM1JoWTJ0VGJHOTBMUzA3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J5WlhSMWNtNGdhWFJsYlR0Y2JpQWdJQ0I5WEc0Z0lIMHNYRzVjYmlBZ2RHOXdVM1JoWTJzNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lHeGxkQ0J6ZEdGamF5QTlJSFJvYVhNdWFYTkpibXhwYm1Vb0tTQS9JSFJvYVhNdWFXNXNhVzVsVTNSaFkyc2dPaUIwYUdsekxtTnZiWEJwYkdWVGRHRmpheXhjYmlBZ0lDQWdJR2wwWlcwZ1BTQnpkR0ZqYTF0emRHRmpheTVzWlc1bmRHZ2dMU0F4WFR0Y2JseHVJQ0FnSUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCcFppQXFMMXh1SUNBZ0lHbG1JQ2hwZEdWdElHbHVjM1JoYm1ObGIyWWdUR2wwWlhKaGJDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHbDBaVzB1ZG1Gc2RXVTdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJwZEdWdE8xeHVJQ0FnSUgxY2JpQWdmU3hjYmx4dUlDQmpiMjUwWlhoMFRtRnRaVG9nWm5WdVkzUnBiMjRvWTI5dWRHVjRkQ2tnZTF4dUlDQWdJR2xtSUNoMGFHbHpMblZ6WlVSbGNIUm9jeUFtSmlCamIyNTBaWGgwS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnSjJSbGNIUm9jMXNuSUNzZ1kyOXVkR1Y0ZENBcklDZGRKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUNka1pYQjBhQ2NnS3lCamIyNTBaWGgwTzF4dUlDQWdJSDFjYmlBZ2ZTeGNibHh1SUNCeGRXOTBaV1JUZEhKcGJtYzZJR1oxYm1OMGFXOXVLSE4wY2lrZ2UxeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxuTnZkWEpqWlM1eGRXOTBaV1JUZEhKcGJtY29jM1J5S1R0Y2JpQWdmU3hjYmx4dUlDQnZZbXBsWTNSTWFYUmxjbUZzT2lCbWRXNWpkR2x2Ymlodlltb3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTV6YjNWeVkyVXViMkpxWldOMFRHbDBaWEpoYkNodlltb3BPMXh1SUNCOUxGeHVYRzRnSUdGc2FXRnpZV0pzWlRvZ1puVnVZM1JwYjI0b2JtRnRaU2tnZTF4dUlDQWdJR3hsZENCeVpYUWdQU0IwYUdsekxtRnNhV0Z6WlhOYmJtRnRaVjA3WEc0Z0lDQWdhV1lnS0hKbGRDa2dlMXh1SUNBZ0lDQWdjbVYwTG5KbFptVnlaVzVqWlVOdmRXNTBLeXM3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdjbVYwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZENBOUlIUm9hWE11WVd4cFlYTmxjMXR1WVcxbFhTQTlJSFJvYVhNdWMyOTFjbU5sTG5keVlYQW9ibUZ0WlNrN1hHNGdJQ0FnY21WMExtRnNhV0Z6WVdKc1pTQTlJSFJ5ZFdVN1hHNGdJQ0FnY21WMExuSmxabVZ5Wlc1alpVTnZkVzUwSUQwZ01UdGNibHh1SUNBZ0lISmxkSFZ5YmlCeVpYUTdYRzRnSUgwc1hHNWNiaUFnYzJWMGRYQklaV3h3WlhJNklHWjFibU4wYVc5dUtIQmhjbUZ0VTJsNlpTd2dibUZ0WlN3Z1lteHZZMnRJWld4d1pYSXBJSHRjYmlBZ0lDQnNaWFFnY0dGeVlXMXpJRDBnVzEwc1hHNGdJQ0FnSUNCd1lYSmhiWE5KYm1sMElEMGdkR2hwY3k1elpYUjFjRWhsYkhCbGNrRnlaM01vYm1GdFpTd2djR0Z5WVcxVGFYcGxMQ0J3WVhKaGJYTXNJR0pzYjJOclNHVnNjR1Z5S1R0Y2JpQWdJQ0JzWlhRZ1ptOTFibVJJWld4d1pYSWdQU0IwYUdsekxtNWhiV1ZNYjI5cmRYQW9KMmhsYkhCbGNuTW5MQ0J1WVcxbExDQW5hR1ZzY0dWeUp5a3NYRzRnSUNBZ0lDQmpZV3hzUTI5dWRHVjRkQ0E5SUhSb2FYTXVZV3hwWVhOaFlteGxLRnh1SUNBZ0lDQWdJQ0JnSkh0MGFHbHpMbU52Ym5SbGVIUk9ZVzFsS0RBcGZTQWhQU0J1ZFd4c0lEOGdKSHQwYUdsekxtTnZiblJsZUhST1lXMWxLRnh1SUNBZ0lDQWdJQ0FnSURCY2JpQWdJQ0FnSUNBZ0tYMGdPaUFvWTI5dWRHRnBibVZ5TG01MWJHeERiMjUwWlhoMElIeDhJSHQ5S1dCY2JpQWdJQ0FnSUNrN1hHNWNiaUFnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnY0dGeVlXMXpPaUJ3WVhKaGJYTXNYRzRnSUNBZ0lDQndZWEpoYlhOSmJtbDBPaUJ3WVhKaGJYTkpibWwwTEZ4dUlDQWdJQ0FnYm1GdFpUb2dabTkxYm1SSVpXeHdaWElzWEc0Z0lDQWdJQ0JqWVd4c1VHRnlZVzF6T2lCYlkyRnNiRU52Ym5SbGVIUmRMbU52Ym1OaGRDaHdZWEpoYlhNcFhHNGdJQ0FnZlR0Y2JpQWdmU3hjYmx4dUlDQnpaWFIxY0ZCaGNtRnRjem9nWm5WdVkzUnBiMjRvYUdWc2NHVnlMQ0J3WVhKaGJWTnBlbVVzSUhCaGNtRnRjeWtnZTF4dUlDQWdJR3hsZENCdmNIUnBiMjV6SUQwZ2UzMHNYRzRnSUNBZ0lDQmpiMjUwWlhoMGN5QTlJRnRkTEZ4dUlDQWdJQ0FnZEhsd1pYTWdQU0JiWFN4Y2JpQWdJQ0FnSUdsa2N5QTlJRnRkTEZ4dUlDQWdJQ0FnYjJKcVpXTjBRWEpuY3lBOUlDRndZWEpoYlhNc1hHNGdJQ0FnSUNCd1lYSmhiVHRjYmx4dUlDQWdJR2xtSUNodlltcGxZM1JCY21kektTQjdYRzRnSUNBZ0lDQndZWEpoYlhNZ1BTQmJYVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZjSFJwYjI1ekxtNWhiV1VnUFNCMGFHbHpMbkYxYjNSbFpGTjBjbWx1Wnlob1pXeHdaWElwTzF4dUlDQWdJRzl3ZEdsdmJuTXVhR0Z6YUNBOUlIUm9hWE11Y0c5d1UzUmhZMnNvS1R0Y2JseHVJQ0FnSUdsbUlDaDBhR2x6TG5SeVlXTnJTV1J6S1NCN1hHNGdJQ0FnSUNCdmNIUnBiMjV6TG1oaGMyaEpaSE1nUFNCMGFHbHpMbkJ2Y0ZOMFlXTnJLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2gwYUdsekxuTjBjbWx1WjFCaGNtRnRjeWtnZTF4dUlDQWdJQ0FnYjNCMGFXOXVjeTVvWVhOb1ZIbHdaWE1nUFNCMGFHbHpMbkJ2Y0ZOMFlXTnJLQ2s3WEc0Z0lDQWdJQ0J2Y0hScGIyNXpMbWhoYzJoRGIyNTBaWGgwY3lBOUlIUm9hWE11Y0c5d1UzUmhZMnNvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ2FXNTJaWEp6WlNBOUlIUm9hWE11Y0c5d1UzUmhZMnNvS1N4Y2JpQWdJQ0FnSUhCeWIyZHlZVzBnUFNCMGFHbHpMbkJ2Y0ZOMFlXTnJLQ2s3WEc1Y2JpQWdJQ0F2THlCQmRtOXBaQ0J6WlhSMGFXNW5JR1p1SUdGdVpDQnBiblpsY25ObElHbG1JRzVsYVhSb1pYSWdZWEpsSUhObGRDNGdWR2hwY3lCaGJHeHZkM05jYmlBZ0lDQXZMeUJvWld4d1pYSnpJSFJ2SUdSdklHRWdZMmhsWTJzZ1ptOXlJR0JwWmlBb2IzQjBhVzl1Y3k1bWJpbGdYRzRnSUNBZ2FXWWdLSEJ5YjJkeVlXMGdmSHdnYVc1MlpYSnpaU2tnZTF4dUlDQWdJQ0FnYjNCMGFXOXVjeTVtYmlBOUlIQnliMmR5WVcwZ2ZId2dKMk52Ym5SaGFXNWxjaTV1YjI5d0p6dGNiaUFnSUNBZ0lHOXdkR2x2Ym5NdWFXNTJaWEp6WlNBOUlHbHVkbVZ5YzJVZ2ZId2dKMk52Ym5SaGFXNWxjaTV1YjI5d0p6dGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QlVhR1VnY0dGeVlXMWxkR1Z5Y3lCbmJ5QnZiaUIwYnlCMGFHVWdjM1JoWTJzZ2FXNGdiM0prWlhJZ0tHMWhhMmx1WnlCemRYSmxJSFJvWVhRZ2RHaGxlU0JoY21VZ1pYWmhiSFZoZEdWa0lHbHVJRzl5WkdWeUtWeHVJQ0FnSUM4dklITnZJSGRsSUc1bFpXUWdkRzhnY0c5d0lIUm9aVzBnYjJabUlIUm9aU0J6ZEdGamF5QnBiaUJ5WlhabGNuTmxJRzl5WkdWeVhHNGdJQ0FnYkdWMElHa2dQU0J3WVhKaGJWTnBlbVU3WEc0Z0lDQWdkMmhwYkdVZ0tHa3RMU2tnZTF4dUlDQWdJQ0FnY0dGeVlXMGdQU0IwYUdsekxuQnZjRk4wWVdOcktDazdYRzRnSUNBZ0lDQndZWEpoYlhOYmFWMGdQU0J3WVhKaGJUdGNibHh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVkSEpoWTJ0SlpITXBJSHRjYmlBZ0lDQWdJQ0FnYVdSelcybGRJRDBnZEdocGN5NXdiM0JUZEdGamF5Z3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVjM1J5YVc1blVHRnlZVzF6S1NCN1hHNGdJQ0FnSUNBZ0lIUjVjR1Z6VzJsZElEMGdkR2hwY3k1d2IzQlRkR0ZqYXlncE8xeHVJQ0FnSUNBZ0lDQmpiMjUwWlhoMGMxdHBYU0E5SUhSb2FYTXVjRzl3VTNSaFkyc29LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvYjJKcVpXTjBRWEpuY3lrZ2UxeHVJQ0FnSUNBZ2IzQjBhVzl1Y3k1aGNtZHpJRDBnZEdocGN5NXpiM1Z5WTJVdVoyVnVaWEpoZEdWQmNuSmhlU2h3WVhKaGJYTXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwYUdsekxuUnlZV05yU1dSektTQjdYRzRnSUNBZ0lDQnZjSFJwYjI1ekxtbGtjeUE5SUhSb2FYTXVjMjkxY21ObExtZGxibVZ5WVhSbFFYSnlZWGtvYVdSektUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIUm9hWE11YzNSeWFXNW5VR0Z5WVcxektTQjdYRzRnSUNBZ0lDQnZjSFJwYjI1ekxuUjVjR1Z6SUQwZ2RHaHBjeTV6YjNWeVkyVXVaMlZ1WlhKaGRHVkJjbkpoZVNoMGVYQmxjeWs3WEc0Z0lDQWdJQ0J2Y0hScGIyNXpMbU52Ym5SbGVIUnpJRDBnZEdocGN5NXpiM1Z5WTJVdVoyVnVaWEpoZEdWQmNuSmhlU2hqYjI1MFpYaDBjeWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSb2FYTXViM0IwYVc5dWN5NWtZWFJoS1NCN1hHNGdJQ0FnSUNCdmNIUnBiMjV6TG1SaGRHRWdQU0FuWkdGMFlTYzdYRzRnSUNBZ2ZWeHVJQ0FnSUdsbUlDaDBhR2x6TG5WelpVSnNiMk5yVUdGeVlXMXpLU0I3WEc0Z0lDQWdJQ0J2Y0hScGIyNXpMbUpzYjJOclVHRnlZVzF6SUQwZ0oySnNiMk5yVUdGeVlXMXpKenRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUc5d2RHbHZibk03WEc0Z0lIMHNYRzVjYmlBZ2MyVjBkWEJJWld4d1pYSkJjbWR6T2lCbWRXNWpkR2x2Ymlob1pXeHdaWElzSUhCaGNtRnRVMmw2WlN3Z2NHRnlZVzF6TENCMWMyVlNaV2RwYzNSbGNpa2dlMXh1SUNBZ0lHeGxkQ0J2Y0hScGIyNXpJRDBnZEdocGN5NXpaWFIxY0ZCaGNtRnRjeWhvWld4d1pYSXNJSEJoY21GdFUybDZaU3dnY0dGeVlXMXpLVHRjYmlBZ0lDQnZjSFJwYjI1ekxteHZZeUE5SUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJvYVhNdWMyOTFjbU5sTG1OMWNuSmxiblJNYjJOaGRHbHZiaWs3WEc0Z0lDQWdiM0IwYVc5dWN5QTlJSFJvYVhNdWIySnFaV04wVEdsMFpYSmhiQ2h2Y0hScGIyNXpLVHRjYmlBZ0lDQnBaaUFvZFhObFVtVm5hWE4wWlhJcElIdGNiaUFnSUNBZ0lIUm9hWE11ZFhObFVtVm5hWE4wWlhJb0oyOXdkR2x2Ym5NbktUdGNiaUFnSUNBZ0lIQmhjbUZ0Y3k1d2RYTm9LQ2R2Y0hScGIyNXpKeWs3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdXeWR2Y0hScGIyNXpQU2NzSUc5d2RHbHZibk5kTzF4dUlDQWdJSDBnWld4elpTQnBaaUFvY0dGeVlXMXpLU0I3WEc0Z0lDQWdJQ0J3WVhKaGJYTXVjSFZ6YUNodmNIUnBiMjV6S1R0Y2JpQWdJQ0FnSUhKbGRIVnliaUFuSnp0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHOXdkR2x2Ym5NN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5TzF4dVhHNG9ablZ1WTNScGIyNG9LU0I3WEc0Z0lHTnZibk4wSUhKbGMyVnlkbVZrVjI5eVpITWdQU0FvWEc0Z0lDQWdKMkp5WldGcklHVnNjMlVnYm1WM0lIWmhjaWNnSzF4dUlDQWdJQ2NnWTJGelpTQm1hVzVoYkd4NUlISmxkSFZ5YmlCMmIybGtKeUFyWEc0Z0lDQWdKeUJqWVhSamFDQm1iM0lnYzNkcGRHTm9JSGRvYVd4bEp5QXJYRzRnSUNBZ0p5QmpiMjUwYVc1MVpTQm1kVzVqZEdsdmJpQjBhR2x6SUhkcGRHZ25JQ3RjYmlBZ0lDQW5JR1JsWm1GMWJIUWdhV1lnZEdoeWIzY25JQ3RjYmlBZ0lDQW5JR1JsYkdWMFpTQnBiaUIwY25rbklDdGNiaUFnSUNBbklHUnZJR2x1YzNSaGJtTmxiMllnZEhsd1pXOW1KeUFyWEc0Z0lDQWdKeUJoWW5OMGNtRmpkQ0JsYm5WdElHbHVkQ0J6YUc5eWRDY2dLMXh1SUNBZ0lDY2dZbTl2YkdWaGJpQmxlSEJ2Y25RZ2FXNTBaWEptWVdObElITjBZWFJwWXljZ0sxeHVJQ0FnSUNjZ1lubDBaU0JsZUhSbGJtUnpJR3h2Ym1jZ2MzVndaWEluSUN0Y2JpQWdJQ0FuSUdOb1lYSWdabWx1WVd3Z2JtRjBhWFpsSUhONWJtTm9jbTl1YVhwbFpDY2dLMXh1SUNBZ0lDY2dZMnhoYzNNZ1pteHZZWFFnY0dGamEyRm5aU0IwYUhKdmQzTW5JQ3RjYmlBZ0lDQW5JR052Ym5OMElHZHZkRzhnY0hKcGRtRjBaU0IwY21GdWMybGxiblFuSUN0Y2JpQWdJQ0FuSUdSbFluVm5aMlZ5SUdsdGNHeGxiV1Z1ZEhNZ2NISnZkR1ZqZEdWa0lIWnZiR0YwYVd4bEp5QXJYRzRnSUNBZ0p5QmtiM1ZpYkdVZ2FXMXdiM0owSUhCMVlteHBZeUJzWlhRZ2VXbGxiR1FnWVhkaGFYUW5JQ3RjYmlBZ0lDQW5JRzUxYkd3Z2RISjFaU0JtWVd4elpTZGNiaUFnS1M1emNHeHBkQ2duSUNjcE8xeHVYRzRnSUdOdmJuTjBJR052YlhCcGJHVnlWMjl5WkhNZ1BTQW9TbUYyWVZOamNtbHdkRU52YlhCcGJHVnlMbEpGVTBWU1ZrVkVYMWRQVWtSVElEMGdlMzBwTzF4dVhHNGdJR1p2Y2lBb2JHVjBJR2tnUFNBd0xDQnNJRDBnY21WelpYSjJaV1JYYjNKa2N5NXNaVzVuZEdnN0lHa2dQQ0JzT3lCcEt5c3BJSHRjYmlBZ0lDQmpiMjF3YVd4bGNsZHZjbVJ6VzNKbGMyVnlkbVZrVjI5eVpITmJhVjFkSUQwZ2RISjFaVHRjYmlBZ2ZWeHVmU2tvS1R0Y2JseHVMeW9xWEc0Z0tpQkFaR1Z3Y21WallYUmxaQ0JOWVhrZ1ltVWdjbVZ0YjNabFpDQnBiaUIwYUdVZ2JtVjRkQ0J0WVdwdmNpQjJaWEp6YVc5dVhHNGdLaTljYmtwaGRtRlRZM0pwY0hSRGIyMXdhV3hsY2k1cGMxWmhiR2xrU21GMllWTmpjbWx3ZEZaaGNtbGhZbXhsVG1GdFpTQTlJR1oxYm1OMGFXOXVLRzVoYldVcElIdGNiaUFnY21WMGRYSnVJQ2hjYmlBZ0lDQWhTbUYyWVZOamNtbHdkRU52YlhCcGJHVnlMbEpGVTBWU1ZrVkVYMWRQVWtSVFcyNWhiV1ZkSUNZbVhHNGdJQ0FnTDE1YllTMTZRUzFhWHlSZFd6QXRPV0V0ZWtFdFdsOGtYU29rTHk1MFpYTjBLRzVoYldVcFhHNGdJQ2s3WEc1OU8xeHVYRzVtZFc1amRHbHZiaUJ6ZEhKcFkzUk1iMjlyZFhBb2NtVnhkV2x5WlZSbGNtMXBibUZzTENCamIyMXdhV3hsY2l3Z2NHRnlkSE1zSUhSNWNHVXBJSHRjYmlBZ2JHVjBJSE4wWVdOcklEMGdZMjl0Y0dsc1pYSXVjRzl3VTNSaFkyc29LU3hjYmlBZ0lDQnBJRDBnTUN4Y2JpQWdJQ0JzWlc0Z1BTQndZWEowY3k1c1pXNW5kR2c3WEc0Z0lHbG1JQ2h5WlhGMWFYSmxWR1Z5YldsdVlXd3BJSHRjYmlBZ0lDQnNaVzR0TFR0Y2JpQWdmVnh1WEc0Z0lHWnZjaUFvT3lCcElEd2diR1Z1T3lCcEt5c3BJSHRjYmlBZ0lDQnpkR0ZqYXlBOUlHTnZiWEJwYkdWeUxtNWhiV1ZNYjI5cmRYQW9jM1JoWTJzc0lIQmhjblJ6VzJsZExDQjBlWEJsS1R0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2h5WlhGMWFYSmxWR1Z5YldsdVlXd3BJSHRjYmlBZ0lDQnlaWFIxY200Z1cxeHVJQ0FnSUNBZ1kyOXRjR2xzWlhJdVlXeHBZWE5oWW14bEtDZGpiMjUwWVdsdVpYSXVjM1J5YVdOMEp5a3NYRzRnSUNBZ0lDQW5LQ2NzWEc0Z0lDQWdJQ0J6ZEdGamF5eGNiaUFnSUNBZ0lDY3NJQ2NzWEc0Z0lDQWdJQ0JqYjIxd2FXeGxjaTV4ZFc5MFpXUlRkSEpwYm1jb2NHRnlkSE5iYVYwcExGeHVJQ0FnSUNBZ0p5d2dKeXhjYmlBZ0lDQWdJRXBUVDA0dWMzUnlhVzVuYVdaNUtHTnZiWEJwYkdWeUxuTnZkWEpqWlM1amRYSnlaVzUwVEc5allYUnBiMjRwTEZ4dUlDQWdJQ0FnSnlBcEoxeHVJQ0FnSUYwN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2NtVjBkWEp1SUhOMFlXTnJPMXh1SUNCOVhHNTlYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRXBoZG1GVFkzSnBjSFJEYjIxd2FXeGxjanRjYmlKZGZRPT1cbiIsIi8qIGdsb2JhbCBkZWZpbmUgKi9cbid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbnZhciBTb3VyY2VOb2RlID0gdW5kZWZpbmVkO1xuXG50cnkge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAodHlwZW9mIGRlZmluZSAhPT0gJ2Z1bmN0aW9uJyB8fCAhZGVmaW5lLmFtZCkge1xuICAgIC8vIFdlIGRvbid0IHN1cHBvcnQgdGhpcyBpbiBBTUQgZW52aXJvbm1lbnRzLiBGb3IgdGhlc2UgZW52aXJvbm1lbnRzLCB3ZSBhc3VzbWUgdGhhdFxuICAgIC8vIHRoZXkgYXJlIHJ1bm5pbmcgb24gdGhlIGJyb3dzZXIgYW5kIHRodXMgaGF2ZSBubyBuZWVkIGZvciB0aGUgc291cmNlLW1hcCBsaWJyYXJ5LlxuICAgIHZhciBTb3VyY2VNYXAgPSByZXF1aXJlKCdzb3VyY2UtbWFwJyk7XG4gICAgU291cmNlTm9kZSA9IFNvdXJjZU1hcC5Tb3VyY2VOb2RlO1xuICB9XG59IGNhdGNoIChlcnIpIHt9XG4vKiBOT1AgKi9cblxuLyogaXN0YW5idWwgaWdub3JlIGlmOiB0ZXN0ZWQgYnV0IG5vdCBjb3ZlcmVkIGluIGlzdGFuYnVsIGR1ZSB0byBkaXN0IGJ1aWxkICAqL1xuaWYgKCFTb3VyY2VOb2RlKSB7XG4gIFNvdXJjZU5vZGUgPSBmdW5jdGlvbiAobGluZSwgY29sdW1uLCBzcmNGaWxlLCBjaHVua3MpIHtcbiAgICB0aGlzLnNyYyA9ICcnO1xuICAgIGlmIChjaHVua3MpIHtcbiAgICAgIHRoaXMuYWRkKGNodW5rcyk7XG4gICAgfVxuICB9O1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBTb3VyY2VOb2RlLnByb3RvdHlwZSA9IHtcbiAgICBhZGQ6IGZ1bmN0aW9uIGFkZChjaHVua3MpIHtcbiAgICAgIGlmIChfdXRpbHMuaXNBcnJheShjaHVua3MpKSB7XG4gICAgICAgIGNodW5rcyA9IGNodW5rcy5qb2luKCcnKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3JjICs9IGNodW5rcztcbiAgICB9LFxuICAgIHByZXBlbmQ6IGZ1bmN0aW9uIHByZXBlbmQoY2h1bmtzKSB7XG4gICAgICBpZiAoX3V0aWxzLmlzQXJyYXkoY2h1bmtzKSkge1xuICAgICAgICBjaHVua3MgPSBjaHVua3Muam9pbignJyk7XG4gICAgICB9XG4gICAgICB0aGlzLnNyYyA9IGNodW5rcyArIHRoaXMuc3JjO1xuICAgIH0sXG4gICAgdG9TdHJpbmdXaXRoU291cmNlTWFwOiBmdW5jdGlvbiB0b1N0cmluZ1dpdGhTb3VyY2VNYXAoKSB7XG4gICAgICByZXR1cm4geyBjb2RlOiB0aGlzLnRvU3RyaW5nKCkgfTtcbiAgICB9LFxuICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiB0aGlzLnNyYztcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNhc3RDaHVuayhjaHVuaywgY29kZUdlbiwgbG9jKSB7XG4gIGlmIChfdXRpbHMuaXNBcnJheShjaHVuaykpIHtcbiAgICB2YXIgcmV0ID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2h1bmsubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIHJldC5wdXNoKGNvZGVHZW4ud3JhcChjaHVua1tpXSwgbG9jKSk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGNodW5rID09PSAnYm9vbGVhbicgfHwgdHlwZW9mIGNodW5rID09PSAnbnVtYmVyJykge1xuICAgIC8vIEhhbmRsZSBwcmltaXRpdmVzIHRoYXQgdGhlIFNvdXJjZU5vZGUgd2lsbCB0aHJvdyB1cCBvblxuICAgIHJldHVybiBjaHVuayArICcnO1xuICB9XG4gIHJldHVybiBjaHVuaztcbn1cblxuZnVuY3Rpb24gQ29kZUdlbihzcmNGaWxlKSB7XG4gIHRoaXMuc3JjRmlsZSA9IHNyY0ZpbGU7XG4gIHRoaXMuc291cmNlID0gW107XG59XG5cbkNvZGVHZW4ucHJvdG90eXBlID0ge1xuICBpc0VtcHR5OiBmdW5jdGlvbiBpc0VtcHR5KCkge1xuICAgIHJldHVybiAhdGhpcy5zb3VyY2UubGVuZ3RoO1xuICB9LFxuICBwcmVwZW5kOiBmdW5jdGlvbiBwcmVwZW5kKHNvdXJjZSwgbG9jKSB7XG4gICAgdGhpcy5zb3VyY2UudW5zaGlmdCh0aGlzLndyYXAoc291cmNlLCBsb2MpKTtcbiAgfSxcbiAgcHVzaDogZnVuY3Rpb24gcHVzaChzb3VyY2UsIGxvYykge1xuICAgIHRoaXMuc291cmNlLnB1c2godGhpcy53cmFwKHNvdXJjZSwgbG9jKSk7XG4gIH0sXG5cbiAgbWVyZ2U6IGZ1bmN0aW9uIG1lcmdlKCkge1xuICAgIHZhciBzb3VyY2UgPSB0aGlzLmVtcHR5KCk7XG4gICAgdGhpcy5lYWNoKGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgICBzb3VyY2UuYWRkKFsnICAnLCBsaW5lLCAnXFxuJ10pO1xuICAgIH0pO1xuICAgIHJldHVybiBzb3VyY2U7XG4gIH0sXG5cbiAgZWFjaDogZnVuY3Rpb24gZWFjaChpdGVyKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRoaXMuc291cmNlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpdGVyKHRoaXMuc291cmNlW2ldKTtcbiAgICB9XG4gIH0sXG5cbiAgZW1wdHk6IGZ1bmN0aW9uIGVtcHR5KCkge1xuICAgIHZhciBsb2MgPSB0aGlzLmN1cnJlbnRMb2NhdGlvbiB8fCB7IHN0YXJ0OiB7fSB9O1xuICAgIHJldHVybiBuZXcgU291cmNlTm9kZShsb2Muc3RhcnQubGluZSwgbG9jLnN0YXJ0LmNvbHVtbiwgdGhpcy5zcmNGaWxlKTtcbiAgfSxcbiAgd3JhcDogZnVuY3Rpb24gd3JhcChjaHVuaykge1xuICAgIHZhciBsb2MgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDEgfHwgYXJndW1lbnRzWzFdID09PSB1bmRlZmluZWQgPyB0aGlzLmN1cnJlbnRMb2NhdGlvbiB8fCB7IHN0YXJ0OiB7fSB9IDogYXJndW1lbnRzWzFdO1xuXG4gICAgaWYgKGNodW5rIGluc3RhbmNlb2YgU291cmNlTm9kZSkge1xuICAgICAgcmV0dXJuIGNodW5rO1xuICAgIH1cblxuICAgIGNodW5rID0gY2FzdENodW5rKGNodW5rLCB0aGlzLCBsb2MpO1xuXG4gICAgcmV0dXJuIG5ldyBTb3VyY2VOb2RlKGxvYy5zdGFydC5saW5lLCBsb2Muc3RhcnQuY29sdW1uLCB0aGlzLnNyY0ZpbGUsIGNodW5rKTtcbiAgfSxcblxuICBmdW5jdGlvbkNhbGw6IGZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbChmbiwgdHlwZSwgcGFyYW1zKSB7XG4gICAgcGFyYW1zID0gdGhpcy5nZW5lcmF0ZUxpc3QocGFyYW1zKTtcbiAgICByZXR1cm4gdGhpcy53cmFwKFtmbiwgdHlwZSA/ICcuJyArIHR5cGUgKyAnKCcgOiAnKCcsIHBhcmFtcywgJyknXSk7XG4gIH0sXG5cbiAgcXVvdGVkU3RyaW5nOiBmdW5jdGlvbiBxdW90ZWRTdHJpbmcoc3RyKSB7XG4gICAgcmV0dXJuICdcIicgKyAoc3RyICsgJycpLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFxcXFxcJykucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKS5yZXBsYWNlKC9cXHIvZywgJ1xcXFxyJykucmVwbGFjZSgvXFx1MjAyOC9nLCAnXFxcXHUyMDI4JykgLy8gUGVyIEVjbWEtMjYyIDcuMyArIDcuOC40XG4gICAgLnJlcGxhY2UoL1xcdTIwMjkvZywgJ1xcXFx1MjAyOScpICsgJ1wiJztcbiAgfSxcblxuICBvYmplY3RMaXRlcmFsOiBmdW5jdGlvbiBvYmplY3RMaXRlcmFsKG9iaikge1xuICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG5cbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIHBhaXJzID0gW107XG5cbiAgICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIHZhbHVlID0gY2FzdENodW5rKG9ialtrZXldLCBfdGhpcyk7XG4gICAgICBpZiAodmFsdWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHBhaXJzLnB1c2goW190aGlzLnF1b3RlZFN0cmluZyhrZXkpLCAnOicsIHZhbHVlXSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgcmV0ID0gdGhpcy5nZW5lcmF0ZUxpc3QocGFpcnMpO1xuICAgIHJldC5wcmVwZW5kKCd7Jyk7XG4gICAgcmV0LmFkZCgnfScpO1xuICAgIHJldHVybiByZXQ7XG4gIH0sXG5cbiAgZ2VuZXJhdGVMaXN0OiBmdW5jdGlvbiBnZW5lcmF0ZUxpc3QoZW50cmllcykge1xuICAgIHZhciByZXQgPSB0aGlzLmVtcHR5KCk7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZW50cmllcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgaWYgKGkpIHtcbiAgICAgICAgcmV0LmFkZCgnLCcpO1xuICAgICAgfVxuXG4gICAgICByZXQuYWRkKGNhc3RDaHVuayhlbnRyaWVzW2ldLCB0aGlzKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJldDtcbiAgfSxcblxuICBnZW5lcmF0ZUFycmF5OiBmdW5jdGlvbiBnZW5lcmF0ZUFycmF5KGVudHJpZXMpIHtcbiAgICB2YXIgcmV0ID0gdGhpcy5nZW5lcmF0ZUxpc3QoZW50cmllcyk7XG4gICAgcmV0LnByZXBlbmQoJ1snKTtcbiAgICByZXQuYWRkKCddJyk7XG5cbiAgICByZXR1cm4gcmV0O1xuICB9XG59O1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBDb2RlR2VuO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMeTR1TDJ4cFlpOW9ZVzVrYkdWaVlYSnpMMk52YlhCcGJHVnlMMk52WkdVdFoyVnVMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3pzN08zRkNRVU4zUWl4VlFVRlZPenRCUVVWc1F5eEpRVUZKTEZWQlFWVXNXVUZCUVN4RFFVRkRPenRCUVVWbUxFbEJRVWs3TzBGQlJVWXNUVUZCU1N4UFFVRlBMRTFCUVUwc1MwRkJTeXhWUVVGVkxFbEJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNSMEZCUnl4RlFVRkZPenM3UVVGSEwwTXNVVUZCU1N4VFFVRlRMRWRCUVVjc1QwRkJUeXhEUVVGRExGbEJRVmtzUTBGQlF5eERRVUZETzBGQlEzUkRMR05CUVZVc1IwRkJSeXhUUVVGVExFTkJRVU1zVlVGQlZTeERRVUZETzBkQlEyNURPME5CUTBZc1EwRkJReXhQUVVGUExFZEJRVWNzUlVGQlJTeEZRVVZpT3pzN08wRkJRVUVzUVVGSFJDeEpRVUZKTEVOQlFVTXNWVUZCVlN4RlFVRkZPMEZCUTJZc1dVRkJWU3hIUVVGSExGVkJRVk1zU1VGQlNTeEZRVUZGTEUxQlFVMHNSVUZCUlN4UFFVRlBMRVZCUVVVc1RVRkJUU3hGUVVGRk8wRkJRMjVFTEZGQlFVa3NRMEZCUXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGRE8wRkJRMlFzVVVGQlNTeE5RVUZOTEVWQlFVVTdRVUZEVml4VlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzB0QlEyeENPMGRCUTBZc1EwRkJRenM3UVVGRlJpeFpRVUZWTEVOQlFVTXNVMEZCVXl4SFFVRkhPMEZCUTNKQ0xFOUJRVWNzUlVGQlJTeGhRVUZUTEUxQlFVMHNSVUZCUlR0QlFVTndRaXhWUVVGSkxHVkJRVkVzVFVGQlRTeERRVUZETEVWQlFVVTdRVUZEYmtJc1kwRkJUU3hIUVVGSExFMUJRVTBzUTBGQlF5eEpRVUZKTEVOQlFVTXNSVUZCUlN4RFFVRkRMRU5CUVVNN1QwRkRNVUk3UVVGRFJDeFZRVUZKTEVOQlFVTXNSMEZCUnl4SlFVRkpMRTFCUVUwc1EwRkJRenRMUVVOd1FqdEJRVU5FTEZkQlFVOHNSVUZCUlN4cFFrRkJVeXhOUVVGTkxFVkJRVVU3UVVGRGVFSXNWVUZCU1N4bFFVRlJMRTFCUVUwc1EwRkJReXhGUVVGRk8wRkJRMjVDTEdOQlFVMHNSMEZCUnl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFVkJRVVVzUTBGQlF5eERRVUZETzA5QlF6RkNPMEZCUTBRc1ZVRkJTU3hEUVVGRExFZEJRVWNzUjBGQlJ5eE5RVUZOTEVkQlFVY3NTVUZCU1N4RFFVRkRMRWRCUVVjc1EwRkJRenRMUVVNNVFqdEJRVU5FTEhsQ1FVRnhRaXhGUVVGRkxHbERRVUZYTzBGQlEyaERMR0ZCUVU4c1JVRkJSU3hKUVVGSkxFVkJRVVVzU1VGQlNTeERRVUZETEZGQlFWRXNSVUZCUlN4RlFVRkZMRU5CUVVNN1MwRkRiRU03UVVGRFJDeFpRVUZSTEVWQlFVVXNiMEpCUVZjN1FVRkRia0lzWVVGQlR5eEpRVUZKTEVOQlFVTXNSMEZCUnl4RFFVRkRPMHRCUTJwQ08wZEJRMFlzUTBGQlF6dERRVU5JT3p0QlFVVkVMRk5CUVZNc1UwRkJVeXhEUVVGRExFdEJRVXNzUlVGQlJTeFBRVUZQTEVWQlFVVXNSMEZCUnl4RlFVRkZPMEZCUTNSRExFMUJRVWtzWlVGQlVTeExRVUZMTEVOQlFVTXNSVUZCUlR0QlFVTnNRaXhSUVVGSkxFZEJRVWNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdPMEZCUldJc1UwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNSMEZCUnl4SFFVRkhMRXRCUVVzc1EwRkJReXhOUVVGTkxFVkJRVVVzUTBGQlF5eEhRVUZITEVkQlFVY3NSVUZCUlN4RFFVRkRMRVZCUVVVc1JVRkJSVHRCUVVOb1JDeFRRVUZITEVOQlFVTXNTVUZCU1N4RFFVRkRMRTlCUVU4c1EwRkJReXhKUVVGSkxFTkJRVU1zUzBGQlN5eERRVUZETEVOQlFVTXNRMEZCUXl4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UzBGRGRrTTdRVUZEUkN4WFFVRlBMRWRCUVVjc1EwRkJRenRIUVVOYUxFMUJRVTBzU1VGQlNTeFBRVUZQTEV0QlFVc3NTMEZCU3l4VFFVRlRMRWxCUVVrc1QwRkJUeXhMUVVGTExFdEJRVXNzVVVGQlVTeEZRVUZGT3p0QlFVVnNSU3hYUVVGUExFdEJRVXNzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSMEZEYmtJN1FVRkRSQ3hUUVVGUExFdEJRVXNzUTBGQlF6dERRVU5rT3p0QlFVVkVMRk5CUVZNc1QwRkJUeXhEUVVGRExFOUJRVThzUlVGQlJUdEJRVU40UWl4TlFVRkpMRU5CUVVNc1QwRkJUeXhIUVVGSExFOUJRVThzUTBGQlF6dEJRVU4yUWl4TlFVRkpMRU5CUVVNc1RVRkJUU3hIUVVGSExFVkJRVVVzUTBGQlF6dERRVU5zUWpzN1FVRkZSQ3hQUVVGUExFTkJRVU1zVTBGQlV5eEhRVUZITzBGQlEyeENMRk5CUVU4c1JVRkJRU3h0UWtGQlJ6dEJRVU5TTEZkQlFVOHNRMEZCUXl4SlFVRkpMRU5CUVVNc1RVRkJUU3hEUVVGRExFMUJRVTBzUTBGQlF6dEhRVU0xUWp0QlFVTkVMRk5CUVU4c1JVRkJSU3hwUWtGQlV5eE5RVUZOTEVWQlFVVXNSMEZCUnl4RlFVRkZPMEZCUXpkQ0xGRkJRVWtzUTBGQlF5eE5RVUZOTEVOQlFVTXNUMEZCVHl4RFFVRkRMRWxCUVVrc1EwRkJReXhKUVVGSkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVkQlFVY3NRMEZCUXl4RFFVRkRMRU5CUVVNN1IwRkROME03UVVGRFJDeE5RVUZKTEVWQlFVVXNZMEZCVXl4TlFVRk5MRVZCUVVVc1IwRkJSeXhGUVVGRk8wRkJRekZDTEZGQlFVa3NRMEZCUXl4TlFVRk5MRU5CUVVNc1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRWRCUVVjc1EwRkJReXhEUVVGRExFTkJRVU03UjBGRE1VTTdPMEZCUlVRc1QwRkJTeXhGUVVGRkxHbENRVUZYTzBGQlEyaENMRkZCUVVrc1RVRkJUU3hIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZMTEVWQlFVVXNRMEZCUXp0QlFVTXhRaXhSUVVGSkxFTkJRVU1zU1VGQlNTeERRVUZETEZWQlFWTXNTVUZCU1N4RlFVRkZPMEZCUTNaQ0xGbEJRVTBzUTBGQlF5eEhRVUZITEVOQlFVTXNRMEZCUXl4SlFVRkpMRVZCUVVVc1NVRkJTU3hGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZETEVOQlFVTTdTMEZEYUVNc1EwRkJReXhEUVVGRE8wRkJRMGdzVjBGQlR5eE5RVUZOTEVOQlFVTTdSMEZEWmpzN1FVRkZSQ3hOUVVGSkxFVkJRVVVzWTBGQlV5eEpRVUZKTEVWQlFVVTdRVUZEYmtJc1UwRkJTeXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVWQlFVVXNSMEZCUnl4SFFVRkhMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zVFVGQlRTeEZRVUZGTEVOQlFVTXNSMEZCUnl4SFFVRkhMRVZCUVVVc1EwRkJReXhGUVVGRkxFVkJRVVU3UVVGRGRFUXNWVUZCU1N4RFFVRkRMRWxCUVVrc1EwRkJReXhOUVVGTkxFTkJRVU1zUTBGQlF5eERRVUZETEVOQlFVTXNRMEZCUXp0TFFVTjBRanRIUVVOR096dEJRVVZFTEU5QlFVc3NSVUZCUlN4cFFrRkJWenRCUVVOb1FpeFJRVUZKTEVkQlFVY3NSMEZCUnl4SlFVRkpMRU5CUVVNc1pVRkJaU3hKUVVGSkxFVkJRVVVzUzBGQlN5eEZRVUZGTEVWQlFVVXNSVUZCUlN4RFFVRkRPMEZCUTJoRUxGZEJRVThzU1VGQlNTeFZRVUZWTEVOQlFVTXNSMEZCUnl4RFFVRkRMRXRCUVVzc1EwRkJReXhKUVVGSkxFVkJRVVVzUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4TlFVRk5MRVZCUVVVc1NVRkJTU3hEUVVGRExFOUJRVThzUTBGQlF5eERRVUZETzBkQlEzWkZPMEZCUTBRc1RVRkJTU3hGUVVGRkxHTkJRVk1zUzBGQlN5eEZRVUVyUXp0UlFVRTNReXhIUVVGSExIbEVRVUZITEVsQlFVa3NRMEZCUXl4bFFVRmxMRWxCUVVrc1JVRkJSU3hMUVVGTExFVkJRVVVzUlVGQlJTeEZRVUZGT3p0QlFVTXZSQ3hSUVVGSkxFdEJRVXNzV1VGQldTeFZRVUZWTEVWQlFVVTdRVUZETDBJc1lVRkJUeXhMUVVGTExFTkJRVU03UzBGRFpEczdRVUZGUkN4VFFVRkxMRWRCUVVjc1UwRkJVeXhEUVVGRExFdEJRVXNzUlVGQlJTeEpRVUZKTEVWQlFVVXNSMEZCUnl4RFFVRkRMRU5CUVVNN08wRkJSWEJETEZkQlFVOHNTVUZCU1N4VlFVRlZMRU5CUTI1Q0xFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNTVUZCU1N4RlFVTmtMRWRCUVVjc1EwRkJReXhMUVVGTExFTkJRVU1zVFVGQlRTeEZRVU5vUWl4SlFVRkpMRU5CUVVNc1QwRkJUeXhGUVVOYUxFdEJRVXNzUTBGRFRpeERRVUZETzBkQlEwZzdPMEZCUlVRc1kwRkJXU3hGUVVGRkxITkNRVUZUTEVWQlFVVXNSVUZCUlN4SlFVRkpMRVZCUVVVc1RVRkJUU3hGUVVGRk8wRkJRM1pETEZWQlFVMHNSMEZCUnl4SlFVRkpMRU5CUVVNc1dVRkJXU3hEUVVGRExFMUJRVTBzUTBGQlF5eERRVUZETzBGQlEyNURMRmRCUVU4c1NVRkJTU3hEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEVWQlFVVXNSVUZCUlN4SlFVRkpMRWRCUVVjc1IwRkJSeXhIUVVGSExFbEJRVWtzUjBGQlJ5eEhRVUZITEVkQlFVY3NSMEZCUnl4RlFVRkZMRTFCUVUwc1JVRkJSU3hIUVVGSExFTkJRVU1zUTBGQlF5eERRVUZETzBkQlEzQkZPenRCUVVWRUxHTkJRVmtzUlVGQlJTeHpRa0ZCVXl4SFFVRkhMRVZCUVVVN1FVRkRNVUlzVjBGRFJTeEhRVUZITEVkQlEwZ3NRMEZCUXl4SFFVRkhMRWRCUVVjc1JVRkJSU3hEUVVGQkxFTkJRMDRzVDBGQlR5eERRVUZETEV0QlFVc3NSVUZCUlN4TlFVRk5MRU5CUVVNc1EwRkRkRUlzVDBGQlR5eERRVUZETEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkRjRUlzVDBGQlR5eERRVUZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkRja0lzVDBGQlR5eERRVUZETEV0QlFVc3NSVUZCUlN4TFFVRkxMRU5CUVVNc1EwRkRja0lzVDBGQlR5eERRVUZETEZOQlFWTXNSVUZCUlN4VFFVRlRMRU5CUVVNN1MwRkROMElzVDBGQlR5eERRVUZETEZOQlFWTXNSVUZCUlN4VFFVRlRMRU5CUVVNc1IwRkRhRU1zUjBGQlJ5eERRVU5JTzBkQlEwZzdPMEZCUlVRc1pVRkJZU3hGUVVGRkxIVkNRVUZUTEVkQlFVY3NSVUZCUlRzN096czdRVUZETTBJc1VVRkJTU3hMUVVGTExFZEJRVWNzUlVGQlJTeERRVUZET3p0QlFVVm1MRlZCUVUwc1EwRkJReXhKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZETEVOQlFVTXNUMEZCVHl4RFFVRkRMRlZCUVVFc1IwRkJSeXhGUVVGSk8wRkJRemxDTEZWQlFVa3NTMEZCU3l4SFFVRkhMRk5CUVZNc1EwRkJReXhIUVVGSExFTkJRVU1zUjBGQlJ5eERRVUZETEZGQlFVOHNRMEZCUXp0QlFVTjBReXhWUVVGSkxFdEJRVXNzUzBGQlN5eFhRVUZYTEVWQlFVVTdRVUZEZWtJc1lVRkJTeXhEUVVGRExFbEJRVWtzUTBGQlF5eERRVUZETEUxQlFVc3NXVUZCV1N4RFFVRkRMRWRCUVVjc1EwRkJReXhGUVVGRkxFZEJRVWNzUlVGQlJTeExRVUZMTEVOQlFVTXNRMEZCUXl4RFFVRkRPMDlCUTJ4RU8wdEJRMFlzUTBGQlF5eERRVUZET3p0QlFVVklMRkZCUVVrc1IwRkJSeXhIUVVGSExFbEJRVWtzUTBGQlF5eFpRVUZaTEVOQlFVTXNTMEZCU3l4RFFVRkRMRU5CUVVNN1FVRkRia01zVDBGQlJ5eERRVUZETEU5QlFVOHNRMEZCUXl4SFFVRkhMRU5CUVVNc1EwRkJRenRCUVVOcVFpeFBRVUZITEVOQlFVTXNSMEZCUnl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRMklzVjBGQlR5eEhRVUZITEVOQlFVTTdSMEZEV2pzN1FVRkZSQ3hqUVVGWkxFVkJRVVVzYzBKQlFWTXNUMEZCVHl4RlFVRkZPMEZCUXpsQ0xGRkJRVWtzUjBGQlJ5eEhRVUZITEVsQlFVa3NRMEZCUXl4TFFVRkxMRVZCUVVVc1EwRkJRenM3UVVGRmRrSXNVMEZCU3l4SlFVRkpMRU5CUVVNc1IwRkJSeXhEUVVGRExFVkJRVVVzUjBGQlJ5eEhRVUZITEU5QlFVOHNRMEZCUXl4TlFVRk5MRVZCUVVVc1EwRkJReXhIUVVGSExFZEJRVWNzUlVGQlJTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVTnNSQ3hWUVVGSkxFTkJRVU1zUlVGQlJUdEJRVU5NTEZkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03VDBGRFpEczdRVUZGUkN4VFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExGTkJRVk1zUTBGQlF5eFBRVUZQTEVOQlFVTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zUTBGQlF6dExRVU4wUXpzN1FVRkZSQ3hYUVVGUExFZEJRVWNzUTBGQlF6dEhRVU5hT3p0QlFVVkVMR1ZCUVdFc1JVRkJSU3gxUWtGQlV5eFBRVUZQTEVWQlFVVTdRVUZETDBJc1VVRkJTU3hIUVVGSExFZEJRVWNzU1VGQlNTeERRVUZETEZsQlFWa3NRMEZCUXl4UFFVRlBMRU5CUVVNc1EwRkJRenRCUVVOeVF5eFBRVUZITEVOQlFVTXNUMEZCVHl4RFFVRkRMRWRCUVVjc1EwRkJReXhEUVVGRE8wRkJRMnBDTEU5QlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1IwRkJSeXhEUVVGRExFTkJRVU03TzBGQlJXSXNWMEZCVHl4SFFVRkhMRU5CUVVNN1IwRkRXanREUVVOR0xFTkJRVU03TzNGQ1FVVmhMRTlCUVU4aUxDSm1hV3hsSWpvaVkyOWtaUzFuWlc0dWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2S2lCbmJHOWlZV3dnWkdWbWFXNWxJQ292WEc1cGJYQnZjblFnZXlCcGMwRnljbUY1SUgwZ1puSnZiU0FuTGk0dmRYUnBiSE1uTzF4dVhHNXNaWFFnVTI5MWNtTmxUbTlrWlR0Y2JseHVkSEo1SUh0Y2JpQWdMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJRzVsZUhRZ0tpOWNiaUFnYVdZZ0tIUjVjR1Z2WmlCa1pXWnBibVVnSVQwOUlDZG1kVzVqZEdsdmJpY2dmSHdnSVdSbFptbHVaUzVoYldRcElIdGNiaUFnSUNBdkx5QlhaU0JrYjI0bmRDQnpkWEJ3YjNKMElIUm9hWE1nYVc0Z1FVMUVJR1Z1ZG1seWIyNXRaVzUwY3k0Z1JtOXlJSFJvWlhObElHVnVkbWx5YjI1dFpXNTBjeXdnZDJVZ1lYTjFjMjFsSUhSb1lYUmNiaUFnSUNBdkx5QjBhR1Y1SUdGeVpTQnlkVzV1YVc1bklHOXVJSFJvWlNCaWNtOTNjMlZ5SUdGdVpDQjBhSFZ6SUdoaGRtVWdibThnYm1WbFpDQm1iM0lnZEdobElITnZkWEpqWlMxdFlYQWdiR2xpY21GeWVTNWNiaUFnSUNCc1pYUWdVMjkxY21ObFRXRndJRDBnY21WeGRXbHlaU2duYzI5MWNtTmxMVzFoY0NjcE8xeHVJQ0FnSUZOdmRYSmpaVTV2WkdVZ1BTQlRiM1Z5WTJWTllYQXVVMjkxY21ObFRtOWtaVHRjYmlBZ2ZWeHVmU0JqWVhSamFDQW9aWEp5S1NCN1hHNGdJQzhxSUU1UFVDQXFMMXh1ZlZ4dVhHNHZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdhV1k2SUhSbGMzUmxaQ0JpZFhRZ2JtOTBJR052ZG1WeVpXUWdhVzRnYVhOMFlXNWlkV3dnWkhWbElIUnZJR1JwYzNRZ1luVnBiR1FnSUNvdlhHNXBaaUFvSVZOdmRYSmpaVTV2WkdVcElIdGNiaUFnVTI5MWNtTmxUbTlrWlNBOUlHWjFibU4wYVc5dUtHeHBibVVzSUdOdmJIVnRiaXdnYzNKalJtbHNaU3dnWTJoMWJtdHpLU0I3WEc0Z0lDQWdkR2hwY3k1emNtTWdQU0FuSnp0Y2JpQWdJQ0JwWmlBb1kyaDFibXR6S1NCN1hHNGdJQ0FnSUNCMGFHbHpMbUZrWkNoamFIVnVhM01wTzF4dUlDQWdJSDFjYmlBZ2ZUdGNiaUFnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUc1bGVIUWdLaTljYmlBZ1UyOTFjbU5sVG05a1pTNXdjbTkwYjNSNWNHVWdQU0I3WEc0Z0lDQWdZV1JrT2lCbWRXNWpkR2x2YmloamFIVnVhM01wSUh0Y2JpQWdJQ0FnSUdsbUlDaHBjMEZ5Y21GNUtHTm9kVzVyY3lrcElIdGNiaUFnSUNBZ0lDQWdZMmgxYm10eklEMGdZMmgxYm10ekxtcHZhVzRvSnljcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2RHaHBjeTV6Y21NZ0t6MGdZMmgxYm10ek8xeHVJQ0FnSUgwc1hHNGdJQ0FnY0hKbGNHVnVaRG9nWm5WdVkzUnBiMjRvWTJoMWJtdHpLU0I3WEc0Z0lDQWdJQ0JwWmlBb2FYTkJjbkpoZVNoamFIVnVhM01wS1NCN1hHNGdJQ0FnSUNBZ0lHTm9kVzVyY3lBOUlHTm9kVzVyY3k1cWIybHVLQ2NuS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUhSb2FYTXVjM0pqSUQwZ1kyaDFibXR6SUNzZ2RHaHBjeTV6Y21NN1hHNGdJQ0FnZlN4Y2JpQWdJQ0IwYjFOMGNtbHVaMWRwZEdoVGIzVnlZMlZOWVhBNklHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIc2dZMjlrWlRvZ2RHaHBjeTUwYjFOMGNtbHVaeWdwSUgwN1hHNGdJQ0FnZlN4Y2JpQWdJQ0IwYjFOMGNtbHVaem9nWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpjbU03WEc0Z0lDQWdmVnh1SUNCOU8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCallYTjBRMmgxYm1zb1kyaDFibXNzSUdOdlpHVkhaVzRzSUd4dll5a2dlMXh1SUNCcFppQW9hWE5CY25KaGVTaGphSFZ1YXlrcElIdGNiaUFnSUNCc1pYUWdjbVYwSUQwZ1cxMDdYRzVjYmlBZ0lDQm1iM0lnS0d4bGRDQnBJRDBnTUN3Z2JHVnVJRDBnWTJoMWJtc3ViR1Z1WjNSb095QnBJRHdnYkdWdU95QnBLeXNwSUh0Y2JpQWdJQ0FnSUhKbGRDNXdkWE5vS0dOdlpHVkhaVzR1ZDNKaGNDaGphSFZ1YTF0cFhTd2diRzlqS1NrN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQnlaWFE3WEc0Z0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHTm9kVzVySUQwOVBTQW5ZbTl2YkdWaGJpY2dmSHdnZEhsd1pXOW1JR05vZFc1cklEMDlQU0FuYm5WdFltVnlKeWtnZTF4dUlDQWdJQzh2SUVoaGJtUnNaU0J3Y21sdGFYUnBkbVZ6SUhSb1lYUWdkR2hsSUZOdmRYSmpaVTV2WkdVZ2QybHNiQ0IwYUhKdmR5QjFjQ0J2Ymx4dUlDQWdJSEpsZEhWeWJpQmphSFZ1YXlBcklDY25PMXh1SUNCOVhHNGdJSEpsZEhWeWJpQmphSFZ1YXp0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnUTI5a1pVZGxiaWh6Y21OR2FXeGxLU0I3WEc0Z0lIUm9hWE11YzNKalJtbHNaU0E5SUhOeVkwWnBiR1U3WEc0Z0lIUm9hWE11YzI5MWNtTmxJRDBnVzEwN1hHNTlYRzVjYmtOdlpHVkhaVzR1Y0hKdmRHOTBlWEJsSUQwZ2UxeHVJQ0JwYzBWdGNIUjVLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQWhkR2hwY3k1emIzVnlZMlV1YkdWdVozUm9PMXh1SUNCOUxGeHVJQ0J3Y21Wd1pXNWtPaUJtZFc1amRHbHZiaWh6YjNWeVkyVXNJR3h2WXlrZ2UxeHVJQ0FnSUhSb2FYTXVjMjkxY21ObExuVnVjMmhwWm5Rb2RHaHBjeTUzY21Gd0tITnZkWEpqWlN3Z2JHOWpLU2s3WEc0Z0lIMHNYRzRnSUhCMWMyZzZJR1oxYm1OMGFXOXVLSE52ZFhKalpTd2diRzlqS1NCN1hHNGdJQ0FnZEdocGN5NXpiM1Z5WTJVdWNIVnphQ2gwYUdsekxuZHlZWEFvYzI5MWNtTmxMQ0JzYjJNcEtUdGNiaUFnZlN4Y2JseHVJQ0J0WlhKblpUb2dablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdiR1YwSUhOdmRYSmpaU0E5SUhSb2FYTXVaVzF3ZEhrb0tUdGNiaUFnSUNCMGFHbHpMbVZoWTJnb1puVnVZM1JwYjI0b2JHbHVaU2tnZTF4dUlDQWdJQ0FnYzI5MWNtTmxMbUZrWkNoYkp5QWdKeXdnYkdsdVpTd2dKMXhjYmlkZEtUdGNiaUFnSUNCOUtUdGNiaUFnSUNCeVpYUjFjbTRnYzI5MWNtTmxPMXh1SUNCOUxGeHVYRzRnSUdWaFkyZzZJR1oxYm1OMGFXOXVLR2wwWlhJcElIdGNiaUFnSUNCbWIzSWdLR3hsZENCcElEMGdNQ3dnYkdWdUlEMGdkR2hwY3k1emIzVnlZMlV1YkdWdVozUm9PeUJwSUR3Z2JHVnVPeUJwS3lzcElIdGNiaUFnSUNBZ0lHbDBaWElvZEdocGN5NXpiM1Z5WTJWYmFWMHBPMXh1SUNBZ0lIMWNiaUFnZlN4Y2JseHVJQ0JsYlhCMGVUb2dablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdiR1YwSUd4dll5QTlJSFJvYVhNdVkzVnljbVZ1ZEV4dlkyRjBhVzl1SUh4OElIc2djM1JoY25RNklIdDlJSDA3WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJUYjNWeVkyVk9iMlJsS0d4dll5NXpkR0Z5ZEM1c2FXNWxMQ0JzYjJNdWMzUmhjblF1WTI5c2RXMXVMQ0IwYUdsekxuTnlZMFpwYkdVcE8xeHVJQ0I5TEZ4dUlDQjNjbUZ3T2lCbWRXNWpkR2x2YmloamFIVnVheXdnYkc5aklEMGdkR2hwY3k1amRYSnlaVzUwVEc5allYUnBiMjRnZkh3Z2V5QnpkR0Z5ZERvZ2UzMGdmU2tnZTF4dUlDQWdJR2xtSUNoamFIVnVheUJwYm5OMFlXNWpaVzltSUZOdmRYSmpaVTV2WkdVcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCamFIVnVhenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmphSFZ1YXlBOUlHTmhjM1JEYUhWdWF5aGphSFZ1YXl3Z2RHaHBjeXdnYkc5aktUdGNibHh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dVMjkxY21ObFRtOWtaU2hjYmlBZ0lDQWdJR3h2WXk1emRHRnlkQzVzYVc1bExGeHVJQ0FnSUNBZ2JHOWpMbk4wWVhKMExtTnZiSFZ0Yml4Y2JpQWdJQ0FnSUhSb2FYTXVjM0pqUm1sc1pTeGNiaUFnSUNBZ0lHTm9kVzVyWEc0Z0lDQWdLVHRjYmlBZ2ZTeGNibHh1SUNCbWRXNWpkR2x2YmtOaGJHdzZJR1oxYm1OMGFXOXVLR1p1TENCMGVYQmxMQ0J3WVhKaGJYTXBJSHRjYmlBZ0lDQndZWEpoYlhNZ1BTQjBhR2x6TG1kbGJtVnlZWFJsVEdsemRDaHdZWEpoYlhNcE8xeHVJQ0FnSUhKbGRIVnliaUIwYUdsekxuZHlZWEFvVzJadUxDQjBlWEJsSUQ4Z0p5NG5JQ3NnZEhsd1pTQXJJQ2NvSnlBNklDY29KeXdnY0dGeVlXMXpMQ0FuS1NkZEtUdGNiaUFnZlN4Y2JseHVJQ0J4ZFc5MFpXUlRkSEpwYm1jNklHWjFibU4wYVc5dUtITjBjaWtnZTF4dUlDQWdJSEpsZEhWeWJpQW9YRzRnSUNBZ0lDQW5YQ0luSUN0Y2JpQWdJQ0FnSUNoemRISWdLeUFuSnlsY2JpQWdJQ0FnSUNBZ0xuSmxjR3hoWTJVb0wxeGNYRnd2Wnl3Z0oxeGNYRnhjWEZ4Y0p5bGNiaUFnSUNBZ0lDQWdMbkpsY0d4aFkyVW9MMXdpTDJjc0lDZGNYRnhjWENJbktWeHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpTZ3ZYRnh1TDJjc0lDZGNYRnhjYmljcFhHNGdJQ0FnSUNBZ0lDNXlaWEJzWVdObEtDOWNYSEl2Wnl3Z0oxeGNYRnh5SnlsY2JpQWdJQ0FnSUNBZ0xuSmxjR3hoWTJVb0wxeGNkVEl3TWpndlp5d2dKMXhjWEZ4MU1qQXlPQ2NwSUM4dklGQmxjaUJGWTIxaExUSTJNaUEzTGpNZ0t5QTNMamd1TkZ4dUlDQWdJQ0FnSUNBdWNtVndiR0ZqWlNndlhGeDFNakF5T1M5bkxDQW5YRnhjWEhVeU1ESTVKeWtnSzF4dUlDQWdJQ0FnSjF3aUoxeHVJQ0FnSUNrN1hHNGdJSDBzWEc1Y2JpQWdiMkpxWldOMFRHbDBaWEpoYkRvZ1puVnVZM1JwYjI0b2IySnFLU0I3WEc0Z0lDQWdiR1YwSUhCaGFYSnpJRDBnVzEwN1hHNWNiaUFnSUNCUFltcGxZM1F1YTJWNWN5aHZZbW9wTG1admNrVmhZMmdvYTJWNUlEMCtJSHRjYmlBZ0lDQWdJR3hsZENCMllXeDFaU0E5SUdOaGMzUkRhSFZ1YXlodlltcGJhMlY1WFN3Z2RHaHBjeWs3WEc0Z0lDQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0FnSUhCaGFYSnpMbkIxYzJnb1czUm9hWE11Y1hWdmRHVmtVM1J5YVc1bktHdGxlU2tzSUNjNkp5d2dkbUZzZFdWZEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUtUdGNibHh1SUNBZ0lHeGxkQ0J5WlhRZ1BTQjBhR2x6TG1kbGJtVnlZWFJsVEdsemRDaHdZV2x5Y3lrN1hHNGdJQ0FnY21WMExuQnlaWEJsYm1Rb0ozc25LVHRjYmlBZ0lDQnlaWFF1WVdSa0tDZDlKeWs3WEc0Z0lDQWdjbVYwZFhKdUlISmxkRHRjYmlBZ2ZTeGNibHh1SUNCblpXNWxjbUYwWlV4cGMzUTZJR1oxYm1OMGFXOXVLR1Z1ZEhKcFpYTXBJSHRjYmlBZ0lDQnNaWFFnY21WMElEMGdkR2hwY3k1bGJYQjBlU2dwTzF4dVhHNGdJQ0FnWm05eUlDaHNaWFFnYVNBOUlEQXNJR3hsYmlBOUlHVnVkSEpwWlhNdWJHVnVaM1JvT3lCcElEd2diR1Z1T3lCcEt5c3BJSHRjYmlBZ0lDQWdJR2xtSUNocEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEM1aFpHUW9KeXduS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBMbUZrWkNoallYTjBRMmgxYm1zb1pXNTBjbWxsYzF0cFhTd2dkR2hwY3lrcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ5WlhRN1hHNGdJSDBzWEc1Y2JpQWdaMlZ1WlhKaGRHVkJjbkpoZVRvZ1puVnVZM1JwYjI0b1pXNTBjbWxsY3lrZ2UxeHVJQ0FnSUd4bGRDQnlaWFFnUFNCMGFHbHpMbWRsYm1WeVlYUmxUR2x6ZENobGJuUnlhV1Z6S1R0Y2JpQWdJQ0J5WlhRdWNISmxjR1Z1WkNnbld5Y3BPMXh1SUNBZ0lISmxkQzVoWkdRb0oxMG5LVHRjYmx4dUlDQWdJSEpsZEhWeWJpQnlaWFE3WEc0Z0lIMWNibjA3WEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUVOdlpHVkhaVzQ3WEc0aVhYMD1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHJlc291cmNlKSB7XG4gICAgY29uc3Qgbm9kZSA9IHJlc291cmNlLmdldENsYXNzKCkuZ2V0TmFtZSgpID09PSAnb3JnLmphaGlhLnNlcnZpY2VzLnJlbmRlci5SZXNvdXJjZScgPyByZXNvdXJjZS5nZXROb2RlKCkgOiByZXNvdXJjZTtcblxuICAgIHJldHVybiBub2RlLmdldE5hbWUoKTtcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyZXNvdXJjZSkge1xuICAgIGNvbnN0IG5vZGUgPSByZXNvdXJjZS5nZXRDbGFzcygpLmdldE5hbWUoKSA9PT0gJ29yZy5qYWhpYS5zZXJ2aWNlcy5yZW5kZXIuUmVzb3VyY2UnID8gcmVzb3VyY2UuZ2V0Tm9kZSgpIDogcmVzb3VyY2U7XG5cbiAgICByZXR1cm4gbm9kZS5nZXRQYXRoKCk7XG59O1xuIiwiaW1wb3J0IHtTYWZlU3RyaW5nfSBmcm9tIFwiaGFuZGxlYmFyc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyZXNvdXJjZSwgbmFtZSkge1xuICAgIGNvbnN0IG5vZGUgPSByZXNvdXJjZS5nZXRDbGFzcygpLmdldE5hbWUoKSA9PT0gJ29yZy5qYWhpYS5zZXJ2aWNlcy5yZW5kZXIuUmVzb3VyY2UnID8gcmVzb3VyY2UuZ2V0Tm9kZSgpIDogcmVzb3VyY2U7XG5cbiAgICBpZiAoIW5vZGUuaGFzUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuXG4gICAgaWYgKG5vZGUuZ2V0UHJvcGVydHkobmFtZSkuZ2V0VHlwZSgpID09PSAxMCkge1xuICAgICAgICByZXR1cm4gbm9kZS5nZXRQcm9wZXJ0eShuYW1lKS5nZXROb2RlKCkuZ2V0UGF0aCgpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgU2FmZVN0cmluZyhub2RlLmdldFByb3BlcnR5KG5hbWUpLmdldFN0cmluZygpKTtcbn07XG4iLCJpbXBvcnQge2dxbEhlbHBlcn0gZnJvbSAnQGphaGlhL3NlcnZlci1oZWxwZXJzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSBvcHRpb25zLmZuKHRoaXMpXG4gICAgY29uc3Qge3Zhck5hbWUsIC4uLnJlc3R9ID0gb3B0aW9ucy5oYXNoO1xuICAgIGxldCB7ZGF0YX0gPSBncWxIZWxwZXIuZXhlY3V0ZVF1ZXJ5U3luYyh7XG4gICAgICAgIHF1ZXJ5LFxuICAgICAgICAuLi5yZXN0XG4gICAgfSk7XG5cbiAgICBjb25zdCBlZmZlY3RpdmVWYXJOYW1lID0gdmFyTmFtZSB8fCAnZ3FsJztcbiAgICB0aGlzW2VmZmVjdGl2ZVZhck5hbWVdID0gZGF0YTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvcHRzKSB7XG4gICAgcmV0dXJuIG9wdHMuaGFzaDtcbn07XG4iLCJpbXBvcnQge1NhZmVTdHJpbmd9IGZyb20gJ2hhbmRsZWJhcnMnO1xuaW1wb3J0IHtyZW5kZXJIZWxwZXJ9IGZyb20gJ0BqYWhpYS9zZXJ2ZXItaGVscGVycydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFNhZmVTdHJpbmcocmVuZGVySGVscGVyLnJlbmRlckNvbXBvbmVudFN5bmMob3B0aW9ucy5oYXNoLCBvcHRpb25zLmRhdGEucm9vdC5yZW5kZXJDb250ZXh0KSk7XG59O1xuXG4iLCJpbXBvcnQge1NhZmVTdHJpbmd9IGZyb20gJ2hhbmRsZWJhcnMnO1xuaW1wb3J0IHtyZW5kZXJIZWxwZXJ9IGZyb20gJ0BqYWhpYS9zZXJ2ZXItaGVscGVycydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFNhZmVTdHJpbmcocmVuZGVySGVscGVyLnJlbmRlck1vZHVsZVN5bmMob3B0aW9ucy5oYXNoLCBvcHRpb25zLmRhdGEucm9vdC5yZW5kZXJDb250ZXh0KSk7XG59O1xuXG4iLCJpbXBvcnQge3JlZ2lzdHJ5LCBvc2dpfSBmcm9tICdAamFoaWEvc2VydmVyLWhlbHBlcnMnO1xuaW1wb3J0ICogYXMgaGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IEhhbmRsZWJhcnMgZnJvbSBcImhhbmRsZWJhcnNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgT2JqZWN0LmtleXMoaGVscGVycykuZm9yRWFjaChrID0+IHtcbiAgICAgICAgSGFuZGxlYmFycy5yZWdpc3RlckhlbHBlcihrLCBoZWxwZXJzW2tdKTtcbiAgICB9KTtcblxuICAgIC8vIEhhY2sgdG8gZXhwb3NlIGhhbmRsZWJhcnMgdG8gb3RoZXIgbW9kdWxlc1xuICAgIHJlZ2lzdHJ5LmFkZChcIm1vZHVsZVwiLCBcImhhbmRsZWJhcnNcIiwge1xuICAgICAgICBleHBvcnRzOiBIYW5kbGViYXJzXG4gICAgfSk7XG5cbiAgICByZWdpc3RyeS5hZGQoXCJ2aWV3XCIsIFwiaGFuZGxlYmFyc1wiLCB7XG4gICAgICAgIHJlbmRlcjogKGN1cnJlbnRSZXNvdXJjZSwgcmVuZGVyQ29udGV4dCwgdmlldykgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVTdHIgPSBvc2dpLmxvYWRSZXNvdXJjZSh2aWV3LmJ1bmRsZSwgdmlldy50ZW1wbGF0ZUZpbGUpXG4gICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IEhhbmRsZWJhcnMuY29tcGlsZSh0ZW1wbGF0ZVN0cik7XG4gICAgICAgICAgICByZXR1cm4gdGVtcGxhdGUoe2N1cnJlbnRSZXNvdXJjZSwgcmVuZGVyQ29udGV4dH0pO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9