{{loadJSON 'test.components.json' 'components'}}
{{addResources type="css" resources="news.css"}}
{{#gql}}
    {
        jcr {
            nodeByPath(path:"{{currentContent.path}}") {
                name
                properties {
                    name
                    value
                }
                children {
                    nodes {
                        name
                        path
                    }
                }
                site {
                    path
                }
            }
            nodesByQuery(query:"select * from [jnt:news]", limit:2) {
                nodes {
                    path
                }
            }
        }
    }
{{/gql}}

<div data-testid="npm-view">NPM view working</div>
<hr/>

<h3>Handlebars</h3>
    <div data-testid="helper-118">i118 helper {{i18n 'greeting'}}</div>
    <div data-testid="helper-plus">PLUS helper: {{plus 1 9}}</div>
    <div data-testid="helper-sum">SUM helper: {{sum "[1, 2, 3, 4, 5]"}}</div>
    <div data-testid="helper-append">APPEND helper: {{append item.stem ".html"}}</div>
    <div data-testid="helper-obj">OBJ helper : {{obj param1='value1' param2='value2'}}</div>
    <div data-testid="helper-arr">ARR helper : {{arr 'value1' 'value2' 'value3'}}</div>
<hr/>

<h3>GraphQL</h3>
    <div data-testid="gql-info-test" style="padding: 10px; margin:10px; border: 1px solid">
        <ul>
            {{#each gql.jcr.nodeByPath.properties}}
                <li data-testid={{name}}>{{name}}={{value}}</li>
            {{/each}}
        </ul>
    </div>
<hr/>

<h3>currentContent usages</h3>
    <div data-testid="currentContent_properties_jcr:title">jcr:title : {{currentContent.properties.[jcr:title]}}</div>
    <div data-testid="currentContent_properties_prop1">prop1 : {{currentContent.properties.prop1}}</div>
    <div data-testid="currentContent_properties_propMultiple">propMultiple : {{currentContent.properties.propMultiple}}</div>
    <div data-testid="currentContent_properties_propI18n">propI18n : {{currentContent.properties.propI18n}}</div>
    <div data-testid="currentContent_properties_propRichText">
    <div>richtext : </div>
    {{{currentContent.properties.propRichText}}}
    </div>
    <div data-testid="currentContent_uuid">uuid : {{currentContent.uuid}}</div>
    <div data-testid="currentContent_name">name : {{currentContent.name}}</div>
    <div data-testid="currentContent_path">path : {{currentContent.path}}</div>
    <div data-testid="currentContent_parent">parent : {{currentContent.parent}}</div>
    <div data-testid="currentContent_nodeType">nodeType : {{currentContent.nodeType}}</div>
    <div data-testid="currentContent_mixins">mixins : {{currentContent.mixins}}</div>
<hr/>

<h3>Components</h3>
    Render a jnt:text as JSON Node :
    <div data-testid="component-text-json-node" style="padding: 10px; margin:10px; border: 1px solid">
        {{render content=components.text}}
    </div>
    Render a jnt:text as JSON Node with conf OPTION :
    <div data-testid="component-text-json-node-option" style="padding: 10px; margin:10px; border: 1px solid">
        {{render content=components.textOption advanceRenderingConfig="OPTION"}}
    </div>
    Render a npmExample:test with view sub as JSON Node with conf OPTION :
    <div data-testid="component-npm-json-node-option" style="padding: 10px; margin:10px; border: 1px solid">
        {{render content=components.npmOption view="sub" advanceRenderingConfig="OPTION"}}
    </div>
    Render a simple predefined richtext component with conf INCLUDE :
    <div data-testid="component-npm-node-include" style="padding: 10px; margin:10px; border: 1px solid">
        {{render view="sub" advanceRenderingConfig="INCLUDE"}}
    </div>
    Render a text child node :
    <div data-testid="component-text-child-node" style="padding: 10px; margin:10px; border: 1px solid">
        {{render path="simpletext"}}
        {{createContentButtons childName="simpletext" nodeTypes="jnt:text"}}
    </div>
    Render a JSON Node with mixins :
    <div data-testid="component-json-node-with-mixin" style="padding: 10px; margin:10px; border: 1px solid">
        {{render content=components.viewWithMixin view="tagged"}}
    </div>
    Render a JSON Node with parameters :
    <div data-testid="component-json-node-with-parameters" style="padding: 10px; margin:10px; border: 1px solid">
        {{render content=components.viewWithParameters view="parameters" parameters=components.renderParameters}}
    </div>
    Render an existing content Node with parameters :
    <div data-testid="component-npm-node-with-parameters" style="padding: 10px; margin:10px; border: 1px solid">
        {{render view="parameters" advanceRenderingConfig="INCLUDE" parameters=components.renderParameters}}
    </div>
<hr/>

<h3>loadJSON</h3>
    Load an absolute JSON file : <strong>/test.globalComponents.json</strong>
    {{loadJSON '/test.globalComponents.json' 'globalComponents'}}
    <div data-testid="loadJSON-absolute">
        global component loaded: {{globalComponents.absolute.properties.[j:prop]}}
    </div>

    Load a view relative JSON file : <strong>test.components.json</strong>
    <div data-testid="loadJSON-viewRelative">
        view relative component loaded: {{components.viewRelative.properties.[j:prop]}}
    </div>
<hr/>

<h3>getContent helper</h3>
        {{getContent path=gql.jcr.nodeByPath.site.path varName="currentResourceContent"}}
        <div data-testid="getContent_site">site node transformed to JSNode : {{currentResourceContent.name}}</div>
        {{getContent path=gql.jcr.nodeByPath.site.path varName="currentResourceContentWithChildren" includeChildren=true}}
        <div data-testid="getContent_site_withChildren">currentResource transformed to JSNode with children included:</div>
        {{#each currentResourceContentWithChildren.children}}
            <br>
            <div data-testid="getContent_site_withChildren_{{name}}_name">children name: {{name}}</div>
            <div data-testid="getContent_site_withChildren_{{name}}_path">children path: {{path}}</div>
            <div data-testid="getContent_site_withChildren_{{name}}_nodeType">children nodeType: {{nodeType}}</div>
        {{/each}}
<hr/>
